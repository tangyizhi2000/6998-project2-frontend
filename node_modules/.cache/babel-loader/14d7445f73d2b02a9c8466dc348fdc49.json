{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { InternalButton } from '../button/internal';\nimport FocusLock from '../internal/components/focus-lock';\nimport styles from './styles.css.js';\nimport { useInternalI18n } from '../i18n/context';\nexport default function PopoverBody(_ref) {\n  var showDismissButton = _ref.dismissButton,\n    dismissAriaLabel = _ref.dismissAriaLabel,\n    header = _ref.header,\n    children = _ref.children,\n    onDismiss = _ref.onDismiss,\n    variant = _ref.variant,\n    overflowVisible = _ref.overflowVisible,\n    className = _ref.className,\n    ariaLabelledby = _ref.ariaLabelledby;\n  var i18n = useInternalI18n('popover');\n  var labelledById = useUniqueId('awsui-popover-');\n  var dismissButtonFocused = useRef(false);\n  var dismissButtonRef = useRef(null);\n  var onKeyDown = useCallback(function (event) {\n    if (event.keyCode === KeyCode.escape) {\n      onDismiss();\n    }\n  }, [onDismiss]);\n  // Implement our own auto-focus rather than using FocusLock's,\n  // because we also want to focus the dismiss button when it\n  // is added dyamically (e.g. in chart popovers)\n  useEffect(function () {\n    var _a;\n    if (showDismissButton && !dismissButtonFocused.current) {\n      (_a = dismissButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n        preventScroll: true\n      });\n    }\n    dismissButtonFocused.current = showDismissButton;\n  }, [showDismissButton]);\n  var dismissButton = (showDismissButton !== null && showDismissButton !== void 0 ? showDismissButton : null) && React.createElement(\"div\", {\n    className: styles.dismiss\n  }, React.createElement(InternalButton, {\n    variant: \"icon\",\n    formAction: \"none\",\n    iconName: \"close\",\n    className: styles['dismiss-control'],\n    ariaLabel: i18n('dismissAriaLabel', dismissAriaLabel),\n    onClick: function onClick() {\n      return onDismiss();\n    },\n    ref: dismissButtonRef\n  }));\n  var isDialog = showDismissButton;\n  var shouldTrapFocus = showDismissButton && variant !== 'annotation';\n  var dialogProps = isDialog ? {\n    role: 'dialog',\n    'aria-modal': shouldTrapFocus ? true : undefined,\n    'aria-labelledby': ariaLabelledby !== null && ariaLabelledby !== void 0 ? ariaLabelledby : header ? labelledById : undefined\n  } : {};\n  return React.createElement(\"div\", Object.assign({\n    className: clsx(styles.body, className, _defineProperty({}, styles['body-overflow-visible'], overflowVisible === 'both')),\n    onKeyDown: onKeyDown\n  }, dialogProps), React.createElement(FocusLock, {\n    disabled: !shouldTrapFocus,\n    autoFocus: false\n  }, header && React.createElement(\"div\", {\n    className: clsx(styles['header-row'], showDismissButton && styles['has-dismiss'])\n  }, dismissButton, React.createElement(\"div\", {\n    className: styles.header,\n    id: labelledById\n  }, React.createElement(\"h2\", null, header))), React.createElement(\"div\", {\n    className: !header && showDismissButton ? styles['has-dismiss'] : undefined\n  }, !header && dismissButton, React.createElement(\"div\", {\n    className: clsx(styles.content, _defineProperty({}, styles['content-overflow-visible'], !!overflowVisible))\n  }, children))));\n}","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useRef","clsx","KeyCode","useUniqueId","InternalButton","FocusLock","styles","useInternalI18n","PopoverBody","showDismissButton","dismissButton","dismissAriaLabel","header","children","onDismiss","variant","overflowVisible","className","ariaLabelledby","i18n","labelledById","dismissButtonFocused","dismissButtonRef","onKeyDown","event","keyCode","escape","current","focus","preventScroll","dismiss","formAction","iconName","ariaLabel","onClick","ref","isDialog","shouldTrapFocus","dialogProps","role","undefined","body","disabled","autoFocus","id","content"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/popover/lib/default/popover/body.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport FocusLock from '../internal/components/focus-lock';\n\nimport styles from './styles.css.js';\nimport { useInternalI18n } from '../i18n/context';\n\nexport interface PopoverBodyProps {\n  dismissButton: boolean;\n  dismissAriaLabel: string | undefined;\n  onDismiss: () => void;\n\n  header: React.ReactNode | undefined;\n  children: React.ReactNode;\n  variant?: 'annotation';\n  overflowVisible?: 'content' | 'both';\n\n  className?: string;\n  ariaLabelledby?: string;\n}\n\nexport default function PopoverBody({\n  dismissButton: showDismissButton,\n  dismissAriaLabel,\n  header,\n  children,\n  onDismiss,\n  variant,\n  overflowVisible,\n  className,\n  ariaLabelledby,\n}: PopoverBodyProps) {\n  const i18n = useInternalI18n('popover');\n  const labelledById = useUniqueId('awsui-popover-');\n  const dismissButtonFocused = useRef(false);\n  const dismissButtonRef = useRef<ButtonProps.Ref>(null);\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.keyCode === KeyCode.escape) {\n        onDismiss();\n      }\n    },\n    [onDismiss]\n  );\n\n  // Implement our own auto-focus rather than using FocusLock's,\n  // because we also want to focus the dismiss button when it\n  // is added dyamically (e.g. in chart popovers)\n  useEffect(() => {\n    if (showDismissButton && !dismissButtonFocused.current) {\n      dismissButtonRef.current?.focus({ preventScroll: true });\n    }\n    dismissButtonFocused.current = showDismissButton;\n  }, [showDismissButton]);\n\n  const dismissButton = (showDismissButton ?? null) && (\n    <div className={styles.dismiss}>\n      <InternalButton\n        variant=\"icon\"\n        formAction=\"none\"\n        iconName=\"close\"\n        className={styles['dismiss-control']}\n        ariaLabel={i18n('dismissAriaLabel', dismissAriaLabel)}\n        onClick={() => onDismiss()}\n        ref={dismissButtonRef}\n      />\n    </div>\n  );\n\n  const isDialog = showDismissButton;\n  const shouldTrapFocus = showDismissButton && variant !== 'annotation';\n\n  const dialogProps = isDialog\n    ? {\n        role: 'dialog',\n        'aria-modal': shouldTrapFocus ? true : undefined,\n        'aria-labelledby': ariaLabelledby ?? (header ? labelledById : undefined),\n      }\n    : {};\n\n  return (\n    <div\n      className={clsx(styles.body, className, {\n        [styles['body-overflow-visible']]: overflowVisible === 'both',\n      })}\n      onKeyDown={onKeyDown}\n      {...dialogProps}\n    >\n      <FocusLock disabled={!shouldTrapFocus} autoFocus={false}>\n        {header && (\n          <div className={clsx(styles['header-row'], showDismissButton && styles['has-dismiss'])}>\n            {dismissButton}\n            <div className={styles.header} id={labelledById}>\n              <h2>{header}</h2>\n            </div>\n          </div>\n        )}\n        <div className={!header && showDismissButton ? styles['has-dismiss'] : undefined}>\n          {!header && dismissButton}\n          <div className={clsx(styles.content, { [styles['content-overflow-visible']]: !!overflowVisible })}>\n            {children}\n          </div>\n        </div>\n      </FocusLock>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}