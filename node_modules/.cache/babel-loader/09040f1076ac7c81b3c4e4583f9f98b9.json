{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalForm from './internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { AnalyticsFunnel, AnalyticsFunnelStep } from '../internal/analytics/components/analytics-funnel';\nimport { ButtonContext } from '../internal/context/button-context';\nimport { useFunnel, useFunnelNameSelector, useFunnelStep } from '../internal/analytics/hooks/use-funnel';\nimport formStyles from './styles.css.js';\nimport headerStyles from '../header/styles.css.js';\nconst FormWithAnalytics = _a => {\n  var {\n      variant = 'full-page',\n      actions\n    } = _a,\n    props = __rest(_a, [\"variant\", \"actions\"]);\n  const {\n    funnelProps,\n    funnelSubmit,\n    funnelNextOrSubmitAttempt\n  } = useFunnel();\n  const {\n    funnelStepProps\n  } = useFunnelStep();\n  const handleActionButtonClick = _ref => {\n    let {\n      variant\n    } = _ref;\n    if (variant === 'primary') {\n      funnelNextOrSubmitAttempt();\n      funnelSubmit();\n    }\n  };\n  return React.createElement(AnalyticsFunnelStep, {\n    stepNumber: 1\n  }, React.createElement(ButtonContext.Provider, {\n    value: {\n      onClick: handleActionButtonClick\n    }\n  }, React.createElement(InternalForm, Object.assign({\n    variant: variant,\n    actions: actions\n  }, props, funnelProps, funnelStepProps))));\n};\nexport default function Form(_a) {\n  var {\n      variant = 'full-page'\n    } = _a,\n    props = __rest(_a, [\"variant\"]);\n  const baseComponentProps = useBaseComponent('Form');\n  const inheritedFunnelNameSelector = useFunnelNameSelector();\n  const funnelNameSelector = inheritedFunnelNameSelector || `.${headerStyles['heading-text']}`;\n  return React.createElement(AnalyticsFunnel, {\n    funnelType: \"single-page\",\n    optionalStepNumbers: [],\n    totalFunnelSteps: 1,\n    funnelNameSelectors: [funnelNameSelector, `.${formStyles.header}`]\n  }, React.createElement(FormWithAnalytics, Object.assign({\n    variant: variant\n  }, props, baseComponentProps)));\n}\napplyDisplayName(Form, 'Form');","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,sCAAsC;AAEvE,OAAOC,YAAY,MAAM,YAAY;AACrC,OAAOC,gBAAgB,MAAM,sCAAsC;AAEnE,SAASC,eAAe,EAAEC,mBAAmB,QAAQ,mDAAmD;AACxG,SAASC,aAAa,QAA4B,oCAAoC;AACtF,SAASC,SAAS,EAAEC,qBAAqB,EAAEC,aAAa,QAAQ,wCAAwC;AAExG,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,YAAY,MAAM,yBAAyB;AAIlD,MAAMC,iBAAiB,GAAIC,EAAuD,IAAI;MAA3D;MAAEC,OAAO,GAAG,WAAW;MAAEC;IAAO,MAAuB;IAAlBC,KAAK,cAA1C,sBAA4C,CAAF;EACnE,MAAM;IAAEC,WAAW;IAAEC,YAAY;IAAEC;EAAyB,CAAE,GAAGZ,SAAS,EAAE;EAC5E,MAAM;IAAEa;EAAe,CAAE,GAAGX,aAAa,EAAE;EAE3C,MAAMY,uBAAuB,GAAkC,QAAgB;IAAA,IAAf;MAAEP;IAAO,CAAE;IACzE,IAAIA,OAAO,KAAK,SAAS,EAAE;MACzBK,yBAAyB,EAAE;MAC3BD,YAAY,EAAE;;EAElB,CAAC;EAED,OACElB,oBAACK,mBAAmB;IAACiB,UAAU,EAAE;EAAC,GAChCtB,oBAACM,aAAa,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAEJ;IAAuB;EAAE,GACjErB,oBAACE,YAAY;IAACY,OAAO,EAAEA,OAAO;IAAEC,OAAO,EAAEA;EAAO,GAAMC,KAAK,EAAMC,WAAW,EAAMG,eAAe,EAAI,CAC9E,CACL;AAE1B,CAAC;AAED,eAAc,SAAUM,IAAI,CAACb,EAA8C;MAA9C;MAAEC,OAAO,GAAG;IAAW,MAAuB;IAAlBE,KAAK,cAAjC,WAAmC,CAAF;EAC5D,MAAMW,kBAAkB,GAAGxB,gBAAgB,CAAC,MAAM,CAAC;EACnD,MAAMyB,2BAA2B,GAAGpB,qBAAqB,EAAE;EAC3D,MAAMqB,kBAAkB,GAAGD,2BAA2B,IAAI,IAAIjB,YAAY,CAAC,cAAc,CAAC,EAAE;EAE5F,OACEX,oBAACI,eAAe;IACd0B,UAAU,EAAC,aAAa;IACxBC,mBAAmB,EAAE,EAAE;IACvBC,gBAAgB,EAAE,CAAC;IACnBC,mBAAmB,EAAE,CAACJ,kBAAkB,EAAE,IAAInB,UAAU,CAACwB,MAAM,EAAE;EAAC,GAElElC,oBAACY,iBAAiB;IAACE,OAAO,EAAEA;EAAO,GAAME,KAAK,EAAMW,kBAAkB,EAAI,CAC1D;AAEtB;AAEA1B,gBAAgB,CAACyB,IAAI,EAAE,MAAM,CAAC","names":["React","applyDisplayName","InternalForm","useBaseComponent","AnalyticsFunnel","AnalyticsFunnelStep","ButtonContext","useFunnel","useFunnelNameSelector","useFunnelStep","formStyles","headerStyles","FormWithAnalytics","_a","variant","actions","props","funnelProps","funnelSubmit","funnelNextOrSubmitAttempt","funnelStepProps","handleActionButtonClick","stepNumber","Provider","value","onClick","Form","baseComponentProps","inheritedFunnelNameSelector","funnelNameSelector","funnelType","optionalStepNumbers","totalFunnelSteps","funnelNameSelectors","header"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/form/lib/default/form/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { FormProps } from './interfaces';\nimport InternalForm from './internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nimport { AnalyticsFunnel, AnalyticsFunnelStep } from '../internal/analytics/components/analytics-funnel';\nimport { ButtonContext, ButtonContextProps } from '../internal/context/button-context';\nimport { useFunnel, useFunnelNameSelector, useFunnelStep } from '../internal/analytics/hooks/use-funnel';\n\nimport formStyles from './styles.css.js';\nimport headerStyles from '../header/styles.css.js';\n\nexport { FormProps };\n\nconst FormWithAnalytics = ({ variant = 'full-page', actions, ...props }: FormProps) => {\n  const { funnelProps, funnelSubmit, funnelNextOrSubmitAttempt } = useFunnel();\n  const { funnelStepProps } = useFunnelStep();\n\n  const handleActionButtonClick: ButtonContextProps['onClick'] = ({ variant }) => {\n    if (variant === 'primary') {\n      funnelNextOrSubmitAttempt();\n      funnelSubmit();\n    }\n  };\n\n  return (\n    <AnalyticsFunnelStep stepNumber={1}>\n      <ButtonContext.Provider value={{ onClick: handleActionButtonClick }}>\n        <InternalForm variant={variant} actions={actions} {...props} {...funnelProps} {...funnelStepProps} />\n      </ButtonContext.Provider>\n    </AnalyticsFunnelStep>\n  );\n};\n\nexport default function Form({ variant = 'full-page', ...props }: FormProps) {\n  const baseComponentProps = useBaseComponent('Form');\n  const inheritedFunnelNameSelector = useFunnelNameSelector();\n  const funnelNameSelector = inheritedFunnelNameSelector || `.${headerStyles['heading-text']}`;\n\n  return (\n    <AnalyticsFunnel\n      funnelType=\"single-page\"\n      optionalStepNumbers={[]}\n      totalFunnelSteps={1}\n      funnelNameSelectors={[funnelNameSelector, `.${formStyles.header}`]}\n    >\n      <FormWithAnalytics variant={variant} {...props} {...baseComponentProps} />\n    </AnalyticsFunnel>\n  );\n}\n\napplyDisplayName(Form, 'Form');\n"]},"metadata":{},"sourceType":"module"}