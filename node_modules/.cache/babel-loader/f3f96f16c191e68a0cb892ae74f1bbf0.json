{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nexport default function InternalBox(_a) {\n  var _a$variant = _a.variant,\n    variant = _a$variant === void 0 ? 'div' : _a$variant,\n    tagOverride = _a.tagOverride,\n    _a$margin = _a.margin,\n    margin = _a$margin === void 0 ? {} : _a$margin,\n    _a$padding = _a.padding,\n    padding = _a$padding === void 0 ? {} : _a$padding,\n    display = _a.display,\n    textAlign = _a.textAlign,\n    float = _a.float,\n    fontSize = _a.fontSize,\n    fontWeight = _a.fontWeight,\n    color = _a.color,\n    children = _a.children,\n    _a$__internalRootRef = _a.__internalRootRef,\n    __internalRootRef = _a$__internalRootRef === void 0 ? null : _a$__internalRootRef,\n    props = __rest(_a, [\"variant\", \"tagOverride\", \"margin\", \"padding\", \"display\", \"textAlign\", \"float\", \"fontSize\", \"fontWeight\", \"color\", \"children\", \"__internalRootRef\"]);\n  var baseProps = getBaseProps(props);\n  var marginsClassNamesSuffices = getClassNamesSuffixes(margin);\n  var paddingsClassNamesSuffices = getClassNamesSuffixes(padding);\n  // This can be any arbitrary string if passed into tagOverride.\n  // We appease the compiler with an incorrect type.\n  var Tag = getTag(variant, tagOverride);\n  var className = clsx(baseProps.className, styles.root, styles.box, styles[\"\".concat(variant.replace(/^awsui-/, ''), \"-variant\")], marginsClassNamesSuffices.map(function (suffix) {\n    return styles[\"m-\".concat(suffix)];\n  }), paddingsClassNamesSuffices.map(function (suffix) {\n    return styles[\"p-\".concat(suffix)];\n  }), styles[\"d-\".concat(display)], styles[\"f-\".concat(float)], styles[\"color-\".concat(color || 'default')], styles[\"font-size-\".concat(fontSize || 'default')], styles[\"font-weight-\".concat(fontWeight || 'default')], styles[\"t-\".concat(textAlign)]);\n  return React.createElement(Tag, Object.assign({}, baseProps, {\n    className: className,\n    ref: __internalRootRef\n  }), children);\n}\nvar getClassNamesSuffixes = function getClassNamesSuffixes(value) {\n  if (typeof value === 'string') {\n    return [value];\n  }\n  var sides = ['top', 'right', 'bottom', 'left', 'horizontal', 'vertical'];\n  return sides.filter(function (side) {\n    return !!value[side];\n  }).map(function (side) {\n    return \"\".concat(side, \"-\").concat(value[side]);\n  });\n};\nvar getTag = function getTag(variant, tagOverride) {\n  if (tagOverride) {\n    return tagOverride;\n  }\n  if (variant === 'awsui-value-large') {\n    return 'span';\n  }\n  if (variant === 'awsui-key-label') {\n    return 'div';\n  }\n  return variant;\n};","map":{"version":3,"mappings":"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","names":["React","getBaseProps","clsx","styles","InternalBox","_a","variant","tagOverride","margin","padding","display","textAlign","float","fontSize","fontWeight","color","children","__internalRootRef","props","baseProps","marginsClassNamesSuffices","getClassNamesSuffixes","paddingsClassNamesSuffices","Tag","getTag","className","root","box","replace","map","suffix","ref","value","sides","filter","side"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/box/lib/default/box/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { BoxProps } from './interfaces';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\n\ntype InternalBoxProps = BoxProps & InternalBaseComponentProps;\n\nexport default function InternalBox({\n  variant = 'div',\n  tagOverride,\n  margin = {},\n  padding = {},\n  display,\n  textAlign,\n  float,\n  fontSize,\n  fontWeight,\n  color,\n  children,\n  __internalRootRef = null,\n  ...props\n}: InternalBoxProps) {\n  const baseProps = getBaseProps(props);\n  const marginsClassNamesSuffices = getClassNamesSuffixes(margin);\n  const paddingsClassNamesSuffices = getClassNamesSuffixes(padding);\n  // This can be any arbitrary string if passed into tagOverride.\n  // We appease the compiler with an incorrect type.\n  const Tag = getTag(variant, tagOverride) as 'div';\n\n  const className = clsx(\n    baseProps.className,\n    styles.root,\n    styles.box,\n    styles[`${variant.replace(/^awsui-/, '')}-variant`],\n    marginsClassNamesSuffices.map(suffix => styles[`m-${suffix}`]),\n    paddingsClassNamesSuffices.map(suffix => styles[`p-${suffix}`]),\n    styles[`d-${display}`],\n    styles[`f-${float}`],\n    styles[`color-${color || 'default'}`],\n    styles[`font-size-${fontSize || 'default'}`],\n    styles[`font-weight-${fontWeight || 'default'}`],\n    styles[`t-${textAlign}`]\n  );\n\n  return (\n    <Tag {...baseProps} className={className} ref={__internalRootRef}>\n      {children}\n    </Tag>\n  );\n}\n\nconst getClassNamesSuffixes = (value: BoxProps.SpacingSize | BoxProps.Spacing) => {\n  if (typeof value === 'string') {\n    return [value];\n  }\n  const sides = ['top', 'right', 'bottom', 'left', 'horizontal', 'vertical'] as const;\n  return sides.filter(side => !!value[side]).map(side => `${side}-${value[side]}`);\n};\n\nconst getTag = (variant: BoxProps.Variant, tagOverride: BoxProps['tagOverride']) => {\n  if (tagOverride) {\n    return tagOverride;\n  }\n\n  if (variant === 'awsui-value-large') {\n    return 'span';\n  }\n\n  if (variant === 'awsui-key-label') {\n    return 'div';\n  }\n\n  return variant;\n};\n"]},"metadata":{},"sourceType":"module"}