{"ast":null,"code":"import React, { useEffect, useRef, useReducer, useCallback, useDebugValue, useMemo } from 'react';\n\n/* istanbul ignore file */\n/**\n * Universal global scope object. In the browser this is `self`, in Node.js and React Native it's `global`.\n * This file is excluded from coverage reporting because these globals are environment-specific so we can't test them all.\n */\nconst globalScope = (() => {\n  if (typeof self === \"object\" && self.self === self) return self;\n  if (typeof global === \"object\" && global.global === global) return global;\n  if (typeof global === \"object\" && global.GLOBAL === global) return global;\n  return {}; // fallback that relies on imported modules to be singletons\n})();\n/**\n * Globally available object used to connect the DevTools to all React Async instances.\n */\nglobalScope.__REACT_ASYNC__ = globalScope.__REACT_ASYNC__ || {};\nconst noop = () => {};\nclass MockAbortController {\n  constructor() {\n    this.abort = noop;\n    this.signal = {};\n  }\n}\nlet PropTypes;\ntry {\n  PropTypes = require(\"prop-types\");\n} catch (e) {}\nconst childrenFn = PropTypes && PropTypes.oneOfType([PropTypes.node, PropTypes.func]);\nconst stateObject = PropTypes && PropTypes.shape({\n  initialValue: PropTypes.any,\n  data: PropTypes.any,\n  error: PropTypes.instanceOf(Error),\n  value: PropTypes.any,\n  startedAt: PropTypes.instanceOf(Date),\n  finishedAt: PropTypes.instanceOf(Date),\n  status: PropTypes.oneOf([\"initial\", \"pending\", \"fulfilled\", \"rejected\"]),\n  isInitial: PropTypes.bool,\n  isPending: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isFulfilled: PropTypes.bool,\n  isResolved: PropTypes.bool,\n  isRejected: PropTypes.bool,\n  isSettled: PropTypes.bool,\n  counter: PropTypes.number,\n  promise: PropTypes.instanceOf(Promise),\n  run: PropTypes.func,\n  reload: PropTypes.func,\n  cancel: PropTypes.func,\n  setData: PropTypes.func,\n  setError: PropTypes.func\n});\nvar propTypes = PropTypes && {\n  Async: {\n    children: childrenFn,\n    promise: PropTypes.instanceOf(Promise),\n    promiseFn: PropTypes.func,\n    deferFn: PropTypes.func,\n    watch: PropTypes.any,\n    watchFn: PropTypes.func,\n    initialValue: PropTypes.any,\n    onResolve: PropTypes.func,\n    onReject: PropTypes.func,\n    reducer: PropTypes.func,\n    dispatcher: PropTypes.func,\n    debugLabel: PropTypes.string,\n    suspense: PropTypes.bool\n  },\n  Initial: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  },\n  Pending: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    initial: PropTypes.bool\n  },\n  Fulfilled: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  },\n  Rejected: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  },\n  Settled: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  }\n};\nconst renderFn = function (children) {\n  if (typeof children === \"function\") {\n    const render = children;\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return render(...args);\n  }\n  return children;\n};\n/**\n * Renders only when no promise has started or completed yet.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show until we have data, even while pending (loading) or when an error occurred\n */\nconst IfInitial = _ref => {\n  let {\n    children,\n    persist,\n    state = {}\n  } = _ref;\n  return React.createElement(React.Fragment, null, state.isInitial || persist && !state.data ? renderFn(children, state) : null);\n};\n/**\n * Renders only while pending (promise is loading).\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} initial Show only on initial load (data is undefined)\n */\nconst IfPending = _ref2 => {\n  let {\n    children,\n    initial,\n    state = {}\n  } = _ref2;\n  return React.createElement(React.Fragment, null, state.isPending && (!initial || !state.value) ? renderFn(children, state) : null);\n};\n/**\n * Renders only when promise is resolved.\n *\n * @prop {Function|Node} children Function (passing data and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data while pending (promise is loading)\n */\nconst IfFulfilled = _ref3 => {\n  let {\n    children,\n    persist,\n    state = {}\n  } = _ref3;\n  return React.createElement(React.Fragment, null, state.isFulfilled || persist && state.data ? renderFn(children, state.data, state) : null);\n};\n/**\n * Renders only when promise is rejected.\n *\n * @prop {Function|Node} children Function (passing error and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old error while pending (promise is loading)\n */\nconst IfRejected = _ref4 => {\n  let {\n    children,\n    persist,\n    state = {}\n  } = _ref4;\n  return React.createElement(React.Fragment, null, state.isRejected || persist && state.error ? renderFn(children, state.error, state) : null);\n};\n/**\n * Renders only when promise is fulfilled or rejected.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data or error while pending (promise is loading)\n */\nconst IfSettled = _ref5 => {\n  let {\n    children,\n    persist,\n    state = {}\n  } = _ref5;\n  return React.createElement(React.Fragment, null, state.isSettled || persist && state.value ? renderFn(children, state) : null);\n};\nif (propTypes) {\n  IfInitial.propTypes = propTypes.Initial;\n  IfPending.propTypes = propTypes.Pending;\n  IfFulfilled.propTypes = propTypes.Fulfilled;\n  IfRejected.propTypes = propTypes.Rejected;\n  IfSettled.propTypes = propTypes.Settled;\n}\nvar StatusTypes;\n(function (StatusTypes) {\n  StatusTypes[\"initial\"] = \"initial\";\n  StatusTypes[\"pending\"] = \"pending\";\n  StatusTypes[\"fulfilled\"] = \"fulfilled\";\n  StatusTypes[\"rejected\"] = \"rejected\";\n})(StatusTypes || (StatusTypes = {}));\nconst getInitialStatus = (value, promise) => {\n  if (value instanceof Error) return StatusTypes.rejected;\n  if (value !== undefined) return StatusTypes.fulfilled;\n  if (promise) return StatusTypes.pending;\n  return StatusTypes.initial;\n};\nconst getIdleStatus = value => {\n  if (value instanceof Error) return StatusTypes.rejected;\n  if (value !== undefined) return StatusTypes.fulfilled;\n  return StatusTypes.initial;\n};\nconst getStatusProps = status => ({\n  status,\n  isInitial: status === StatusTypes.initial,\n  isPending: status === StatusTypes.pending,\n  isLoading: status === StatusTypes.pending,\n  isFulfilled: status === StatusTypes.fulfilled,\n  isResolved: status === StatusTypes.fulfilled,\n  isRejected: status === StatusTypes.rejected,\n  isSettled: status === StatusTypes.fulfilled || status === StatusTypes.rejected\n});\n\n// This exists to make sure we don't hold any references to user-provided functions\n// The way NeverSettle extends from Promise is complicated, but can't be done differently because Babel doesn't support\n// extending built-in classes. See https://babeljs.io/docs/en/caveats/#classes\nconst NeverSettle = function () {};\n/* istanbul ignore next */\nif (Object.setPrototypeOf) {\n  Object.setPrototypeOf(NeverSettle, Promise);\n} else {\n  NeverSettle.__proto__ = Promise;\n}\nNeverSettle.prototype = Object.assign(Object.create(Promise.prototype), {\n  finally() {\n    return this;\n  },\n  catch() {\n    return this;\n  },\n  then() {\n    return this;\n  }\n});\nconst neverSettle = new NeverSettle();\nvar ActionTypes;\n(function (ActionTypes) {\n  ActionTypes[\"start\"] = \"start\";\n  ActionTypes[\"cancel\"] = \"cancel\";\n  ActionTypes[\"fulfill\"] = \"fulfill\";\n  ActionTypes[\"reject\"] = \"reject\";\n})(ActionTypes || (ActionTypes = {}));\nconst init = _ref6 => {\n  let {\n    initialValue,\n    promise,\n    promiseFn\n  } = _ref6;\n  return {\n    initialValue,\n    data: initialValue instanceof Error ? undefined : initialValue,\n    error: initialValue instanceof Error ? initialValue : undefined,\n    value: initialValue,\n    startedAt: promise || promiseFn ? new Date() : undefined,\n    finishedAt: initialValue ? new Date() : undefined,\n    ...getStatusProps(getInitialStatus(initialValue, promise || promiseFn)),\n    counter: 0,\n    promise: neverSettle\n  };\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ActionTypes.start:\n      return {\n        ...state,\n        startedAt: new Date(),\n        finishedAt: undefined,\n        ...getStatusProps(StatusTypes.pending),\n        counter: action.meta.counter,\n        promise: action.meta.promise\n      };\n    case ActionTypes.cancel:\n      return {\n        ...state,\n        startedAt: undefined,\n        finishedAt: undefined,\n        ...getStatusProps(getIdleStatus(state.error || state.data)),\n        counter: action.meta.counter,\n        promise: action.meta.promise\n      };\n    case ActionTypes.fulfill:\n      return {\n        ...state,\n        data: action.payload,\n        value: action.payload,\n        error: undefined,\n        finishedAt: new Date(),\n        ...getStatusProps(StatusTypes.fulfilled),\n        promise: action.meta.promise\n      };\n    case ActionTypes.reject:\n      return {\n        ...state,\n        error: action.payload,\n        value: action.payload,\n        finishedAt: new Date(),\n        ...getStatusProps(StatusTypes.rejected),\n        promise: action.meta.promise\n      };\n    default:\n      return state;\n  }\n};\nconst dispatchMiddleware = dispatch => function (action) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  dispatch(action, ...args);\n  if (action.type === ActionTypes.start && typeof action.payload === \"function\") {\n    action.payload();\n  }\n};\nclass Async extends React.Component {}\n/**\n * createInstance allows you to create instances of Async that are bound to a specific promise.\n * A unique instance also uses its own React context for better nesting capability.\n */\nfunction createInstance() {\n  let defaultOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let displayName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Async\";\n  const {\n    Consumer: UnguardedConsumer,\n    Provider\n  } = React.createContext(undefined);\n  function Consumer(_ref7) {\n    let {\n      children\n    } = _ref7;\n    return React.createElement(UnguardedConsumer, null, value => {\n      if (!value) {\n        throw new Error(\"this component should only be used within an associated <Async> component!\");\n      }\n      return children(value);\n    });\n  }\n  class Async extends React.Component {\n    constructor(props) {\n      super(props);\n      this.mounted = false;\n      this.counter = 0;\n      this.args = [];\n      this.promise = neverSettle;\n      this.abortController = new MockAbortController();\n      this.start = this.start.bind(this);\n      this.load = this.load.bind(this);\n      this.run = this.run.bind(this);\n      this.cancel = this.cancel.bind(this);\n      this.onResolve = this.onResolve.bind(this);\n      this.onReject = this.onReject.bind(this);\n      this.setData = this.setData.bind(this);\n      this.setError = this.setError.bind(this);\n      const promise = props.promise;\n      const promiseFn = props.promiseFn || defaultOptions.promiseFn;\n      const initialValue = props.initialValue || defaultOptions.initialValue;\n      this.state = {\n        ...init({\n          initialValue,\n          promise,\n          promiseFn\n        }),\n        cancel: this.cancel,\n        run: this.run,\n        reload: () => {\n          this.load();\n          this.run(...this.args);\n        },\n        setData: this.setData,\n        setError: this.setError\n      };\n      this.debugLabel = props.debugLabel || defaultOptions.debugLabel;\n      const {\n        devToolsDispatcher\n      } = globalScope.__REACT_ASYNC__;\n      const _reducer = props.reducer || defaultOptions.reducer;\n      const _dispatcher = props.dispatcher || defaultOptions.dispatcher || devToolsDispatcher;\n      const reducer$1 = _reducer ? (state, action) => _reducer(state, action, reducer) : reducer;\n      const dispatch = dispatchMiddleware((action, callback) => {\n        this.setState(state => reducer$1(state, action), callback);\n      });\n      this.dispatch = _dispatcher ? action => _dispatcher(action, dispatch, props) : dispatch;\n    }\n    componentDidMount() {\n      this.mounted = true;\n      if (this.props.promise || !this.state.initialValue) {\n        this.load();\n      }\n    }\n    componentDidUpdate(prevProps) {\n      const {\n        watch,\n        watchFn = defaultOptions.watchFn,\n        promise,\n        promiseFn\n      } = this.props;\n      if (watch !== prevProps.watch) {\n        if (this.counter) this.cancel();\n        return this.load();\n      }\n      if (watchFn && watchFn({\n        ...defaultOptions,\n        ...this.props\n      }, {\n        ...defaultOptions,\n        ...prevProps\n      })) {\n        if (this.counter) this.cancel();\n        return this.load();\n      }\n      if (promise !== prevProps.promise) {\n        if (this.counter) this.cancel();\n        if (promise) return this.load();\n      }\n      if (promiseFn !== prevProps.promiseFn) {\n        if (this.counter) this.cancel();\n        if (promiseFn) return this.load();\n      }\n    }\n    componentWillUnmount() {\n      this.cancel();\n      this.mounted = false;\n    }\n    getMeta(meta) {\n      return {\n        counter: this.counter,\n        promise: this.promise,\n        debugLabel: this.debugLabel,\n        ...meta\n      };\n    }\n    start(promiseFn) {\n      if (\"AbortController\" in globalScope) {\n        this.abortController.abort();\n        this.abortController = new globalScope.AbortController();\n      }\n      this.counter++;\n      return this.promise = new Promise((resolve, reject) => {\n        if (!this.mounted) return;\n        const executor = () => promiseFn().then(resolve, reject);\n        this.dispatch({\n          type: ActionTypes.start,\n          payload: executor,\n          meta: this.getMeta()\n        });\n      });\n    }\n    load() {\n      const promise = this.props.promise;\n      const promiseFn = this.props.promiseFn || defaultOptions.promiseFn;\n      if (promise) {\n        this.start(() => promise).then(this.onResolve(this.counter)).catch(this.onReject(this.counter));\n      } else if (promiseFn) {\n        const props = {\n          ...defaultOptions,\n          ...this.props\n        };\n        this.start(() => promiseFn(props, this.abortController)).then(this.onResolve(this.counter)).catch(this.onReject(this.counter));\n      }\n    }\n    run() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      const deferFn = this.props.deferFn || defaultOptions.deferFn;\n      if (deferFn) {\n        this.args = args;\n        const props = {\n          ...defaultOptions,\n          ...this.props\n        };\n        return this.start(() => deferFn(args, props, this.abortController)).then(this.onResolve(this.counter), this.onReject(this.counter));\n      }\n    }\n    cancel() {\n      const onCancel = this.props.onCancel || defaultOptions.onCancel;\n      onCancel && onCancel();\n      this.counter++;\n      this.abortController.abort();\n      this.mounted && this.dispatch({\n        type: ActionTypes.cancel,\n        meta: this.getMeta()\n      });\n    }\n    onResolve(counter) {\n      return data => {\n        if (this.counter === counter) {\n          const onResolve = this.props.onResolve || defaultOptions.onResolve;\n          this.setData(data, () => onResolve && onResolve(data));\n        }\n        return data;\n      };\n    }\n    onReject(counter) {\n      return error => {\n        if (this.counter === counter) {\n          const onReject = this.props.onReject || defaultOptions.onReject;\n          this.setError(error, () => onReject && onReject(error));\n        }\n        return error;\n      };\n    }\n    setData(data, callback) {\n      this.mounted && this.dispatch({\n        type: ActionTypes.fulfill,\n        payload: data,\n        meta: this.getMeta()\n      }, callback);\n      return data;\n    }\n    setError(error, callback) {\n      this.mounted && this.dispatch({\n        type: ActionTypes.reject,\n        payload: error,\n        error: true,\n        meta: this.getMeta()\n      }, callback);\n      return error;\n    }\n    render() {\n      const {\n        children,\n        suspense\n      } = this.props;\n      if (suspense && this.state.isPending && this.promise !== neverSettle) {\n        // Rely on Suspense to handle the loading state\n        throw this.promise;\n      }\n      if (typeof children === \"function\") {\n        const render = children;\n        return React.createElement(Provider, {\n          value: this.state\n        }, render(this.state));\n      }\n      if (children !== undefined && children !== null) {\n        return React.createElement(Provider, {\n          value: this.state\n        }, children);\n      }\n      return null;\n    }\n  }\n  if (propTypes) Async.propTypes = propTypes.Async;\n  const AsyncInitial = props => React.createElement(Consumer, null, st => React.createElement(IfInitial, Object.assign({}, props, {\n    state: st\n  })));\n  const AsyncPending = props => React.createElement(Consumer, null, st => React.createElement(IfPending, Object.assign({}, props, {\n    state: st\n  })));\n  const AsyncFulfilled = props => React.createElement(Consumer, null, st => React.createElement(IfFulfilled, Object.assign({}, props, {\n    state: st\n  })));\n  const AsyncRejected = props => React.createElement(Consumer, null, st => React.createElement(IfRejected, Object.assign({}, props, {\n    state: st\n  })));\n  const AsyncSettled = props => React.createElement(Consumer, null, st => React.createElement(IfSettled, Object.assign({}, props, {\n    state: st\n  })));\n  AsyncInitial.displayName = `${displayName}.Initial`;\n  AsyncPending.displayName = `${displayName}.Pending`;\n  AsyncFulfilled.displayName = `${displayName}.Fulfilled`;\n  AsyncRejected.displayName = `${displayName}.Rejected`;\n  AsyncSettled.displayName = `${displayName}.Settled`;\n  return Object.assign(Async, {\n    displayName: displayName,\n    Initial: AsyncInitial,\n    Pending: AsyncPending,\n    Loading: AsyncPending,\n    Fulfilled: AsyncFulfilled,\n    Resolved: AsyncFulfilled,\n    Rejected: AsyncRejected,\n    Settled: AsyncSettled\n  });\n}\nvar Async$1 = createInstance();\nfunction useAsync(arg1, arg2) {\n  const options = typeof arg1 === \"function\" ? {\n    ...arg2,\n    promiseFn: arg1\n  } : arg1;\n  const counter = useRef(0);\n  const isMounted = useRef(true);\n  const lastArgs = useRef(undefined);\n  const lastOptions = useRef(options);\n  const lastPromise = useRef(neverSettle);\n  const abortController = useRef(new MockAbortController());\n  const {\n    devToolsDispatcher\n  } = globalScope.__REACT_ASYNC__;\n  const {\n    reducer: reducer$1,\n    dispatcher = devToolsDispatcher\n  } = options;\n  const [state, _dispatch] = useReducer(reducer$1 ? (state, action) => reducer$1(state, action, reducer) : reducer, options, init);\n  const dispatch = useCallback(dispatcher ? action => dispatcher(action, dispatchMiddleware(_dispatch), lastOptions.current) : dispatchMiddleware(_dispatch), [dispatcher]);\n  const {\n    debugLabel\n  } = options;\n  const getMeta = useCallback(meta => ({\n    counter: counter.current,\n    promise: lastPromise.current,\n    debugLabel,\n    ...meta\n  }), [debugLabel]);\n  const setData = useCallback(function (data) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    if (isMounted.current) {\n      dispatch({\n        type: ActionTypes.fulfill,\n        payload: data,\n        meta: getMeta()\n      });\n      callback();\n    }\n    return data;\n  }, [dispatch, getMeta]);\n  const setError = useCallback(function (error) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    if (isMounted.current) {\n      dispatch({\n        type: ActionTypes.reject,\n        payload: error,\n        error: true,\n        meta: getMeta()\n      });\n      callback();\n    }\n    return error;\n  }, [dispatch, getMeta]);\n  const {\n    onResolve,\n    onReject\n  } = options;\n  const handleResolve = useCallback(count => data => count === counter.current && setData(data, () => onResolve && onResolve(data)), [setData, onResolve]);\n  const handleReject = useCallback(count => err => count === counter.current && setError(err, () => onReject && onReject(err)), [setError, onReject]);\n  const start = useCallback(promiseFn => {\n    if (\"AbortController\" in globalScope) {\n      abortController.current.abort();\n      abortController.current = new globalScope.AbortController();\n    }\n    counter.current++;\n    return lastPromise.current = new Promise((resolve, reject) => {\n      if (!isMounted.current) return;\n      const executor = () => promiseFn().then(resolve, reject);\n      dispatch({\n        type: ActionTypes.start,\n        payload: executor,\n        meta: getMeta()\n      });\n    });\n  }, [dispatch, getMeta]);\n  const {\n    promise,\n    promiseFn,\n    initialValue\n  } = options;\n  const load = useCallback(() => {\n    const isPreInitialized = initialValue && counter.current === 0;\n    if (promise) {\n      start(() => promise).then(handleResolve(counter.current)).catch(handleReject(counter.current));\n    } else if (promiseFn && !isPreInitialized) {\n      start(() => promiseFn(lastOptions.current, abortController.current)).then(handleResolve(counter.current)).catch(handleReject(counter.current));\n    }\n  }, [start, promise, promiseFn, initialValue, handleResolve, handleReject]);\n  const {\n    deferFn\n  } = options;\n  const run = useCallback(function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    if (deferFn) {\n      lastArgs.current = args;\n      start(() => deferFn(args, lastOptions.current, abortController.current)).then(handleResolve(counter.current)).catch(handleReject(counter.current));\n    }\n  }, [start, deferFn, handleResolve, handleReject]);\n  const reload = useCallback(() => {\n    lastArgs.current ? run(...lastArgs.current) : load();\n  }, [run, load]);\n  const {\n    onCancel\n  } = options;\n  const cancel = useCallback(() => {\n    onCancel && onCancel();\n    counter.current++;\n    abortController.current.abort();\n    isMounted.current && dispatch({\n      type: ActionTypes.cancel,\n      meta: getMeta()\n    });\n  }, [onCancel, dispatch, getMeta]);\n  /* These effects should only be triggered on changes to specific props */\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const {\n    watch,\n    watchFn\n  } = options;\n  useEffect(() => {\n    if (watchFn && lastOptions.current && watchFn(options, lastOptions.current)) {\n      lastOptions.current = options;\n      load();\n    }\n  });\n  useEffect(() => {\n    lastOptions.current = options;\n  }, [options]);\n  useEffect(() => {\n    if (counter.current) cancel();\n    if (promise || promiseFn) load();\n  }, [promise, promiseFn, watch]);\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n  useEffect(() => () => cancel(), []);\n  /* eslint-enable react-hooks/exhaustive-deps */\n  useDebugValue(state, _ref8 => {\n    let {\n      status\n    } = _ref8;\n    return `[${counter.current}] ${status}`;\n  });\n  if (options.suspense && state.isPending && lastPromise.current !== neverSettle) {\n    // Rely on Suspense to handle the loading state\n    throw lastPromise.current;\n  }\n  return useMemo(() => ({\n    ...state,\n    run,\n    reload,\n    cancel,\n    setData,\n    setError\n  }), [state, run, reload, cancel, setData, setError]);\n}\nclass FetchError extends Error {\n  constructor(response) {\n    super(`${response.status} ${response.statusText}`);\n    this.response = response;\n    /* istanbul ignore next */\n    if (Object.setPrototypeOf) {\n      // Not available in IE 10, but can be polyfilled\n      Object.setPrototypeOf(this, FetchError.prototype);\n    }\n  }\n}\nconst parseResponse = (accept, json) => res => {\n  if (!res.ok) return Promise.reject(new FetchError(res));\n  if (typeof json === \"boolean\") return json ? res.json() : res;\n  return accept === \"application/json\" ? res.json() : res;\n};\nfunction isEvent(e) {\n  return typeof e === \"object\" && \"preventDefault\" in e;\n}\n/**\n *\n * @param {RequestInfo} resource\n * @param {RequestInit} init\n * @param {FetchOptions} options\n * @returns {AsyncState<T, FetchRun<T>>}\n */\nfunction useAsyncFetch(resource, init) {\n  let {\n    defer,\n    json,\n    ...options\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const method = resource.method || init && init.method;\n  const headers = resource.headers || init && init.headers || {};\n  const accept = headers[\"Accept\"] || headers[\"accept\"] || headers.get && headers.get(\"accept\");\n  const doFetch = (input, init) => globalScope.fetch(input, init).then(parseResponse(accept, json));\n  const isDefer = typeof defer === \"boolean\" ? defer : [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].indexOf(method) !== -1;\n  const fn = isDefer ? \"deferFn\" : \"promiseFn\";\n  const identity = JSON.stringify({\n    resource,\n    init,\n    isDefer\n  });\n  const promiseFn = useCallback((_, _ref9) => {\n    let {\n      signal\n    } = _ref9;\n    return doFetch(resource, {\n      signal,\n      ...init\n    });\n  }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  const deferFn = useCallback(function (_ref10, _, _ref11) {\n    let [override] = _ref10;\n    let {\n      signal\n    } = _ref11;\n    if (!override || isEvent(override)) {\n      return doFetch(resource, {\n        signal,\n        ...init\n      });\n    }\n    if (typeof override === \"function\") {\n      const {\n        resource: runResource,\n        ...runInit\n      } = override({\n        resource,\n        signal,\n        ...init\n      });\n      return doFetch(runResource || resource, {\n        signal,\n        ...runInit\n      });\n    }\n    const {\n      resource: runResource,\n      ...runInit\n    } = override;\n    return doFetch(runResource || resource, {\n      signal,\n      ...init,\n      ...runInit\n    });\n  }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  const state = useAsync({\n    ...options,\n    [fn]: isDefer ? deferFn : promiseFn\n  });\n  useDebugValue(state, _ref12 => {\n    let {\n      counter,\n      status\n    } = _ref12;\n    return `[${counter}] ${status}`;\n  });\n  return state;\n}\nconst unsupported = () => {\n  throw new Error(\"useAsync requires React v16.8 or up. Upgrade your React version or use the <Async> component instead.\");\n};\nvar useAsync$1 = useEffect ? useAsync : unsupported;\nconst useFetch = useEffect ? useAsyncFetch : unsupported;\nexport default Async$1;\nexport { ActionTypes, Async$1 as Async, FetchError, IfFulfilled, IfInitial, IfPending, IfRejected, IfSettled, StatusTypes, createInstance, dispatchMiddleware, globalScope, init, neverSettle, reducer, useAsync$1 as useAsync, useFetch };","map":{"version":3,"mappings":"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","names":["globalScope","self","global","GLOBAL","__REACT_ASYNC__","noop","MockAbortController","constructor","abort","signal","PropTypes","require","e","childrenFn","oneOfType","node","func","stateObject","shape","initialValue","any","data","error","instanceOf","Error","value","startedAt","Date","finishedAt","status","oneOf","isInitial","bool","isPending","isLoading","isFulfilled","isResolved","isRejected","isSettled","counter","number","promise","Promise","run","reload","cancel","setData","setError","Async","children","promiseFn","deferFn","watch","watchFn","onResolve","onReject","reducer","dispatcher","debugLabel","string","suspense","Initial","state","isRequired","persist","Pending","initial","Fulfilled","Rejected","Settled","renderFn","render","args","IfInitial","React","createElement","Fragment","IfPending","IfFulfilled","IfRejected","IfSettled","propTypes","StatusTypes","getInitialStatus","rejected","undefined","fulfilled","pending","getIdleStatus","getStatusProps","NeverSettle","Object","setPrototypeOf","__proto__","prototype","assign","create","finally","catch","then","neverSettle","ActionTypes","init","action","type","start","meta","fulfill","payload","reject","dispatchMiddleware","dispatch","Component","createInstance","defaultOptions","displayName","Consumer","UnguardedConsumer","Provider","createContext","props","mounted","abortController","bind","load","devToolsDispatcher","_reducer","_dispatcher","asyncReducer","callback","setState","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","getMeta","AbortController","resolve","executor","onCancel","AsyncInitial","st","AsyncPending","AsyncFulfilled","AsyncRejected","AsyncSettled","Loading","Resolved","useAsync","arg1","arg2","options","useRef","isMounted","lastArgs","lastOptions","lastPromise","_dispatch","useReducer","useCallback","current","handleResolve","count","handleReject","err","isPreInitialized","useEffect","useDebugValue","useMemo","FetchError","response","statusText","parseResponse","accept","json","res","ok","isEvent","useAsyncFetch","resource","defer","method","headers","get","doFetch","input","fetch","isDefer","indexOf","fn","identity","JSON","stringify","_","override","runResource","runInit","unsupported","useFetch"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/react-async/dist-src/globalScope.js","/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/react-async/dist-src/propTypes.js","/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/react-async/dist-src/helpers.js","/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/react-async/dist-src/status.js","/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/react-async/dist-src/reducer.js","/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/react-async/dist-src/Async.js","/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/react-async/dist-src/useAsync.js"],"sourcesContent":["/* istanbul ignore file */\n/**\n * Universal global scope object. In the browser this is `self`, in Node.js and React Native it's `global`.\n * This file is excluded from coverage reporting because these globals are environment-specific so we can't test them all.\n */\nconst globalScope = (() => {\n    if (typeof self === \"object\" && self.self === self)\n        return self;\n    if (typeof global === \"object\" && global.global === global)\n        return global;\n    if (typeof global === \"object\" && global.GLOBAL === global)\n        return global;\n    return {}; // fallback that relies on imported modules to be singletons\n})();\n/**\n * Globally available object used to connect the DevTools to all React Async instances.\n */\nglobalScope.__REACT_ASYNC__ = globalScope.__REACT_ASYNC__ || {};\nexport const noop = () => { };\nexport class MockAbortController {\n    constructor() {\n        this.abort = noop;\n        this.signal = {};\n    }\n}\nexport default globalScope;\n","let PropTypes;\ntry {\n    PropTypes = require(\"prop-types\");\n}\ncatch (e) { }\nconst childrenFn = PropTypes && PropTypes.oneOfType([PropTypes.node, PropTypes.func]);\nconst stateObject = PropTypes &&\n    PropTypes.shape({\n        initialValue: PropTypes.any,\n        data: PropTypes.any,\n        error: PropTypes.instanceOf(Error),\n        value: PropTypes.any,\n        startedAt: PropTypes.instanceOf(Date),\n        finishedAt: PropTypes.instanceOf(Date),\n        status: PropTypes.oneOf([\"initial\", \"pending\", \"fulfilled\", \"rejected\"]),\n        isInitial: PropTypes.bool,\n        isPending: PropTypes.bool,\n        isLoading: PropTypes.bool,\n        isFulfilled: PropTypes.bool,\n        isResolved: PropTypes.bool,\n        isRejected: PropTypes.bool,\n        isSettled: PropTypes.bool,\n        counter: PropTypes.number,\n        promise: PropTypes.instanceOf(Promise),\n        run: PropTypes.func,\n        reload: PropTypes.func,\n        cancel: PropTypes.func,\n        setData: PropTypes.func,\n        setError: PropTypes.func,\n    });\nexport default PropTypes && {\n    Async: {\n        children: childrenFn,\n        promise: PropTypes.instanceOf(Promise),\n        promiseFn: PropTypes.func,\n        deferFn: PropTypes.func,\n        watch: PropTypes.any,\n        watchFn: PropTypes.func,\n        initialValue: PropTypes.any,\n        onResolve: PropTypes.func,\n        onReject: PropTypes.func,\n        reducer: PropTypes.func,\n        dispatcher: PropTypes.func,\n        debugLabel: PropTypes.string,\n        suspense: PropTypes.bool,\n    },\n    Initial: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n    Pending: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        initial: PropTypes.bool,\n    },\n    Fulfilled: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n    Rejected: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n    Settled: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n};\n","import React from \"react\";\nimport propTypes from \"./propTypes\";\nconst renderFn = (children, ...args) => {\n    if (typeof children === \"function\") {\n        const render = children;\n        return render(...args);\n    }\n    return children;\n};\n/**\n * Renders only when no promise has started or completed yet.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show until we have data, even while pending (loading) or when an error occurred\n */\nexport const IfInitial = ({ children, persist, state = {}, }) => React.createElement(React.Fragment, null, state.isInitial || (persist && !state.data) ? renderFn(children, state) : null);\n/**\n * Renders only while pending (promise is loading).\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} initial Show only on initial load (data is undefined)\n */\nexport const IfPending = ({ children, initial, state = {}, }) => React.createElement(React.Fragment, null, state.isPending && (!initial || !state.value) ? renderFn(children, state) : null);\n/**\n * Renders only when promise is resolved.\n *\n * @prop {Function|Node} children Function (passing data and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data while pending (promise is loading)\n */\nexport const IfFulfilled = ({ children, persist, state = {}, }) => (React.createElement(React.Fragment, null, state.isFulfilled || (persist && state.data) ? renderFn(children, state.data, state) : null));\n/**\n * Renders only when promise is rejected.\n *\n * @prop {Function|Node} children Function (passing error and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old error while pending (promise is loading)\n */\nexport const IfRejected = ({ children, persist, state = {}, }) => (React.createElement(React.Fragment, null, state.isRejected || (persist && state.error) ? renderFn(children, state.error, state) : null));\n/**\n * Renders only when promise is fulfilled or rejected.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data or error while pending (promise is loading)\n */\nexport const IfSettled = ({ children, persist, state = {}, }) => React.createElement(React.Fragment, null, state.isSettled || (persist && state.value) ? renderFn(children, state) : null);\nif (propTypes) {\n    IfInitial.propTypes = propTypes.Initial;\n    IfPending.propTypes = propTypes.Pending;\n    IfFulfilled.propTypes = propTypes.Fulfilled;\n    IfRejected.propTypes = propTypes.Rejected;\n    IfSettled.propTypes = propTypes.Settled;\n}\n","export var StatusTypes;\n(function (StatusTypes) {\n    StatusTypes[\"initial\"] = \"initial\";\n    StatusTypes[\"pending\"] = \"pending\";\n    StatusTypes[\"fulfilled\"] = \"fulfilled\";\n    StatusTypes[\"rejected\"] = \"rejected\";\n})(StatusTypes || (StatusTypes = {}));\nexport const getInitialStatus = (value, promise) => {\n    if (value instanceof Error)\n        return StatusTypes.rejected;\n    if (value !== undefined)\n        return StatusTypes.fulfilled;\n    if (promise)\n        return StatusTypes.pending;\n    return StatusTypes.initial;\n};\nexport const getIdleStatus = (value) => {\n    if (value instanceof Error)\n        return StatusTypes.rejected;\n    if (value !== undefined)\n        return StatusTypes.fulfilled;\n    return StatusTypes.initial;\n};\nexport const getStatusProps = (status) => ({\n    status,\n    isInitial: status === StatusTypes.initial,\n    isPending: status === StatusTypes.pending,\n    isLoading: status === StatusTypes.pending,\n    isFulfilled: status === StatusTypes.fulfilled,\n    isResolved: status === StatusTypes.fulfilled,\n    isRejected: status === StatusTypes.rejected,\n    isSettled: status === StatusTypes.fulfilled || status === StatusTypes.rejected,\n});\n","import { getInitialStatus, getIdleStatus, getStatusProps, StatusTypes } from \"./status\";\n// This exists to make sure we don't hold any references to user-provided functions\n// The way NeverSettle extends from Promise is complicated, but can't be done differently because Babel doesn't support\n// extending built-in classes. See https://babeljs.io/docs/en/caveats/#classes\nconst NeverSettle = function () { };\n/* istanbul ignore next */\nif (Object.setPrototypeOf) {\n    Object.setPrototypeOf(NeverSettle, Promise);\n}\nelse {\n    ;\n    NeverSettle.__proto__ = Promise;\n}\nNeverSettle.prototype = Object.assign(Object.create(Promise.prototype), {\n    finally() {\n        return this;\n    },\n    catch() {\n        return this;\n    },\n    then() {\n        return this;\n    },\n});\nexport const neverSettle = new NeverSettle();\nexport var ActionTypes;\n(function (ActionTypes) {\n    ActionTypes[\"start\"] = \"start\";\n    ActionTypes[\"cancel\"] = \"cancel\";\n    ActionTypes[\"fulfill\"] = \"fulfill\";\n    ActionTypes[\"reject\"] = \"reject\";\n})(ActionTypes || (ActionTypes = {}));\nexport const init = ({ initialValue, promise, promiseFn, }) => ({\n    initialValue,\n    data: initialValue instanceof Error ? undefined : initialValue,\n    error: initialValue instanceof Error ? initialValue : undefined,\n    value: initialValue,\n    startedAt: promise || promiseFn ? new Date() : undefined,\n    finishedAt: initialValue ? new Date() : undefined,\n    ...getStatusProps(getInitialStatus(initialValue, promise || promiseFn)),\n    counter: 0,\n    promise: neverSettle,\n});\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        case ActionTypes.start:\n            return {\n                ...state,\n                startedAt: new Date(),\n                finishedAt: undefined,\n                ...getStatusProps(StatusTypes.pending),\n                counter: action.meta.counter,\n                promise: action.meta.promise,\n            };\n        case ActionTypes.cancel:\n            return {\n                ...state,\n                startedAt: undefined,\n                finishedAt: undefined,\n                ...getStatusProps(getIdleStatus(state.error || state.data)),\n                counter: action.meta.counter,\n                promise: action.meta.promise,\n            };\n        case ActionTypes.fulfill:\n            return {\n                ...state,\n                data: action.payload,\n                value: action.payload,\n                error: undefined,\n                finishedAt: new Date(),\n                ...getStatusProps(StatusTypes.fulfilled),\n                promise: action.meta.promise,\n            };\n        case ActionTypes.reject:\n            return {\n                ...state,\n                error: action.payload,\n                value: action.payload,\n                finishedAt: new Date(),\n                ...getStatusProps(StatusTypes.rejected),\n                promise: action.meta.promise,\n            };\n        default:\n            return state;\n    }\n};\nexport const dispatchMiddleware = (dispatch) => (action, ...args) => {\n    dispatch(action, ...args);\n    if (action.type === ActionTypes.start && typeof action.payload === \"function\") {\n        action.payload();\n    }\n};\n","import React from \"react\";\nimport globalScope, { MockAbortController } from \"./globalScope\";\nimport { IfInitial, IfPending, IfFulfilled, IfRejected, IfSettled } from \"./helpers\";\nimport propTypes from \"./propTypes\";\nimport { neverSettle, ActionTypes, init, dispatchMiddleware, reducer as asyncReducer, } from \"./reducer\";\nclass Async extends React.Component {\n}\n/**\n * createInstance allows you to create instances of Async that are bound to a specific promise.\n * A unique instance also uses its own React context for better nesting capability.\n */\nexport function createInstance(defaultOptions = {}, displayName = \"Async\") {\n    const { Consumer: UnguardedConsumer, Provider } = React.createContext(undefined);\n    function Consumer({ children }) {\n        return (React.createElement(UnguardedConsumer, null, value => {\n            if (!value) {\n                throw new Error(\"this component should only be used within an associated <Async> component!\");\n            }\n            return children(value);\n        }));\n    }\n    class Async extends React.Component {\n        constructor(props) {\n            super(props);\n            this.mounted = false;\n            this.counter = 0;\n            this.args = [];\n            this.promise = neverSettle;\n            this.abortController = new MockAbortController();\n            this.start = this.start.bind(this);\n            this.load = this.load.bind(this);\n            this.run = this.run.bind(this);\n            this.cancel = this.cancel.bind(this);\n            this.onResolve = this.onResolve.bind(this);\n            this.onReject = this.onReject.bind(this);\n            this.setData = this.setData.bind(this);\n            this.setError = this.setError.bind(this);\n            const promise = props.promise;\n            const promiseFn = props.promiseFn || defaultOptions.promiseFn;\n            const initialValue = props.initialValue || defaultOptions.initialValue;\n            this.state = {\n                ...init({ initialValue, promise, promiseFn }),\n                cancel: this.cancel,\n                run: this.run,\n                reload: () => {\n                    this.load();\n                    this.run(...this.args);\n                },\n                setData: this.setData,\n                setError: this.setError,\n            };\n            this.debugLabel = props.debugLabel || defaultOptions.debugLabel;\n            const { devToolsDispatcher } = globalScope.__REACT_ASYNC__;\n            const _reducer = props.reducer || defaultOptions.reducer;\n            const _dispatcher = props.dispatcher || defaultOptions.dispatcher || devToolsDispatcher;\n            const reducer = _reducer\n                ? (state, action) => _reducer(state, action, asyncReducer)\n                : asyncReducer;\n            const dispatch = dispatchMiddleware((action, callback) => {\n                this.setState(state => reducer(state, action), callback);\n            });\n            this.dispatch = _dispatcher ? action => _dispatcher(action, dispatch, props) : dispatch;\n        }\n        componentDidMount() {\n            this.mounted = true;\n            if (this.props.promise || !this.state.initialValue) {\n                this.load();\n            }\n        }\n        componentDidUpdate(prevProps) {\n            const { watch, watchFn = defaultOptions.watchFn, promise, promiseFn } = this.props;\n            if (watch !== prevProps.watch) {\n                if (this.counter)\n                    this.cancel();\n                return this.load();\n            }\n            if (watchFn &&\n                watchFn({ ...defaultOptions, ...this.props }, { ...defaultOptions, ...prevProps })) {\n                if (this.counter)\n                    this.cancel();\n                return this.load();\n            }\n            if (promise !== prevProps.promise) {\n                if (this.counter)\n                    this.cancel();\n                if (promise)\n                    return this.load();\n            }\n            if (promiseFn !== prevProps.promiseFn) {\n                if (this.counter)\n                    this.cancel();\n                if (promiseFn)\n                    return this.load();\n            }\n        }\n        componentWillUnmount() {\n            this.cancel();\n            this.mounted = false;\n        }\n        getMeta(meta) {\n            return {\n                counter: this.counter,\n                promise: this.promise,\n                debugLabel: this.debugLabel,\n                ...meta,\n            };\n        }\n        start(promiseFn) {\n            if (\"AbortController\" in globalScope) {\n                this.abortController.abort();\n                this.abortController = new globalScope.AbortController();\n            }\n            this.counter++;\n            return (this.promise = new Promise((resolve, reject) => {\n                if (!this.mounted)\n                    return;\n                const executor = () => promiseFn().then(resolve, reject);\n                this.dispatch({ type: ActionTypes.start, payload: executor, meta: this.getMeta() });\n            }));\n        }\n        load() {\n            const promise = this.props.promise;\n            const promiseFn = this.props.promiseFn || defaultOptions.promiseFn;\n            if (promise) {\n                this.start(() => promise)\n                    .then(this.onResolve(this.counter))\n                    .catch(this.onReject(this.counter));\n            }\n            else if (promiseFn) {\n                const props = { ...defaultOptions, ...this.props };\n                this.start(() => promiseFn(props, this.abortController))\n                    .then(this.onResolve(this.counter))\n                    .catch(this.onReject(this.counter));\n            }\n        }\n        run(...args) {\n            const deferFn = this.props.deferFn || defaultOptions.deferFn;\n            if (deferFn) {\n                this.args = args;\n                const props = { ...defaultOptions, ...this.props };\n                return this.start(() => deferFn(args, props, this.abortController)).then(this.onResolve(this.counter), this.onReject(this.counter));\n            }\n        }\n        cancel() {\n            const onCancel = this.props.onCancel || defaultOptions.onCancel;\n            onCancel && onCancel();\n            this.counter++;\n            this.abortController.abort();\n            this.mounted && this.dispatch({ type: ActionTypes.cancel, meta: this.getMeta() });\n        }\n        onResolve(counter) {\n            return (data) => {\n                if (this.counter === counter) {\n                    const onResolve = this.props.onResolve || defaultOptions.onResolve;\n                    this.setData(data, () => onResolve && onResolve(data));\n                }\n                return data;\n            };\n        }\n        onReject(counter) {\n            return (error) => {\n                if (this.counter === counter) {\n                    const onReject = this.props.onReject || defaultOptions.onReject;\n                    this.setError(error, () => onReject && onReject(error));\n                }\n                return error;\n            };\n        }\n        setData(data, callback) {\n            this.mounted &&\n                this.dispatch({ type: ActionTypes.fulfill, payload: data, meta: this.getMeta() }, callback);\n            return data;\n        }\n        setError(error, callback) {\n            this.mounted &&\n                this.dispatch({ type: ActionTypes.reject, payload: error, error: true, meta: this.getMeta() }, callback);\n            return error;\n        }\n        render() {\n            const { children, suspense } = this.props;\n            if (suspense && this.state.isPending && this.promise !== neverSettle) {\n                // Rely on Suspense to handle the loading state\n                throw this.promise;\n            }\n            if (typeof children === \"function\") {\n                const render = children;\n                return React.createElement(Provider, { value: this.state }, render(this.state));\n            }\n            if (children !== undefined && children !== null) {\n                return React.createElement(Provider, { value: this.state }, children);\n            }\n            return null;\n        }\n    }\n    if (propTypes)\n        Async.propTypes = propTypes.Async;\n    const AsyncInitial = props => (React.createElement(Consumer, null, st => React.createElement(IfInitial, Object.assign({}, props, { state: st }))));\n    const AsyncPending = props => (React.createElement(Consumer, null, st => React.createElement(IfPending, Object.assign({}, props, { state: st }))));\n    const AsyncFulfilled = props => (React.createElement(Consumer, null, st => React.createElement(IfFulfilled, Object.assign({}, props, { state: st }))));\n    const AsyncRejected = props => (React.createElement(Consumer, null, st => React.createElement(IfRejected, Object.assign({}, props, { state: st }))));\n    const AsyncSettled = props => (React.createElement(Consumer, null, st => React.createElement(IfSettled, Object.assign({}, props, { state: st }))));\n    AsyncInitial.displayName = `${displayName}.Initial`;\n    AsyncPending.displayName = `${displayName}.Pending`;\n    AsyncFulfilled.displayName = `${displayName}.Fulfilled`;\n    AsyncRejected.displayName = `${displayName}.Rejected`;\n    AsyncSettled.displayName = `${displayName}.Settled`;\n    return Object.assign(Async, {\n        displayName: displayName,\n        Initial: AsyncInitial,\n        Pending: AsyncPending,\n        Loading: AsyncPending,\n        Fulfilled: AsyncFulfilled,\n        Resolved: AsyncFulfilled,\n        Rejected: AsyncRejected,\n        Settled: AsyncSettled,\n    });\n}\nexport default createInstance();\n","import { useCallback, useDebugValue, useEffect, useMemo, useRef, useReducer } from \"react\";\nimport globalScope, { MockAbortController, noop } from \"./globalScope\";\nimport { neverSettle, ActionTypes, init, dispatchMiddleware, reducer as asyncReducer, } from \"./reducer\";\nfunction useAsync(arg1, arg2) {\n    const options = typeof arg1 === \"function\"\n        ? {\n            ...arg2,\n            promiseFn: arg1,\n        }\n        : arg1;\n    const counter = useRef(0);\n    const isMounted = useRef(true);\n    const lastArgs = useRef(undefined);\n    const lastOptions = useRef(options);\n    const lastPromise = useRef(neverSettle);\n    const abortController = useRef(new MockAbortController());\n    const { devToolsDispatcher } = globalScope.__REACT_ASYNC__;\n    const { reducer, dispatcher = devToolsDispatcher } = options;\n    const [state, _dispatch] = useReducer(reducer ? (state, action) => reducer(state, action, asyncReducer) : asyncReducer, options, init);\n    const dispatch = useCallback(dispatcher\n        ? action => dispatcher(action, dispatchMiddleware(_dispatch), lastOptions.current)\n        : dispatchMiddleware(_dispatch), [dispatcher]);\n    const { debugLabel } = options;\n    const getMeta = useCallback((meta) => ({\n        counter: counter.current,\n        promise: lastPromise.current,\n        debugLabel,\n        ...meta,\n    }), [debugLabel]);\n    const setData = useCallback((data, callback = noop) => {\n        if (isMounted.current) {\n            dispatch({\n                type: ActionTypes.fulfill,\n                payload: data,\n                meta: getMeta(),\n            });\n            callback();\n        }\n        return data;\n    }, [dispatch, getMeta]);\n    const setError = useCallback((error, callback = noop) => {\n        if (isMounted.current) {\n            dispatch({\n                type: ActionTypes.reject,\n                payload: error,\n                error: true,\n                meta: getMeta(),\n            });\n            callback();\n        }\n        return error;\n    }, [dispatch, getMeta]);\n    const { onResolve, onReject } = options;\n    const handleResolve = useCallback(count => (data) => count === counter.current && setData(data, () => onResolve && onResolve(data)), [setData, onResolve]);\n    const handleReject = useCallback(count => (err) => count === counter.current && setError(err, () => onReject && onReject(err)), [setError, onReject]);\n    const start = useCallback(promiseFn => {\n        if (\"AbortController\" in globalScope) {\n            abortController.current.abort();\n            abortController.current = new globalScope.AbortController();\n        }\n        counter.current++;\n        return (lastPromise.current = new Promise((resolve, reject) => {\n            if (!isMounted.current)\n                return;\n            const executor = () => promiseFn().then(resolve, reject);\n            dispatch({\n                type: ActionTypes.start,\n                payload: executor,\n                meta: getMeta(),\n            });\n        }));\n    }, [dispatch, getMeta]);\n    const { promise, promiseFn, initialValue } = options;\n    const load = useCallback(() => {\n        const isPreInitialized = initialValue && counter.current === 0;\n        if (promise) {\n            start(() => promise)\n                .then(handleResolve(counter.current))\n                .catch(handleReject(counter.current));\n        }\n        else if (promiseFn && !isPreInitialized) {\n            start(() => promiseFn(lastOptions.current, abortController.current))\n                .then(handleResolve(counter.current))\n                .catch(handleReject(counter.current));\n        }\n    }, [start, promise, promiseFn, initialValue, handleResolve, handleReject]);\n    const { deferFn } = options;\n    const run = useCallback((...args) => {\n        if (deferFn) {\n            lastArgs.current = args;\n            start(() => deferFn(args, lastOptions.current, abortController.current))\n                .then(handleResolve(counter.current))\n                .catch(handleReject(counter.current));\n        }\n    }, [start, deferFn, handleResolve, handleReject]);\n    const reload = useCallback(() => {\n        lastArgs.current ? run(...lastArgs.current) : load();\n    }, [run, load]);\n    const { onCancel } = options;\n    const cancel = useCallback(() => {\n        onCancel && onCancel();\n        counter.current++;\n        abortController.current.abort();\n        isMounted.current &&\n            dispatch({\n                type: ActionTypes.cancel,\n                meta: getMeta(),\n            });\n    }, [onCancel, dispatch, getMeta]);\n    /* These effects should only be triggered on changes to specific props */\n    /* eslint-disable react-hooks/exhaustive-deps */\n    const { watch, watchFn } = options;\n    useEffect(() => {\n        if (watchFn && lastOptions.current && watchFn(options, lastOptions.current)) {\n            lastOptions.current = options;\n            load();\n        }\n    });\n    useEffect(() => {\n        lastOptions.current = options;\n    }, [options]);\n    useEffect(() => {\n        if (counter.current)\n            cancel();\n        if (promise || promiseFn)\n            load();\n    }, [promise, promiseFn, watch]);\n    useEffect(() => () => {\n        isMounted.current = false;\n    }, []);\n    useEffect(() => () => cancel(), []);\n    /* eslint-enable react-hooks/exhaustive-deps */\n    useDebugValue(state, ({ status }) => `[${counter.current}] ${status}`);\n    if (options.suspense && state.isPending && lastPromise.current !== neverSettle) {\n        // Rely on Suspense to handle the loading state\n        throw lastPromise.current;\n    }\n    return useMemo(() => ({\n        ...state,\n        run,\n        reload,\n        cancel,\n        setData,\n        setError,\n    }), [state, run, reload, cancel, setData, setError]);\n}\nexport class FetchError extends Error {\n    constructor(response) {\n        super(`${response.status} ${response.statusText}`);\n        this.response = response;\n        /* istanbul ignore next */\n        if (Object.setPrototypeOf) {\n            // Not available in IE 10, but can be polyfilled\n            Object.setPrototypeOf(this, FetchError.prototype);\n        }\n    }\n}\nconst parseResponse = (accept, json) => (res) => {\n    if (!res.ok)\n        return Promise.reject(new FetchError(res));\n    if (typeof json === \"boolean\")\n        return json ? res.json() : res;\n    return accept === \"application/json\" ? res.json() : res;\n};\nfunction isEvent(e) {\n    return typeof e === \"object\" && \"preventDefault\" in e;\n}\n/**\n *\n * @param {RequestInfo} resource\n * @param {RequestInit} init\n * @param {FetchOptions} options\n * @returns {AsyncState<T, FetchRun<T>>}\n */\nfunction useAsyncFetch(resource, init, { defer, json, ...options } = {}) {\n    const method = resource.method || (init && init.method);\n    const headers = resource.headers || (init && init.headers) || {};\n    const accept = headers[\"Accept\"] || headers[\"accept\"] || (headers.get && headers.get(\"accept\"));\n    const doFetch = (input, init) => globalScope.fetch(input, init).then(parseResponse(accept, json));\n    const isDefer = typeof defer === \"boolean\" ? defer : [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].indexOf(method) !== -1;\n    const fn = isDefer ? \"deferFn\" : \"promiseFn\";\n    const identity = JSON.stringify({\n        resource,\n        init,\n        isDefer,\n    });\n    const promiseFn = useCallback((_, { signal }) => {\n        return doFetch(resource, { signal, ...init });\n    }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n    const deferFn = useCallback(function ([override], _, { signal }) {\n        if (!override || isEvent(override)) {\n            return doFetch(resource, { signal, ...init });\n        }\n        if (typeof override === \"function\") {\n            const { resource: runResource, ...runInit } = override({ resource, signal, ...init });\n            return doFetch(runResource || resource, { signal, ...runInit });\n        }\n        const { resource: runResource, ...runInit } = override;\n        return doFetch(runResource || resource, { signal, ...init, ...runInit });\n    }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n    const state = useAsync({\n        ...options,\n        [fn]: isDefer ? deferFn : promiseFn,\n    });\n    useDebugValue(state, ({ counter, status }) => `[${counter}] ${status}`);\n    return state;\n}\nconst unsupported = () => {\n    throw new Error(\"useAsync requires React v16.8 or up. Upgrade your React version or use the <Async> component instead.\");\n};\nexport default useEffect ? useAsync : unsupported;\nexport const useFetch = useEffect ? useAsyncFetch : unsupported;\n"]},"metadata":{},"sourceType":"module"}