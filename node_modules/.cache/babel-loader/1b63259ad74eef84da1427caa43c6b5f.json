{"ast":null,"code":"import _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __rest } from \"tslib\";\nimport React, { useMemo, useRef } from 'react';\nimport { useAutosuggestItems } from '../autosuggest/options-controller';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport DropdownFooter from '../internal/components/dropdown-footer';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport autosuggestStyles from '../autosuggest/styles.css.js';\nimport styles from './styles.css.js';\nimport { fireCancelableEvent } from '../internal/events/index';\nimport AutosuggestOptionsList from '../autosuggest/options-list';\nimport { useAutosuggestLoadMore } from '../autosuggest/load-more-controller';\nimport AutosuggestInput from '../internal/components/autosuggest-input';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport clsx from 'clsx';\nimport { getFirstFocusable } from '../internal/components/focus-lock/utils';\nimport { filterOptions } from './filter-options';\nimport { joinStrings } from '../internal/utils/strings';\nvar DROPDOWN_WIDTH_OPTIONS_LIST = 300;\nvar DROPDOWN_WIDTH_CUSTOM_FORM = 200;\nvar PropertyFilterAutosuggest = React.forwardRef(function (props, ref) {\n  var _a;\n  var value = props.value,\n    onChange = props.onChange,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur,\n    _onLoadItems = props.onLoadItems,\n    options = props.options,\n    _props$statusType = props.statusType,\n    statusType = _props$statusType === void 0 ? 'finished' : _props$statusType,\n    placeholder = props.placeholder,\n    disabled = props.disabled,\n    ariaLabel = props.ariaLabel,\n    enteredTextLabel = props.enteredTextLabel,\n    onKeyDown = props.onKeyDown,\n    virtualScroll = props.virtualScroll,\n    expandToViewport = props.expandToViewport,\n    customForm = props.customForm,\n    filterText = props.filterText,\n    onOptionClick = props.onOptionClick,\n    hideEnteredTextOption = props.hideEnteredTextOption,\n    searchResultsId = props.searchResultsId,\n    rest = __rest(props, [\"value\", \"onChange\", \"onFocus\", \"onBlur\", \"onLoadItems\", \"options\", \"statusType\", \"placeholder\", \"disabled\", \"ariaLabel\", \"enteredTextLabel\", \"onKeyDown\", \"virtualScroll\", \"expandToViewport\", \"customForm\", \"filterText\", \"onOptionClick\", \"hideEnteredTextOption\", \"searchResultsId\"]);\n  var highlightText = filterText === undefined ? value : filterText;\n  var customFormRef = useRef(null);\n  var autosuggestInputRef = useRef(null);\n  var mergedRef = useMergeRefs(autosuggestInputRef, ref);\n  var filteredOptions = useMemo(function () {\n    return filterOptions(options || [], highlightText);\n  }, [options, highlightText]);\n  var _useAutosuggestItems = useAutosuggestItems({\n      options: filteredOptions,\n      filterValue: value,\n      filterText: highlightText,\n      filteringType: 'manual',\n      hideEnteredTextLabel: hideEnteredTextOption,\n      onSelectItem: function onSelectItem(option) {\n        var _a;\n        var value = option.value || '';\n        fireNonCancelableEvent(onChange, {\n          value: value\n        });\n        var selectedCancelled = fireCancelableEvent(onOptionClick, option);\n        if (!selectedCancelled) {\n          (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.close();\n        } else {\n          autosuggestItemsHandlers.resetHighlightWithKeyboard();\n        }\n      }\n    }),\n    _useAutosuggestItems2 = _slicedToArray(_useAutosuggestItems, 2),\n    autosuggestItemsState = _useAutosuggestItems2[0],\n    autosuggestItemsHandlers = _useAutosuggestItems2[1];\n  var autosuggestLoadMoreHandlers = useAutosuggestLoadMore({\n    options: options,\n    statusType: statusType,\n    onLoadItems: function onLoadItems(detail) {\n      return fireNonCancelableEvent(_onLoadItems, detail);\n    }\n  });\n  var handleChange = function handleChange(event) {\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n    fireNonCancelableEvent(onChange, event.detail);\n  };\n  var handleDelayedInput = function handleDelayedInput(event) {\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputChange(event.detail.value);\n  };\n  var handleFocus = function handleFocus() {\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputFocus();\n    fireCancelableEvent(onFocus, null);\n  };\n  var handleBlur = function handleBlur() {\n    fireCancelableEvent(onBlur, null);\n  };\n  var handleKeyDown = function handleKeyDown(e) {\n    fireCancelableEvent(onKeyDown, e.detail);\n  };\n  var handlePressArrowDown = function handlePressArrowDown() {\n    var _a;\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(1);\n    if (customFormRef.current) {\n      (_a = getFirstFocusable(customFormRef.current)) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  };\n  var handlePressArrowUp = function handlePressArrowUp() {\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(-1);\n  };\n  var handlePressEnter = function handlePressEnter() {\n    return autosuggestItemsHandlers.selectHighlightedOptionWithKeyboard();\n  };\n  var handleCloseDropdown = function handleCloseDropdown() {\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n  };\n  var handleRecoveryClick = function handleRecoveryClick() {\n    var _a;\n    autosuggestLoadMoreHandlers.fireLoadMoreOnRecoveryClick();\n    (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n  var selfControlId = useUniqueId('input');\n  var controlId = (_a = rest.controlId) !== null && _a !== void 0 ? _a : selfControlId;\n  var listId = useUniqueId('list');\n  var footerId = useUniqueId('footer');\n  var highlightedOptionIdSource = useUniqueId();\n  var highlightedOptionId = autosuggestItemsState.highlightedOption ? highlightedOptionIdSource : undefined;\n  var isEmpty = !value && !autosuggestItemsState.items.length;\n  var dropdownStatus = useDropdownStatus(Object.assign(Object.assign({}, props), {\n    isEmpty: isEmpty,\n    onRecoveryClick: handleRecoveryClick,\n    hasRecoveryCallback: !!_onLoadItems\n  }));\n  var content = null;\n  if (customForm) {\n    content = React.createElement(\"div\", {\n      ref: customFormRef,\n      className: styles['custom-content-wrapper']\n    }, customForm);\n  } else if (autosuggestItemsState.items.length > 0) {\n    content = React.createElement(AutosuggestOptionsList, {\n      statusType: statusType,\n      autosuggestItemsState: autosuggestItemsState,\n      autosuggestItemsHandlers: autosuggestItemsHandlers,\n      highlightedOptionId: highlightedOptionId,\n      highlightText: highlightText,\n      listId: listId,\n      controlId: controlId,\n      enteredTextLabel: enteredTextLabel,\n      handleLoadMore: autosuggestLoadMoreHandlers.fireLoadMoreOnScroll,\n      hasDropdownStatus: dropdownStatus.content !== null,\n      virtualScroll: virtualScroll,\n      listBottom: !dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n        content: dropdownStatus.content,\n        id: footerId\n      }) : null,\n      ariaDescribedby: dropdownStatus.content ? footerId : undefined\n    });\n  }\n  return React.createElement(AutosuggestInput, Object.assign({\n    ref: mergedRef\n  }, rest, {\n    className: clsx(autosuggestStyles.root, styles.input),\n    value: value,\n    onChange: handleChange,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onKeyDown: handleKeyDown,\n    controlId: controlId,\n    placeholder: placeholder,\n    disabled: disabled,\n    ariaLabel: ariaLabel,\n    expandToViewport: expandToViewport,\n    ariaControls: listId,\n    ariaActivedescendant: highlightedOptionId,\n    ariaDescribedby: joinStrings(searchResultsId, rest.ariaDescribedby),\n    dropdownExpanded: autosuggestItemsState.items.length > 1 || dropdownStatus.content !== null || !!customForm,\n    dropdownContentKey: customForm ? 'custom' : 'options',\n    dropdownContent: content,\n    dropdownFooter: dropdownStatus.isSticky && dropdownStatus.content ? React.createElement(DropdownFooter, {\n      content: dropdownStatus.content,\n      hasItems: autosuggestItemsState.items.length >= 1,\n      id: footerId\n    }) : null,\n    dropdownWidth: customForm ? DROPDOWN_WIDTH_CUSTOM_FORM : DROPDOWN_WIDTH_OPTIONS_LIST,\n    dropdownContentFocusable: !!customForm,\n    onCloseDropdown: handleCloseDropdown,\n    onDelayedInput: handleDelayedInput,\n    onPressArrowDown: handlePressArrowDown,\n    onPressArrowUp: handlePressArrowUp,\n    onPressEnter: handlePressEnter\n  }));\n});\nexport default PropertyFilterAutosuggest;","map":{"version":3,"mappings":"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","names":["React","useMemo","useRef","useAutosuggestItems","useDropdownStatus","DropdownFooter","useUniqueId","fireNonCancelableEvent","autosuggestStyles","styles","fireCancelableEvent","AutosuggestOptionsList","useAutosuggestLoadMore","AutosuggestInput","useMergeRefs","clsx","getFirstFocusable","filterOptions","joinStrings","DROPDOWN_WIDTH_OPTIONS_LIST","DROPDOWN_WIDTH_CUSTOM_FORM","PropertyFilterAutosuggest","forwardRef","props","ref","value","onChange","onFocus","onBlur","onLoadItems","options","statusType","placeholder","disabled","ariaLabel","enteredTextLabel","onKeyDown","virtualScroll","expandToViewport","customForm","filterText","onOptionClick","hideEnteredTextOption","searchResultsId","rest","highlightText","undefined","customFormRef","autosuggestInputRef","mergedRef","filteredOptions","filterValue","filteringType","hideEnteredTextLabel","onSelectItem","option","selectedCancelled","current","close","autosuggestItemsHandlers","resetHighlightWithKeyboard","autosuggestItemsState","autosuggestLoadMoreHandlers","detail","handleChange","event","handleDelayedInput","fireLoadMoreOnInputChange","handleFocus","fireLoadMoreOnInputFocus","handleBlur","handleKeyDown","e","handlePressArrowDown","moveHighlightWithKeyboard","focus","handlePressArrowUp","handlePressEnter","selectHighlightedOptionWithKeyboard","handleCloseDropdown","handleRecoveryClick","fireLoadMoreOnRecoveryClick","selfControlId","controlId","listId","footerId","highlightedOptionIdSource","highlightedOptionId","highlightedOption","isEmpty","items","length","dropdownStatus","onRecoveryClick","hasRecoveryCallback","content","className","handleLoadMore","fireLoadMoreOnScroll","hasDropdownStatus","listBottom","isSticky","id","ariaDescribedby","root","input","ariaControls","ariaActivedescendant","dropdownExpanded","dropdownContentKey","dropdownContent","dropdownFooter","hasItems","dropdownWidth","dropdownContentFocusable","onCloseDropdown","onDelayedInput","onPressArrowDown","onPressArrowUp","onPressEnter"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/property-filter/lib/default/property-filter/property-filter-autosuggest.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { Ref, useMemo, useRef } from 'react';\n\nimport { useAutosuggestItems } from '../autosuggest/options-controller';\nimport { AutosuggestItem, AutosuggestProps } from '../autosuggest/interfaces';\n\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport DropdownFooter from '../internal/components/dropdown-footer';\n\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport {\n  fireNonCancelableEvent,\n  CancelableEventHandler,\n  NonCancelableCustomEvent,\n  BaseKeyDetail,\n} from '../internal/events';\nimport { BaseChangeDetail } from '../input/interfaces';\nimport autosuggestStyles from '../autosuggest/styles.css.js';\nimport styles from './styles.css.js';\nimport { fireCancelableEvent } from '../internal/events/index';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport AutosuggestOptionsList from '../autosuggest/options-list';\nimport { useAutosuggestLoadMore } from '../autosuggest/load-more-controller';\nimport { OptionsLoadItemsDetail } from '../internal/components/dropdown/interfaces';\nimport AutosuggestInput, { AutosuggestInputRef } from '../internal/components/autosuggest-input';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport clsx from 'clsx';\nimport { getFirstFocusable } from '../internal/components/focus-lock/utils';\nimport { filterOptions } from './filter-options';\nimport { joinStrings } from '../internal/utils/strings';\n\nconst DROPDOWN_WIDTH_OPTIONS_LIST = 300;\nconst DROPDOWN_WIDTH_CUSTOM_FORM = 200;\n\nexport interface PropertyFilterAutosuggestProps\n  extends Omit<AutosuggestProps, 'filteringResultsText'>,\n    InternalBaseComponentProps {\n  customForm?: React.ReactNode;\n  filterText?: string;\n  onOptionClick?: CancelableEventHandler<AutosuggestProps.Option>;\n  hideEnteredTextOption?: boolean;\n  searchResultsId?: string;\n}\n\nconst PropertyFilterAutosuggest = React.forwardRef(\n  (props: PropertyFilterAutosuggestProps, ref: Ref<AutosuggestInputRef>) => {\n    const {\n      value,\n      onChange,\n      onFocus,\n      onBlur,\n      onLoadItems,\n      options,\n      statusType = 'finished',\n      placeholder,\n      disabled,\n      ariaLabel,\n      enteredTextLabel,\n      onKeyDown,\n      virtualScroll,\n      expandToViewport,\n      customForm,\n      filterText,\n      onOptionClick,\n      hideEnteredTextOption,\n      searchResultsId,\n      ...rest\n    } = props;\n    const highlightText = filterText === undefined ? value : filterText;\n\n    const customFormRef = useRef<HTMLDivElement>(null);\n    const autosuggestInputRef = useRef<AutosuggestInputRef>(null);\n    const mergedRef = useMergeRefs(autosuggestInputRef, ref);\n\n    const filteredOptions = useMemo(() => filterOptions(options || [], highlightText), [options, highlightText]);\n    const [autosuggestItemsState, autosuggestItemsHandlers] = useAutosuggestItems({\n      options: filteredOptions,\n      filterValue: value,\n      filterText: highlightText,\n      filteringType: 'manual',\n      hideEnteredTextLabel: hideEnteredTextOption,\n      onSelectItem: (option: AutosuggestItem) => {\n        const value = option.value || '';\n        fireNonCancelableEvent(onChange, { value });\n        const selectedCancelled = fireCancelableEvent(onOptionClick, option);\n        if (!selectedCancelled) {\n          autosuggestInputRef.current?.close();\n        } else {\n          autosuggestItemsHandlers.resetHighlightWithKeyboard();\n        }\n      },\n    });\n\n    const autosuggestLoadMoreHandlers = useAutosuggestLoadMore({\n      options,\n      statusType,\n      onLoadItems: (detail: OptionsLoadItemsDetail) => fireNonCancelableEvent(onLoadItems, detail),\n    });\n\n    const handleChange = (event: NonCancelableCustomEvent<BaseChangeDetail>) => {\n      autosuggestItemsHandlers.resetHighlightWithKeyboard();\n      fireNonCancelableEvent(onChange, event.detail);\n    };\n\n    const handleDelayedInput = (event: NonCancelableCustomEvent<BaseChangeDetail>) => {\n      autosuggestLoadMoreHandlers.fireLoadMoreOnInputChange(event.detail.value);\n    };\n\n    const handleFocus = () => {\n      autosuggestLoadMoreHandlers.fireLoadMoreOnInputFocus();\n      fireCancelableEvent(onFocus, null);\n    };\n\n    const handleBlur = () => {\n      fireCancelableEvent(onBlur, null);\n    };\n\n    const handleKeyDown = (e: CustomEvent<BaseKeyDetail>) => {\n      fireCancelableEvent(onKeyDown, e.detail);\n    };\n\n    const handlePressArrowDown = () => {\n      autosuggestItemsHandlers.moveHighlightWithKeyboard(1);\n      if (customFormRef.current) {\n        getFirstFocusable(customFormRef.current)?.focus();\n      }\n    };\n\n    const handlePressArrowUp = () => {\n      autosuggestItemsHandlers.moveHighlightWithKeyboard(-1);\n    };\n\n    const handlePressEnter = () => {\n      return autosuggestItemsHandlers.selectHighlightedOptionWithKeyboard();\n    };\n\n    const handleCloseDropdown = () => {\n      autosuggestItemsHandlers.resetHighlightWithKeyboard();\n    };\n\n    const handleRecoveryClick = () => {\n      autosuggestLoadMoreHandlers.fireLoadMoreOnRecoveryClick();\n      autosuggestInputRef.current?.focus();\n    };\n\n    const selfControlId = useUniqueId('input');\n    const controlId = rest.controlId ?? selfControlId;\n    const listId = useUniqueId('list');\n    const footerId = useUniqueId('footer');\n    const highlightedOptionIdSource = useUniqueId();\n    const highlightedOptionId = autosuggestItemsState.highlightedOption ? highlightedOptionIdSource : undefined;\n\n    const isEmpty = !value && !autosuggestItemsState.items.length;\n    const dropdownStatus = useDropdownStatus({\n      ...props,\n      isEmpty,\n      onRecoveryClick: handleRecoveryClick,\n      hasRecoveryCallback: !!onLoadItems,\n    });\n\n    let content = null;\n    if (customForm) {\n      content = (\n        <div ref={customFormRef} className={styles['custom-content-wrapper']}>\n          {customForm}\n        </div>\n      );\n    } else if (autosuggestItemsState.items.length > 0) {\n      content = (\n        <AutosuggestOptionsList\n          statusType={statusType}\n          autosuggestItemsState={autosuggestItemsState}\n          autosuggestItemsHandlers={autosuggestItemsHandlers}\n          highlightedOptionId={highlightedOptionId}\n          highlightText={highlightText}\n          listId={listId}\n          controlId={controlId}\n          enteredTextLabel={enteredTextLabel}\n          handleLoadMore={autosuggestLoadMoreHandlers.fireLoadMoreOnScroll}\n          hasDropdownStatus={dropdownStatus.content !== null}\n          virtualScroll={virtualScroll}\n          listBottom={\n            !dropdownStatus.isSticky ? <DropdownFooter content={dropdownStatus.content} id={footerId} /> : null\n          }\n          ariaDescribedby={dropdownStatus.content ? footerId : undefined}\n        />\n      );\n    }\n\n    return (\n      <AutosuggestInput\n        ref={mergedRef}\n        {...rest}\n        className={clsx(autosuggestStyles.root, styles.input)}\n        value={value}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n        controlId={controlId}\n        placeholder={placeholder}\n        disabled={disabled}\n        ariaLabel={ariaLabel}\n        expandToViewport={expandToViewport}\n        ariaControls={listId}\n        ariaActivedescendant={highlightedOptionId}\n        ariaDescribedby={joinStrings(searchResultsId, rest.ariaDescribedby)}\n        dropdownExpanded={autosuggestItemsState.items.length > 1 || dropdownStatus.content !== null || !!customForm}\n        dropdownContentKey={customForm ? 'custom' : 'options'}\n        dropdownContent={content}\n        dropdownFooter={\n          dropdownStatus.isSticky && dropdownStatus.content ? (\n            <DropdownFooter\n              content={dropdownStatus.content}\n              hasItems={autosuggestItemsState.items.length >= 1}\n              id={footerId}\n            />\n          ) : null\n        }\n        dropdownWidth={customForm ? DROPDOWN_WIDTH_CUSTOM_FORM : DROPDOWN_WIDTH_OPTIONS_LIST}\n        dropdownContentFocusable={!!customForm}\n        onCloseDropdown={handleCloseDropdown}\n        onDelayedInput={handleDelayedInput}\n        onPressArrowDown={handlePressArrowDown}\n        onPressArrowUp={handlePressArrowUp}\n        onPressEnter={handlePressEnter}\n      />\n    );\n  }\n);\n\nexport default PropertyFilterAutosuggest;\n"]},"metadata":{},"sourceType":"module"}