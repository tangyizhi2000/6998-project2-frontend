{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { addDays, differenceInYears, isSameMonth, startOfMonth } from 'date-fns';\nexport function moveNextDay(startDate, isDateEnabled) {\n  return moveDate(startDate, isDateEnabled, 1);\n}\nexport function movePrevDay(startDate, isDateEnabled) {\n  return moveDate(startDate, isDateEnabled, -1);\n}\nexport function moveNextWeek(startDate, isDateEnabled) {\n  return moveDate(startDate, isDateEnabled, 7);\n}\nexport function movePrevWeek(startDate, isDateEnabled) {\n  return moveDate(startDate, isDateEnabled, -7);\n}\n// Returns first enabled date of the month corresponding the given date.\n// If all month's days are disabled the first day of the month is returned.\nexport function getBaseDate(date, isDateEnabled) {\n  const startDate = startOfMonth(date);\n  if (isDateEnabled(startDate)) {\n    return startDate;\n  }\n  const firstEnabledDate = moveDate(startDate, isDateEnabled, 1);\n  return isSameMonth(startDate, firstEnabledDate) ? firstEnabledDate : startDate;\n}\n// Iterates dates forwards or backwards until the next active date is found.\n// If there is no active date in a year range the start date is returned.\nfunction moveDate(startDate, isDateEnabled, step) {\n  let current = addDays(startDate, step);\n  while (!isDateEnabled(current)) {\n    if (Math.abs(differenceInYears(startDate, current)) > 1) {\n      return startDate;\n    }\n    current = addDays(current, step);\n  }\n  return current;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,OAAO,EAAEC,iBAAiB,EAAEC,WAAW,EAAEC,YAAY,QAAQ,UAAU;AAEhF,OAAM,SAAUC,WAAW,CAACC,SAAe,EAAEC,aAAsC;EACjF,OAAOC,QAAQ,CAACF,SAAS,EAAEC,aAAa,EAAE,CAAC,CAAC;AAC9C;AAEA,OAAM,SAAUE,WAAW,CAACH,SAAe,EAAEC,aAAsC;EACjF,OAAOC,QAAQ,CAACF,SAAS,EAAEC,aAAa,EAAE,CAAC,CAAC,CAAC;AAC/C;AAEA,OAAM,SAAUG,YAAY,CAACJ,SAAe,EAAEC,aAAsC;EAClF,OAAOC,QAAQ,CAACF,SAAS,EAAEC,aAAa,EAAE,CAAC,CAAC;AAC9C;AAEA,OAAM,SAAUI,YAAY,CAACL,SAAe,EAAEC,aAAsC;EAClF,OAAOC,QAAQ,CAACF,SAAS,EAAEC,aAAa,EAAE,CAAC,CAAC,CAAC;AAC/C;AAEA;AACA;AACA,OAAM,SAAUK,WAAW,CAACC,IAAU,EAAEN,aAAsC;EAC5E,MAAMD,SAAS,GAAGF,YAAY,CAACS,IAAI,CAAC;EACpC,IAAIN,aAAa,CAACD,SAAS,CAAC,EAAE;IAC5B,OAAOA,SAAS;;EAGlB,MAAMQ,gBAAgB,GAAGN,QAAQ,CAACF,SAAS,EAAEC,aAAa,EAAE,CAAC,CAAC;EAC9D,OAAOJ,WAAW,CAACG,SAAS,EAAEQ,gBAAgB,CAAC,GAAGA,gBAAgB,GAAGR,SAAS;AAChF;AAEA;AACA;AACA,SAASE,QAAQ,CAACF,SAAe,EAAEC,aAAsC,EAAEQ,IAAY;EACrF,IAAIC,OAAO,GAAGf,OAAO,CAACK,SAAS,EAAES,IAAI,CAAC;EAEtC,OAAO,CAACR,aAAa,CAACS,OAAO,CAAC,EAAE;IAC9B,IAAIC,IAAI,CAACC,GAAG,CAAChB,iBAAiB,CAACI,SAAS,EAAEU,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE;MACvD,OAAOV,SAAS;;IAElBU,OAAO,GAAGf,OAAO,CAACe,OAAO,EAAED,IAAI,CAAC;;EAGlC,OAAOC,OAAO;AAChB","names":["addDays","differenceInYears","isSameMonth","startOfMonth","moveNextDay","startDate","isDateEnabled","moveDate","movePrevDay","moveNextWeek","movePrevWeek","getBaseDate","date","firstEnabledDate","step","current","Math","abs"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/calendar/utils/lib/default/calendar/utils/navigation.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { addDays, differenceInYears, isSameMonth, startOfMonth } from 'date-fns';\n\nexport function moveNextDay(startDate: Date, isDateEnabled: (date: Date) => boolean): Date {\n  return moveDate(startDate, isDateEnabled, 1);\n}\n\nexport function movePrevDay(startDate: Date, isDateEnabled: (date: Date) => boolean): Date {\n  return moveDate(startDate, isDateEnabled, -1);\n}\n\nexport function moveNextWeek(startDate: Date, isDateEnabled: (date: Date) => boolean): Date {\n  return moveDate(startDate, isDateEnabled, 7);\n}\n\nexport function movePrevWeek(startDate: Date, isDateEnabled: (date: Date) => boolean): Date {\n  return moveDate(startDate, isDateEnabled, -7);\n}\n\n// Returns first enabled date of the month corresponding the given date.\n// If all month's days are disabled the first day of the month is returned.\nexport function getBaseDate(date: Date, isDateEnabled: (date: Date) => boolean) {\n  const startDate = startOfMonth(date);\n  if (isDateEnabled(startDate)) {\n    return startDate;\n  }\n\n  const firstEnabledDate = moveDate(startDate, isDateEnabled, 1);\n  return isSameMonth(startDate, firstEnabledDate) ? firstEnabledDate : startDate;\n}\n\n// Iterates dates forwards or backwards until the next active date is found.\n// If there is no active date in a year range the start date is returned.\nfunction moveDate(startDate: Date, isDateEnabled: (date: Date) => boolean, step: number): Date {\n  let current = addDays(startDate, step);\n\n  while (!isDateEnabled(current)) {\n    if (Math.abs(differenceInYears(startDate, current)) > 1) {\n      return startDate;\n    }\n    current = addDays(current, step);\n  }\n\n  return current;\n}\n"]},"metadata":{},"sourceType":"module"}