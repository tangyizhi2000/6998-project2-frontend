{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalIcon from '../icon/internal';\nimport styles from './styles.css.js';\nexport var Segment = React.forwardRef(function (_ref, ref) {\n  var disabled = _ref.disabled,\n    text = _ref.text,\n    iconName = _ref.iconName,\n    iconAlt = _ref.iconAlt,\n    iconUrl = _ref.iconUrl,\n    iconSvg = _ref.iconSvg,\n    isActive = _ref.isActive,\n    onClick = _ref.onClick,\n    onKeyDown = _ref.onKeyDown,\n    tabIndex = _ref.tabIndex;\n  return React.createElement(\"button\", {\n    className: clsx(styles.segment, _defineProperty({}, styles.disabled, !!disabled), _defineProperty({}, styles.selected, isActive)),\n    ref: ref,\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    disabled: disabled,\n    type: \"button\",\n    tabIndex: tabIndex,\n    \"aria-pressed\": isActive ? 'true' : 'false',\n    \"aria-label\": !text ? iconAlt : undefined\n  }, (iconName || iconUrl || iconSvg) && React.createElement(InternalIcon, {\n    className: clsx(styles.icon, text ? styles['with-text'] : styles['with-no-text']),\n    name: iconName,\n    url: iconUrl,\n    svg: iconSvg,\n    alt: iconAlt,\n    variant: disabled ? 'disabled' : 'normal'\n  }), React.createElement(\"span\", null, text));\n});","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,MAAM,MAAM,iBAAiB;AASpC,OAAO,IAAMC,OAAO,GAAGJ,KAAK,CAACK,UAAU,CACrC,gBAEEC,GAAiC,EAC/B;EAAA,IAFAC,QAAQ,QAARA,QAAQ;IAAEC,IAAI,QAAJA,IAAI;IAAEC,QAAQ,QAARA,QAAQ;IAAEC,OAAO,QAAPA,OAAO;IAAEC,OAAO,QAAPA,OAAO;IAAEC,OAAO,QAAPA,OAAO;IAAEC,QAAQ,QAARA,QAAQ;IAAEC,OAAO,QAAPA,OAAO;IAAEC,SAAS,QAATA,SAAS;IAAEC,QAAQ,QAARA,QAAQ;EAG7F,OACEhB;IACEiB,SAAS,EAAEhB,IAAI,CAACE,MAAM,CAACe,OAAO,sBAAKf,MAAM,CAACI,QAAQ,EAAG,CAAC,CAACA,QAAQ,uBAAOJ,MAAM,CAACgB,QAAQ,EAAGN,QAAQ,EAAG;IACnGP,GAAG,EAAEA,GAAG;IACRQ,OAAO,EAAEA,OAAO;IAChBC,SAAS,EAAEA,SAAS;IACpBR,QAAQ,EAAEA,QAAQ;IAClBa,IAAI,EAAC,QAAQ;IACbJ,QAAQ,EAAEA,QAAQ;IAAA,gBACJH,QAAQ,GAAG,MAAM,GAAG,OAAO;IAAA,cAC7B,CAACL,IAAI,GAAGE,OAAO,GAAGW;EAAS,GAEtC,CAACZ,QAAQ,IAAIE,OAAO,IAAIC,OAAO,KAC9BZ,oBAACE,YAAY;IACXe,SAAS,EAAEhB,IAAI,CAACE,MAAM,CAACmB,IAAI,EAAEd,IAAI,GAAGL,MAAM,CAAC,WAAW,CAAC,GAAGA,MAAM,CAAC,cAAc,CAAC,CAAC;IACjFoB,IAAI,EAAEd,QAAQ;IACde,GAAG,EAAEb,OAAO;IACZc,GAAG,EAAEb,OAAO;IACZc,GAAG,EAAEhB,OAAO;IACZiB,OAAO,EAAEpB,QAAQ,GAAG,UAAU,GAAG;EAAQ,EAE5C,EACDP,kCAAOQ,IAAI,CAAQ,CACZ;AAEb,CAAC,CACF","names":["React","clsx","InternalIcon","styles","Segment","forwardRef","ref","disabled","text","iconName","iconAlt","iconUrl","iconSvg","isActive","onClick","onKeyDown","tabIndex","className","segment","selected","type","undefined","icon","name","url","svg","alt","variant"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/segmented-control/lib/default/segmented-control/segment.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { SegmentedControlProps } from './interfaces';\nimport InternalIcon from '../icon/internal';\nimport styles from './styles.css.js';\n\nexport interface SegmentProps extends SegmentedControlProps.Option {\n  onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  onKeyDown: (event: React.KeyboardEvent<HTMLButtonElement>) => void;\n  isActive: boolean;\n  tabIndex: number;\n}\n\nexport const Segment = React.forwardRef(\n  (\n    { disabled, text, iconName, iconAlt, iconUrl, iconSvg, isActive, onClick, onKeyDown, tabIndex }: SegmentProps,\n    ref: React.Ref<HTMLButtonElement>\n  ) => {\n    return (\n      <button\n        className={clsx(styles.segment, { [styles.disabled]: !!disabled }, { [styles.selected]: isActive })}\n        ref={ref}\n        onClick={onClick}\n        onKeyDown={onKeyDown}\n        disabled={disabled}\n        type=\"button\"\n        tabIndex={tabIndex}\n        aria-pressed={isActive ? 'true' : 'false'}\n        aria-label={!text ? iconAlt : undefined}\n      >\n        {(iconName || iconUrl || iconSvg) && (\n          <InternalIcon\n            className={clsx(styles.icon, text ? styles['with-text'] : styles['with-no-text'])}\n            name={iconName}\n            url={iconUrl}\n            svg={iconSvg}\n            alt={iconAlt}\n            variant={disabled ? 'disabled' : 'normal'}\n          />\n        )}\n        <span>{text}</span>\n      </button>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}