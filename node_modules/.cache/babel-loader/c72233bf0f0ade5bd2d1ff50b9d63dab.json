{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PACKAGE_SOURCE, PACKAGE_VERSION } from '../../internal/environment';\nimport { Metrics } from '@cloudscape-design/component-toolkit/internal';\nimport { getFlashTypeCount } from '../utils';\nconst metrics = new Metrics(PACKAGE_SOURCE, PACKAGE_VERSION);\nconst eventContext = 'csa_flashbar';\nexport const sendRenderMetric = items => {\n  const countByType = getFlashTypeCount(items);\n  metrics.sendPanoramaMetric({\n    eventContext,\n    eventType: 'render',\n    eventValue: items.length.toString(),\n    eventDetail: countByType\n  });\n};\nexport const sendToggleMetric = (itemsCount, expanded) => {\n  metrics.sendPanoramaMetric({\n    eventContext,\n    eventType: expanded ? 'expand' : 'collapse',\n    eventValue: itemsCount.toString()\n  });\n};\nexport const sendDismissMetric = itemType => {\n  metrics.sendPanoramaMetric({\n    eventContext,\n    eventType: 'dismiss',\n    eventValue: itemType\n  });\n};","map":{"version":3,"mappings":"AAAA;AACA;AAEA,SAASA,cAAc,EAAEC,eAAe,QAAQ,4BAA4B;AAC5E,SAASC,OAAO,QAAQ,+CAA+C;AAEvE,SAASC,iBAAiB,QAAQ,UAAU;AAE5C,MAAMC,OAAO,GAAG,IAAIF,OAAO,CAACF,cAAc,EAAEC,eAAe,CAAC;AAC5D,MAAMI,YAAY,GAAG,cAAc;AAEnC,OAAO,MAAMC,gBAAgB,GAAIC,KAA6B,IAAI;EAChE,MAAMC,WAAW,GAAGL,iBAAiB,CAACI,KAAK,CAAC;EAE5CH,OAAO,CAACK,kBAAkB,CAAC;IACzBJ,YAAY;IACZK,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAEJ,KAAK,CAACK,MAAM,CAACC,QAAQ,EAAE;IACnCC,WAAW,EAAEN;GACd,CAAC;AACJ,CAAC;AAED,OAAO,MAAMO,gBAAgB,GAAG,CAACC,UAAkB,EAAEC,QAAiB,KAAI;EACxEb,OAAO,CAACK,kBAAkB,CAAC;IACzBJ,YAAY;IACZK,SAAS,EAAEO,QAAQ,GAAG,QAAQ,GAAG,UAAU;IAC3CN,UAAU,EAAEK,UAAU,CAACH,QAAQ;GAChC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMK,iBAAiB,GAAIC,QAAgB,IAAI;EACpDf,OAAO,CAACK,kBAAkB,CAAC;IACzBJ,YAAY;IACZK,SAAS,EAAE,SAAS;IACpBC,UAAU,EAAEQ;GACb,CAAC;AACJ,CAAC","names":["PACKAGE_SOURCE","PACKAGE_VERSION","Metrics","getFlashTypeCount","metrics","eventContext","sendRenderMetric","items","countByType","sendPanoramaMetric","eventType","eventValue","length","toString","eventDetail","sendToggleMetric","itemsCount","expanded","sendDismissMetric","itemType"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/flashbar/internal/lib/default/flashbar/internal/analytics.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { PACKAGE_SOURCE, PACKAGE_VERSION } from '../../internal/environment';\nimport { Metrics } from '@cloudscape-design/component-toolkit/internal';\nimport { FlashbarProps } from '../interfaces';\nimport { getFlashTypeCount } from '../utils';\n\nconst metrics = new Metrics(PACKAGE_SOURCE, PACKAGE_VERSION);\nconst eventContext = 'csa_flashbar';\n\nexport const sendRenderMetric = (items: FlashbarProps['items']) => {\n  const countByType = getFlashTypeCount(items);\n\n  metrics.sendPanoramaMetric({\n    eventContext,\n    eventType: 'render',\n    eventValue: items.length.toString(),\n    eventDetail: countByType,\n  });\n};\n\nexport const sendToggleMetric = (itemsCount: number, expanded: boolean) => {\n  metrics.sendPanoramaMetric({\n    eventContext,\n    eventType: expanded ? 'expand' : 'collapse',\n    eventValue: itemsCount.toString(),\n  });\n};\n\nexport const sendDismissMetric = (itemType: string) => {\n  metrics.sendPanoramaMetric({\n    eventContext,\n    eventType: 'dismiss',\n    eventValue: itemType,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}