{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport ChartPopover from '../internal/components/chart-popover';\nimport ChartSeriesDetails from '../internal/components/chart-series-details';\nimport InternalBox from '../box/internal';\nimport styles from './styles.css.js';\nimport { Transition } from '../internal/components/transition';\nexport default React.forwardRef(MixedChartPopover);\nfunction MixedChartPopover(_ref, popoverRef) {\n  var containerRef = _ref.containerRef,\n    trackRef = _ref.trackRef,\n    isOpen = _ref.isOpen,\n    isPinned = _ref.isPinned,\n    highlightDetails = _ref.highlightDetails,\n    footer = _ref.footer,\n    onDismiss = _ref.onDismiss,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'medium' : _ref$size,\n    dismissAriaLabel = _ref.dismissAriaLabel,\n    onMouseEnter = _ref.onMouseEnter,\n    onMouseLeave = _ref.onMouseLeave;\n  return React.createElement(Transition, {\n    in: isOpen\n  }, function (state, ref) {\n    return React.createElement(\"div\", {\n      ref: ref,\n      className: clsx(state === 'exiting' && styles.exiting)\n    }, (isOpen || state !== 'exited') && highlightDetails && React.createElement(ChartPopover, {\n      ref: popoverRef,\n      title: highlightDetails.position,\n      trackRef: trackRef,\n      trackKey: highlightDetails.position,\n      dismissButton: isPinned,\n      dismissAriaLabel: dismissAriaLabel,\n      onDismiss: onDismiss,\n      container: containerRef.current,\n      size: size,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave\n    }, React.createElement(ChartSeriesDetails, {\n      details: highlightDetails.details\n    }), footer && React.createElement(InternalBox, {\n      margin: {\n        top: 's'\n      }\n    }, footer)));\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,kBAAkB,MAAM,6CAA6C;AAC5E,OAAOC,WAAW,MAAM,iBAAiB;AAGzC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,UAAU,QAAQ,mCAAmC;AAiB9D,eAAeN,KAAK,CAACO,UAAU,CAACC,iBAAiB,CAAC;AAElD,SAASA,iBAAiB,OAcxBC,UAAkC;EAAA,IAZhCC,YAAY,QAAZA,YAAY;IACZC,QAAQ,QAARA,QAAQ;IACRC,MAAM,QAANA,MAAM;IACNC,QAAQ,QAARA,QAAQ;IACRC,gBAAgB,QAAhBA,gBAAgB;IAChBC,MAAM,QAANA,MAAM;IACNC,SAAS,QAATA,SAAS;IAAA,iBACTC,IAAI;IAAJA,IAAI,0BAAG,QAAQ;IACfC,gBAAgB,QAAhBA,gBAAgB;IAChBC,YAAY,QAAZA,YAAY;IACZC,YAAY,QAAZA,YAAY;EAId,OACEpB,oBAACM,UAAU;IAACe,EAAE,EAAET;EAAM,GACnB,UAACU,KAAK,EAAEC,GAAG;IAAA,OACVvB;MAAKuB,GAAG,EAAEA,GAAG;MAAEC,SAAS,EAAEvB,IAAI,CAACqB,KAAK,KAAK,SAAS,IAAIjB,MAAM,CAACoB,OAAO;IAAC,GAClE,CAACb,MAAM,IAAIU,KAAK,KAAK,QAAQ,KAAKR,gBAAgB,IACjDd,oBAACE,YAAY;MACXqB,GAAG,EAAEd,UAAU;MACfiB,KAAK,EAAEZ,gBAAgB,CAACa,QAAQ;MAChChB,QAAQ,EAAEA,QAAQ;MAClBiB,QAAQ,EAAEd,gBAAgB,CAACa,QAAQ;MACnCE,aAAa,EAAEhB,QAAQ;MACvBK,gBAAgB,EAAEA,gBAAgB;MAClCF,SAAS,EAAEA,SAAS;MACpBc,SAAS,EAAEpB,YAAY,CAACqB,OAAO;MAC/Bd,IAAI,EAAEA,IAAI;MACVE,YAAY,EAAEA,YAAY;MAC1BC,YAAY,EAAEA;IAAY,GAE1BpB,oBAACG,kBAAkB;MAAC6B,OAAO,EAAElB,gBAAgB,CAACkB;IAAO,EAAI,EACxDjB,MAAM,IAAIf,oBAACI,WAAW;MAAC6B,MAAM,EAAE;QAAEC,GAAG,EAAE;MAAG;IAAE,GAAGnB,MAAM,CAAe,CAEvE,CACG;EAAA,CACP,CACU;AAEjB","names":["React","clsx","ChartPopover","ChartSeriesDetails","InternalBox","styles","Transition","forwardRef","MixedChartPopover","popoverRef","containerRef","trackRef","isOpen","isPinned","highlightDetails","footer","onDismiss","size","dismissAriaLabel","onMouseEnter","onMouseLeave","in","state","ref","className","exiting","title","position","trackKey","dismissButton","container","current","details","margin","top"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/mixed-line-bar-chart/lib/default/mixed-line-bar-chart/chart-popover.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport ChartPopover from '../internal/components/chart-popover';\nimport ChartSeriesDetails from '../internal/components/chart-series-details';\nimport InternalBox from '../box/internal';\nimport { ChartDataTypes, MixedLineBarChartProps } from './interfaces';\n\nimport styles from './styles.css.js';\nimport { Transition } from '../internal/components/transition';\nimport { HighlightDetails } from './format-highlighted';\n\nexport interface MixedChartPopoverProps<T extends ChartDataTypes> {\n  containerRef: React.RefObject<HTMLDivElement>;\n  trackRef: React.RefObject<SVGElement>;\n  isOpen: boolean;\n  isPinned: boolean;\n  highlightDetails: null | HighlightDetails;\n  onDismiss(): void;\n  size: MixedLineBarChartProps<T>['detailPopoverSize'];\n  footer?: React.ReactNode;\n  dismissAriaLabel?: string;\n  onMouseEnter?: (event: React.MouseEvent) => void;\n  onMouseLeave?: (event: React.MouseEvent) => void;\n}\n\nexport default React.forwardRef(MixedChartPopover);\n\nfunction MixedChartPopover<T extends ChartDataTypes>(\n  {\n    containerRef,\n    trackRef,\n    isOpen,\n    isPinned,\n    highlightDetails,\n    footer,\n    onDismiss,\n    size = 'medium',\n    dismissAriaLabel,\n    onMouseEnter,\n    onMouseLeave,\n  }: MixedChartPopoverProps<T>,\n  popoverRef: React.Ref<HTMLElement>\n) {\n  return (\n    <Transition in={isOpen}>\n      {(state, ref) => (\n        <div ref={ref} className={clsx(state === 'exiting' && styles.exiting)}>\n          {(isOpen || state !== 'exited') && highlightDetails && (\n            <ChartPopover\n              ref={popoverRef}\n              title={highlightDetails.position}\n              trackRef={trackRef}\n              trackKey={highlightDetails.position}\n              dismissButton={isPinned}\n              dismissAriaLabel={dismissAriaLabel}\n              onDismiss={onDismiss}\n              container={containerRef.current}\n              size={size}\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n            >\n              <ChartSeriesDetails details={highlightDetails.details} />\n              {footer && <InternalBox margin={{ top: 's' }}>{footer}</InternalBox>}\n            </ChartPopover>\n          )}\n        </div>\n      )}\n    </Transition>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}