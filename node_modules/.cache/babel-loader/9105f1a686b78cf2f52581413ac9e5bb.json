{"ast":null,"code":"import _toConsumableArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var Listeners = /*#__PURE__*/function () {\n  function Listeners(target) {\n    var _this = this;\n    _classCallCheck(this, Listeners);\n    this.target = target;\n    this.listeners = [];\n    this.removeAll = function () {\n      _this.listeners.forEach(function (listener) {\n        var _a2;\n        var _a;\n        return (_a = _this.target) === null || _a === void 0 ? void 0 : (_a2 = _a).removeEventListener.apply(_a2, _toConsumableArray(listener));\n      });\n    };\n  }\n  _createClass(Listeners, [{\n    key: \"add\",\n    value: function add(eventName, handler, options) {\n      var _a;\n      (_a = this.target) === null || _a === void 0 ? void 0 : _a.addEventListener(eventName, handler, options);\n      this.listeners.push([eventName, handler, options]);\n    }\n  }]);\n  return Listeners;\n}();","map":{"version":3,"mappings":";;;AAAA;AACA;AACA,WAAaA,SAAS;EAGpB,mBAAoBC,MAA0B;IAAA;IAAA;IAA1B,WAAM,GAANA,MAAM;IAFlB,cAAS,GAAkG,EAAE;IAa9G,cAAS,GAAG,YAAK;MACtB,KAAI,CAACC,SAAS,CAACC,OAAO,CAAC,kBAAQ,EAAG;QAAA;QAAA;QAAC,kBAAI,CAACF,MAAM,kDAAEG,mBAAmB,+BAAIC,QAAQ,EAAC;MAAA,EAAC;IACnF,CAAC;EAbgD;EAAC;IAAA;IAAA,OAE3C,aACLC,SAAiB,EACjBC,OAA2B,EAC3BC,OAA2C;;MAE3C,UAAI,CAACP,MAAM,0CAAEQ,gBAAgB,CAACH,SAAS,EAAEC,OAAwB,EAAEC,OAAO,CAAC;MAC3E,IAAI,CAACN,SAAS,CAACQ,IAAI,CAAC,CAACJ,SAAS,EAAEC,OAAwB,EAAEC,OAAO,CAAC,CAAC;IACrE;EAAC;EAAA;AAAA","names":["Listeners","target","listeners","forEach","removeEventListener","listener","eventName","handler","options","addEventListener","push"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/collection-preferences/content-display/keyboard-sensor/utilities/lib/default/collection-preferences/content-display/keyboard-sensor/utilities/listeners.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport class Listeners {\n  private listeners: [string, EventListenerOrEventListenerObject, AddEventListenerOptions | boolean | undefined][] = [];\n\n  constructor(private target: EventTarget | null) {}\n\n  public add<T extends Event>(\n    eventName: string,\n    handler: (event: T) => void,\n    options?: AddEventListenerOptions | boolean\n  ) {\n    this.target?.addEventListener(eventName, handler as EventListener, options);\n    this.listeners.push([eventName, handler as EventListener, options]);\n  }\n\n  public removeAll = () => {\n    this.listeners.forEach(listener => this.target?.removeEventListener(...listener));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}