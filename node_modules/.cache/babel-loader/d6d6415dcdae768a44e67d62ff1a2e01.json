{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst BYTES_BASE = 1024;\nconst BYTES_DECIMALS = 2;\nconst BYTES_SIZES = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nexport function formatDefault(value) {\n  return value ? value : '-';\n}\nexport function formatSize(bytes) {\n  if (bytes === undefined) {\n    return '-';\n  }\n  if (bytes === 0) {\n    return `0 ${BYTES_SIZES[0]}`;\n  }\n  const i = Math.floor(Math.log(bytes) / Math.log(BYTES_BASE));\n  return parseFloat((bytes / Math.pow(BYTES_BASE, i)).toFixed(BYTES_DECIMALS)) + ' ' + BYTES_SIZES[i];\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,MAAMA,UAAU,GAAG,IAAI;AACvB,MAAMC,cAAc,GAAG,CAAC;AACxB,MAAMC,WAAW,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAE7E,OAAM,SAAUC,aAAa,CAACC,KAAyB;EACrD,OAAOA,KAAK,GAAGA,KAAK,GAAG,GAAG;AAC5B;AAEA,OAAM,SAAUC,UAAU,CAACC,KAAyB;EAClD,IAAIA,KAAK,KAAKC,SAAS,EAAE;IACvB,OAAO,GAAG;;EAEZ,IAAID,KAAK,KAAK,CAAC,EAAE;IACf,OAAO,KAAKJ,WAAW,CAAC,CAAC,CAAC,EAAE;;EAE9B,MAAMM,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACL,KAAK,CAAC,GAAGG,IAAI,CAACE,GAAG,CAACX,UAAU,CAAC,CAAC;EAC5D,OAAOY,UAAU,CAAC,CAACN,KAAK,GAAGG,IAAI,CAACI,GAAG,CAACb,UAAU,EAAEQ,CAAC,CAAC,EAAEM,OAAO,CAACb,cAAc,CAAC,CAAC,GAAG,GAAG,GAAGC,WAAW,CAACM,CAAC,CAAC;AACrG","names":["BYTES_BASE","BYTES_DECIMALS","BYTES_SIZES","formatDefault","value","formatSize","bytes","undefined","i","Math","floor","log","parseFloat","pow","toFixed"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/lib/default/s3-resource-selector/s3-modal/column-formats.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst BYTES_BASE = 1024;\nconst BYTES_DECIMALS = 2;\nconst BYTES_SIZES = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\nexport function formatDefault(value: string | undefined) {\n  return value ? value : '-';\n}\n\nexport function formatSize(bytes: number | undefined) {\n  if (bytes === undefined) {\n    return '-';\n  }\n  if (bytes === 0) {\n    return `0 ${BYTES_SIZES[0]}`;\n  }\n  const i = Math.floor(Math.log(bytes) / Math.log(BYTES_BASE));\n  return parseFloat((bytes / Math.pow(BYTES_BASE, i)).toFixed(BYTES_DECIMALS)) + ' ' + BYTES_SIZES[i];\n}\n"]},"metadata":{},"sourceType":"module"}