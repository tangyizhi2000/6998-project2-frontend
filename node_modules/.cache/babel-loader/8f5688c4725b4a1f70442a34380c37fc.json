{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo, useRef, useState, forwardRef } from 'react';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { getBaseProps } from '../internal/base-component';\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { Pane } from './pane';\nimport { useChangeEffect } from './listeners';\nimport { DEFAULT_DARK_THEME, DEFAULT_LIGHT_THEME, getLanguageLabel } from './util';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { setupEditor } from './setup-editor';\nimport { ResizableBox } from './resizable-box';\nimport PreferencesModal from './preferences-modal';\nimport LoadingScreen from './loading-screen';\nimport ErrorScreen from './error-screen';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { useCurrentMode } from '@cloudscape-design/component-toolkit/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { StatusBar } from './status-bar';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport LiveRegion from '../internal/components/live-region';\nimport styles from './styles.css.js';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { useEditor, useSyncEditorSize, useSyncEditorLabels, useSyncEditorValue, useSyncEditorLanguage, useSyncEditorWrapLines, useSyncEditorTheme } from './use-editor';\nvar CodeEditor = forwardRef(function (props, ref) {\n  var _a;\n  var _useBaseComponent = useBaseComponent('CodeEditor'),\n    __internalRootRef = _useBaseComponent.__internalRootRef;\n  var _useFormFieldContext = useFormFieldContext(props),\n    controlId = _useFormFieldContext.controlId,\n    ariaLabelledby = _useFormFieldContext.ariaLabelledby,\n    ariaDescribedby = _useFormFieldContext.ariaDescribedby;\n  var ace = props.ace,\n    value = props.value,\n    language = props.language,\n    i18nStrings = props.i18nStrings,\n    editorContentHeight = props.editorContentHeight,\n    onEditorContentResize = props.onEditorContentResize,\n    ariaLabel = props.ariaLabel,\n    customLanguageLabel = props.languageLabel,\n    preferences = props.preferences,\n    loading = props.loading,\n    themes = props.themes,\n    rest = __rest(props, [\"ace\", \"value\", \"language\", \"i18nStrings\", \"editorContentHeight\", \"onEditorContentResize\", \"ariaLabel\", \"languageLabel\", \"preferences\", \"loading\", \"themes\"]);\n  var _useControllable = useControllable(editorContentHeight, onEditorContentResize, 480, {\n      componentName: 'code-editor',\n      changeHandler: 'onEditorContentResize',\n      controlledProp: 'editorContentHeight'\n    }),\n    _useControllable2 = _slicedToArray(_useControllable, 2),\n    _useControllable2$ = _useControllable2[0],\n    editorHeight = _useControllable2$ === void 0 ? 480 : _useControllable2$,\n    setEditorHeight = _useControllable2[1];\n  var mode = useCurrentMode(__internalRootRef);\n  var isRefresh = useVisualRefresh();\n  var baseProps = getBaseProps(rest);\n  var i18n = useInternalI18n('code-editor');\n  var errorsTabRef = useRef(null);\n  var warningsTabRef = useRef(null);\n  var _useContainerQuery = useContainerQuery(function (rect) {\n      return rect.contentBoxWidth;\n    }),\n    _useContainerQuery2 = _slicedToArray(_useContainerQuery, 2),\n    codeEditorWidth = _useContainerQuery2[0],\n    codeEditorMeasureRef = _useContainerQuery2[1];\n  var mergedRef = useMergeRefs(codeEditorMeasureRef, __internalRootRef);\n  var paneId = useUniqueId('code-editor-pane');\n  var _useState = useState('hidden'),\n    _useState2 = _slicedToArray(_useState, 2),\n    paneStatus = _useState2[0],\n    setPaneStatus = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    annotations = _useState4[0],\n    setAnnotations = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    highlightedAnnotation = _useState6[0],\n    setHighlightedAnnotation = _useState6[1];\n  var _useState7 = useState({\n      row: 0,\n      column: 0\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    cursorPosition = _useState8[0],\n    setCursorPosition = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isTabFocused = _useState10[0],\n    setTabFocused = _useState10[1];\n  var _useEditor = useEditor(ace, loading),\n    editorRef = _useEditor.editorRef,\n    editor = _useEditor.editor;\n  useForwardFocus(ref, editorRef);\n  useEffect(function () {\n    if (!ace || !editor) {\n      return;\n    }\n    setupEditor(ace, editor, setAnnotations, setCursorPosition, setHighlightedAnnotation, setPaneStatus);\n    return function () {\n      editor === null || editor === void 0 ? void 0 : editor.destroy();\n    };\n  }, [ace, editor]);\n  useSyncEditorLabels(editor, {\n    controlId: controlId,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby\n  });\n  var _useSyncEditorSize = useSyncEditorSize(editor, {\n      width: codeEditorWidth,\n      height: editorContentHeight\n    }),\n    _onResize = _useSyncEditorSize.onResize;\n  useSyncEditorValue(editor, value);\n  useSyncEditorLanguage(editor, language);\n  useSyncEditorWrapLines(editor, preferences === null || preferences === void 0 ? void 0 : preferences.wrapLines);\n  var defaultTheme = mode === 'dark' ? DEFAULT_DARK_THEME : DEFAULT_LIGHT_THEME;\n  useSyncEditorTheme(editor, (_a = preferences === null || preferences === void 0 ? void 0 : preferences.theme) !== null && _a !== void 0 ? _a : defaultTheme);\n  // Change listeners\n  useChangeEffect(editor, props.onChange, props.onDelayedChange);\n  // Hide error panel when there are no errors to show.\n  useEffect(function () {\n    if (annotations.length === 0) {\n      setPaneStatus('hidden');\n    }\n    if (props.onValidate) {\n      fireNonCancelableEvent(props.onValidate, {\n        annotations: annotations\n      });\n    }\n  }, [annotations, props.onValidate]);\n  var languageLabel = customLanguageLabel !== null && customLanguageLabel !== void 0 ? customLanguageLabel : getLanguageLabel(language);\n  var errorCount = annotations.filter(function (a) {\n    return a.type === 'error';\n  }).length;\n  var warningCount = annotations.filter(function (a) {\n    return a.type === 'warning';\n  }).length;\n  var currentAnnotations = useMemo(function () {\n    return annotations.filter(function (a) {\n      return a.type === paneStatus;\n    });\n  }, [annotations, paneStatus]);\n  /*\n   * Callbacks\n   */\n  var onEditorKeydown = useCallback(function (e) {\n    if (editor && e.target === editor.container && e.keyCode === KeyCode.enter) {\n      e.stopPropagation();\n      e.preventDefault();\n      editor.focus();\n    }\n  }, [editor]);\n  var onTabFocus = useCallback(function () {\n    return setTabFocused(true);\n  }, []);\n  var onTabBlur = useCallback(function () {\n    return setTabFocused(false);\n  }, []);\n  var onErrorPaneToggle = useCallback(function () {\n    setPaneStatus(paneStatus !== 'error' ? 'error' : 'hidden');\n  }, [paneStatus]);\n  var onWarningPaneToggle = useCallback(function () {\n    setPaneStatus(paneStatus !== 'warning' ? 'warning' : 'hidden');\n  }, [paneStatus]);\n  var onPaneClose = function onPaneClose() {\n    setPaneStatus('hidden');\n  };\n  var onAnnotationClick = function onAnnotationClick(_ref) {\n    var _ref$row = _ref.row,\n      row = _ref$row === void 0 ? 0 : _ref$row,\n      _ref$column = _ref.column,\n      column = _ref$column === void 0 ? 0 : _ref$column;\n    if (!editor) {\n      return;\n    }\n    editor.focus();\n    editor.gotoLine(row + 1, column, false);\n    setHighlightedAnnotation(undefined);\n  };\n  var onAnnotationClear = useCallback(function () {\n    setHighlightedAnnotation(undefined);\n  }, []);\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isPreferencesModalVisible = _useState12[0],\n    setPreferencesModalVisible = _useState12[1];\n  var onPreferencesOpen = function onPreferencesOpen() {\n    return setPreferencesModalVisible(true);\n  };\n  var onPreferencesConfirm = function onPreferencesConfirm(p) {\n    fireNonCancelableEvent(props.onPreferencesChange, p);\n    setPreferencesModalVisible(false);\n  };\n  var onPreferencesDismiss = function onPreferencesDismiss() {\n    return setPreferencesModalVisible(false);\n  };\n  var isPaneVisible = paneStatus !== 'hidden';\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(styles['code-editor'], baseProps.className, _defineProperty({}, styles['code-editor-refresh'], isRefresh)),\n    ref: mergedRef\n  }), loading && React.createElement(LoadingScreen, null, React.createElement(LiveRegion, {\n    visible: true\n  }, i18n('i18nStrings.loadingState', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.loadingState))), !ace && !loading && React.createElement(ErrorScreen, {\n    recoveryText: i18n('i18nStrings.errorStateRecovery', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorStateRecovery),\n    onRecoveryClick: props.onRecoveryClick\n  }, i18n('i18nStrings.errorState', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorState)), ace && !loading && React.createElement(React.Fragment, null, React.createElement(ResizableBox, {\n    height: Math.max(editorHeight, 20),\n    minHeight: 20,\n    onResize: function onResize(height) {\n      setEditorHeight(height);\n      _onResize();\n      fireNonCancelableEvent(onEditorContentResize, {\n        height: height\n      });\n    }\n  }, React.createElement(\"div\", {\n    ref: editorRef,\n    className: clsx(styles.editor, styles.ace, isRefresh && styles['editor-refresh']),\n    onKeyDown: onEditorKeydown,\n    tabIndex: 0,\n    role: \"group\",\n    \"aria-label\": i18n('i18nStrings.editorGroupAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.editorGroupAriaLabel)\n  })), React.createElement(\"div\", {\n    role: \"group\",\n    \"aria-label\": i18n('i18nStrings.statusBarGroupAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.statusBarGroupAriaLabel)\n  }, React.createElement(StatusBar, {\n    languageLabel: languageLabel,\n    cursorPosition: i18n('i18nStrings.cursorPosition', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.cursorPosition(cursorPosition.row + 1, cursorPosition.column + 1), function (format) {\n      return format({\n        row: cursorPosition.row + 1,\n        column: cursorPosition.column + 1\n      });\n    }),\n    errorCount: errorCount,\n    warningCount: warningCount,\n    paneStatus: paneStatus,\n    onErrorPaneToggle: onErrorPaneToggle,\n    onWarningPaneToggle: onWarningPaneToggle,\n    onTabFocus: onTabFocus,\n    onTabBlur: onTabBlur,\n    errorsTabRef: errorsTabRef,\n    warningsTabRef: warningsTabRef,\n    i18nStrings: i18nStrings,\n    isTabFocused: isTabFocused,\n    paneId: isPaneVisible ? paneId : undefined,\n    onPreferencesOpen: onPreferencesOpen,\n    isRefresh: isRefresh\n  }), React.createElement(Pane, {\n    id: paneId,\n    visible: isPaneVisible,\n    annotations: currentAnnotations,\n    highlighted: highlightedAnnotation,\n    onAnnotationClick: onAnnotationClick,\n    onAnnotationClear: onAnnotationClear,\n    onClose: onPaneClose,\n    cursorPositionLabel: i18n('i18nStrings.cursorPosition', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.cursorPosition, function (format) {\n      return function (row, column) {\n        return format({\n          row: row,\n          column: column\n        });\n      };\n    }),\n    closeButtonAriaLabel: i18n('i18nStrings.paneCloseButtonAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.paneCloseButtonAriaLabel)\n  })), isPreferencesModalVisible && React.createElement(PreferencesModal, {\n    onConfirm: onPreferencesConfirm,\n    onDismiss: onPreferencesDismiss,\n    themes: themes,\n    preferences: preferences,\n    defaultTheme: defaultTheme,\n    i18nStrings: {\n      header: i18n('i18nStrings.preferencesModalHeader', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalHeader),\n      cancel: i18n('i18nStrings.preferencesModalCancel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalCancel),\n      confirm: i18n('i18nStrings.preferencesModalConfirm', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalConfirm),\n      wrapLines: i18n('i18nStrings.preferencesModalWrapLines', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalWrapLines),\n      theme: i18n('i18nStrings.preferencesModalTheme', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalTheme),\n      lightThemes: i18n('i18nStrings.preferencesModalLightThemes', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalLightThemes),\n      darkThemes: i18n('i18nStrings.preferencesModalDarkThemes', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalDarkThemes),\n      themeFilteringAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalThemeFilteringAriaLabel,\n      themeFilteringClearAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalThemeFilteringClearAriaLabel,\n      themeFilteringPlaceholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalThemeFilteringPlaceholder\n    }\n  })));\n});\napplyDisplayName(CodeEditor, 'CodeEditor');\nexport default CodeEditor;","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useMemo","useRef","useState","forwardRef","clsx","useMergeRefs","getBaseProps","KeyCode","useUniqueId","Pane","useChangeEffect","DEFAULT_DARK_THEME","DEFAULT_LIGHT_THEME","getLanguageLabel","fireNonCancelableEvent","setupEditor","ResizableBox","PreferencesModal","LoadingScreen","ErrorScreen","useBaseComponent","useForwardFocus","applyDisplayName","useCurrentMode","useInternalI18n","StatusBar","useFormFieldContext","useVisualRefresh","useControllable","LiveRegion","styles","useContainerQuery","useEditor","useSyncEditorSize","useSyncEditorLabels","useSyncEditorValue","useSyncEditorLanguage","useSyncEditorWrapLines","useSyncEditorTheme","CodeEditor","props","ref","__internalRootRef","controlId","ariaLabelledby","ariaDescribedby","ace","value","language","i18nStrings","editorContentHeight","onEditorContentResize","ariaLabel","customLanguageLabel","languageLabel","preferences","loading","themes","rest","componentName","changeHandler","controlledProp","editorHeight","setEditorHeight","mode","isRefresh","baseProps","i18n","errorsTabRef","warningsTabRef","rect","contentBoxWidth","codeEditorWidth","codeEditorMeasureRef","mergedRef","paneId","paneStatus","setPaneStatus","annotations","setAnnotations","highlightedAnnotation","setHighlightedAnnotation","row","column","cursorPosition","setCursorPosition","isTabFocused","setTabFocused","editorRef","editor","destroy","width","height","onResize","wrapLines","defaultTheme","theme","onChange","onDelayedChange","length","onValidate","errorCount","filter","a","type","warningCount","currentAnnotations","onEditorKeydown","e","target","container","keyCode","enter","stopPropagation","preventDefault","focus","onTabFocus","onTabBlur","onErrorPaneToggle","onWarningPaneToggle","onPaneClose","onAnnotationClick","gotoLine","undefined","onAnnotationClear","isPreferencesModalVisible","setPreferencesModalVisible","onPreferencesOpen","onPreferencesConfirm","p","onPreferencesChange","onPreferencesDismiss","isPaneVisible","className","visible","loadingState","recoveryText","errorStateRecovery","onRecoveryClick","errorState","Math","max","minHeight","onKeyDown","tabIndex","role","editorGroupAriaLabel","statusBarGroupAriaLabel","format","id","highlighted","onClose","cursorPositionLabel","closeButtonAriaLabel","paneCloseButtonAriaLabel","onConfirm","onDismiss","header","preferencesModalHeader","cancel","preferencesModalCancel","confirm","preferencesModalConfirm","preferencesModalWrapLines","preferencesModalTheme","lightThemes","preferencesModalLightThemes","darkThemes","preferencesModalDarkThemes","themeFilteringAriaLabel","preferencesModalThemeFilteringAriaLabel","themeFilteringClearAriaLabel","preferencesModalThemeFilteringClearAriaLabel","themeFilteringPlaceholder","preferencesModalThemeFilteringPlaceholder"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/code-editor/lib/default/code-editor/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo, useRef, useState, forwardRef } from 'react';\nimport { Ace } from 'ace-builds';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { CodeEditorProps } from './interfaces';\nimport { Pane } from './pane';\nimport { useChangeEffect } from './listeners';\nimport { DEFAULT_DARK_THEME, DEFAULT_LIGHT_THEME, PaneStatus, getLanguageLabel } from './util';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { setupEditor } from './setup-editor';\nimport { ResizableBox } from './resizable-box';\nimport PreferencesModal from './preferences-modal';\nimport LoadingScreen from './loading-screen';\nimport ErrorScreen from './error-screen';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { useCurrentMode } from '@cloudscape-design/component-toolkit/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { StatusBar } from './status-bar';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport LiveRegion from '../internal/components/live-region';\n\nimport styles from './styles.css.js';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport {\n  useEditor,\n  useSyncEditorSize,\n  useSyncEditorLabels,\n  useSyncEditorValue,\n  useSyncEditorLanguage,\n  useSyncEditorWrapLines,\n  useSyncEditorTheme,\n} from './use-editor';\n\nexport { CodeEditorProps };\n\nconst CodeEditor = forwardRef((props: CodeEditorProps, ref: React.Ref<CodeEditorProps.Ref>) => {\n  const { __internalRootRef } = useBaseComponent('CodeEditor');\n  const { controlId, ariaLabelledby, ariaDescribedby } = useFormFieldContext(props);\n  const {\n    ace,\n    value,\n    language,\n    i18nStrings,\n    editorContentHeight,\n    onEditorContentResize,\n    ariaLabel,\n    languageLabel: customLanguageLabel,\n    preferences,\n    loading,\n    themes,\n    ...rest\n  } = props;\n  const [editorHeight = 480, setEditorHeight] = useControllable(editorContentHeight, onEditorContentResize, 480, {\n    componentName: 'code-editor',\n    changeHandler: 'onEditorContentResize',\n    controlledProp: 'editorContentHeight',\n  });\n  const mode = useCurrentMode(__internalRootRef);\n  const isRefresh = useVisualRefresh();\n  const baseProps = getBaseProps(rest);\n  const i18n = useInternalI18n('code-editor');\n\n  const errorsTabRef = useRef<HTMLButtonElement>(null);\n  const warningsTabRef = useRef<HTMLButtonElement>(null);\n  const [codeEditorWidth, codeEditorMeasureRef] = useContainerQuery(rect => rect.contentBoxWidth);\n  const mergedRef = useMergeRefs(codeEditorMeasureRef, __internalRootRef);\n\n  const paneId = useUniqueId('code-editor-pane');\n\n  const [paneStatus, setPaneStatus] = useState<PaneStatus>('hidden');\n  const [annotations, setAnnotations] = useState<Ace.Annotation[]>([]);\n  const [highlightedAnnotation, setHighlightedAnnotation] = useState<Ace.Annotation>();\n  const [cursorPosition, setCursorPosition] = useState<Ace.Point>({ row: 0, column: 0 });\n  const [isTabFocused, setTabFocused] = useState<boolean>(false);\n\n  const { editorRef, editor } = useEditor(ace, loading);\n\n  useForwardFocus(ref, editorRef);\n\n  useEffect(() => {\n    if (!ace || !editor) {\n      return;\n    }\n\n    setupEditor(ace, editor, setAnnotations, setCursorPosition, setHighlightedAnnotation, setPaneStatus);\n\n    return () => {\n      editor?.destroy();\n    };\n  }, [ace, editor]);\n\n  useSyncEditorLabels(editor, { controlId, ariaLabel, ariaLabelledby, ariaDescribedby });\n\n  const { onResize } = useSyncEditorSize(editor, { width: codeEditorWidth, height: editorContentHeight });\n\n  useSyncEditorValue(editor, value);\n\n  useSyncEditorLanguage(editor, language);\n\n  useSyncEditorWrapLines(editor, preferences?.wrapLines);\n\n  const defaultTheme = mode === 'dark' ? DEFAULT_DARK_THEME : DEFAULT_LIGHT_THEME;\n  useSyncEditorTheme(editor, preferences?.theme ?? defaultTheme);\n\n  // Change listeners\n  useChangeEffect(editor, props.onChange, props.onDelayedChange);\n\n  // Hide error panel when there are no errors to show.\n  useEffect(() => {\n    if (annotations.length === 0) {\n      setPaneStatus('hidden');\n    }\n\n    if (props.onValidate) {\n      fireNonCancelableEvent(props.onValidate, { annotations });\n    }\n  }, [annotations, props.onValidate]);\n\n  const languageLabel = customLanguageLabel ?? getLanguageLabel(language);\n\n  const errorCount = annotations.filter(a => a.type === 'error').length;\n  const warningCount = annotations.filter(a => a.type === 'warning').length;\n  const currentAnnotations = useMemo(() => annotations.filter(a => a.type === paneStatus), [annotations, paneStatus]);\n\n  /*\n   * Callbacks\n   */\n\n  const onEditorKeydown = useCallback(\n    (e: React.KeyboardEvent) => {\n      if (editor && e.target === editor.container && e.keyCode === KeyCode.enter) {\n        e.stopPropagation();\n        e.preventDefault();\n        editor.focus();\n      }\n    },\n    [editor]\n  );\n\n  const onTabFocus = useCallback(() => setTabFocused(true), []);\n  const onTabBlur = useCallback(() => setTabFocused(false), []);\n\n  const onErrorPaneToggle = useCallback(() => {\n    setPaneStatus(paneStatus !== 'error' ? 'error' : 'hidden');\n  }, [paneStatus]);\n\n  const onWarningPaneToggle = useCallback(() => {\n    setPaneStatus(paneStatus !== 'warning' ? 'warning' : 'hidden');\n  }, [paneStatus]);\n\n  const onPaneClose = () => {\n    setPaneStatus('hidden');\n  };\n\n  const onAnnotationClick = ({ row = 0, column = 0 }: Ace.Annotation) => {\n    if (!editor) {\n      return;\n    }\n    editor.focus();\n    editor.gotoLine(row + 1, column, false);\n    setHighlightedAnnotation(undefined);\n  };\n\n  const onAnnotationClear = useCallback(() => {\n    setHighlightedAnnotation(undefined);\n  }, []);\n\n  const [isPreferencesModalVisible, setPreferencesModalVisible] = useState(false);\n  const onPreferencesOpen = () => setPreferencesModalVisible(true);\n  const onPreferencesConfirm = (p: CodeEditorProps.Preferences) => {\n    fireNonCancelableEvent(props.onPreferencesChange, p);\n    setPreferencesModalVisible(false);\n  };\n  const onPreferencesDismiss = () => setPreferencesModalVisible(false);\n\n  const isPaneVisible = paneStatus !== 'hidden';\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(styles['code-editor'], baseProps.className, { [styles['code-editor-refresh']]: isRefresh })}\n      ref={mergedRef}\n    >\n      {loading && (\n        <LoadingScreen>\n          <LiveRegion visible={true}>{i18n('i18nStrings.loadingState', i18nStrings?.loadingState)}</LiveRegion>\n        </LoadingScreen>\n      )}\n\n      {!ace && !loading && (\n        <ErrorScreen\n          recoveryText={i18n('i18nStrings.errorStateRecovery', i18nStrings?.errorStateRecovery)}\n          onRecoveryClick={props.onRecoveryClick}\n        >\n          {i18n('i18nStrings.errorState', i18nStrings?.errorState)}\n        </ErrorScreen>\n      )}\n\n      {ace && !loading && (\n        <>\n          <ResizableBox\n            height={Math.max(editorHeight, 20)}\n            minHeight={20}\n            onResize={height => {\n              setEditorHeight(height);\n              onResize();\n              fireNonCancelableEvent(onEditorContentResize, { height });\n            }}\n          >\n            <div\n              ref={editorRef}\n              className={clsx(styles.editor, styles.ace, isRefresh && styles['editor-refresh'])}\n              onKeyDown={onEditorKeydown}\n              tabIndex={0}\n              role=\"group\"\n              aria-label={i18n('i18nStrings.editorGroupAriaLabel', i18nStrings?.editorGroupAriaLabel)}\n            />\n          </ResizableBox>\n          <div\n            role=\"group\"\n            aria-label={i18n('i18nStrings.statusBarGroupAriaLabel', i18nStrings?.statusBarGroupAriaLabel)}\n          >\n            <StatusBar\n              languageLabel={languageLabel}\n              cursorPosition={i18n(\n                'i18nStrings.cursorPosition',\n                i18nStrings?.cursorPosition(cursorPosition.row + 1, cursorPosition.column + 1),\n                format => format({ row: cursorPosition.row + 1, column: cursorPosition.column + 1 })\n              )}\n              errorCount={errorCount}\n              warningCount={warningCount}\n              paneStatus={paneStatus}\n              onErrorPaneToggle={onErrorPaneToggle}\n              onWarningPaneToggle={onWarningPaneToggle}\n              onTabFocus={onTabFocus}\n              onTabBlur={onTabBlur}\n              errorsTabRef={errorsTabRef}\n              warningsTabRef={warningsTabRef}\n              i18nStrings={i18nStrings}\n              isTabFocused={isTabFocused}\n              paneId={isPaneVisible ? paneId : undefined}\n              onPreferencesOpen={onPreferencesOpen}\n              isRefresh={isRefresh}\n            />\n            <Pane\n              id={paneId}\n              visible={isPaneVisible}\n              annotations={currentAnnotations}\n              highlighted={highlightedAnnotation}\n              onAnnotationClick={onAnnotationClick}\n              onAnnotationClear={onAnnotationClear}\n              onClose={onPaneClose}\n              cursorPositionLabel={i18n(\n                'i18nStrings.cursorPosition',\n                i18nStrings?.cursorPosition,\n                format => (row, column) => format({ row, column })\n              )}\n              closeButtonAriaLabel={i18n('i18nStrings.paneCloseButtonAriaLabel', i18nStrings?.paneCloseButtonAriaLabel)}\n            />\n          </div>\n          {isPreferencesModalVisible && (\n            <PreferencesModal\n              onConfirm={onPreferencesConfirm}\n              onDismiss={onPreferencesDismiss}\n              themes={themes}\n              preferences={preferences}\n              defaultTheme={defaultTheme}\n              i18nStrings={{\n                header: i18n('i18nStrings.preferencesModalHeader', i18nStrings?.preferencesModalHeader),\n                cancel: i18n('i18nStrings.preferencesModalCancel', i18nStrings?.preferencesModalCancel),\n                confirm: i18n('i18nStrings.preferencesModalConfirm', i18nStrings?.preferencesModalConfirm),\n                wrapLines: i18n('i18nStrings.preferencesModalWrapLines', i18nStrings?.preferencesModalWrapLines),\n                theme: i18n('i18nStrings.preferencesModalTheme', i18nStrings?.preferencesModalTheme),\n                lightThemes: i18n('i18nStrings.preferencesModalLightThemes', i18nStrings?.preferencesModalLightThemes),\n                darkThemes: i18n('i18nStrings.preferencesModalDarkThemes', i18nStrings?.preferencesModalDarkThemes),\n                themeFilteringAriaLabel: i18nStrings?.preferencesModalThemeFilteringAriaLabel,\n                themeFilteringClearAriaLabel: i18nStrings?.preferencesModalThemeFilteringClearAriaLabel,\n                themeFilteringPlaceholder: i18nStrings?.preferencesModalThemeFilteringPlaceholder,\n              }}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n});\n\napplyDisplayName(CodeEditor, 'CodeEditor');\nexport default CodeEditor;\n"]},"metadata":{},"sourceType":"module"}