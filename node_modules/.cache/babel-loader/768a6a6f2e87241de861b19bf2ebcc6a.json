{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalSelect from '../select/internal';\nimport InternalFormField from '../form-field/internal';\nimport InternalSegmentedControlComponent from './internal-segmented-control';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport styles from './styles.css.js';\nexport default function InternalSegmentedControl(_a) {\n  var selectedId = _a.selectedId,\n    options = _a.options,\n    label = _a.label,\n    ariaLabelledby = _a.ariaLabelledby,\n    _onChange = _a.onChange,\n    _a$__internalRootRef = _a.__internalRootRef,\n    __internalRootRef = _a$__internalRootRef === void 0 ? null : _a$__internalRootRef,\n    props = __rest(_a, [\"selectedId\", \"options\", \"label\", \"ariaLabelledby\", \"onChange\", \"__internalRootRef\"]);\n  var baseProps = getBaseProps(props);\n  var selectOptions = (options || []).map(function (option) {\n    var label = option.text || option.iconAlt;\n    return Object.assign(Object.assign({}, option), {\n      label: label,\n      value: option.id\n    });\n  });\n  var selectedOptions = selectOptions.filter(function (option) {\n    return option.value === selectedId;\n  });\n  var currentSelectedOption = selectedOptions.length ? selectedOptions[0] : null;\n  var selectProps = {\n    options: selectOptions,\n    selectedOption: currentSelectedOption,\n    triggerVariant: 'option',\n    onChange: function onChange(event) {\n      return fireNonCancelableEvent(_onChange, {\n        selectedId: event.detail.selectedOption.value\n      });\n    }\n  };\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: __internalRootRef\n  }), React.createElement(InternalSegmentedControlComponent, {\n    selectedId: selectedId,\n    options: options,\n    label: label,\n    ariaLabelledby: ariaLabelledby,\n    onChange: _onChange\n  }), React.createElement(\"div\", {\n    className: styles.select\n  }, ariaLabelledby && React.createElement(InternalSelect, Object.assign({}, selectProps, {\n    ariaLabelledby: ariaLabelledby\n  })), !ariaLabelledby && label && React.createElement(InternalFormField, {\n    label: label,\n    stretch: true\n  }, React.createElement(InternalSelect, Object.assign({}, selectProps))), !ariaLabelledby && !label && React.createElement(InternalSelect, Object.assign({}, selectProps))));\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,cAAuC,MAAM,oBAAoB;AACxE,OAAOC,iBAAiB,MAAM,wBAAwB;AAEtD,OAAOC,iCAAiC,MAAM,8BAA8B;AAC5E,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,sBAAsB,QAAQ,oBAAoB;AAC3D,OAAOC,MAAM,MAAM,iBAAiB;AAKpC,eAAc,SAAUC,wBAAwB,CAACC,EAQjB;MAP9BC,UAAU,GAKcD,EAEM,CAP9BC,UAAU;IACVC,OAAO,GAIiBF,EAEM,CAN9BE,OAAO;IACPC,KAAK,GAGmBH,EAEM,CAL9BG,KAAK;IACLC,cAAc,GAEUJ,EAEM,CAJ9BI,cAAc;IACdC,SAAQ,GACgBL,EAEM,CAH9BK,QAAQ;IAAA,uBACgBL,EAEM,CAF9BM,iBAAiB;IAAjBA,iBAAiB,qCAAG,IAAI;IACrBC,KAAK,cAPuC,qFAQhD,CADS;EAER,IAAMC,SAAS,GAAGZ,YAAY,CAACW,KAAK,CAAC;EAErC,IAAME,aAAa,GAAG,CAACP,OAAO,IAAI,EAAE,EAAEQ,GAAG,CAAC,gBAAM,EAAG;IACjD,IAAMP,KAAK,GAAGQ,MAAM,CAACC,IAAI,IAAID,MAAM,CAACE,OAAO;IAC3C,uCAAYF,MAAM;MAAER,KAAK,EAALA,KAAK;MAAEW,KAAK,EAAEH,MAAM,CAACI;IAAE;EAC7C,CAAC,CAAC;EAEF,IAAMC,eAAe,GAAGP,aAAa,CAACQ,MAAM,CAAC,gBAAM,EAAG;IACpD,OAAON,MAAM,CAACG,KAAK,KAAKb,UAAU;EACpC,CAAC,CAAC;EACF,IAAMiB,qBAAqB,GAAGF,eAAe,CAACG,MAAM,GAAGH,eAAe,CAAC,CAAC,CAAC,GAAG,IAAI;EAEhF,IAAMI,WAAW,GAAwB;IACvClB,OAAO,EAAEO,aAAa;IACtBY,cAAc,EAAEH,qBAAqB;IACrCI,cAAc,EAAE,QAAQ;IACxBjB,QAAQ,EAAE,uBAAK;MAAA,OAAIR,sBAAsB,CAACQ,SAAQ,EAAE;QAAEJ,UAAU,EAAEsB,KAAK,CAACC,MAAM,CAACH,cAAc,CAACP;MAAM,CAAE,CAAC;IAAA;GACxG;EAED,OACEvB,6CAASiB,SAAS;IAAEiB,SAAS,EAAEjC,IAAI,CAACgB,SAAS,CAACiB,SAAS,EAAE3B,MAAM,CAAC4B,IAAI,CAAC;IAAEC,GAAG,EAAErB;EAAiB,IAC3Ff,oBAACI,iCAAiC;IAChCM,UAAU,EAAEA,UAAU;IACtBC,OAAO,EAAEA,OAAO;IAChBC,KAAK,EAAEA,KAAK;IACZC,cAAc,EAAEA,cAAc;IAC9BC,QAAQ,EAAEA;EAAQ,EAClB,EACFd;IAAKkC,SAAS,EAAE3B,MAAM,CAAC8B;EAAM,GAC1BxB,cAAc,IAAIb,oBAACE,cAAc,oBAAK2B,WAAW;IAAEhB,cAAc,EAAEA;EAAc,GAAI,EACrF,CAACA,cAAc,IAAID,KAAK,IACvBZ,oBAACG,iBAAiB;IAACS,KAAK,EAAEA,KAAK;IAAE0B,OAAO,EAAE;EAAI,GAC5CtC,oBAACE,cAAc,oBAAK2B,WAAW,EAAI,CAEtC,EACA,CAAChB,cAAc,IAAI,CAACD,KAAK,IAAIZ,oBAACE,cAAc,oBAAK2B,WAAW,EAAI,CAC7D,CACF;AAEV","names":["React","clsx","InternalSelect","InternalFormField","InternalSegmentedControlComponent","getBaseProps","fireNonCancelableEvent","styles","InternalSegmentedControl","_a","selectedId","options","label","ariaLabelledby","onChange","__internalRootRef","props","baseProps","selectOptions","map","option","text","iconAlt","value","id","selectedOptions","filter","currentSelectedOption","length","selectProps","selectedOption","triggerVariant","event","detail","className","root","ref","select","stretch"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/segmented-control/lib/default/segmented-control/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalSelect, { InternalSelectProps } from '../select/internal';\nimport InternalFormField from '../form-field/internal';\nimport { SegmentedControlProps } from './interfaces';\nimport InternalSegmentedControlComponent from './internal-segmented-control';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport styles from './styles.css.js';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\n\ntype InternalSegmentedControlProps = SegmentedControlProps & InternalBaseComponentProps;\n\nexport default function InternalSegmentedControl({\n  selectedId,\n  options,\n  label,\n  ariaLabelledby,\n  onChange,\n  __internalRootRef = null,\n  ...props\n}: InternalSegmentedControlProps) {\n  const baseProps = getBaseProps(props);\n\n  const selectOptions = (options || []).map(option => {\n    const label = option.text || option.iconAlt;\n    return { ...option, label, value: option.id };\n  });\n\n  const selectedOptions = selectOptions.filter(option => {\n    return option.value === selectedId;\n  });\n  const currentSelectedOption = selectedOptions.length ? selectedOptions[0] : null;\n\n  const selectProps: InternalSelectProps = {\n    options: selectOptions,\n    selectedOption: currentSelectedOption,\n    triggerVariant: 'option',\n    onChange: event => fireNonCancelableEvent(onChange, { selectedId: event.detail.selectedOption.value! }),\n  };\n\n  return (\n    <div {...baseProps} className={clsx(baseProps.className, styles.root)} ref={__internalRootRef}>\n      <InternalSegmentedControlComponent\n        selectedId={selectedId}\n        options={options}\n        label={label}\n        ariaLabelledby={ariaLabelledby}\n        onChange={onChange}\n      />\n      <div className={styles.select}>\n        {ariaLabelledby && <InternalSelect {...selectProps} ariaLabelledby={ariaLabelledby} />}\n        {!ariaLabelledby && label && (\n          <InternalFormField label={label} stretch={true}>\n            <InternalSelect {...selectProps} />\n          </InternalFormField>\n        )}\n        {!ariaLabelledby && !label && <InternalSelect {...selectProps} />}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}