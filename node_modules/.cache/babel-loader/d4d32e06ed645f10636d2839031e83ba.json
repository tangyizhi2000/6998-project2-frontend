{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { getBaseProps } from '../internal/base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport Dropdown from '../internal/components/dropdown';\nimport ItemsList from './items-list';\nimport { useButtonDropdown } from './utils/use-button-dropdown';\nimport OptionsList from '../internal/components/options-list';\nimport { InternalButton } from '../button/internal';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport InternalBox from '../box/internal';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { isDevelopment } from '../internal/is-development';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode/index.js';\nimport { useFunnel } from '../internal/analytics/hooks/use-funnel.js';\nvar InternalButtonDropdown = React.forwardRef(function (_a, ref) {\n  var _b;\n  var items = _a.items,\n    _a$variant = _a.variant,\n    variant = _a$variant === void 0 ? 'normal' : _a$variant,\n    _a$loading = _a.loading,\n    loading = _a$loading === void 0 ? false : _a$loading,\n    loadingText = _a.loadingText,\n    _a$disabled = _a.disabled,\n    disabled = _a$disabled === void 0 ? false : _a$disabled,\n    _a$expandableGroups = _a.expandableGroups,\n    expandableGroups = _a$expandableGroups === void 0 ? false : _a$expandableGroups,\n    children = _a.children,\n    onItemClick = _a.onItemClick,\n    onItemFollow = _a.onItemFollow,\n    customTriggerBuilder = _a.customTriggerBuilder,\n    expandToViewport = _a.expandToViewport,\n    ariaLabel = _a.ariaLabel,\n    title = _a.title,\n    description = _a.description,\n    preferCenter = _a.preferCenter,\n    mainAction = _a.mainAction,\n    __internalRootRef = _a.__internalRootRef,\n    props = __rest(_a, [\"items\", \"variant\", \"loading\", \"loadingText\", \"disabled\", \"expandableGroups\", \"children\", \"onItemClick\", \"onItemFollow\", \"customTriggerBuilder\", \"expandToViewport\", \"ariaLabel\", \"title\", \"description\", \"preferCenter\", \"mainAction\", \"__internalRootRef\"]);\n  var isInRestrictedView = useMobile();\n  var dropdownId = useUniqueId('dropdown');\n  var _iterator = _createForOfIteratorHelper(items),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      checkSafeUrl('ButtonDropdown', item.href);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (mainAction) {\n    checkSafeUrl('ButtonDropdown', mainAction.href);\n  }\n  if (isDevelopment) {\n    if (mainAction && variant !== 'primary' && variant !== 'normal') {\n      warnOnce('ButtonDropdown', 'Main action is only supported for \"primary\" and \"normal\" component variant.');\n    }\n  }\n  var isMainAction = mainAction && (variant === 'primary' || variant === 'normal');\n  var isVisualRefresh = useVisualRefresh();\n  var _useButtonDropdown = useButtonDropdown({\n      items: items,\n      onItemClick: onItemClick,\n      onItemFollow: onItemFollow,\n      onReturnFocus: function onReturnFocus() {\n        var _a;\n        return (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      expandToViewport: expandToViewport,\n      hasExpandableGroups: expandableGroups,\n      isInRestrictedView: isInRestrictedView\n    }),\n    isOpen = _useButtonDropdown.isOpen,\n    targetItem = _useButtonDropdown.targetItem,\n    isHighlighted = _useButtonDropdown.isHighlighted,\n    isKeyboardHighlight = _useButtonDropdown.isKeyboardHighlight,\n    isExpanded = _useButtonDropdown.isExpanded,\n    highlightItem = _useButtonDropdown.highlightItem,\n    onKeyDown = _useButtonDropdown.onKeyDown,\n    onKeyUp = _useButtonDropdown.onKeyUp,\n    onItemActivate = _useButtonDropdown.onItemActivate,\n    onGroupToggle = _useButtonDropdown.onGroupToggle,\n    toggleDropdown = _useButtonDropdown.toggleDropdown,\n    closeDropdown = _useButtonDropdown.closeDropdown,\n    setIsUsingMouse = _useButtonDropdown.setIsUsingMouse;\n  var handleMouseEvent = function handleMouseEvent() {\n    setIsUsingMouse(true);\n  };\n  var baseProps = getBaseProps(props);\n  var mainActionRef = useRef(null);\n  var triggerRef = useRef(null);\n  useForwardFocus(ref, isMainAction ? mainActionRef : triggerRef);\n  var clickHandler = function clickHandler() {\n    if (!loading && !disabled) {\n      // Prevent moving highlight on mobiles to avoid disabled state reason popup if defined.\n      toggleDropdown({\n        moveHighlightOnOpen: !isInRestrictedView\n      });\n    }\n  };\n  var canBeOpened = !loading && !disabled;\n  var triggerVariant = variant === 'navigation' ? undefined : variant === 'inline-icon' ? 'inline-icon' : variant;\n  var iconProps = variant === 'icon' || variant === 'inline-icon' ? {\n    iconName: 'ellipsis'\n  } : {\n    iconName: 'caret-down-filled',\n    iconAlign: 'right',\n    __iconClass: canBeOpened && isOpen ? styles['rotate-up'] : styles['rotate-down']\n  };\n  var baseTriggerProps = Object.assign(Object.assign({\n    className: clsx(styles['trigger-button'], styles['test-utils-button-trigger'])\n  }, iconProps), {\n    variant: triggerVariant,\n    loading: loading,\n    loadingText: loadingText,\n    disabled: disabled,\n    onClick: function onClick(event) {\n      event.preventDefault();\n      clickHandler();\n    },\n    ariaLabel: ariaLabel,\n    ariaExpanded: canBeOpened && isOpen,\n    formAction: 'none',\n    __nativeAttributes: {\n      'aria-haspopup': true\n    }\n  });\n  var triggerId = useUniqueId('awsui-button-dropdown__trigger');\n  var triggerHasBadge = function triggerHasBadge() {\n    var flatItems = items.flatMap(function (item) {\n      if ('items' in item) {\n        return item.items;\n      }\n      return item;\n    });\n    return variant === 'icon' && !!(flatItems === null || flatItems === void 0 ? void 0 : flatItems.find(function (item) {\n      if ('badge' in item) {\n        return item.badge;\n      }\n    }));\n  };\n  var trigger = null;\n  if (customTriggerBuilder) {\n    trigger = React.createElement(\"div\", {\n      className: styles['dropdown-trigger']\n    }, customTriggerBuilder({\n      testUtilsClass: styles['test-utils-button-trigger'],\n      ariaExpanded: canBeOpened && isOpen,\n      onClick: clickHandler,\n      triggerRef: triggerRef,\n      ariaLabel: ariaLabel,\n      disabled: disabled,\n      isOpen: isOpen\n    }));\n  } else if (isMainAction) {\n    var text = mainAction.text,\n      iconName = mainAction.iconName,\n      iconAlt = mainAction.iconAlt,\n      iconSvg = mainAction.iconSvg,\n      iconUrl = mainAction.iconUrl,\n      external = mainAction.external,\n      externalIconAriaLabel = mainAction.externalIconAriaLabel,\n      mainActionProps = __rest(mainAction, [\"text\", \"iconName\", \"iconAlt\", \"iconSvg\", \"iconUrl\", \"external\", \"externalIconAriaLabel\"]);\n    var mainActionIconProps = external ? {\n      iconName: 'external',\n      iconAlign: 'right'\n    } : {\n      iconName: iconName,\n      iconAlt: iconAlt,\n      iconSvg: iconSvg,\n      iconUrl: iconUrl\n    };\n    var mainActionAriaLabel = externalIconAriaLabel ? \"\".concat((_b = mainAction.ariaLabel) !== null && _b !== void 0 ? _b : mainAction.text, \" \").concat(mainAction.externalIconAriaLabel) : undefined;\n    trigger = React.createElement(\"div\", {\n      role: \"group\",\n      \"aria-label\": ariaLabel,\n      className: styles['split-trigger-wrapper']\n    }, React.createElement(\"div\", {\n      className: clsx(styles['trigger-item'], styles['split-trigger']),\n      // Close dropdown upon main action click unless event is cancelled.\n      onClick: closeDropdown,\n      // Prevent keyboard events from propagation to the button dropdown handler.\n      onKeyDown: function onKeyDown(e) {\n        return e.stopPropagation();\n      },\n      onKeyUp: function onKeyUp(e) {\n        return e.stopPropagation();\n      }\n    }, React.createElement(InternalButton, Object.assign({\n      ref: mainActionRef\n    }, mainActionProps, mainActionIconProps, {\n      className: styles['trigger-button'],\n      variant: variant,\n      ariaLabel: mainActionAriaLabel,\n      formAction: \"none\"\n    }), text)), React.createElement(\"div\", {\n      className: clsx(styles['trigger-item'], styles['dropdown-trigger'], isVisualRefresh && styles['visual-refresh'])\n    }, React.createElement(InternalButton, Object.assign({\n      ref: triggerRef\n    }, baseTriggerProps))));\n  } else {\n    trigger = React.createElement(\"div\", {\n      className: styles['dropdown-trigger']\n    }, React.createElement(InternalButton, Object.assign({\n      ref: triggerRef,\n      id: triggerId\n    }, baseTriggerProps, {\n      badge: triggerHasBadge()\n    }), children));\n  }\n  var hasHeader = title || description;\n  var headerId = useUniqueId('awsui-button-dropdown__header');\n  var shouldLabelWithTrigger = !ariaLabel && !mainAction && variant !== 'icon' && variant !== 'inline-icon';\n  var _useFunnel = useFunnel(),\n    loadingButtonCount = _useFunnel.loadingButtonCount;\n  useEffect(function () {\n    if (loading) {\n      loadingButtonCount.current++;\n      return function () {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        loadingButtonCount.current--;\n      };\n    }\n  }, [loading, loadingButtonCount]);\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onMouseDown: handleMouseEvent,\n    onMouseMove: handleMouseEvent,\n    className: clsx(styles['button-dropdown'], styles[\"variant-\".concat(variant)], baseProps.className),\n    \"aria-owns\": expandToViewport && isOpen ? dropdownId : undefined,\n    ref: __internalRootRef\n  }), React.createElement(Dropdown, {\n    open: canBeOpened && isOpen,\n    stretchWidth: false,\n    stretchTriggerHeight: variant === 'navigation',\n    expandToViewport: expandToViewport,\n    preferCenter: preferCenter,\n    onDropdownClose: function onDropdownClose() {\n      return toggleDropdown();\n    },\n    trigger: trigger,\n    dropdownId: dropdownId\n  }, hasHeader && React.createElement(\"div\", {\n    className: styles.header,\n    id: headerId\n  }, title && React.createElement(\"div\", {\n    className: styles.title\n  }, React.createElement(InternalBox, {\n    fontSize: \"heading-s\",\n    fontWeight: \"bold\",\n    color: \"inherit\",\n    tagOverride: \"h2\",\n    margin: {\n      vertical: 'n',\n      horizontal: 'n'\n    }\n  }, title)), description && React.createElement(InternalBox, {\n    fontSize: \"body-s\"\n  }, React.createElement(\"span\", {\n    className: styles.description\n  }, description))), React.createElement(OptionsList, {\n    open: canBeOpened && isOpen,\n    position: \"static\",\n    role: \"menu\",\n    decreaseTopMargin: true,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: hasHeader ? headerId : shouldLabelWithTrigger ? triggerId : undefined,\n    statusType: \"finished\"\n  }, React.createElement(ItemsList, {\n    items: items,\n    onItemActivate: onItemActivate,\n    onGroupToggle: onGroupToggle,\n    hasExpandableGroups: expandableGroups,\n    targetItem: targetItem,\n    isHighlighted: isHighlighted,\n    isKeyboardHighlight: isKeyboardHighlight,\n    isExpanded: isExpanded,\n    highlightItem: highlightItem,\n    expandToViewport: expandToViewport,\n    variant: variant\n  }))));\n});\nexport default InternalButtonDropdown;","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","clsx","styles","getBaseProps","useUniqueId","Dropdown","ItemsList","useButtonDropdown","OptionsList","InternalButton","useMobile","useForwardFocus","InternalBox","checkSafeUrl","isDevelopment","warnOnce","useVisualRefresh","useFunnel","InternalButtonDropdown","forwardRef","_a","ref","items","variant","loading","loadingText","disabled","expandableGroups","children","onItemClick","onItemFollow","customTriggerBuilder","expandToViewport","ariaLabel","title","description","preferCenter","mainAction","__internalRootRef","props","isInRestrictedView","dropdownId","item","href","isMainAction","isVisualRefresh","onReturnFocus","current","focus","hasExpandableGroups","isOpen","targetItem","isHighlighted","isKeyboardHighlight","isExpanded","highlightItem","onKeyDown","onKeyUp","onItemActivate","onGroupToggle","toggleDropdown","closeDropdown","setIsUsingMouse","handleMouseEvent","baseProps","mainActionRef","triggerRef","clickHandler","moveHighlightOnOpen","canBeOpened","triggerVariant","undefined","iconProps","iconName","iconAlign","__iconClass","baseTriggerProps","className","onClick","event","preventDefault","ariaExpanded","formAction","__nativeAttributes","triggerId","triggerHasBadge","flatItems","flatMap","find","badge","trigger","testUtilsClass","text","iconAlt","iconSvg","iconUrl","external","externalIconAriaLabel","mainActionProps","mainActionIconProps","mainActionAriaLabel","role","e","stopPropagation","id","hasHeader","headerId","shouldLabelWithTrigger","loadingButtonCount","onMouseDown","onMouseMove","open","stretchWidth","stretchTriggerHeight","onDropdownClose","header","fontSize","fontWeight","color","tagOverride","margin","vertical","horizontal","position","decreaseTopMargin","ariaLabelledby","statusType"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/button-dropdown/lib/default/button-dropdown/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { ButtonDropdownProps, InternalButtonDropdownProps } from './interfaces';\nimport { getBaseProps } from '../internal/base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport Dropdown from '../internal/components/dropdown';\nimport ItemsList from './items-list';\nimport { useButtonDropdown } from './utils/use-button-dropdown';\nimport OptionsList from '../internal/components/options-list';\nimport { InternalButton, InternalButtonProps } from '../button/internal';\nimport { ButtonProps } from '../button/interfaces';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport InternalBox from '../box/internal';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { isDevelopment } from '../internal/is-development';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode/index.js';\nimport { useFunnel } from '../internal/analytics/hooks/use-funnel.js';\n\nconst InternalButtonDropdown = React.forwardRef(\n  (\n    {\n      items,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      expandableGroups = false,\n      children,\n      onItemClick,\n      onItemFollow,\n      customTriggerBuilder,\n      expandToViewport,\n      ariaLabel,\n      title,\n      description,\n      preferCenter,\n      mainAction,\n      __internalRootRef,\n      ...props\n    }: InternalButtonDropdownProps,\n    ref: React.Ref<ButtonDropdownProps.Ref>\n  ) => {\n    const isInRestrictedView = useMobile();\n    const dropdownId = useUniqueId('dropdown');\n    for (const item of items) {\n      checkSafeUrl('ButtonDropdown', item.href);\n    }\n    if (mainAction) {\n      checkSafeUrl('ButtonDropdown', mainAction.href);\n    }\n\n    if (isDevelopment) {\n      if (mainAction && variant !== 'primary' && variant !== 'normal') {\n        warnOnce('ButtonDropdown', 'Main action is only supported for \"primary\" and \"normal\" component variant.');\n      }\n    }\n    const isMainAction = mainAction && (variant === 'primary' || variant === 'normal');\n    const isVisualRefresh = useVisualRefresh();\n\n    const {\n      isOpen,\n      targetItem,\n      isHighlighted,\n      isKeyboardHighlight,\n      isExpanded,\n      highlightItem,\n      onKeyDown,\n      onKeyUp,\n      onItemActivate,\n      onGroupToggle,\n      toggleDropdown,\n      closeDropdown,\n      setIsUsingMouse,\n    } = useButtonDropdown({\n      items,\n      onItemClick,\n      onItemFollow,\n      onReturnFocus: () => triggerRef.current?.focus(),\n      expandToViewport,\n      hasExpandableGroups: expandableGroups,\n      isInRestrictedView,\n    });\n\n    const handleMouseEvent = () => {\n      setIsUsingMouse(true);\n    };\n\n    const baseProps = getBaseProps(props);\n\n    const mainActionRef = useRef<HTMLElement>(null);\n    const triggerRef = useRef<HTMLElement>(null);\n\n    useForwardFocus(ref, isMainAction ? mainActionRef : triggerRef);\n\n    const clickHandler = () => {\n      if (!loading && !disabled) {\n        // Prevent moving highlight on mobiles to avoid disabled state reason popup if defined.\n        toggleDropdown({ moveHighlightOnOpen: !isInRestrictedView });\n      }\n    };\n\n    const canBeOpened = !loading && !disabled;\n\n    const triggerVariant = variant === 'navigation' ? undefined : variant === 'inline-icon' ? 'inline-icon' : variant;\n    const iconProps: Partial<ButtonProps & { __iconClass?: string }> =\n      variant === 'icon' || variant === 'inline-icon'\n        ? {\n            iconName: 'ellipsis',\n          }\n        : {\n            iconName: 'caret-down-filled',\n            iconAlign: 'right',\n            __iconClass: canBeOpened && isOpen ? styles['rotate-up'] : styles['rotate-down'],\n          };\n\n    const baseTriggerProps: InternalButtonProps = {\n      className: clsx(styles['trigger-button'], styles['test-utils-button-trigger']),\n      ...iconProps,\n      variant: triggerVariant,\n      loading,\n      loadingText,\n      disabled,\n      onClick: (event: Event) => {\n        event.preventDefault();\n        clickHandler();\n      },\n      ariaLabel,\n      ariaExpanded: canBeOpened && isOpen,\n      formAction: 'none',\n      __nativeAttributes: {\n        'aria-haspopup': true,\n      },\n    };\n\n    const triggerId = useUniqueId('awsui-button-dropdown__trigger');\n\n    const triggerHasBadge = () => {\n      const flatItems = items.flatMap(item => {\n        if ('items' in item) {\n          return item.items;\n        }\n        return item;\n      });\n\n      return (\n        variant === 'icon' &&\n        !!flatItems?.find(item => {\n          if ('badge' in item) {\n            return item.badge;\n          }\n        })\n      );\n    };\n\n    let trigger: React.ReactNode = null;\n    if (customTriggerBuilder) {\n      trigger = (\n        <div className={styles['dropdown-trigger']}>\n          {customTriggerBuilder({\n            testUtilsClass: styles['test-utils-button-trigger'],\n            ariaExpanded: canBeOpened && isOpen,\n            onClick: clickHandler,\n            triggerRef,\n            ariaLabel,\n            disabled,\n            isOpen,\n          })}\n        </div>\n      );\n    } else if (isMainAction) {\n      const { text, iconName, iconAlt, iconSvg, iconUrl, external, externalIconAriaLabel, ...mainActionProps } =\n        mainAction;\n      const mainActionIconProps = external\n        ? ({ iconName: 'external', iconAlign: 'right' } as const)\n        : ({ iconName, iconAlt, iconSvg, iconUrl } as const);\n      const mainActionAriaLabel = externalIconAriaLabel\n        ? `${mainAction.ariaLabel ?? mainAction.text} ${mainAction.externalIconAriaLabel}`\n        : undefined;\n\n      trigger = (\n        <div role=\"group\" aria-label={ariaLabel} className={styles['split-trigger-wrapper']}>\n          <div\n            className={clsx(styles['trigger-item'], styles['split-trigger'])}\n            // Close dropdown upon main action click unless event is cancelled.\n            onClick={closeDropdown}\n            // Prevent keyboard events from propagation to the button dropdown handler.\n            onKeyDown={e => e.stopPropagation()}\n            onKeyUp={e => e.stopPropagation()}\n          >\n            <InternalButton\n              ref={mainActionRef}\n              {...mainActionProps}\n              {...mainActionIconProps}\n              className={styles['trigger-button']}\n              variant={variant}\n              ariaLabel={mainActionAriaLabel}\n              formAction=\"none\"\n            >\n              {text}\n            </InternalButton>\n          </div>\n          <div\n            className={clsx(\n              styles['trigger-item'],\n              styles['dropdown-trigger'],\n              isVisualRefresh && styles['visual-refresh']\n            )}\n          >\n            <InternalButton ref={triggerRef} {...baseTriggerProps} />\n          </div>\n        </div>\n      );\n    } else {\n      trigger = (\n        <div className={styles['dropdown-trigger']}>\n          <InternalButton ref={triggerRef} id={triggerId} {...baseTriggerProps} badge={triggerHasBadge()}>\n            {children}\n          </InternalButton>\n        </div>\n      );\n    }\n\n    const hasHeader = title || description;\n    const headerId = useUniqueId('awsui-button-dropdown__header');\n\n    const shouldLabelWithTrigger = !ariaLabel && !mainAction && variant !== 'icon' && variant !== 'inline-icon';\n\n    const { loadingButtonCount } = useFunnel();\n    useEffect(() => {\n      if (loading) {\n        loadingButtonCount.current++;\n        return () => {\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          loadingButtonCount.current--;\n        };\n      }\n    }, [loading, loadingButtonCount]);\n\n    return (\n      <div\n        {...baseProps}\n        onKeyDown={onKeyDown}\n        onKeyUp={onKeyUp}\n        onMouseDown={handleMouseEvent}\n        onMouseMove={handleMouseEvent}\n        className={clsx(styles['button-dropdown'], styles[`variant-${variant}`], baseProps.className)}\n        aria-owns={expandToViewport && isOpen ? dropdownId : undefined}\n        ref={__internalRootRef}\n      >\n        <Dropdown\n          open={canBeOpened && isOpen}\n          stretchWidth={false}\n          stretchTriggerHeight={variant === 'navigation'}\n          expandToViewport={expandToViewport}\n          preferCenter={preferCenter}\n          onDropdownClose={() => toggleDropdown()}\n          trigger={trigger}\n          dropdownId={dropdownId}\n        >\n          {hasHeader && (\n            <div className={styles.header} id={headerId}>\n              {title && (\n                <div className={styles.title}>\n                  <InternalBox\n                    fontSize=\"heading-s\"\n                    fontWeight=\"bold\"\n                    color=\"inherit\"\n                    tagOverride=\"h2\"\n                    margin={{ vertical: 'n', horizontal: 'n' }}\n                  >\n                    {title}\n                  </InternalBox>\n                </div>\n              )}\n              {description && (\n                <InternalBox fontSize=\"body-s\">\n                  <span className={styles.description}>{description}</span>\n                </InternalBox>\n              )}\n            </div>\n          )}\n          <OptionsList\n            open={canBeOpened && isOpen}\n            position=\"static\"\n            role=\"menu\"\n            decreaseTopMargin={true}\n            ariaLabel={ariaLabel}\n            ariaLabelledby={hasHeader ? headerId : shouldLabelWithTrigger ? triggerId : undefined}\n            statusType=\"finished\"\n          >\n            <ItemsList\n              items={items}\n              onItemActivate={onItemActivate}\n              onGroupToggle={onGroupToggle}\n              hasExpandableGroups={expandableGroups}\n              targetItem={targetItem}\n              isHighlighted={isHighlighted}\n              isKeyboardHighlight={isKeyboardHighlight}\n              isExpanded={isExpanded}\n              highlightItem={highlightItem}\n              expandToViewport={expandToViewport}\n              variant={variant}\n            />\n          </OptionsList>\n        </Dropdown>\n      </div>\n    );\n  }\n);\n\nexport default InternalButtonDropdown;\n"]},"metadata":{},"sourceType":"module"}