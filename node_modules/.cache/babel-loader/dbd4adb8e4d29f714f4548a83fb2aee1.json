{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport { RuntimeContentWrapper } from './runtime-content-wrapper';\nfunction convertRuntimeAction(action, context) {\n  if (!action) {\n    return null;\n  }\n  return React.createElement(RuntimeContentWrapper, {\n    key: action.id + '-' + context.type,\n    mountContent: container => action.mountContent(container, context),\n    unmountContent: container => action.unmountContent(container)\n  });\n}\nexport function createUseDiscoveredAction(onActionRegistered) {\n  return function useDiscoveredAction(type) {\n    const [discoveredActions, setDiscoveredActions] = useState([]);\n    const headerRef = useRef(null);\n    const contentRef = useRef(null);\n    useEffect(() => {\n      return onActionRegistered(actions => {\n        setDiscoveredActions(actions.map(action => convertRuntimeAction(action, {\n          type,\n          headerRef,\n          contentRef\n        })));\n      });\n    }, [type]);\n    return {\n      discoveredActions,\n      headerRef,\n      contentRef\n    };\n  };\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAE1D,SAASC,qBAAqB,QAAQ,2BAA2B;AAEjE,SAASC,oBAAoB,CAACC,MAA2B,EAAEC,OAAsB;EAC/E,IAAI,CAACD,MAAM,EAAE;IACX,OAAO,IAAI;;EAEb,OACEN,oBAACI,qBAAqB;IACpBI,GAAG,EAAEF,MAAM,CAACG,EAAE,GAAG,GAAG,GAAGF,OAAO,CAACG,IAAI;IACnCC,YAAY,EAAEC,SAAS,IAAIN,MAAM,CAACK,YAAY,CAACC,SAAS,EAAEL,OAAO,CAAC;IAClEM,cAAc,EAAED,SAAS,IAAIN,MAAM,CAACO,cAAc,CAACD,SAAS;EAAC,EAC7D;AAEN;AAEA,OAAM,SAAUE,yBAAyB,CAACC,kBAAiE;EACzG,OAAO,SAASC,mBAAmB,CAACN,IAAY;IAC9C,MAAM,CAACO,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAyB,EAAE,CAAC;IACtF,MAAMgB,SAAS,GAAGjB,MAAM,CAAiB,IAAI,CAAC;IAC9C,MAAMkB,UAAU,GAAGlB,MAAM,CAAiB,IAAI,CAAC;IAE/CD,SAAS,CAAC,MAAK;MACb,OAAOc,kBAAkB,CAACM,OAAO,IAAG;QAClCH,oBAAoB,CAACG,OAAO,CAACC,GAAG,CAAChB,MAAM,IAAID,oBAAoB,CAACC,MAAM,EAAE;UAAEI,IAAI;UAAES,SAAS;UAAEC;QAAU,CAAE,CAAC,CAAC,CAAC;MAC5G,CAAC,CAAC;IACJ,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;IAEV,OAAO;MAAEO,iBAAiB;MAAEE,SAAS;MAAEC;IAAU,CAAE;EACrD,CAAC;AACH","names":["React","useEffect","useRef","useState","RuntimeContentWrapper","convertRuntimeAction","action","context","key","id","type","mountContent","container","unmountContent","createUseDiscoveredAction","onActionRegistered","useDiscoveredAction","discoveredActions","setDiscoveredActions","headerRef","contentRef","actions","map"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/internal/plugins/helpers/lib/default/internal/plugins/helpers/use-discovered-action.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport { ActionButtonsController, ActionConfig, ActionContext } from '../controllers/action-buttons';\nimport { RuntimeContentWrapper } from './runtime-content-wrapper';\n\nfunction convertRuntimeAction(action: ActionConfig | null, context: ActionContext) {\n  if (!action) {\n    return null;\n  }\n  return (\n    <RuntimeContentWrapper\n      key={action.id + '-' + context.type}\n      mountContent={container => action.mountContent(container, context)}\n      unmountContent={container => action.unmountContent(container)}\n    />\n  );\n}\n\nexport function createUseDiscoveredAction(onActionRegistered: ActionButtonsController['onActionRegistered']) {\n  return function useDiscoveredAction(type: string) {\n    const [discoveredActions, setDiscoveredActions] = useState<Array<React.ReactNode>>([]);\n    const headerRef = useRef<HTMLDivElement>(null);\n    const contentRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      return onActionRegistered(actions => {\n        setDiscoveredActions(actions.map(action => convertRuntimeAction(action, { type, headerRef, contentRef })));\n      });\n    }, [type]);\n\n    return { discoveredActions, headerRef, contentRef };\n  };\n}\n"]},"metadata":{},"sourceType":"module"}