{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef } from 'react';\nexport var useAutosuggestLoadMore = function useAutosuggestLoadMore(_ref) {\n  var _ref$options = _ref.options,\n    options = _ref$options === void 0 ? [] : _ref$options,\n    statusType = _ref.statusType,\n    onLoadItems = _ref.onLoadItems;\n  var lastFilteringText = useRef(null);\n  var fireLoadMore = function fireLoadMore(_ref2) {\n    var firstPage = _ref2.firstPage,\n      samePage = _ref2.samePage,\n      filteringText = _ref2.filteringText;\n    var _a;\n    if (filteringText === undefined || lastFilteringText.current !== filteringText) {\n      if (filteringText !== undefined) {\n        lastFilteringText.current = filteringText;\n      }\n      onLoadItems({\n        filteringText: (_a = lastFilteringText.current) !== null && _a !== void 0 ? _a : '',\n        firstPage: firstPage,\n        samePage: samePage\n      });\n    }\n  };\n  var fireLoadMoreOnScroll = function fireLoadMoreOnScroll() {\n    options.length > 0 && statusType === 'pending' && fireLoadMore({\n      firstPage: false,\n      samePage: false\n    });\n  };\n  var fireLoadMoreOnRecoveryClick = function fireLoadMoreOnRecoveryClick() {\n    return fireLoadMore({\n      firstPage: false,\n      samePage: true\n    });\n  };\n  var fireLoadMoreOnInputFocus = function fireLoadMoreOnInputFocus() {\n    return fireLoadMore({\n      firstPage: true,\n      samePage: false,\n      filteringText: ''\n    });\n  };\n  var fireLoadMoreOnInputChange = function fireLoadMoreOnInputChange(filteringText) {\n    return fireLoadMore({\n      firstPage: true,\n      samePage: false,\n      filteringText: filteringText\n    });\n  };\n  return {\n    fireLoadMoreOnScroll: fireLoadMoreOnScroll,\n    fireLoadMoreOnRecoveryClick: fireLoadMoreOnRecoveryClick,\n    fireLoadMoreOnInputFocus: fireLoadMoreOnInputFocus,\n    fireLoadMoreOnInputChange: fireLoadMoreOnInputChange\n  };\n};","map":{"version":3,"mappings":"AAAA;AACA;AAEA,SAASA,MAAM,QAAQ,OAAO;AAkB9B,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsB,OAI4B;EAAA,wBAH7DC,OAAO;IAAPA,OAAO,6BAAG,EAAE;IACZC,UAAU,QAAVA,UAAU;IACVC,WAAW,QAAXA,WAAW;EAEX,IAAMC,iBAAiB,GAAGL,MAAM,CAAgB,IAAI,CAAC;EAErD,IAAMM,YAAY,GAAG,SAAfA,YAAY,QAQb;IAAA,IAPHC,SAAS,SAATA,SAAS;MACTC,QAAQ,SAARA,QAAQ;MACRC,aAAa,SAAbA,aAAa;;IAMb,IAAIA,aAAa,KAAKC,SAAS,IAAIL,iBAAiB,CAACM,OAAO,KAAKF,aAAa,EAAE;MAC9E,IAAIA,aAAa,KAAKC,SAAS,EAAE;QAC/BL,iBAAiB,CAACM,OAAO,GAAGF,aAAa;;MAE3CL,WAAW,CAAC;QAAEK,aAAa,EAAE,uBAAiB,CAACE,OAAO,mCAAI,EAAE;QAAEJ,SAAS,EAATA,SAAS;QAAEC,QAAQ,EAARA;MAAQ,CAAE,CAAC;;EAExF,CAAC;EAED,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAoB,GAAQ;IAChCV,OAAO,CAACW,MAAM,GAAG,CAAC,IAAIV,UAAU,KAAK,SAAS,IAAIG,YAAY,CAAC;MAAEC,SAAS,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAK,CAAE,CAAC;EACvG,CAAC;EAED,IAAMM,2BAA2B,GAAG,SAA9BA,2BAA2B;IAAA,OAASR,YAAY,CAAC;MAAEC,SAAS,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAI,CAAE,CAAC;EAAA;EAE5F,IAAMO,wBAAwB,GAAG,SAA3BA,wBAAwB;IAAA,OAAST,YAAY,CAAC;MAAEC,SAAS,EAAE,IAAI;MAAEC,QAAQ,EAAE,KAAK;MAAEC,aAAa,EAAE;IAAE,CAAE,CAAC;EAAA;EAE5G,IAAMO,yBAAyB,GAAG,SAA5BA,yBAAyB,CAAIP,aAAqB;IAAA,OACtDH,YAAY,CAAC;MAAEC,SAAS,EAAE,IAAI;MAAEC,QAAQ,EAAE,KAAK;MAAEC,aAAa,EAAbA;IAAa,CAAE,CAAC;EAAA;EAEnE,OAAO;IAAEG,oBAAoB,EAApBA,oBAAoB;IAAEE,2BAA2B,EAA3BA,2BAA2B;IAAEC,wBAAwB,EAAxBA,wBAAwB;IAAEC,yBAAyB,EAAzBA;EAAyB,CAAE;AACnH,CAAC","names":["useRef","useAutosuggestLoadMore","options","statusType","onLoadItems","lastFilteringText","fireLoadMore","firstPage","samePage","filteringText","undefined","current","fireLoadMoreOnScroll","length","fireLoadMoreOnRecoveryClick","fireLoadMoreOnInputFocus","fireLoadMoreOnInputChange"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/autosuggest/lib/default/autosuggest/load-more-controller.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useRef } from 'react';\nimport { AutosuggestProps } from './interfaces';\nimport { OptionsLoadItemsDetail } from '../internal/components/dropdown/interfaces';\nimport { DropdownStatusProps } from '../internal/components/dropdown-status/interfaces';\n\nexport interface UseAutosuggestLoadMoreProps {\n  options?: AutosuggestProps.Options;\n  statusType: DropdownStatusProps.StatusType;\n  onLoadItems: (detail: OptionsLoadItemsDetail) => void;\n}\n\nexport interface AutosuggestLoadMoreHandlers {\n  fireLoadMoreOnScroll(): void;\n  fireLoadMoreOnRecoveryClick(): void;\n  fireLoadMoreOnInputFocus(): void;\n  fireLoadMoreOnInputChange(filteringText: string): void;\n}\n\nexport const useAutosuggestLoadMore = ({\n  options = [],\n  statusType,\n  onLoadItems,\n}: UseAutosuggestLoadMoreProps): AutosuggestLoadMoreHandlers => {\n  const lastFilteringText = useRef<string | null>(null);\n\n  const fireLoadMore = ({\n    firstPage,\n    samePage,\n    filteringText,\n  }: {\n    firstPage: boolean;\n    samePage: boolean;\n    filteringText?: string;\n  }) => {\n    if (filteringText === undefined || lastFilteringText.current !== filteringText) {\n      if (filteringText !== undefined) {\n        lastFilteringText.current = filteringText;\n      }\n      onLoadItems({ filteringText: lastFilteringText.current ?? '', firstPage, samePage });\n    }\n  };\n\n  const fireLoadMoreOnScroll = () => {\n    options.length > 0 && statusType === 'pending' && fireLoadMore({ firstPage: false, samePage: false });\n  };\n\n  const fireLoadMoreOnRecoveryClick = () => fireLoadMore({ firstPage: false, samePage: true });\n\n  const fireLoadMoreOnInputFocus = () => fireLoadMore({ firstPage: true, samePage: false, filteringText: '' });\n\n  const fireLoadMoreOnInputChange = (filteringText: string) =>\n    fireLoadMore({ firstPage: true, samePage: false, filteringText });\n\n  return { fireLoadMoreOnScroll, fireLoadMoreOnRecoveryClick, fireLoadMoreOnInputFocus, fireLoadMoreOnInputChange };\n};\n"]},"metadata":{},"sourceType":"module"}