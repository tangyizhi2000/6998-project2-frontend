{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport styles from '../styles.css.js';\nimport InternalFormField from '../../form-field/internal';\nimport InternalDateInput from '../../date-input/internal';\nimport InternalTimeInput from '../../time-input/internal';\nimport { useInternalI18n } from '../../i18n/context.js';\nexport default function RangeInputs(_ref) {\n  let {\n    startDate,\n    onChangeStartDate,\n    startTime,\n    onChangeStartTime,\n    endDate,\n    onChangeEndDate,\n    endTime,\n    onChangeEndTime,\n    i18nStrings,\n    dateOnly,\n    timeInputFormat\n  } = _ref;\n  const i18n = useInternalI18n('date-range-picker');\n  return React.createElement(InternalFormField, {\n    constraintText: i18n('i18nStrings.dateTimeConstraintText', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.dateTimeConstraintText)\n  }, React.createElement(\"div\", {\n    className: styles['date-and-time-container']\n  }, React.createElement(\"div\", {\n    className: styles['date-and-time-wrapper']\n  }, React.createElement(InternalFormField, {\n    label: i18n('i18nStrings.startDateLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.startDateLabel),\n    stretch: true\n  }, React.createElement(InternalDateInput, {\n    value: startDate,\n    className: styles['start-date-input'],\n    onChange: event => onChangeStartDate(event.detail.value),\n    placeholder: \"YYYY/MM/DD\"\n  })), !dateOnly && React.createElement(InternalFormField, {\n    label: i18n('i18nStrings.startTimeLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.startTimeLabel),\n    stretch: true\n  }, React.createElement(InternalTimeInput, {\n    value: startTime,\n    onChange: event => onChangeStartTime(event.detail.value),\n    format: timeInputFormat,\n    placeholder: timeInputFormat,\n    className: styles['start-time-input']\n  }))), React.createElement(\"div\", {\n    className: styles['date-and-time-wrapper']\n  }, React.createElement(InternalFormField, {\n    label: i18n('i18nStrings.endDateLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.endDateLabel),\n    stretch: true\n  }, React.createElement(InternalDateInput, {\n    value: endDate,\n    className: styles['end-date-input'],\n    onChange: event => onChangeEndDate(event.detail.value),\n    placeholder: \"YYYY/MM/DD\"\n  })), !dateOnly && React.createElement(InternalFormField, {\n    label: i18n('i18nStrings.endTimeLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.endTimeLabel),\n    stretch: true\n  }, React.createElement(InternalTimeInput, {\n    value: endTime,\n    onChange: event => onChangeEndTime(event.detail.value),\n    format: timeInputFormat,\n    placeholder: timeInputFormat,\n    className: styles['end-time-input']\n  })))));\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,kBAAkB;AAGrC,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,iBAAiB,MAAM,2BAA2B;AAEzD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,SAASC,eAAe,QAAQ,uBAAuB;AAqBvD,eAAc,SAAUC,WAAW,OAYhB;EAAA,IAZiB;IAClCC,SAAS;IACTC,iBAAiB;IACjBC,SAAS;IACTC,iBAAiB;IACjBC,OAAO;IACPC,eAAe;IACfC,OAAO;IACPC,eAAe;IACfC,WAAW;IACXC,QAAQ;IACRC;EAAe,CACE;EACjB,MAAMC,IAAI,GAAGb,eAAe,CAAC,mBAAmB,CAAC;EAEjD,OACEL,oBAACE,iBAAiB;IAACiB,cAAc,EAAED,IAAI,CAAC,oCAAoC,EAAEH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEK,sBAAsB;EAAC,GAChHpB;IAAKqB,SAAS,EAAEpB,MAAM,CAAC,yBAAyB;EAAC,GAC/CD;IAAKqB,SAAS,EAAEpB,MAAM,CAAC,uBAAuB;EAAC,GAC7CD,oBAACE,iBAAiB;IAACoB,KAAK,EAAEJ,IAAI,CAAC,4BAA4B,EAAEH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEQ,cAAc,CAAC;IAAEC,OAAO,EAAE;EAAI,GACtGxB,oBAACG,iBAAiB;IAChBsB,KAAK,EAAElB,SAAS;IAChBc,SAAS,EAAEpB,MAAM,CAAC,kBAAkB,CAAC;IACrCyB,QAAQ,EAAEC,KAAK,IAAInB,iBAAiB,CAACmB,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;IACxDI,WAAW,EAAC;EAAY,EACxB,CACgB,EACnB,CAACb,QAAQ,IACRhB,oBAACE,iBAAiB;IAACoB,KAAK,EAAEJ,IAAI,CAAC,4BAA4B,EAAEH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEe,cAAc,CAAC;IAAEN,OAAO,EAAE;EAAI,GACtGxB,oBAACI,iBAAiB;IAChBqB,KAAK,EAAEhB,SAAS;IAChBiB,QAAQ,EAAEC,KAAK,IAAIjB,iBAAiB,CAACiB,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;IACxDM,MAAM,EAAEd,eAAe;IACvBY,WAAW,EAAEZ,eAAe;IAC5BI,SAAS,EAAEpB,MAAM,CAAC,kBAAkB;EAAC,EACrC,CAEL,CACG,EAEND;IAAKqB,SAAS,EAAEpB,MAAM,CAAC,uBAAuB;EAAC,GAC7CD,oBAACE,iBAAiB;IAACoB,KAAK,EAAEJ,IAAI,CAAC,0BAA0B,EAAEH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEiB,YAAY,CAAC;IAAER,OAAO,EAAE;EAAI,GAClGxB,oBAACG,iBAAiB;IAChBsB,KAAK,EAAEd,OAAO;IACdU,SAAS,EAAEpB,MAAM,CAAC,gBAAgB,CAAC;IACnCyB,QAAQ,EAAEC,KAAK,IAAIf,eAAe,CAACe,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;IACtDI,WAAW,EAAC;EAAY,EACxB,CACgB,EACnB,CAACb,QAAQ,IACRhB,oBAACE,iBAAiB;IAACoB,KAAK,EAAEJ,IAAI,CAAC,0BAA0B,EAAEH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEkB,YAAY,CAAC;IAAET,OAAO,EAAE;EAAI,GAClGxB,oBAACI,iBAAiB;IAChBqB,KAAK,EAAEZ,OAAO;IACda,QAAQ,EAAEC,KAAK,IAAIb,eAAe,CAACa,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;IACtDM,MAAM,EAAEd,eAAe;IACvBY,WAAW,EAAEZ,eAAe;IAC5BI,SAAS,EAAEpB,MAAM,CAAC,gBAAgB;EAAC,EACnC,CAEL,CACG,CACF,CACY;AAExB","names":["React","styles","InternalFormField","InternalDateInput","InternalTimeInput","useInternalI18n","RangeInputs","startDate","onChangeStartDate","startTime","onChangeStartTime","endDate","onChangeEndDate","endTime","onChangeEndTime","i18nStrings","dateOnly","timeInputFormat","i18n","constraintText","dateTimeConstraintText","className","label","startDateLabel","stretch","value","onChange","event","detail","placeholder","startTimeLabel","format","endDateLabel","endTimeLabel"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/date-range-picker/calendar/lib/default/date-range-picker/calendar/range-inputs.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport styles from '../styles.css.js';\nimport { BaseComponentProps } from '../../internal/base-component';\nimport { RangeCalendarI18nStrings } from '../interfaces';\nimport InternalFormField from '../../form-field/internal';\nimport InternalDateInput from '../../date-input/internal';\nimport { TimeInputProps } from '../../time-input/interfaces';\nimport InternalTimeInput from '../../time-input/internal';\nimport { useInternalI18n } from '../../i18n/context.js';\n\ntype I18nStrings = Pick<\n  RangeCalendarI18nStrings,\n  'dateTimeConstraintText' | 'startDateLabel' | 'startTimeLabel' | 'endDateLabel' | 'endTimeLabel'\n>;\n\nexport interface RangeInputsProps extends BaseComponentProps {\n  startDate: string;\n  onChangeStartDate: (value: string) => void;\n  startTime: string;\n  onChangeStartTime: (value: string) => void;\n  endDate: string;\n  onChangeEndDate: (value: string) => void;\n  endTime: string;\n  onChangeEndTime: (value: string) => void;\n  i18nStrings?: I18nStrings;\n  dateOnly: boolean;\n  timeInputFormat: TimeInputProps.Format;\n}\n\nexport default function RangeInputs({\n  startDate,\n  onChangeStartDate,\n  startTime,\n  onChangeStartTime,\n  endDate,\n  onChangeEndDate,\n  endTime,\n  onChangeEndTime,\n  i18nStrings,\n  dateOnly,\n  timeInputFormat,\n}: RangeInputsProps) {\n  const i18n = useInternalI18n('date-range-picker');\n\n  return (\n    <InternalFormField constraintText={i18n('i18nStrings.dateTimeConstraintText', i18nStrings?.dateTimeConstraintText)}>\n      <div className={styles['date-and-time-container']}>\n        <div className={styles['date-and-time-wrapper']}>\n          <InternalFormField label={i18n('i18nStrings.startDateLabel', i18nStrings?.startDateLabel)} stretch={true}>\n            <InternalDateInput\n              value={startDate}\n              className={styles['start-date-input']}\n              onChange={event => onChangeStartDate(event.detail.value)}\n              placeholder=\"YYYY/MM/DD\"\n            />\n          </InternalFormField>\n          {!dateOnly && (\n            <InternalFormField label={i18n('i18nStrings.startTimeLabel', i18nStrings?.startTimeLabel)} stretch={true}>\n              <InternalTimeInput\n                value={startTime}\n                onChange={event => onChangeStartTime(event.detail.value)}\n                format={timeInputFormat}\n                placeholder={timeInputFormat}\n                className={styles['start-time-input']}\n              />\n            </InternalFormField>\n          )}\n        </div>\n\n        <div className={styles['date-and-time-wrapper']}>\n          <InternalFormField label={i18n('i18nStrings.endDateLabel', i18nStrings?.endDateLabel)} stretch={true}>\n            <InternalDateInput\n              value={endDate}\n              className={styles['end-date-input']}\n              onChange={event => onChangeEndDate(event.detail.value)}\n              placeholder=\"YYYY/MM/DD\"\n            />\n          </InternalFormField>\n          {!dateOnly && (\n            <InternalFormField label={i18n('i18nStrings.endTimeLabel', i18nStrings?.endTimeLabel)} stretch={true}>\n              <InternalTimeInput\n                value={endTime}\n                onChange={event => onChangeEndTime(event.detail.value)}\n                format={timeInputFormat}\n                placeholder={timeInputFormat}\n                className={styles['end-time-input']}\n              />\n            </InternalFormField>\n          )}\n        </div>\n      </div>\n    </InternalFormField>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}