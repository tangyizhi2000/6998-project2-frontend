{"ast":null,"code":"import _toArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/toArray.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { compareDates, getColumnAriaLabel, includes } from './table-utils';\nimport InternalIcon from '../../icon/internal';\nimport InternalLink from '../../link/internal';\nimport { formatSize, formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { joinObjectPath } from '../utils';\nimport { useInternalI18n } from '../../i18n/context';\nexport function ObjectsTable(_ref) {\n  var forwardFocusRef = _ref.forwardFocusRef,\n    pathSegments = _ref.pathSegments,\n    i18nStrings = _ref.i18nStrings,\n    isVisualRefresh = _ref.isVisualRefresh,\n    isItemDisabled = _ref.isItemDisabled,\n    selectableItemsTypes = _ref.selectableItemsTypes,\n    _fetchData = _ref.fetchData,\n    visibleColumns = _ref.visibleColumns,\n    onDrilldown = _ref.onDrilldown,\n    _onSelect = _ref.onSelect;\n  var _a, _b, _c, _d;\n  var i18n = useInternalI18n('s3-resource-selector');\n  return React.createElement(BasicS3Table, {\n    // remount fresh component every we change the path to reset the inner state (e.g. selection/filtering)\n    key: pathSegments.join('/'),\n    forwardFocusRef: forwardFocusRef,\n    trackBy: \"Key\",\n    fetchData: function fetchData() {\n      var _pathSegments = _toArray(pathSegments),\n        bucketName = _pathSegments[0],\n        rest = _pathSegments.slice(1);\n      return _fetchData(bucketName, joinObjectPath(rest));\n    },\n    i18nStrings: Object.assign(Object.assign({}, getSharedI18Strings(i18n, i18nStrings)), {\n      header: i18n('i18nStrings.selectionObjects', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjects),\n      loadingText: i18n('i18nStrings.selectionObjectsLoading', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsLoading),\n      filteringAriaLabel: (_a = i18n('i18nStrings.labelFiltering', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering, function (format) {\n        return function (itemsType) {\n          return format({\n            itemsType: itemsType\n          });\n        };\n      })) === null || _a === void 0 ? void 0 : _a((_b = i18n('i18nStrings.selectionObjects', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjects)) !== null && _b !== void 0 ? _b : ''),\n      filteringPlaceholder: i18n('i18nStrings.selectionObjectsSearchPlaceholder', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsSearchPlaceholder),\n      emptyText: i18n('i18nStrings.selectionObjectsNoItems', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsNoItems),\n      selectionLabels: Object.assign(Object.assign({}, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsObjectsSelection), {\n        selectionGroupLabel: i18n('i18nStrings.labelsObjectsSelection.selectionGroupLabel', (_c = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsObjectsSelection) === null || _c === void 0 ? void 0 : _c.selectionGroupLabel),\n        itemSelectionLabel: i18n('i18nStrings.labelsObjectsSelection.itemSelectionLabel', (_d = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsObjectsSelection) === null || _d === void 0 ? void 0 : _d.itemSelectionLabel, function (format) {\n          return function (data, item) {\n            var _a;\n            return format({\n              item__Key: (_a = item.Key) !== null && _a !== void 0 ? _a : ''\n            });\n          };\n        })\n      })\n    }),\n    isVisualRefresh: isVisualRefresh,\n    visibleColumns: visibleColumns,\n    isItemDisabled: isItemDisabled || function () {\n      return !includes(selectableItemsTypes, 'objects');\n    },\n    columnDefinitions: [{\n      id: 'Key',\n      header: i18n('i18nStrings.columnObjectKey', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectKey),\n      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n('i18nStrings.columnObjectKey', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectKey)),\n      sortingField: 'Key',\n      cell: function cell(item) {\n        var isClickable = item.IsFolder || includes(selectableItemsTypes, 'versions');\n        return React.createElement(React.Fragment, null, React.createElement(InternalIcon, {\n          name: item.IsFolder ? 'folder' : 'file'\n        }), ' ', isClickable ? React.createElement(InternalLink, {\n          onFollow: function onFollow() {\n            return item.Key && onDrilldown(item);\n          },\n          variant: \"link\"\n        }, item.Key) : item.Key);\n      },\n      minWidth: '250px'\n    }, {\n      id: 'LastModified',\n      header: i18n('i18nStrings.columnObjectLastModified', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectLastModified),\n      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n('i18nStrings.columnObjectLastModified', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectLastModified)),\n      sortingComparator: function sortingComparator(a, b) {\n        return compareDates(a.LastModified, b.LastModified);\n      },\n      cell: function cell(item) {\n        return formatDefault(item.LastModified);\n      }\n    }, {\n      id: 'Size',\n      header: i18n('i18nStrings.columnObjectSize', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectSize),\n      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n('i18nStrings.columnObjectSize', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectSize)),\n      sortingField: 'Size',\n      cell: function cell(item) {\n        return formatSize(item.Size);\n      }\n    }],\n    onSelect: function onSelect(item) {\n      var _a;\n      return _onSelect((_a = item === null || item === void 0 ? void 0 : item.Key) !== null && _a !== void 0 ? _a : '');\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["React","compareDates","getColumnAriaLabel","includes","InternalIcon","InternalLink","formatSize","formatDefault","BasicS3Table","getSharedI18Strings","joinObjectPath","useInternalI18n","ObjectsTable","forwardFocusRef","pathSegments","i18nStrings","isVisualRefresh","isItemDisabled","selectableItemsTypes","fetchData","visibleColumns","onDrilldown","onSelect","i18n","key","join","trackBy","bucketName","rest","header","selectionObjects","loadingText","selectionObjectsLoading","filteringAriaLabel","labelFiltering","format","itemsType","filteringPlaceholder","selectionObjectsSearchPlaceholder","emptyText","selectionObjectsNoItems","selectionLabels","labelsObjectsSelection","selectionGroupLabel","itemSelectionLabel","data","item","item__Key","Key","columnDefinitions","id","columnObjectKey","ariaLabel","sortingField","cell","isClickable","IsFolder","name","onFollow","variant","minWidth","columnObjectLastModified","sortingComparator","a","b","LastModified","columnObjectSize","Size"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/lib/default/s3-resource-selector/s3-modal/objects-table.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { compareDates, getColumnAriaLabel, includes } from './table-utils';\nimport InternalIcon from '../../icon/internal';\nimport InternalLink from '../../link/internal';\nimport { TableProps } from '../../table/interfaces';\nimport { ForwardFocusRef } from '../../internal/hooks/forward-focus';\nimport { formatSize, formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { joinObjectPath } from '../utils';\nimport { useInternalI18n } from '../../i18n/context';\n\ninterface ObjectsTableProps {\n  forwardFocusRef: React.Ref<ForwardFocusRef>;\n  pathSegments: ReadonlyArray<string>;\n  visibleColumns: ReadonlyArray<string>;\n  isItemDisabled: TableProps.IsItemDisabled<S3ResourceSelectorProps.Object> | undefined;\n  selectableItemsTypes: S3ResourceSelectorProps['selectableItemsTypes'];\n  fetchData: S3ResourceSelectorProps['fetchObjects'];\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  isVisualRefresh?: boolean;\n  onDrilldown: (path: S3ResourceSelectorProps.Object) => void;\n  onSelect: (uri: string) => void;\n}\n\nexport function ObjectsTable({\n  forwardFocusRef,\n  pathSegments,\n  i18nStrings,\n  isVisualRefresh,\n  isItemDisabled,\n  selectableItemsTypes,\n  fetchData,\n  visibleColumns,\n  onDrilldown,\n  onSelect,\n}: ObjectsTableProps) {\n  const i18n = useInternalI18n('s3-resource-selector');\n\n  return (\n    <BasicS3Table<S3ResourceSelectorProps.Object>\n      // remount fresh component every we change the path to reset the inner state (e.g. selection/filtering)\n      key={pathSegments.join('/')}\n      forwardFocusRef={forwardFocusRef}\n      trackBy=\"Key\"\n      fetchData={() => {\n        const [bucketName, ...rest] = pathSegments;\n        return fetchData(bucketName, joinObjectPath(rest));\n      }}\n      i18nStrings={{\n        ...getSharedI18Strings(i18n, i18nStrings),\n        header: i18n('i18nStrings.selectionObjects', i18nStrings?.selectionObjects),\n        loadingText: i18n('i18nStrings.selectionObjectsLoading', i18nStrings?.selectionObjectsLoading),\n        filteringAriaLabel: i18n(\n          'i18nStrings.labelFiltering',\n          i18nStrings?.labelFiltering,\n          format => itemsType => format({ itemsType })\n        )?.(i18n('i18nStrings.selectionObjects', i18nStrings?.selectionObjects) ?? ''),\n        filteringPlaceholder: i18n(\n          'i18nStrings.selectionObjectsSearchPlaceholder',\n          i18nStrings?.selectionObjectsSearchPlaceholder\n        ),\n        emptyText: i18n('i18nStrings.selectionObjectsNoItems', i18nStrings?.selectionObjectsNoItems),\n        selectionLabels: {\n          ...i18nStrings?.labelsObjectsSelection,\n          selectionGroupLabel: i18n(\n            'i18nStrings.labelsObjectsSelection.selectionGroupLabel',\n            i18nStrings?.labelsObjectsSelection?.selectionGroupLabel\n          ),\n          itemSelectionLabel: i18n(\n            'i18nStrings.labelsObjectsSelection.itemSelectionLabel',\n            i18nStrings?.labelsObjectsSelection?.itemSelectionLabel,\n            format => (data, item) => format({ item__Key: item.Key ?? '' })\n          ),\n        },\n      }}\n      isVisualRefresh={isVisualRefresh}\n      visibleColumns={visibleColumns}\n      isItemDisabled={isItemDisabled || (() => !includes(selectableItemsTypes, 'objects'))}\n      columnDefinitions={[\n        {\n          id: 'Key',\n          header: i18n('i18nStrings.columnObjectKey', i18nStrings?.columnObjectKey),\n          ariaLabel: getColumnAriaLabel(\n            i18n,\n            i18nStrings,\n            i18n('i18nStrings.columnObjectKey', i18nStrings?.columnObjectKey)\n          ),\n          sortingField: 'Key',\n          cell: item => {\n            const isClickable = item.IsFolder || includes(selectableItemsTypes, 'versions');\n            return (\n              <>\n                <InternalIcon name={item.IsFolder ? 'folder' : 'file'} />{' '}\n                {isClickable ? (\n                  <InternalLink onFollow={() => item.Key && onDrilldown(item)} variant=\"link\">\n                    {item.Key}\n                  </InternalLink>\n                ) : (\n                  item.Key\n                )}\n              </>\n            );\n          },\n          minWidth: '250px',\n        },\n        {\n          id: 'LastModified',\n          header: i18n('i18nStrings.columnObjectLastModified', i18nStrings?.columnObjectLastModified),\n          ariaLabel: getColumnAriaLabel(\n            i18n,\n            i18nStrings,\n            i18n('i18nStrings.columnObjectLastModified', i18nStrings?.columnObjectLastModified)\n          ),\n          sortingComparator: (a, b) => compareDates(a.LastModified, b.LastModified),\n          cell: item => formatDefault(item.LastModified),\n        },\n        {\n          id: 'Size',\n          header: i18n('i18nStrings.columnObjectSize', i18nStrings?.columnObjectSize),\n          ariaLabel: getColumnAriaLabel(\n            i18n,\n            i18nStrings,\n            i18n('i18nStrings.columnObjectSize', i18nStrings?.columnObjectSize)\n          ),\n          sortingField: 'Size',\n          cell: item => formatSize(item.Size),\n        },\n      ]}\n      onSelect={item => onSelect(item?.Key ?? '')}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}