{"ast":null,"code":"import { getGridPlacement, isInside } from \"../utils/rects\";\nimport { getNormalizedElementRect } from \"../utils/screen\";\n/**\n * Returns IDs of droppables hovered by the draggable rect.\n */\nexport function getHoveredDroppables(collisionRect, droppables) {\n  const droppableRects = droppables.map(_ref => {\n    let [, element] = _ref;\n    return getNormalizedElementRect(element);\n  });\n  const bounds = getGridPlacement(collisionRect, droppableRects);\n  return droppables.filter((_, index) => isInside(droppableRects[index], bounds)).map(_ref2 => {\n    let [droppableId] = _ref2;\n    return droppableId;\n  });\n}","map":{"version":3,"names":["getGridPlacement","isInside","getNormalizedElementRect","getHoveredDroppables","collisionRect","droppables","droppableRects","map","element","bounds","filter","_","index","droppableId"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/board-components/internal/dnd-controller/get-hovered-droppables.js"],"sourcesContent":["import { getGridPlacement, isInside } from \"../utils/rects\";\nimport { getNormalizedElementRect } from \"../utils/screen\";\n/**\n * Returns IDs of droppables hovered by the draggable rect.\n */\nexport function getHoveredDroppables(collisionRect, droppables) {\n    const droppableRects = droppables.map(([, element]) => getNormalizedElementRect(element));\n    const bounds = getGridPlacement(collisionRect, droppableRects);\n    return droppables.filter((_, index) => isInside(droppableRects[index], bounds)).map(([droppableId]) => droppableId);\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,QAAQ,QAAQ,gBAAgB;AAC3D,SAASC,wBAAwB,QAAQ,iBAAiB;AAC1D;AACA;AACA;AACA,OAAO,SAASC,oBAAoB,CAACC,aAAa,EAAEC,UAAU,EAAE;EAC5D,MAAMC,cAAc,GAAGD,UAAU,CAACE,GAAG,CAAC;IAAA,IAAC,GAAGC,OAAO,CAAC;IAAA,OAAKN,wBAAwB,CAACM,OAAO,CAAC;EAAA,EAAC;EACzF,MAAMC,MAAM,GAAGT,gBAAgB,CAACI,aAAa,EAAEE,cAAc,CAAC;EAC9D,OAAOD,UAAU,CAACK,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKX,QAAQ,CAACK,cAAc,CAACM,KAAK,CAAC,EAAEH,MAAM,CAAC,CAAC,CAACF,GAAG,CAAC;IAAA,IAAC,CAACM,WAAW,CAAC;IAAA,OAAKA,WAAW;EAAA,EAAC;AACvH"},"metadata":{},"sourceType":"module"}