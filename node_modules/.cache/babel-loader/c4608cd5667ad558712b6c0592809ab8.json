{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport InternalMixedLineBarChart from '../mixed-line-bar-chart/internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nfunction BarChart(_a) {\n  var {\n      series = [],\n      height = 500,\n      xScaleType = 'categorical',\n      yScaleType = 'linear',\n      stackedBars = false,\n      horizontalBars = false,\n      detailPopoverSize = 'medium',\n      statusType = 'finished',\n      emphasizeBaselineAxis = true\n    } = _a,\n    props = __rest(_a, [\"series\", \"height\", \"xScaleType\", \"yScaleType\", \"stackedBars\", \"horizontalBars\", \"detailPopoverSize\", \"statusType\", \"emphasizeBaselineAxis\"]);\n  const baseComponentProps = useBaseComponent('BarChart');\n  const baseProps = getBaseProps(props);\n  const className = clsx(baseProps.className, styles.root);\n  return React.createElement(InternalMixedLineBarChart, Object.assign({}, props, baseComponentProps, {\n    className: className,\n    height: height,\n    xScaleType: xScaleType,\n    yScaleType: yScaleType,\n    stackedBars: stackedBars,\n    horizontalBars: horizontalBars,\n    series: series,\n    detailPopoverSize: detailPopoverSize,\n    statusType: statusType,\n    emphasizeBaselineAxis: emphasizeBaselineAxis\n  }));\n}\napplyDisplayName(BarChart, 'BarChart');\nexport default BarChart;","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAGvB,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,yBAAyB,MAAM,kCAAkC;AACxE,OAAOC,gBAAgB,MAAM,sCAAsC;AAInE,SAASC,QAAQ,CAAmCC,EAWjC;MAXiC;MAClDC,MAAM,GAAG,EAAE;MACXC,MAAM,GAAG,GAAG;MACZC,UAAU,GAAG,aAAa;MAC1BC,UAAU,GAAG,QAAQ;MACrBC,WAAW,GAAG,KAAK;MACnBC,cAAc,GAAG,KAAK;MACtBC,iBAAiB,GAAG,QAAQ;MAC5BC,UAAU,GAAG,UAAU;MACvBC,qBAAqB,GAAG;IAAI,MAEX;IADdC,KAAK,cAV0C,6IAWnD,CADS;EAER,MAAMC,kBAAkB,GAAGb,gBAAgB,CAAC,UAAU,CAAC;EACvD,MAAMc,SAAS,GAAGjB,YAAY,CAACe,KAAK,CAAC;EACrC,MAAMG,SAAS,GAAGpB,IAAI,CAACmB,SAAS,CAACC,SAAS,EAAEjB,MAAM,CAACkB,IAAI,CAAC;EAExD,OACEtB,oBAACK,yBAAyB,oBACpBa,KAAK,EACLC,kBAAkB;IACtBE,SAAS,EAAEA,SAAS;IACpBX,MAAM,EAAEA,MAAM;IACdC,UAAU,EAAEA,UAAU;IACtBC,UAAU,EAAEA,UAAU;IACtBC,WAAW,EAAEA,WAAW;IACxBC,cAAc,EAAEA,cAAc;IAC9BL,MAAM,EAAEA,MAAM;IACdM,iBAAiB,EAAEA,iBAAiB;IACpCC,UAAU,EAAEA,UAAU;IACtBC,qBAAqB,EAAEA;EAAqB,GAC5C;AAEN;AAEAf,gBAAgB,CAACK,QAAQ,EAAE,UAAU,CAAC;AAEtC,eAAeA,QAAQ","names":["React","clsx","applyDisplayName","getBaseProps","styles","InternalMixedLineBarChart","useBaseComponent","BarChart","_a","series","height","xScaleType","yScaleType","stackedBars","horizontalBars","detailPopoverSize","statusType","emphasizeBaselineAxis","props","baseComponentProps","baseProps","className","root"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/bar-chart/lib/default/bar-chart/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { BarChartProps } from './interfaces';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport InternalMixedLineBarChart from '../mixed-line-bar-chart/internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { BarChartProps };\n\nfunction BarChart<T extends number | string | Date>({\n  series = [],\n  height = 500,\n  xScaleType = 'categorical',\n  yScaleType = 'linear',\n  stackedBars = false,\n  horizontalBars = false,\n  detailPopoverSize = 'medium',\n  statusType = 'finished',\n  emphasizeBaselineAxis = true,\n  ...props\n}: BarChartProps<T>) {\n  const baseComponentProps = useBaseComponent('BarChart');\n  const baseProps = getBaseProps(props);\n  const className = clsx(baseProps.className, styles.root);\n\n  return (\n    <InternalMixedLineBarChart\n      {...props}\n      {...baseComponentProps}\n      className={className}\n      height={height}\n      xScaleType={xScaleType}\n      yScaleType={yScaleType}\n      stackedBars={stackedBars}\n      horizontalBars={horizontalBars}\n      series={series}\n      detailPopoverSize={detailPopoverSize}\n      statusType={statusType}\n      emphasizeBaselineAxis={emphasizeBaselineAxis}\n    />\n  );\n}\n\napplyDisplayName(BarChart, 'BarChart');\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}