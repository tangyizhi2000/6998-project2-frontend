{"ast":null,"code":"import React from 'react';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar props = ['bottom', 'height', 'left', 'right', 'top', 'width'];\nvar rectChanged = function rectChanged(a, b) {\n  if (a === void 0) {\n    a = {};\n  }\n  if (b === void 0) {\n    b = {};\n  }\n  return props.some(function (prop) {\n    return a[prop] !== b[prop];\n  });\n};\nvar observedNodes = /*#__PURE__*/new Map();\nvar rafId;\nvar run = function run() {\n  var changedStates = [];\n  observedNodes.forEach(function (state, node) {\n    var newRect = node.getBoundingClientRect();\n    if (rectChanged(newRect, state.rect)) {\n      state.rect = newRect;\n      changedStates.push(state);\n    }\n  });\n  changedStates.forEach(function (state) {\n    state.callbacks.forEach(function (cb) {\n      return cb(state.rect);\n    });\n  });\n  rafId = window.requestAnimationFrame(run);\n};\nfunction observeRect(node, cb) {\n  return {\n    observe: function observe() {\n      var wasEmpty = observedNodes.size === 0;\n      if (observedNodes.has(node)) {\n        observedNodes.get(node).callbacks.push(cb);\n      } else {\n        observedNodes.set(node, {\n          rect: undefined,\n          hasRectChanged: false,\n          callbacks: [cb]\n        });\n      }\n      if (wasEmpty) run();\n    },\n    unobserve: function unobserve() {\n      var state = observedNodes.get(node);\n      if (state) {\n        // Remove the callback\n        var index = state.callbacks.indexOf(cb);\n        if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference\n\n        if (!state.callbacks.length) observedNodes[\"delete\"](node); // Stop the loop\n\n        if (!observedNodes.size) cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nfunction useRect(nodeRef, initialRect) {\n  if (initialRect === void 0) {\n    initialRect = {\n      width: 0,\n      height: 0\n    };\n  }\n  var _React$useState = React.useState(nodeRef.current),\n    element = _React$useState[0],\n    setElement = _React$useState[1];\n  var _React$useReducer = React.useReducer(rectReducer, initialRect),\n    rect = _React$useReducer[0],\n    dispatch = _React$useReducer[1];\n  var initialRectSet = React.useRef(false);\n  useIsomorphicLayoutEffect(function () {\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current);\n    }\n  });\n  useIsomorphicLayoutEffect(function () {\n    if (element && !initialRectSet.current) {\n      initialRectSet.current = true;\n      var _rect = element.getBoundingClientRect();\n      dispatch({\n        rect: _rect\n      });\n    }\n  }, [element]);\n  React.useEffect(function () {\n    if (!element) {\n      return;\n    }\n    var observer = observeRect(element, function (rect) {\n      dispatch({\n        rect: rect\n      });\n    });\n    observer.observe();\n    return function () {\n      observer.unobserve();\n    };\n  }, [element]);\n  return rect;\n}\nfunction rectReducer(state, action) {\n  var rect = action.rect;\n  if (state.height !== rect.height || state.width !== rect.width) {\n    return rect;\n  }\n  return state;\n}\nvar defaultEstimateSize = function defaultEstimateSize() {\n  return 50;\n};\nvar defaultKeyExtractor = function defaultKeyExtractor(index) {\n  return index;\n};\nvar defaultMeasureSize = function defaultMeasureSize(el, horizontal) {\n  var key = horizontal ? 'offsetWidth' : 'offsetHeight';\n  return el[key];\n};\nvar defaultRangeExtractor = function defaultRangeExtractor(range) {\n  var start = Math.max(range.start - range.overscan, 0);\n  var end = Math.min(range.end + range.overscan, range.size - 1);\n  var arr = [];\n  for (var i = start; i <= end; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\nfunction useVirtual(_ref) {\n  var _measurements;\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 0 : _ref$size,\n    _ref$estimateSize = _ref.estimateSize,\n    estimateSize = _ref$estimateSize === void 0 ? defaultEstimateSize : _ref$estimateSize,\n    _ref$overscan = _ref.overscan,\n    overscan = _ref$overscan === void 0 ? 1 : _ref$overscan,\n    _ref$paddingStart = _ref.paddingStart,\n    paddingStart = _ref$paddingStart === void 0 ? 0 : _ref$paddingStart,\n    _ref$paddingEnd = _ref.paddingEnd,\n    paddingEnd = _ref$paddingEnd === void 0 ? 0 : _ref$paddingEnd,\n    parentRef = _ref.parentRef,\n    horizontal = _ref.horizontal,\n    scrollToFn = _ref.scrollToFn,\n    useObserver = _ref.useObserver,\n    initialRect = _ref.initialRect,\n    onScrollElement = _ref.onScrollElement,\n    scrollOffsetFn = _ref.scrollOffsetFn,\n    _ref$keyExtractor = _ref.keyExtractor,\n    keyExtractor = _ref$keyExtractor === void 0 ? defaultKeyExtractor : _ref$keyExtractor,\n    _ref$measureSize = _ref.measureSize,\n    measureSize = _ref$measureSize === void 0 ? defaultMeasureSize : _ref$measureSize,\n    _ref$rangeExtractor = _ref.rangeExtractor,\n    rangeExtractor = _ref$rangeExtractor === void 0 ? defaultRangeExtractor : _ref$rangeExtractor;\n  var sizeKey = horizontal ? 'width' : 'height';\n  var scrollKey = horizontal ? 'scrollLeft' : 'scrollTop';\n  var latestRef = React.useRef({\n    scrollOffset: 0,\n    measurements: []\n  });\n  var _React$useState = React.useState(0),\n    scrollOffset = _React$useState[0],\n    setScrollOffset = _React$useState[1];\n  latestRef.current.scrollOffset = scrollOffset;\n  var useMeasureParent = useObserver || useRect;\n  var _useMeasureParent = useMeasureParent(parentRef, initialRect),\n    outerSize = _useMeasureParent[sizeKey];\n  latestRef.current.outerSize = outerSize;\n  var defaultScrollToFn = React.useCallback(function (offset) {\n    if (parentRef.current) {\n      parentRef.current[scrollKey] = offset;\n    }\n  }, [parentRef, scrollKey]);\n  var resolvedScrollToFn = scrollToFn || defaultScrollToFn;\n  scrollToFn = React.useCallback(function (offset) {\n    resolvedScrollToFn(offset, defaultScrollToFn);\n  }, [defaultScrollToFn, resolvedScrollToFn]);\n  var _React$useState2 = React.useState({}),\n    measuredCache = _React$useState2[0],\n    setMeasuredCache = _React$useState2[1];\n  var measure = React.useCallback(function () {\n    return setMeasuredCache({});\n  }, []);\n  var pendingMeasuredCacheIndexesRef = React.useRef([]);\n  var measurements = React.useMemo(function () {\n    var min = pendingMeasuredCacheIndexesRef.current.length > 0 ? Math.min.apply(Math, pendingMeasuredCacheIndexesRef.current) : 0;\n    pendingMeasuredCacheIndexesRef.current = [];\n    var measurements = latestRef.current.measurements.slice(0, min);\n    for (var i = min; i < size; i++) {\n      var key = keyExtractor(i);\n      var measuredSize = measuredCache[key];\n      var _start = measurements[i - 1] ? measurements[i - 1].end : paddingStart;\n      var _size = typeof measuredSize === 'number' ? measuredSize : estimateSize(i);\n      var _end = _start + _size;\n      measurements[i] = {\n        index: i,\n        start: _start,\n        size: _size,\n        end: _end,\n        key: key\n      };\n    }\n    return measurements;\n  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor]);\n  var totalSize = (((_measurements = measurements[size - 1]) == null ? void 0 : _measurements.end) || paddingStart) + paddingEnd;\n  latestRef.current.measurements = measurements;\n  latestRef.current.totalSize = totalSize;\n  var element = onScrollElement ? onScrollElement.current : parentRef.current;\n  var scrollOffsetFnRef = React.useRef(scrollOffsetFn);\n  scrollOffsetFnRef.current = scrollOffsetFn;\n  useIsomorphicLayoutEffect(function () {\n    if (!element) {\n      setScrollOffset(0);\n      return;\n    }\n    var onScroll = function onScroll(event) {\n      var offset = scrollOffsetFnRef.current ? scrollOffsetFnRef.current(event) : element[scrollKey];\n      setScrollOffset(offset);\n    };\n    onScroll();\n    element.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true\n    });\n    return function () {\n      element.removeEventListener('scroll', onScroll);\n    };\n  }, [element, scrollKey]);\n  var _calculateRange = calculateRange(latestRef.current),\n    start = _calculateRange.start,\n    end = _calculateRange.end;\n  var indexes = React.useMemo(function () {\n    return rangeExtractor({\n      start: start,\n      end: end,\n      overscan: overscan,\n      size: measurements.length\n    });\n  }, [start, end, overscan, measurements.length, rangeExtractor]);\n  var measureSizeRef = React.useRef(measureSize);\n  measureSizeRef.current = measureSize;\n  var virtualItems = React.useMemo(function () {\n    var virtualItems = [];\n    var _loop = function _loop(k, len) {\n      var i = indexes[k];\n      var measurement = measurements[i];\n      var item = _extends(_extends({}, measurement), {}, {\n        measureRef: function measureRef(el) {\n          if (el) {\n            var measuredSize = measureSizeRef.current(el, horizontal);\n            if (measuredSize !== item.size) {\n              var _scrollOffset = latestRef.current.scrollOffset;\n              if (item.start < _scrollOffset) {\n                defaultScrollToFn(_scrollOffset + (measuredSize - item.size));\n              }\n              pendingMeasuredCacheIndexesRef.current.push(i);\n              setMeasuredCache(function (old) {\n                var _extends2;\n                return _extends(_extends({}, old), {}, (_extends2 = {}, _extends2[item.key] = measuredSize, _extends2));\n              });\n            }\n          }\n        }\n      });\n      virtualItems.push(item);\n    };\n    for (var k = 0, len = indexes.length; k < len; k++) {\n      _loop(k);\n    }\n    return virtualItems;\n  }, [indexes, defaultScrollToFn, horizontal, measurements]);\n  var mountedRef = React.useRef(false);\n  useIsomorphicLayoutEffect(function () {\n    if (mountedRef.current) {\n      setMeasuredCache({});\n    }\n    mountedRef.current = true;\n  }, [estimateSize]);\n  var scrollToOffset = React.useCallback(function (toOffset, _temp) {\n    var _ref2 = _temp === void 0 ? {} : _temp,\n      _ref2$align = _ref2.align,\n      align = _ref2$align === void 0 ? 'start' : _ref2$align;\n    var _latestRef$current = latestRef.current,\n      scrollOffset = _latestRef$current.scrollOffset,\n      outerSize = _latestRef$current.outerSize;\n    if (align === 'auto') {\n      if (toOffset <= scrollOffset) {\n        align = 'start';\n      } else if (toOffset >= scrollOffset + outerSize) {\n        align = 'end';\n      } else {\n        align = 'start';\n      }\n    }\n    if (align === 'start') {\n      scrollToFn(toOffset);\n    } else if (align === 'end') {\n      scrollToFn(toOffset - outerSize);\n    } else if (align === 'center') {\n      scrollToFn(toOffset - outerSize / 2);\n    }\n  }, [scrollToFn]);\n  var tryScrollToIndex = React.useCallback(function (index, _temp2) {\n    var _ref3 = _temp2 === void 0 ? {} : _temp2,\n      _ref3$align = _ref3.align,\n      align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n      rest = _objectWithoutPropertiesLoose(_ref3, [\"align\"]);\n    var _latestRef$current2 = latestRef.current,\n      measurements = _latestRef$current2.measurements,\n      scrollOffset = _latestRef$current2.scrollOffset,\n      outerSize = _latestRef$current2.outerSize;\n    var measurement = measurements[Math.max(0, Math.min(index, size - 1))];\n    if (!measurement) {\n      return;\n    }\n    if (align === 'auto') {\n      if (measurement.end >= scrollOffset + outerSize) {\n        align = 'end';\n      } else if (measurement.start <= scrollOffset) {\n        align = 'start';\n      } else {\n        return;\n      }\n    }\n    var toOffset = align === 'center' ? measurement.start + measurement.size / 2 : align === 'end' ? measurement.end : measurement.start;\n    scrollToOffset(toOffset, _extends({\n      align: align\n    }, rest));\n  }, [scrollToOffset, size]);\n  var scrollToIndex = React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // We do a double request here because of\n    // dynamic sizes which can cause offset shift\n    // and end up in the wrong spot. Unfortunately,\n    // we can't know about those dynamic sizes until\n    // we try and render them. So double down!\n    tryScrollToIndex.apply(void 0, args);\n    requestAnimationFrame(function () {\n      tryScrollToIndex.apply(void 0, args);\n    });\n  }, [tryScrollToIndex]);\n  return {\n    virtualItems: virtualItems,\n    totalSize: totalSize,\n    scrollToOffset: scrollToOffset,\n    scrollToIndex: scrollToIndex,\n    measure: measure\n  };\n}\nvar findNearestBinarySearch = function findNearestBinarySearch(low, high, getCurrentValue, value) {\n  while (low <= high) {\n    var middle = (low + high) / 2 | 0;\n    var currentValue = getCurrentValue(middle);\n    if (currentValue < value) {\n      low = middle + 1;\n    } else if (currentValue > value) {\n      high = middle - 1;\n    } else {\n      return middle;\n    }\n  }\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\nfunction calculateRange(_ref4) {\n  var measurements = _ref4.measurements,\n    outerSize = _ref4.outerSize,\n    scrollOffset = _ref4.scrollOffset;\n  var size = measurements.length - 1;\n  var getOffset = function getOffset(index) {\n    return measurements[index].start;\n  };\n  var start = findNearestBinarySearch(0, size, getOffset, scrollOffset);\n  var end = start;\n  while (end < size && measurements[end].end < scrollOffset + outerSize) {\n    end++;\n  }\n  return {\n    start: start,\n    end: end\n  };\n}\nexport { defaultRangeExtractor, useVirtual };","map":{"version":3,"mappings":"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","names":["props","rectChanged","a","b","some","prop","observedNodes","Map","run","changedStates","newRect","node","getBoundingClientRect","state","rect","rafId","window","observeRect","cb","observe","wasEmpty","undefined","hasRectChanged","callbacks","unobserve","index","length","size","cancelAnimationFrame","React","useLayoutEffect","useEffect","useRect","nodeRef","initialRect","width","height","useState","current","element","setElement","useReducer","rectReducer","dispatch","initialRectSet","useRef","useIsomorphicLayoutEffect","observer","action","defaultEstimateSize","defaultKeyExtractor","defaultMeasureSize","el","horizontal","key","defaultRangeExtractor","start","Math","max","range","overscan","end","min","arr","i","push","useVirtual","_ref$estimateSize","estimateSize","_ref$overscan","_ref$paddingStart","paddingStart","_ref$paddingEnd","paddingEnd","parentRef","scrollToFn","useObserver","onScrollElement","scrollOffsetFn","_ref$keyExtractor","keyExtractor","_ref$measureSize","measureSize","_ref$rangeExtractor","rangeExtractor","sizeKey","scrollKey","latestRef","scrollOffset","measurements","setScrollOffset","useMeasureParent","outerSize","defaultScrollToFn","useCallback","offset","resolvedScrollToFn","measuredCache","setMeasuredCache","measure","pendingMeasuredCacheIndexesRef","useMemo","slice","measuredSize","totalSize","scrollOffsetFnRef","onScroll","event","addEventListener","capture","passive","removeEventListener","calculateRange","indexes","measureSizeRef","virtualItems","k","len","measurement","item","measureRef","old","_loop","mountedRef","scrollToOffset","toOffset","_ref2$align","align","tryScrollToIndex","_ref3$align","rest","scrollToIndex","args","requestAnimationFrame","findNearestBinarySearch","low","high","getCurrentValue","value","middle","currentValue","getOffset"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/react-virtual/node_modules/@reach/observe-rect/dist/observe-rect.esm.js","/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/react-virtual/src/useIsomorphicLayoutEffect.js","/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/react-virtual/src/useRect.js","/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/react-virtual/src/index.js"],"sourcesContent":["var props = ['bottom', 'height', 'left', 'right', 'top', 'width'];\n\nvar rectChanged = function rectChanged(a, b) {\n  if (a === void 0) {\n    a = {};\n  }\n\n  if (b === void 0) {\n    b = {};\n  }\n\n  return props.some(function (prop) {\n    return a[prop] !== b[prop];\n  });\n};\n\nvar observedNodes =\n/*#__PURE__*/\nnew Map();\nvar rafId;\n\nvar run = function run() {\n  var changedStates = [];\n  observedNodes.forEach(function (state, node) {\n    var newRect = node.getBoundingClientRect();\n\n    if (rectChanged(newRect, state.rect)) {\n      state.rect = newRect;\n      changedStates.push(state);\n    }\n  });\n  changedStates.forEach(function (state) {\n    state.callbacks.forEach(function (cb) {\n      return cb(state.rect);\n    });\n  });\n  rafId = window.requestAnimationFrame(run);\n};\n\nfunction observeRect(node, cb) {\n  return {\n    observe: function observe() {\n      var wasEmpty = observedNodes.size === 0;\n\n      if (observedNodes.has(node)) {\n        observedNodes.get(node).callbacks.push(cb);\n      } else {\n        observedNodes.set(node, {\n          rect: undefined,\n          hasRectChanged: false,\n          callbacks: [cb]\n        });\n      }\n\n      if (wasEmpty) run();\n    },\n    unobserve: function unobserve() {\n      var state = observedNodes.get(node);\n\n      if (state) {\n        // Remove the callback\n        var index = state.callbacks.indexOf(cb);\n        if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference\n\n        if (!state.callbacks.length) observedNodes[\"delete\"](node); // Stop the loop\n\n        if (!observedNodes.size) cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\n\nexport default observeRect;\n//# sourceMappingURL=observe-rect.esm.js.map\n","import React from 'react'\n\nexport default typeof window !== 'undefined'\n  ? React.useLayoutEffect\n  : React.useEffect\n","import React from 'react'\nimport observeRect from '@reach/observe-rect'\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nexport default function useRect(\n  nodeRef,\n  initialRect = { width: 0, height: 0 }\n) {\n  const [element, setElement] = React.useState(nodeRef.current)\n  const [rect, dispatch] = React.useReducer(rectReducer, initialRect)\n  const initialRectSet = React.useRef(false)\n\n  useIsomorphicLayoutEffect(() => {\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current)\n    }\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    if (element && !initialRectSet.current) {\n      initialRectSet.current = true\n      const rect = element.getBoundingClientRect()\n      dispatch({ rect })\n    }\n  }, [element])\n\n  React.useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    const observer = observeRect(element, rect => {\n      dispatch({ rect })\n    })\n\n    observer.observe()\n\n    return () => {\n      observer.unobserve()\n    }\n  }, [element])\n\n  return rect\n}\n\nfunction rectReducer(state, action) {\n  const rect = action.rect\n  if (state.height !== rect.height || state.width !== rect.width) {\n    return rect\n  }\n  return state\n}\n","import React from 'react'\nimport useRect from './useRect'\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nconst defaultEstimateSize = () => 50\n\nconst defaultKeyExtractor = index => index\n\nconst defaultMeasureSize = (el, horizontal) => {\n  const key = horizontal ? 'offsetWidth' : 'offsetHeight'\n\n  return el[key]\n}\n\nexport const defaultRangeExtractor = range => {\n  const start = Math.max(range.start - range.overscan, 0)\n  const end = Math.min(range.end + range.overscan, range.size - 1)\n\n  const arr = []\n\n  for (let i = start; i <= end; i++) {\n    arr.push(i)\n  }\n\n  return arr\n}\n\nexport function useVirtual({\n  size = 0,\n  estimateSize = defaultEstimateSize,\n  overscan = 1,\n  paddingStart = 0,\n  paddingEnd = 0,\n  parentRef,\n  horizontal,\n  scrollToFn,\n  useObserver,\n  initialRect,\n  onScrollElement,\n  scrollOffsetFn,\n  keyExtractor = defaultKeyExtractor,\n  measureSize = defaultMeasureSize,\n  rangeExtractor = defaultRangeExtractor,\n}) {\n  const sizeKey = horizontal ? 'width' : 'height'\n  const scrollKey = horizontal ? 'scrollLeft' : 'scrollTop'\n\n  const latestRef = React.useRef({\n    scrollOffset: 0,\n    measurements: [],\n  })\n\n  const [scrollOffset, setScrollOffset] = React.useState(0)\n  latestRef.current.scrollOffset = scrollOffset\n\n  const useMeasureParent = useObserver || useRect\n\n  const { [sizeKey]: outerSize } = useMeasureParent(parentRef, initialRect)\n\n  latestRef.current.outerSize = outerSize\n\n  const defaultScrollToFn = React.useCallback(\n    offset => {\n      if (parentRef.current) {\n        parentRef.current[scrollKey] = offset\n      }\n    },\n    [parentRef, scrollKey]\n  )\n\n  const resolvedScrollToFn = scrollToFn || defaultScrollToFn\n\n  scrollToFn = React.useCallback(\n    offset => {\n      resolvedScrollToFn(offset, defaultScrollToFn)\n    },\n    [defaultScrollToFn, resolvedScrollToFn]\n  )\n\n  const [measuredCache, setMeasuredCache] = React.useState({})\n\n  const measure = React.useCallback(() => setMeasuredCache({}), [])\n\n  const pendingMeasuredCacheIndexesRef = React.useRef([])\n\n  const measurements = React.useMemo(() => {\n    const min =\n      pendingMeasuredCacheIndexesRef.current.length > 0\n        ? Math.min(...pendingMeasuredCacheIndexesRef.current)\n        : 0\n    pendingMeasuredCacheIndexesRef.current = []\n\n    const measurements = latestRef.current.measurements.slice(0, min)\n\n    for (let i = min; i < size; i++) {\n      const key = keyExtractor(i)\n      const measuredSize = measuredCache[key]\n      const start = measurements[i - 1] ? measurements[i - 1].end : paddingStart\n      const size =\n        typeof measuredSize === 'number' ? measuredSize : estimateSize(i)\n      const end = start + size\n      measurements[i] = { index: i, start, size, end, key }\n    }\n    return measurements\n  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor])\n\n  const totalSize = (measurements[size - 1]?.end || paddingStart) + paddingEnd\n\n  latestRef.current.measurements = measurements\n  latestRef.current.totalSize = totalSize\n\n  const element = onScrollElement ? onScrollElement.current : parentRef.current\n\n  const scrollOffsetFnRef = React.useRef(scrollOffsetFn)\n  scrollOffsetFnRef.current = scrollOffsetFn\n\n  useIsomorphicLayoutEffect(() => {\n    if (!element) {\n      setScrollOffset(0)\n\n      return\n    }\n\n    const onScroll = event => {\n      const offset = scrollOffsetFnRef.current\n        ? scrollOffsetFnRef.current(event)\n        : element[scrollKey]\n\n      setScrollOffset(offset)\n    }\n\n    onScroll()\n\n    element.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true,\n    })\n\n    return () => {\n      element.removeEventListener('scroll', onScroll)\n    }\n  }, [element, scrollKey])\n\n  const { start, end } = calculateRange(latestRef.current)\n\n  const indexes = React.useMemo(\n    () =>\n      rangeExtractor({\n        start,\n        end,\n        overscan,\n        size: measurements.length,\n      }),\n    [start, end, overscan, measurements.length, rangeExtractor]\n  )\n\n  const measureSizeRef = React.useRef(measureSize)\n  measureSizeRef.current = measureSize\n\n  const virtualItems = React.useMemo(() => {\n    const virtualItems = []\n\n    for (let k = 0, len = indexes.length; k < len; k++) {\n      const i = indexes[k]\n      const measurement = measurements[i]\n\n      const item = {\n        ...measurement,\n        measureRef: el => {\n          if (el) {\n            const measuredSize = measureSizeRef.current(el, horizontal)\n\n            if (measuredSize !== item.size) {\n              const { scrollOffset } = latestRef.current\n\n              if (item.start < scrollOffset) {\n                defaultScrollToFn(scrollOffset + (measuredSize - item.size))\n              }\n\n              pendingMeasuredCacheIndexesRef.current.push(i)\n\n              setMeasuredCache(old => ({\n                ...old,\n                [item.key]: measuredSize,\n              }))\n            }\n          }\n        },\n      }\n\n      virtualItems.push(item)\n    }\n\n    return virtualItems\n  }, [indexes, defaultScrollToFn, horizontal, measurements])\n\n  const mountedRef = React.useRef(false)\n\n  useIsomorphicLayoutEffect(() => {\n    if (mountedRef.current) {\n      setMeasuredCache({})\n    }\n    mountedRef.current = true\n  }, [estimateSize])\n\n  const scrollToOffset = React.useCallback(\n    (toOffset, { align = 'start' } = {}) => {\n      const { scrollOffset, outerSize } = latestRef.current\n\n      if (align === 'auto') {\n        if (toOffset <= scrollOffset) {\n          align = 'start'\n        } else if (toOffset >= scrollOffset + outerSize) {\n          align = 'end'\n        } else {\n          align = 'start'\n        }\n      }\n\n      if (align === 'start') {\n        scrollToFn(toOffset)\n      } else if (align === 'end') {\n        scrollToFn(toOffset - outerSize)\n      } else if (align === 'center') {\n        scrollToFn(toOffset - outerSize / 2)\n      }\n    },\n    [scrollToFn]\n  )\n\n  const tryScrollToIndex = React.useCallback(\n    (index, { align = 'auto', ...rest } = {}) => {\n      const { measurements, scrollOffset, outerSize } = latestRef.current\n\n      const measurement = measurements[Math.max(0, Math.min(index, size - 1))]\n\n      if (!measurement) {\n        return\n      }\n\n      if (align === 'auto') {\n        if (measurement.end >= scrollOffset + outerSize) {\n          align = 'end'\n        } else if (measurement.start <= scrollOffset) {\n          align = 'start'\n        } else {\n          return\n        }\n      }\n\n      const toOffset =\n        align === 'center'\n          ? measurement.start + measurement.size / 2\n          : align === 'end'\n          ? measurement.end\n          : measurement.start\n\n      scrollToOffset(toOffset, { align, ...rest })\n    },\n    [scrollToOffset, size]\n  )\n\n  const scrollToIndex = React.useCallback(\n    (...args) => {\n      // We do a double request here because of\n      // dynamic sizes which can cause offset shift\n      // and end up in the wrong spot. Unfortunately,\n      // we can't know about those dynamic sizes until\n      // we try and render them. So double down!\n      tryScrollToIndex(...args)\n      requestAnimationFrame(() => {\n        tryScrollToIndex(...args)\n      })\n    },\n    [tryScrollToIndex]\n  )\n\n  return {\n    virtualItems,\n    totalSize,\n    scrollToOffset,\n    scrollToIndex,\n    measure,\n  }\n}\n\nconst findNearestBinarySearch = (low, high, getCurrentValue, value) => {\n  while (low <= high) {\n    let middle = ((low + high) / 2) | 0\n    let currentValue = getCurrentValue(middle)\n\n    if (currentValue < value) {\n      low = middle + 1\n    } else if (currentValue > value) {\n      high = middle - 1\n    } else {\n      return middle\n    }\n  }\n\n  if (low > 0) {\n    return low - 1\n  } else {\n    return 0\n  }\n}\n\nfunction calculateRange({ measurements, outerSize, scrollOffset }) {\n  const size = measurements.length - 1\n  const getOffset = index => measurements[index].start\n\n  let start = findNearestBinarySearch(0, size, getOffset, scrollOffset)\n  let end = start\n\n  while (end < size && measurements[end].end < scrollOffset + outerSize) {\n    end++\n  }\n\n  return { start, end }\n}\n"]},"metadata":{},"sourceType":"module"}