{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport InternalButtonDropdown from './internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nconst ButtonDropdown = React.forwardRef((_a, ref) => {\n  var {\n      items,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      expandableGroups = false,\n      expandToViewport = false,\n      ariaLabel,\n      children,\n      onItemClick,\n      onItemFollow,\n      mainAction\n    } = _a,\n    props = __rest(_a, [\"items\", \"variant\", \"loading\", \"loadingText\", \"disabled\", \"expandableGroups\", \"expandToViewport\", \"ariaLabel\", \"children\", \"onItemClick\", \"onItemFollow\", \"mainAction\"]);\n  const baseComponentProps = useBaseComponent('ButtonDropdown');\n  const baseProps = getBaseProps(props);\n  return React.createElement(InternalButtonDropdown, Object.assign({}, baseProps, baseComponentProps, {\n    ref: ref,\n    items: items,\n    variant: variant,\n    loading: loading,\n    loadingText: loadingText,\n    disabled: disabled,\n    expandableGroups: expandableGroups,\n    expandToViewport: expandToViewport,\n    ariaLabel: ariaLabel,\n    onItemClick: onItemClick,\n    onItemFollow: onItemFollow,\n    mainAction: mainAction\n  }), children);\n});\napplyDisplayName(ButtonDropdown, 'ButtonDropdown');\nexport default ButtonDropdown;","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,sBAAsB,MAAM,YAAY;AAC/C,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,OAAOC,gBAAgB,MAAM,sCAAsC;AAInE,MAAMC,cAAc,GAAGL,KAAK,CAACM,UAAU,CACrC,CACEC,EAcsB,EACtBC,GAAuC,KACrC;MAhBF;MACEC,KAAK;MACLC,OAAO,GAAG,QAAQ;MAClBC,OAAO,GAAG,KAAK;MACfC,WAAW;MACXC,QAAQ,GAAG,KAAK;MAChBC,gBAAgB,GAAG,KAAK;MACxBC,gBAAgB,GAAG,KAAK;MACxBC,SAAS;MACTC,QAAQ;MACRC,WAAW;MACXC,YAAY;MACZC;IAAU,MAEU;IADjBC,KAAK,cAbV,wKAcC,CADS;EAIV,MAAMC,kBAAkB,GAAGlB,gBAAgB,CAAC,gBAAgB,CAAC;EAC7D,MAAMmB,SAAS,GAAGrB,YAAY,CAACmB,KAAK,CAAC;EACrC,OACErB,oBAACC,sBAAsB,oBACjBsB,SAAS,EACTD,kBAAkB;IACtBd,GAAG,EAAEA,GAAG;IACRC,KAAK,EAAEA,KAAK;IACZC,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA,OAAO;IAChBC,WAAW,EAAEA,WAAW;IACxBC,QAAQ,EAAEA,QAAQ;IAClBC,gBAAgB,EAAEA,gBAAgB;IAClCC,gBAAgB,EAAEA,gBAAgB;IAClCC,SAAS,EAAEA,SAAS;IACpBE,WAAW,EAAEA,WAAW;IACxBC,YAAY,EAAEA,YAAY;IAC1BC,UAAU,EAAEA;EAAU,IAErBH,QAAQ,CACc;AAE7B,CAAC,CACF;AAEDd,gBAAgB,CAACE,cAAc,EAAE,gBAAgB,CAAC;AAClD,eAAeA,cAAc","names":["React","InternalButtonDropdown","getBaseProps","applyDisplayName","useBaseComponent","ButtonDropdown","forwardRef","_a","ref","items","variant","loading","loadingText","disabled","expandableGroups","expandToViewport","ariaLabel","children","onItemClick","onItemFollow","mainAction","props","baseComponentProps","baseProps"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/button-dropdown/lib/default/button-dropdown/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { ButtonDropdownProps } from './interfaces';\nimport InternalButtonDropdown from './internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { ButtonDropdownProps };\n\nconst ButtonDropdown = React.forwardRef(\n  (\n    {\n      items,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      expandableGroups = false,\n      expandToViewport = false,\n      ariaLabel,\n      children,\n      onItemClick,\n      onItemFollow,\n      mainAction,\n      ...props\n    }: ButtonDropdownProps,\n    ref: React.Ref<ButtonDropdownProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('ButtonDropdown');\n    const baseProps = getBaseProps(props);\n    return (\n      <InternalButtonDropdown\n        {...baseProps}\n        {...baseComponentProps}\n        ref={ref}\n        items={items}\n        variant={variant}\n        loading={loading}\n        loadingText={loadingText}\n        disabled={disabled}\n        expandableGroups={expandableGroups}\n        expandToViewport={expandToViewport}\n        ariaLabel={ariaLabel}\n        onItemClick={onItemClick}\n        onItemFollow={onItemFollow}\n        mainAction={mainAction}\n      >\n        {children}\n      </InternalButtonDropdown>\n    );\n  }\n);\n\napplyDisplayName(ButtonDropdown, 'ButtonDropdown');\nexport default ButtonDropdown;\n"]},"metadata":{},"sourceType":"module"}