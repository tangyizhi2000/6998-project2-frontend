{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useCallback, useImperativeHandle, useRef } from 'react';\nimport styles from './styles.css.js';\nimport { getCardsPerRow } from './cards-layout-helper';\nimport { getBaseProps } from '../internal/base-component';\nimport ToolsHeader from '../table/tools-header';\nimport { getItemKey } from '../table/utils';\nimport { SelectionControl, focusMarkers, useSelectionFocusMove, useSelection } from '../table/selection';\nimport { InternalContainerAsSubstep } from '../container/internal';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport stickyScrolling from '../table/sticky-scrolling';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport LiveRegion from '../internal/components/live-region';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { supportsStickyPosition } from '../internal/utils/dom';\nimport { useInternalI18n } from '../i18n/context';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { AnalyticsFunnelSubStep } from '../internal/analytics/components/analytics-funnel';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nvar Cards = React.forwardRef(function (_a, ref) {\n  var _a$items = _a.items,\n    items = _a$items === void 0 ? [] : _a$items,\n    cardDefinition = _a.cardDefinition,\n    _a$cardsPerRow = _a.cardsPerRow,\n    cardsPerRow = _a$cardsPerRow === void 0 ? [] : _a$cardsPerRow,\n    header = _a.header,\n    filter = _a.filter,\n    pagination = _a.pagination,\n    preferences = _a.preferences,\n    empty = _a.empty,\n    loading = _a.loading,\n    loadingText = _a.loadingText,\n    trackBy = _a.trackBy,\n    selectedItems = _a.selectedItems,\n    selectionType = _a.selectionType,\n    isItemDisabled = _a.isItemDisabled,\n    onSelectionChange = _a.onSelectionChange,\n    ariaLabels = _a.ariaLabels,\n    visibleSections = _a.visibleSections,\n    stickyHeader = _a.stickyHeader,\n    stickyHeaderVerticalOffset = _a.stickyHeaderVerticalOffset,\n    _a$variant = _a.variant,\n    variant = _a$variant === void 0 ? 'container' : _a$variant,\n    renderAriaLive = _a.renderAriaLive,\n    firstIndex = _a.firstIndex,\n    totalItemsCount = _a.totalItemsCount,\n    rest = __rest(_a, [\"items\", \"cardDefinition\", \"cardsPerRow\", \"header\", \"filter\", \"pagination\", \"preferences\", \"empty\", \"loading\", \"loadingText\", \"trackBy\", \"selectedItems\", \"selectionType\", \"isItemDisabled\", \"onSelectionChange\", \"ariaLabels\", \"visibleSections\", \"stickyHeader\", \"stickyHeaderVerticalOffset\", \"variant\", \"renderAriaLive\", \"firstIndex\", \"totalItemsCount\"]);\n  var _useBaseComponent = useBaseComponent('Cards'),\n    __internalRootRef = _useBaseComponent.__internalRootRef;\n  var baseProps = getBaseProps(rest);\n  var isRefresh = useVisualRefresh();\n  var isMobile = useMobile();\n  var computedVariant = isRefresh ? variant : 'container';\n  var headerIdRef = useRef(undefined);\n  var setHeaderRef = useCallback(function (id) {\n    headerIdRef.current = id;\n  }, []);\n  var isLabelledByHeader = !(ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.cardsLabel) && !!header;\n  var _useContainerQuery = useContainerQuery(function (_ref) {\n      var contentBoxWidth = _ref.contentBoxWidth;\n      return getCardsPerRow(contentBoxWidth, cardsPerRow);\n    }, [cardsPerRow]),\n    _useContainerQuery2 = _slicedToArray(_useContainerQuery, 2),\n    columns = _useContainerQuery2[0],\n    measureRef = _useContainerQuery2[1];\n  var refObject = useRef(null);\n  var mergedRef = useMergeRefs(measureRef, refObject, __internalRootRef);\n  var getMouseDownTarget = useMouseDownTarget();\n  var i18n = useInternalI18n('cards');\n  var _useSelection = useSelection({\n      items: items,\n      trackBy: trackBy,\n      selectedItems: selectedItems,\n      selectionType: selectionType,\n      isItemDisabled: isItemDisabled,\n      onSelectionChange: onSelectionChange,\n      ariaLabels: {\n        itemSelectionLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.itemSelectionLabel,\n        selectionGroupLabel: i18n('ariaLabels.selectionGroupLabel', ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.selectionGroupLabel)\n      }\n    }),\n    isItemSelected = _useSelection.isItemSelected,\n    getItemSelectionProps = _useSelection.getItemSelectionProps,\n    updateShiftToggle = _useSelection.updateShiftToggle;\n  var hasToolsHeader = header || filter || pagination || preferences;\n  var hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n  var headerRef = useRef(null);\n  var _stickyScrolling = stickyScrolling(refObject, headerRef),\n    _scrollToTop = _stickyScrolling.scrollToTop,\n    scrollToItem = _stickyScrolling.scrollToItem;\n  stickyHeader = supportsStickyPosition() && !isMobile && stickyHeader;\n  var onCardFocus = function onCardFocus(event) {\n    // When an element inside card receives focus we want to adjust the scroll.\n    // However, that behavior is unwanted when the focus is received as result of a click\n    // as it causes the click to never reach the target element.\n    if (stickyHeader && !event.currentTarget.contains(getMouseDownTarget())) {\n      scrollToItem(event.currentTarget);\n    }\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      scrollToTop: function scrollToTop() {\n        if (stickyHeader) {\n          _scrollToTop();\n        }\n      }\n    };\n  }, [stickyHeader, _scrollToTop]);\n  var status;\n  if (loading) {\n    status = React.createElement(\"div\", {\n      className: styles.loading\n    }, React.createElement(InternalStatusIndicator, {\n      type: \"loading\"\n    }, React.createElement(LiveRegion, {\n      visible: true\n    }, loadingText)));\n  } else if (empty && !items.length) {\n    status = React.createElement(\"div\", {\n      className: styles.empty\n    }, empty);\n  }\n  return React.createElement(LinkDefaultVariantContext.Provider, {\n    value: {\n      defaultVariant: 'primary'\n    }\n  }, React.createElement(AnalyticsFunnelSubStep, null, React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: mergedRef\n  }), React.createElement(InternalContainerAsSubstep, {\n    header: hasToolsHeader && React.createElement(\"div\", {\n      className: clsx(styles.header, isRefresh && styles['header-refresh'], styles[\"header-variant-\".concat(computedVariant)])\n    }, React.createElement(CollectionLabelContext.Provider, {\n      value: {\n        assignId: setHeaderRef\n      }\n    }, React.createElement(ToolsHeader, {\n      header: header,\n      filter: filter,\n      pagination: pagination,\n      preferences: preferences\n    }))),\n    footer: hasFooterPagination && React.createElement(\"div\", {\n      className: styles['footer-pagination']\n    }, pagination),\n    disableContentPaddings: true,\n    disableHeaderPaddings: computedVariant === 'full-page',\n    variant: computedVariant === 'container' ? 'cards' : computedVariant,\n    __stickyHeader: stickyHeader,\n    __stickyOffset: stickyHeaderVerticalOffset,\n    __headerRef: headerRef,\n    __darkHeader: computedVariant === 'full-page',\n    __disableFooterDivider: true\n  }, React.createElement(\"div\", {\n    className: clsx(hasToolsHeader && styles['has-header'])\n  }, !!renderAriaLive && !!firstIndex && React.createElement(LiveRegion, null, React.createElement(\"span\", null, renderAriaLive({\n    totalItemsCount: totalItemsCount,\n    firstIndex: firstIndex,\n    lastIndex: firstIndex + items.length - 1\n  }))), status !== null && status !== void 0 ? status : React.createElement(CardsList, {\n    items: items,\n    cardDefinition: cardDefinition,\n    trackBy: trackBy,\n    selectionType: selectionType,\n    columns: columns,\n    isItemSelected: isItemSelected,\n    getItemSelectionProps: getItemSelectionProps,\n    visibleSections: visibleSections,\n    updateShiftToggle: updateShiftToggle,\n    onFocus: onCardFocus,\n    ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.cardsLabel,\n    ariaLabelledby: isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined\n  }))))));\n});\nexport default Cards;\nvar CardsList = function CardsList(_ref2) {\n  var items = _ref2.items,\n    cardDefinition = _ref2.cardDefinition,\n    trackBy = _ref2.trackBy,\n    selectionType = _ref2.selectionType,\n    columns = _ref2.columns,\n    isItemSelected = _ref2.isItemSelected,\n    getItemSelectionProps = _ref2.getItemSelectionProps,\n    visibleSections = _ref2.visibleSections,\n    updateShiftToggle = _ref2.updateShiftToggle,\n    onFocus = _ref2.onFocus,\n    ariaLabelledby = _ref2.ariaLabelledby,\n    ariaLabel = _ref2.ariaLabel;\n  var selectable = !!selectionType;\n  var _useSelectionFocusMov = useSelectionFocusMove(selectionType, items.length),\n    moveFocusDown = _useSelectionFocusMov.moveFocusDown,\n    moveFocusUp = _useSelectionFocusMov.moveFocusUp;\n  var visibleSectionsDefinition = cardDefinition.sections || [];\n  visibleSectionsDefinition = visibleSections ? visibleSectionsDefinition.filter(function (section) {\n    return section.id && visibleSections.indexOf(section.id) !== -1;\n  }) : visibleSectionsDefinition;\n  var listRole = undefined;\n  var listItemRole = undefined;\n  if (selectable) {\n    listRole = 'group';\n    listItemRole = 'presentation';\n  }\n  return React.createElement(\"ol\", Object.assign({\n    className: clsx(styles.list, styles[\"list-grid-\".concat(columns || 1)]),\n    role: listRole,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-label\": ariaLabel\n  }, focusMarkers && focusMarkers.root), items.map(function (item, index) {\n    var _clsx;\n    return React.createElement(\"li\", Object.assign({\n      className: clsx(styles.card, (_clsx = {}, _defineProperty(_clsx, styles['card-selectable'], selectable), _defineProperty(_clsx, styles['card-selected'], selectable && isItemSelected(item)), _clsx)),\n      key: getItemKey(trackBy, item, index),\n      onFocus: onFocus\n    }, focusMarkers && focusMarkers.item, {\n      role: listItemRole\n    }), React.createElement(\"div\", {\n      className: styles['card-inner']\n    }, React.createElement(\"div\", {\n      className: styles['card-header']\n    }, React.createElement(\"div\", {\n      className: styles['card-header-inner']\n    }, cardDefinition.header ? cardDefinition.header(item) : ''), selectable && React.createElement(\"div\", {\n      className: styles['selection-control']\n    }, React.createElement(SelectionControl, Object.assign({\n      onFocusDown: moveFocusDown,\n      onFocusUp: moveFocusUp,\n      onShiftToggle: updateShiftToggle\n    }, getItemSelectionProps(item))))), visibleSectionsDefinition.map(function (_ref3, index) {\n      var _ref3$width = _ref3.width,\n        width = _ref3$width === void 0 ? 100 : _ref3$width,\n        header = _ref3.header,\n        content = _ref3.content,\n        id = _ref3.id;\n      return React.createElement(\"div\", {\n        key: id || index,\n        className: styles.section,\n        style: {\n          width: \"\".concat(width, \"%\")\n        }\n      }, header ? React.createElement(\"div\", {\n        className: styles['section-header']\n      }, header) : '', content ? React.createElement(\"div\", {\n        className: styles['section-content']\n      }, content(item)) : '');\n    })));\n  }));\n};\napplyDisplayName(Cards, 'Cards');","map":{"version":3,"mappings":"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","names":["clsx","React","useCallback","useImperativeHandle","useRef","styles","getCardsPerRow","getBaseProps","ToolsHeader","getItemKey","SelectionControl","focusMarkers","useSelectionFocusMove","useSelection","InternalContainerAsSubstep","InternalStatusIndicator","applyDisplayName","stickyScrolling","useBaseComponent","useVisualRefresh","useMergeRefs","LiveRegion","useMouseDownTarget","useMobile","supportsStickyPosition","useInternalI18n","useContainerQuery","AnalyticsFunnelSubStep","CollectionLabelContext","LinkDefaultVariantContext","Cards","forwardRef","_a","ref","items","cardDefinition","cardsPerRow","header","filter","pagination","preferences","empty","loading","loadingText","trackBy","selectedItems","selectionType","isItemDisabled","onSelectionChange","ariaLabels","visibleSections","stickyHeader","stickyHeaderVerticalOffset","variant","renderAriaLive","firstIndex","totalItemsCount","rest","__internalRootRef","baseProps","isRefresh","isMobile","computedVariant","headerIdRef","undefined","setHeaderRef","id","current","isLabelledByHeader","cardsLabel","contentBoxWidth","columns","measureRef","refObject","mergedRef","getMouseDownTarget","i18n","itemSelectionLabel","selectionGroupLabel","isItemSelected","getItemSelectionProps","updateShiftToggle","hasToolsHeader","hasFooterPagination","headerRef","scrollToTop","scrollToItem","onCardFocus","event","currentTarget","contains","status","className","type","visible","length","Provider","value","defaultVariant","root","assignId","footer","disableContentPaddings","disableHeaderPaddings","__stickyHeader","__stickyOffset","__headerRef","__darkHeader","__disableFooterDivider","lastIndex","CardsList","onFocus","ariaLabel","ariaLabelledby","selectable","moveFocusDown","moveFocusUp","visibleSectionsDefinition","sections","section","indexOf","listRole","listItemRole","list","role","map","item","index","card","key","onFocusDown","onFocusUp","onShiftToggle","width","content","style"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/cards/lib/default/cards/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { FocusEventHandler, useCallback, useImperativeHandle, useRef } from 'react';\nimport { CardsForwardRefType, CardsProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { getCardsPerRow } from './cards-layout-helper';\nimport { getBaseProps } from '../internal/base-component';\nimport ToolsHeader from '../table/tools-header';\nimport { getItemKey } from '../table/utils';\nimport {\n  SelectionControl,\n  SelectionControlProps,\n  focusMarkers,\n  useSelectionFocusMove,\n  useSelection,\n} from '../table/selection';\nimport { InternalContainerAsSubstep } from '../container/internal';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport stickyScrolling from '../table/sticky-scrolling';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport LiveRegion from '../internal/components/live-region';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { supportsStickyPosition } from '../internal/utils/dom';\nimport { useInternalI18n } from '../i18n/context';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { AnalyticsFunnelSubStep } from '../internal/analytics/components/analytics-funnel';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\n\nexport { CardsProps };\n\nconst Cards = React.forwardRef(function <T = any>(\n  {\n    items = [],\n    cardDefinition,\n    cardsPerRow = [],\n    header,\n    filter,\n    pagination,\n    preferences,\n    empty,\n    loading,\n    loadingText,\n    trackBy,\n    selectedItems,\n    selectionType,\n    isItemDisabled,\n    onSelectionChange,\n    ariaLabels,\n    visibleSections,\n    stickyHeader,\n    stickyHeaderVerticalOffset,\n    variant = 'container',\n    renderAriaLive,\n    firstIndex,\n    totalItemsCount,\n    ...rest\n  }: CardsProps<T>,\n  ref: React.Ref<CardsProps.Ref>\n) {\n  const { __internalRootRef } = useBaseComponent('Cards');\n  const baseProps = getBaseProps(rest);\n  const isRefresh = useVisualRefresh();\n  const isMobile = useMobile();\n\n  const computedVariant = isRefresh ? variant : 'container';\n\n  const headerIdRef = useRef<string | undefined>(undefined);\n  const setHeaderRef = useCallback((id: string) => {\n    headerIdRef.current = id;\n  }, []);\n  const isLabelledByHeader = !ariaLabels?.cardsLabel && !!header;\n\n  const [columns, measureRef] = useContainerQuery<number>(\n    ({ contentBoxWidth }) => getCardsPerRow(contentBoxWidth, cardsPerRow),\n    [cardsPerRow]\n  );\n  const refObject = useRef(null);\n  const mergedRef = useMergeRefs(measureRef, refObject, __internalRootRef);\n  const getMouseDownTarget = useMouseDownTarget();\n\n  const i18n = useInternalI18n('cards');\n  const { isItemSelected, getItemSelectionProps, updateShiftToggle } = useSelection({\n    items,\n    trackBy,\n    selectedItems,\n    selectionType,\n    isItemDisabled,\n    onSelectionChange,\n    ariaLabels: {\n      itemSelectionLabel: ariaLabels?.itemSelectionLabel,\n      selectionGroupLabel: i18n('ariaLabels.selectionGroupLabel', ariaLabels?.selectionGroupLabel),\n    },\n  });\n  const hasToolsHeader = header || filter || pagination || preferences;\n  const hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const { scrollToTop, scrollToItem } = stickyScrolling(refObject, headerRef);\n  stickyHeader = supportsStickyPosition() && !isMobile && stickyHeader;\n  const onCardFocus: FocusEventHandler<HTMLElement> = event => {\n    // When an element inside card receives focus we want to adjust the scroll.\n    // However, that behavior is unwanted when the focus is received as result of a click\n    // as it causes the click to never reach the target element.\n    if (stickyHeader && !event.currentTarget.contains(getMouseDownTarget())) {\n      scrollToItem(event.currentTarget);\n    }\n  };\n  useImperativeHandle(\n    ref,\n    () => ({\n      scrollToTop: () => {\n        if (stickyHeader) {\n          scrollToTop();\n        }\n      },\n    }),\n    [stickyHeader, scrollToTop]\n  );\n  let status;\n  if (loading) {\n    status = (\n      <div className={styles.loading}>\n        <InternalStatusIndicator type=\"loading\">\n          <LiveRegion visible={true}>{loadingText}</LiveRegion>\n        </InternalStatusIndicator>\n      </div>\n    );\n  } else if (empty && !items.length) {\n    status = <div className={styles.empty}>{empty}</div>;\n  }\n\n  return (\n    <LinkDefaultVariantContext.Provider value={{ defaultVariant: 'primary' }}>\n      <AnalyticsFunnelSubStep>\n        <div {...baseProps} className={clsx(baseProps.className, styles.root)} ref={mergedRef}>\n          <InternalContainerAsSubstep\n            header={\n              hasToolsHeader && (\n                <div\n                  className={clsx(\n                    styles.header,\n                    isRefresh && styles['header-refresh'],\n                    styles[`header-variant-${computedVariant}`]\n                  )}\n                >\n                  <CollectionLabelContext.Provider value={{ assignId: setHeaderRef }}>\n                    <ToolsHeader header={header} filter={filter} pagination={pagination} preferences={preferences} />\n                  </CollectionLabelContext.Provider>\n                </div>\n              )\n            }\n            footer={hasFooterPagination && <div className={styles['footer-pagination']}>{pagination}</div>}\n            disableContentPaddings={true}\n            disableHeaderPaddings={computedVariant === 'full-page'}\n            variant={computedVariant === 'container' ? 'cards' : computedVariant}\n            __stickyHeader={stickyHeader}\n            __stickyOffset={stickyHeaderVerticalOffset}\n            __headerRef={headerRef}\n            __darkHeader={computedVariant === 'full-page'}\n            __disableFooterDivider={true}\n          >\n            <div className={clsx(hasToolsHeader && styles['has-header'])}>\n              {!!renderAriaLive && !!firstIndex && (\n                <LiveRegion>\n                  <span>\n                    {renderAriaLive({ totalItemsCount, firstIndex, lastIndex: firstIndex + items.length - 1 })}\n                  </span>\n                </LiveRegion>\n              )}\n              {status ?? (\n                <CardsList\n                  items={items}\n                  cardDefinition={cardDefinition}\n                  trackBy={trackBy}\n                  selectionType={selectionType}\n                  columns={columns}\n                  isItemSelected={isItemSelected}\n                  getItemSelectionProps={getItemSelectionProps}\n                  visibleSections={visibleSections}\n                  updateShiftToggle={updateShiftToggle}\n                  onFocus={onCardFocus}\n                  ariaLabel={ariaLabels?.cardsLabel}\n                  ariaLabelledby={isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined}\n                />\n              )}\n            </div>\n          </InternalContainerAsSubstep>\n        </div>\n      </AnalyticsFunnelSubStep>\n    </LinkDefaultVariantContext.Provider>\n  );\n}) as CardsForwardRefType;\n\nexport default Cards;\n\nconst CardsList = <T,>({\n  items,\n  cardDefinition,\n  trackBy,\n  selectionType,\n  columns,\n  isItemSelected,\n  getItemSelectionProps,\n  visibleSections,\n  updateShiftToggle,\n  onFocus,\n  ariaLabelledby,\n  ariaLabel,\n}: Pick<CardsProps<T>, 'items' | 'cardDefinition' | 'trackBy' | 'selectionType' | 'visibleSections'> & {\n  columns: number | null;\n  isItemSelected: (item: T) => boolean;\n  getItemSelectionProps: (item: T) => SelectionControlProps;\n  updateShiftToggle: (state: boolean) => void;\n  onFocus: FocusEventHandler<HTMLElement>;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n}) => {\n  const selectable = !!selectionType;\n\n  const { moveFocusDown, moveFocusUp } = useSelectionFocusMove(selectionType, items.length);\n\n  let visibleSectionsDefinition = cardDefinition.sections || [];\n  visibleSectionsDefinition = visibleSections\n    ? visibleSectionsDefinition.filter(\n        (section: CardsProps.SectionDefinition<T>) => section.id && visibleSections.indexOf(section.id) !== -1\n      )\n    : visibleSectionsDefinition;\n\n  let listRole: 'group' | undefined = undefined;\n  let listItemRole: 'presentation' | undefined = undefined;\n\n  if (selectable) {\n    listRole = 'group';\n    listItemRole = 'presentation';\n  }\n\n  return (\n    <ol\n      className={clsx(styles.list, styles[`list-grid-${columns || 1}`])}\n      role={listRole}\n      aria-labelledby={ariaLabelledby}\n      aria-label={ariaLabel}\n      {...(focusMarkers && focusMarkers.root)}\n    >\n      {items.map((item, index) => (\n        <li\n          className={clsx(styles.card, {\n            [styles['card-selectable']]: selectable,\n            [styles['card-selected']]: selectable && isItemSelected(item),\n          })}\n          key={getItemKey(trackBy, item, index)}\n          onFocus={onFocus}\n          {...(focusMarkers && focusMarkers.item)}\n          role={listItemRole}\n        >\n          <div className={styles['card-inner']}>\n            <div className={styles['card-header']}>\n              <div className={styles['card-header-inner']}>\n                {cardDefinition.header ? cardDefinition.header(item) : ''}\n              </div>\n              {selectable && (\n                <div className={styles['selection-control']}>\n                  <SelectionControl\n                    onFocusDown={moveFocusDown}\n                    onFocusUp={moveFocusUp}\n                    onShiftToggle={updateShiftToggle}\n                    {...getItemSelectionProps(item)}\n                  />\n                </div>\n              )}\n            </div>\n            {visibleSectionsDefinition.map(({ width = 100, header, content, id }, index) => (\n              <div key={id || index} className={styles.section} style={{ width: `${width}%` }}>\n                {header ? <div className={styles['section-header']}>{header}</div> : ''}\n                {content ? <div className={styles['section-content']}>{content(item)}</div> : ''}\n              </div>\n            ))}\n          </div>\n        </li>\n      ))}\n    </ol>\n  );\n};\n\napplyDisplayName(Cards, 'Cards');\n"]},"metadata":{},"sourceType":"module"}