{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport InternalBox from '../box/internal';\nimport styles from './styles.css.js';\nimport React, { useCallback } from 'react';\nimport InternalFormField from '../form-field/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport InternalGrid from '../grid/internal';\nimport { InternalButton } from '../button/internal';\nimport clsx from 'clsx';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useInternalI18n } from '../i18n/context';\nconst Divider = () => React.createElement(InternalBox, {\n  className: styles.divider,\n  padding: {\n    top: 'l'\n  }\n});\nfunction render(item, itemIndex, slot) {\n  if (isSlotFunction(slot)) {\n    return slot(item, itemIndex);\n  }\n  return slot;\n  function isSlotFunction(slot) {\n    return typeof slot === 'function';\n  }\n}\nconst GRID_DEFINITION = [{\n  colspan: {\n    default: 12,\n    xs: 9\n  }\n}];\nconst REMOVABLE_GRID_DEFINITION = [{\n  colspan: {\n    default: 12,\n    xs: 9\n  }\n}, {\n  colspan: {\n    default: 12,\n    xs: 3\n  }\n}];\nexport const Row = React.memo(_ref => {\n  let {\n    breakpoint,\n    item,\n    definition,\n    i18nStrings = {},\n    index,\n    removable,\n    removeButtonText,\n    removeButtonRefs,\n    onRemoveButtonClick,\n    removeButtonAriaLabel\n  } = _ref;\n  var _a;\n  const i18n = useInternalI18n('attribute-editor');\n  const isNarrowViewport = breakpoint === 'default' || breakpoint === 'xxs';\n  const isWideViewport = !isNarrowViewport;\n  const handleRemoveClick = useCallback(() => {\n    fireNonCancelableEvent(onRemoveButtonClick, {\n      itemIndex: index\n    });\n  }, [onRemoveButtonClick, index]);\n  const firstControlId = useUniqueId('first-control-id-');\n  return React.createElement(InternalBox, {\n    className: styles.row,\n    margin: {\n      bottom: 's'\n    }\n  }, React.createElement(\"div\", {\n    role: \"group\",\n    \"aria-labelledby\": `${firstControlId}-label ${firstControlId}`\n  }, React.createElement(InternalGrid, {\n    __breakpoint: breakpoint,\n    gridDefinition: removable ? REMOVABLE_GRID_DEFINITION : GRID_DEFINITION\n  }, React.createElement(InternalColumnLayout, {\n    className: styles['row-control'],\n    columns: definition.length,\n    __breakpoint: breakpoint\n  }, definition.map((_ref2, defIndex) => {\n    let {\n      info,\n      label,\n      constraintText,\n      errorText,\n      control\n    } = _ref2;\n    return React.createElement(InternalFormField, {\n      key: defIndex,\n      className: styles.field,\n      label: label,\n      info: info,\n      constraintText: render(item, index, constraintText),\n      errorText: render(item, index, errorText),\n      stretch: true,\n      i18nStrings: {\n        errorIconAriaLabel: i18nStrings.errorIconAriaLabel\n      },\n      __hideLabel: isWideViewport && index > 0,\n      controlId: defIndex === 0 ? firstControlId : undefined\n    }, render(item, index, control));\n  })), removable && React.createElement(ButtonContainer, {\n    index: index,\n    isNarrowViewport: isNarrowViewport,\n    hasLabel: definition.some(row => row.label)\n  }, React.createElement(InternalButton, {\n    className: styles['remove-button'],\n    formAction: \"none\",\n    ref: ref => {\n      removeButtonRefs[index] = ref !== null && ref !== void 0 ? ref : undefined;\n    },\n    ariaLabel: (_a = removeButtonAriaLabel !== null && removeButtonAriaLabel !== void 0 ? removeButtonAriaLabel : i18nStrings.removeButtonAriaLabel) === null || _a === void 0 ? void 0 : _a(item),\n    onClick: handleRemoveClick\n  }, i18n('removeButtonText', removeButtonText))))), isNarrowViewport && React.createElement(Divider, null));\n});\nconst ButtonContainer = _ref3 => {\n  let {\n    index,\n    children,\n    isNarrowViewport,\n    hasLabel\n  } = _ref3;\n  return React.createElement(\"div\", {\n    className: clsx({\n      [styles['button-container-haslabel']]: !isNarrowViewport && index === 0 && hasLabel,\n      [styles['button-container-nolabel']]: !isNarrowViewport && index === 0 && !hasLabel,\n      [styles['right-align']]: isNarrowViewport\n    })\n  }, children);\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,WAAW,MAAM,iBAAiB;AACzC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,iBAAiB,MAAM,wBAAwB;AACtD,OAAOC,oBAAgD,MAAM,2BAA2B;AAGxF,SAASC,sBAAsB,QAAmC,oBAAoB;AACtF,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,SAASC,cAAc,QAAQ,oBAAoB;AACnD,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,SAASC,eAAe,QAAQ,iBAAiB;AAEjD,MAAMC,OAAO,GAAG,MAAMV,oBAACF,WAAW;EAACa,SAAS,EAAEZ,MAAM,CAACa,OAAO;EAAEC,OAAO,EAAE;IAAEC,GAAG,EAAE;EAAG;AAAE,EAAI;AAevF,SAASC,MAAM,CACbC,IAAO,EACPC,SAAiB,EACjBC,IAA2E;EAE3E,IAAIC,cAAc,CAACD,IAAI,CAAC,EAAE;IACxB,OAAOA,IAAI,CAACF,IAAI,EAAEC,SAAS,CAAC;;EAE9B,OAAOC,IAAI;EAEX,SAASC,cAAc,CAACD,IAAa;IACnC,OAAO,OAAOA,IAAI,KAAK,UAAU;EACnC;AACF;AAEA,MAAME,eAAe,GAAG,CAAC;EAAEC,OAAO,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,EAAE,EAAE;EAAC;AAAE,CAAE,CAAC;AAC7D,MAAMC,yBAAyB,GAAG,CAAC;EAAEH,OAAO,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,EAAE,EAAE;EAAC;AAAE,CAAE,EAAE;EAAEF,OAAO,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,EAAE,EAAE;EAAC;AAAE,CAAE,CAAC;AAC5G,OAAO,MAAME,GAAG,GAAGzB,KAAK,CAAC0B,IAAI,CAC3B,QAWkB;EAAA,IAXb;IACHC,UAAU;IACVX,IAAI;IACJY,UAAU;IACVC,WAAW,GAAG,EAAE;IAChBC,KAAK;IACLC,SAAS;IACTC,gBAAgB;IAChBC,gBAAgB;IAChBC,mBAAmB;IACnBC;EAAqB,CACT;;EACZ,MAAMC,IAAI,GAAG3B,eAAe,CAAC,kBAAkB,CAAC;EAChD,MAAM4B,gBAAgB,GAAGV,UAAU,KAAK,SAAS,IAAIA,UAAU,KAAK,KAAK;EACzE,MAAMW,cAAc,GAAG,CAACD,gBAAgB;EAExC,MAAME,iBAAiB,GAAGtC,WAAW,CAAC,MAAK;IACzCG,sBAAsB,CAAC8B,mBAAmB,EAAE;MAAEjB,SAAS,EAAEa;IAAK,CAAE,CAAC;EACnE,CAAC,EAAE,CAACI,mBAAmB,EAAEJ,KAAK,CAAC,CAAC;EAEhC,MAAMU,cAAc,GAAGhC,WAAW,CAAC,mBAAmB,CAAC;EAEvD,OACER,oBAACF,WAAW;IAACa,SAAS,EAAEZ,MAAM,CAAC0C,GAAG;IAAEC,MAAM,EAAE;MAAEC,MAAM,EAAE;IAAG;EAAE,GACzD3C;IAAK4C,IAAI,EAAC,OAAO;IAAA,mBAAkB,GAAGJ,cAAc,UAAUA,cAAc;EAAE,GAC5ExC,oBAACK,YAAY;IACXwC,YAAY,EAAElB,UAAU;IACxBmB,cAAc,EAAEf,SAAS,GAAGP,yBAAyB,GAAGJ;EAAe,GAEvEpB,oBAACG,oBAAoB;IACnBQ,SAAS,EAAEZ,MAAM,CAAC,aAAa,CAAC;IAChCgD,OAAO,EAAEnB,UAAU,CAACoB,MAAM;IAC1BH,YAAY,EAAElB;EAAU,GAEvBC,UAAU,CAACqB,GAAG,CAAC,QAAsDC,QAAQ;IAAA,IAA7D;MAAEC,IAAI;MAAEC,KAAK;MAAEC,cAAc;MAAEC,SAAS;MAAEC;IAAO,CAAE;IAAA,OAClEvD,oBAACE,iBAAiB;MAChBsD,GAAG,EAAEN,QAAQ;MACbvC,SAAS,EAAEZ,MAAM,CAAC0D,KAAK;MACvBL,KAAK,EAAEA,KAAK;MACZD,IAAI,EAAEA,IAAI;MACVE,cAAc,EAAEtC,MAAM,CAACC,IAAI,EAAEc,KAAK,EAAEuB,cAAc,CAAC;MACnDC,SAAS,EAAEvC,MAAM,CAACC,IAAI,EAAEc,KAAK,EAAEwB,SAAS,CAAC;MACzCI,OAAO,EAAE,IAAI;MACb7B,WAAW,EAAE;QAAE8B,kBAAkB,EAAE9B,WAAW,CAAC8B;MAAkB,CAAE;MACnEC,WAAW,EAAEtB,cAAc,IAAIR,KAAK,GAAG,CAAC;MACxC+B,SAAS,EAAEX,QAAQ,KAAK,CAAC,GAAGV,cAAc,GAAGsB;IAAS,GAErD/C,MAAM,CAACC,IAAI,EAAEc,KAAK,EAAEyB,OAAO,CAAC,CACX;EAAA,CACrB,CAAC,CACmB,EACtBxB,SAAS,IACR/B,oBAAC+D,eAAe;IACdjC,KAAK,EAAEA,KAAK;IACZO,gBAAgB,EAAEA,gBAAgB;IAClC2B,QAAQ,EAAEpC,UAAU,CAACqC,IAAI,CAACxB,GAAG,IAAIA,GAAG,CAACW,KAAK;EAAC,GAE3CpD,oBAACM,cAAc;IACbK,SAAS,EAAEZ,MAAM,CAAC,eAAe,CAAC;IAClCmE,UAAU,EAAC,MAAM;IACjBC,GAAG,EAAEA,GAAG,IAAG;MACTlC,gBAAgB,CAACH,KAAK,CAAC,GAAGqC,GAAG,aAAHA,GAAG,cAAHA,GAAG,GAAIL,SAAS;IAC5C,CAAC;IACDM,SAAS,EAAE,MAACjC,qBAAqB,aAArBA,qBAAqB,cAArBA,qBAAqB,GAAIN,WAAW,CAACM,qBAAsB,0CAAGnB,IAAI,CAAC;IAC/EqD,OAAO,EAAE9B;EAAiB,GAEzBH,IAAI,CAAC,kBAAkB,EAAEJ,gBAAgB,CAAC,CAC5B,CAEpB,CACY,CACX,EACLK,gBAAgB,IAAIrC,oBAACU,OAAO,OAAG,CACpB;AAElB,CAAC,CACwC;AAS3C,MAAMqD,eAAe,GAAG;EAAA,IAAC;IAAEjC,KAAK;IAAEwC,QAAQ;IAAEjC,gBAAgB;IAAE2B;EAAQ,CAAmB;EAAA,OACvFhE;IACEW,SAAS,EAAEJ,IAAI,CAAC;MACd,CAACR,MAAM,CAAC,2BAA2B,CAAC,GAAG,CAACsC,gBAAgB,IAAIP,KAAK,KAAK,CAAC,IAAIkC,QAAQ;MACnF,CAACjE,MAAM,CAAC,0BAA0B,CAAC,GAAG,CAACsC,gBAAgB,IAAIP,KAAK,KAAK,CAAC,IAAI,CAACkC,QAAQ;MACnF,CAACjE,MAAM,CAAC,aAAa,CAAC,GAAGsC;KAC1B;EAAC,GAEDiC,QAAQ,CACL;AAAA,CACP","names":["InternalBox","styles","React","useCallback","InternalFormField","InternalColumnLayout","fireNonCancelableEvent","InternalGrid","InternalButton","clsx","useUniqueId","useInternalI18n","Divider","className","divider","padding","top","render","item","itemIndex","slot","isSlotFunction","GRID_DEFINITION","colspan","default","xs","REMOVABLE_GRID_DEFINITION","Row","memo","breakpoint","definition","i18nStrings","index","removable","removeButtonText","removeButtonRefs","onRemoveButtonClick","removeButtonAriaLabel","i18n","isNarrowViewport","isWideViewport","handleRemoveClick","firstControlId","row","margin","bottom","role","__breakpoint","gridDefinition","columns","length","map","defIndex","info","label","constraintText","errorText","control","key","field","stretch","errorIconAriaLabel","__hideLabel","controlId","undefined","ButtonContainer","hasLabel","some","formAction","ref","ariaLabel","onClick","children"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/attribute-editor/lib/default/attribute-editor/row.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport InternalBox from '../box/internal';\nimport styles from './styles.css.js';\nimport React, { useCallback } from 'react';\nimport InternalFormField from '../form-field/internal';\nimport InternalColumnLayout, { ColumnLayoutBreakpoint } from '../column-layout/internal';\nimport { AttributeEditorProps } from './interfaces';\nimport { ButtonProps } from '../button/interfaces';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport InternalGrid from '../grid/internal';\nimport { InternalButton } from '../button/internal';\nimport clsx from 'clsx';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useInternalI18n } from '../i18n/context';\n\nconst Divider = () => <InternalBox className={styles.divider} padding={{ top: 'l' }} />;\n\nexport interface RowProps<T> {\n  breakpoint: ColumnLayoutBreakpoint | null;\n  item: T;\n  definition: ReadonlyArray<AttributeEditorProps.FieldDefinition<T>>;\n  i18nStrings: AttributeEditorProps.I18nStrings | undefined;\n  index: number;\n  removable: boolean;\n  removeButtonText?: string;\n  removeButtonRefs: Array<ButtonProps.Ref | undefined>;\n  onRemoveButtonClick?: NonCancelableEventHandler<AttributeEditorProps.RemoveButtonClickDetail>;\n  removeButtonAriaLabel?: (item: T) => string;\n}\n\nfunction render<T>(\n  item: T,\n  itemIndex: number,\n  slot: AttributeEditorProps.FieldRenderable<T> | React.ReactNode | undefined\n) {\n  if (isSlotFunction(slot)) {\n    return slot(item, itemIndex);\n  }\n  return slot;\n\n  function isSlotFunction(slot: unknown): slot is AttributeEditorProps.FieldRenderable<T> {\n    return typeof slot === 'function';\n  }\n}\n\nconst GRID_DEFINITION = [{ colspan: { default: 12, xs: 9 } }];\nconst REMOVABLE_GRID_DEFINITION = [{ colspan: { default: 12, xs: 9 } }, { colspan: { default: 12, xs: 3 } }];\nexport const Row = React.memo(\n  <T,>({\n    breakpoint,\n    item,\n    definition,\n    i18nStrings = {},\n    index,\n    removable,\n    removeButtonText,\n    removeButtonRefs,\n    onRemoveButtonClick,\n    removeButtonAriaLabel,\n  }: RowProps<T>) => {\n    const i18n = useInternalI18n('attribute-editor');\n    const isNarrowViewport = breakpoint === 'default' || breakpoint === 'xxs';\n    const isWideViewport = !isNarrowViewport;\n\n    const handleRemoveClick = useCallback(() => {\n      fireNonCancelableEvent(onRemoveButtonClick, { itemIndex: index });\n    }, [onRemoveButtonClick, index]);\n\n    const firstControlId = useUniqueId('first-control-id-');\n\n    return (\n      <InternalBox className={styles.row} margin={{ bottom: 's' }}>\n        <div role=\"group\" aria-labelledby={`${firstControlId}-label ${firstControlId}`}>\n          <InternalGrid\n            __breakpoint={breakpoint}\n            gridDefinition={removable ? REMOVABLE_GRID_DEFINITION : GRID_DEFINITION}\n          >\n            <InternalColumnLayout\n              className={styles['row-control']}\n              columns={definition.length}\n              __breakpoint={breakpoint}\n            >\n              {definition.map(({ info, label, constraintText, errorText, control }, defIndex) => (\n                <InternalFormField\n                  key={defIndex}\n                  className={styles.field}\n                  label={label}\n                  info={info}\n                  constraintText={render(item, index, constraintText)}\n                  errorText={render(item, index, errorText)}\n                  stretch={true}\n                  i18nStrings={{ errorIconAriaLabel: i18nStrings.errorIconAriaLabel }}\n                  __hideLabel={isWideViewport && index > 0}\n                  controlId={defIndex === 0 ? firstControlId : undefined}\n                >\n                  {render(item, index, control)}\n                </InternalFormField>\n              ))}\n            </InternalColumnLayout>\n            {removable && (\n              <ButtonContainer\n                index={index}\n                isNarrowViewport={isNarrowViewport}\n                hasLabel={definition.some(row => row.label)}\n              >\n                <InternalButton\n                  className={styles['remove-button']}\n                  formAction=\"none\"\n                  ref={ref => {\n                    removeButtonRefs[index] = ref ?? undefined;\n                  }}\n                  ariaLabel={(removeButtonAriaLabel ?? i18nStrings.removeButtonAriaLabel)?.(item)}\n                  onClick={handleRemoveClick}\n                >\n                  {i18n('removeButtonText', removeButtonText)}\n                </InternalButton>\n              </ButtonContainer>\n            )}\n          </InternalGrid>\n        </div>\n        {isNarrowViewport && <Divider />}\n      </InternalBox>\n    );\n  }\n) as <T>(props: RowProps<T>) => JSX.Element;\n\ninterface ButtonContainer {\n  index: number;\n  children: React.ReactNode;\n  isNarrowViewport: boolean;\n  hasLabel: boolean;\n}\n\nconst ButtonContainer = ({ index, children, isNarrowViewport, hasLabel }: ButtonContainer) => (\n  <div\n    className={clsx({\n      [styles['button-container-haslabel']]: !isNarrowViewport && index === 0 && hasLabel,\n      [styles['button-container-nolabel']]: !isNarrowViewport && index === 0 && !hasLabel,\n      [styles['right-align']]: isNarrowViewport,\n    })}\n  >\n    {children}\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}