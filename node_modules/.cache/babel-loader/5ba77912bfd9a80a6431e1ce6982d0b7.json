{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isItemGroup, indexEquals } from './utils';\nexport default function moveHighlight(_ref) {\n  var startIndex = _ref.startIndex,\n    expandedIndex = _ref.expandedIndex,\n    getNext = _ref.getNext,\n    hasExpandableGroups = _ref.hasExpandableGroups,\n    isInRestrictedView = _ref.isInRestrictedView;\n  var tryMove = function tryMove(currentIndex) {\n    var _a;\n    var next = getNext(currentIndex);\n    if (!next) {\n      return null;\n    }\n    // Prevents stepping into disabled expandable groups. However,\n    // it's possible to navigate nested groups.\n    if (((_a = next.parent) === null || _a === void 0 ? void 0 : _a.disabled) && hasExpandableGroups) {\n      return tryMove(next.index);\n    }\n    // it is not allowed to highlight groups when non-expandable\n    if (isItemGroup(next.item) && !hasExpandableGroups) {\n      return tryMove(next.index);\n    }\n    // can only move within same parent unless is in restricted view\n    if (hasExpandableGroups && !isInRestrictedView && !isSameParent(startIndex, next.index)) {\n      return tryMove(next.index);\n    }\n    // in restricted view can only navigate to children if group is expanded\n    if (hasExpandableGroups && isInRestrictedView && !isSameLevel(next.index, expandedIndex) && !isIncluded(expandedIndex, next.index)) {\n      return tryMove(next.index);\n    }\n    return next.index;\n  };\n  return tryMove(startIndex);\n}\nfunction isSameParent(left, right) {\n  return indexEquals(left.slice(0, -1), right.slice(0, -1));\n}\nfunction isSameLevel(left, right) {\n  return left.length === right.length;\n}\nfunction isIncluded(parent, child) {\n  return indexEquals(parent, child.slice(0, -1));\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,WAAW,EAAEC,WAAW,QAAQ,SAAS;AAoBlD,eAAc,SAAUC,aAAa,OAMhB;EAAA,IALnBC,UAAU,QAAVA,UAAU;IACVC,aAAa,QAAbA,aAAa;IACbC,OAAO,QAAPA,OAAO;IACPC,mBAAmB,QAAnBA,mBAAmB;IACnBC,kBAAkB,QAAlBA,kBAAkB;EAElB,IAAMC,OAAO,GAAG,SAAVA,OAAO,CAAIC,YAAuB,EAAsB;;IAC5D,IAAMC,IAAI,GAAGL,OAAO,CAACI,YAAY,CAAC;IAElC,IAAI,CAACC,IAAI,EAAE;MACT,OAAO,IAAI;;IAGb;IACA;IACA,IAAI,WAAI,CAACC,MAAM,0CAAEC,QAAQ,KAAIN,mBAAmB,EAAE;MAChD,OAAOE,OAAO,CAACE,IAAI,CAACG,KAAK,CAAC;;IAG5B;IACA,IAAIb,WAAW,CAACU,IAAI,CAACI,IAAI,CAAC,IAAI,CAACR,mBAAmB,EAAE;MAClD,OAAOE,OAAO,CAACE,IAAI,CAACG,KAAK,CAAC;;IAG5B;IACA,IAAIP,mBAAmB,IAAI,CAACC,kBAAkB,IAAI,CAACQ,YAAY,CAACZ,UAAU,EAAEO,IAAI,CAACG,KAAK,CAAC,EAAE;MACvF,OAAOL,OAAO,CAACE,IAAI,CAACG,KAAK,CAAC;;IAG5B;IACA,IACEP,mBAAmB,IACnBC,kBAAkB,IAClB,CAACS,WAAW,CAACN,IAAI,CAACG,KAAK,EAAET,aAAa,CAAC,IACvC,CAACa,UAAU,CAACb,aAAa,EAAEM,IAAI,CAACG,KAAK,CAAC,EACtC;MACA,OAAOL,OAAO,CAACE,IAAI,CAACG,KAAK,CAAC;;IAG5B,OAAOH,IAAI,CAACG,KAAK;EACnB,CAAC;EAED,OAAOL,OAAO,CAACL,UAAU,CAAC;AAC5B;AAEA,SAASY,YAAY,CAACG,IAAe,EAAEC,KAAgB;EACrD,OAAOlB,WAAW,CAACiB,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAED,KAAK,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3D;AAEA,SAASJ,WAAW,CAACE,IAAe,EAAEC,KAAgB;EACpD,OAAOD,IAAI,CAACG,MAAM,KAAKF,KAAK,CAACE,MAAM;AACrC;AAEA,SAASJ,UAAU,CAACN,MAAiB,EAAEW,KAAgB;EACrD,OAAOrB,WAAW,CAACU,MAAM,EAAEW,KAAK,CAACF,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAChD","names":["isItemGroup","indexEquals","moveHighlight","startIndex","expandedIndex","getNext","hasExpandableGroups","isInRestrictedView","tryMove","currentIndex","next","parent","disabled","index","item","isSameParent","isSameLevel","isIncluded","left","right","slice","length","child"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/button-dropdown/utils/lib/default/button-dropdown/utils/move-highlight.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isItemGroup, indexEquals } from './utils';\nimport { ButtonDropdownProps } from '../interfaces';\nimport { TreeIndex } from './create-items-tree';\n\n// While every menu item except the edge ones have successors and predecessors,\n// there are rules determining what items are eligible for highlighting for the\n// given set of conditions. The function implements all these rules.\n\ninterface MoveHighlightProps {\n  startIndex: TreeIndex;\n  expandedIndex: TreeIndex;\n  getNext: (index: TreeIndex) => {\n    index: TreeIndex;\n    item: ButtonDropdownProps.ItemOrGroup;\n    parent?: ButtonDropdownProps.ItemOrGroup;\n  } | null;\n  hasExpandableGroups: boolean;\n  isInRestrictedView: boolean;\n}\n\nexport default function moveHighlight({\n  startIndex,\n  expandedIndex,\n  getNext,\n  hasExpandableGroups,\n  isInRestrictedView,\n}: MoveHighlightProps): TreeIndex | null {\n  const tryMove = (currentIndex: TreeIndex): TreeIndex | null => {\n    const next = getNext(currentIndex);\n\n    if (!next) {\n      return null;\n    }\n\n    // Prevents stepping into disabled expandable groups. However,\n    // it's possible to navigate nested groups.\n    if (next.parent?.disabled && hasExpandableGroups) {\n      return tryMove(next.index);\n    }\n\n    // it is not allowed to highlight groups when non-expandable\n    if (isItemGroup(next.item) && !hasExpandableGroups) {\n      return tryMove(next.index);\n    }\n\n    // can only move within same parent unless is in restricted view\n    if (hasExpandableGroups && !isInRestrictedView && !isSameParent(startIndex, next.index)) {\n      return tryMove(next.index);\n    }\n\n    // in restricted view can only navigate to children if group is expanded\n    if (\n      hasExpandableGroups &&\n      isInRestrictedView &&\n      !isSameLevel(next.index, expandedIndex) &&\n      !isIncluded(expandedIndex, next.index)\n    ) {\n      return tryMove(next.index);\n    }\n\n    return next.index;\n  };\n\n  return tryMove(startIndex);\n}\n\nfunction isSameParent(left: TreeIndex, right: TreeIndex) {\n  return indexEquals(left.slice(0, -1), right.slice(0, -1));\n}\n\nfunction isSameLevel(left: TreeIndex, right: TreeIndex) {\n  return left.length === right.length;\n}\n\nfunction isIncluded(parent: TreeIndex, child: TreeIndex) {\n  return indexEquals(parent, child.slice(0, -1));\n}\n"]},"metadata":{},"sourceType":"module"}