{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __rest } from \"tslib\";\nimport { useMemo, useState } from 'react';\nimport { filterOptions } from './utils/utils';\nimport { generateTestIndexes } from '../internal/components/options-list/utils/test-indexes';\nimport { useHighlightedOption } from '../internal/components/options-list/utils/use-highlight-option';\nvar isHighlightable = function isHighlightable(option) {\n  return !!option && option.type !== 'parent';\n};\nvar isInteractive = function isInteractive(option) {\n  return !!option && !option.disabled && option.type !== 'parent';\n};\nexport var useAutosuggestItems = function useAutosuggestItems(_ref) {\n  var options = _ref.options,\n    filterValue = _ref.filterValue,\n    filterText = _ref.filterText,\n    filteringType = _ref.filteringType,\n    hideEnteredTextLabel = _ref.hideEnteredTextLabel,\n    onSelectItem = _ref.onSelectItem;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showAll = _useState2[0],\n    setShowAll = _useState2[1];\n  var _useMemo = useMemo(function () {\n      return createItems(options);\n    }, [options]),\n    items = _useMemo.items,\n    getItemGroup = _useMemo.getItemGroup;\n  var filteredItems = useMemo(function () {\n    var filteredItems = filteringType === 'auto' && !showAll ? filterOptions(items, filterText) : _toConsumableArray(items);\n    if (filterValue && !hideEnteredTextLabel) {\n      filteredItems.unshift({\n        value: filterValue,\n        type: 'use-entered',\n        option: {\n          value: filterValue\n        }\n      });\n    }\n    generateTestIndexes(filteredItems, getItemGroup);\n    return filteredItems;\n  }, [items, getItemGroup, filterValue, filterText, filteringType, showAll, hideEnteredTextLabel]);\n  var _useHighlightedOption = useHighlightedOption({\n      options: filteredItems,\n      isHighlightable: isHighlightable\n    }),\n    _useHighlightedOption2 = _slicedToArray(_useHighlightedOption, 2),\n    highlightedOptionState = _useHighlightedOption2[0],\n    highlightedOptionHandlers = _useHighlightedOption2[1];\n  var selectHighlightedOptionWithKeyboard = function selectHighlightedOptionWithKeyboard() {\n    if (highlightedOptionState.highlightedOption && isInteractive(highlightedOptionState.highlightedOption)) {\n      onSelectItem(highlightedOptionState.highlightedOption);\n      return true;\n    }\n    return false;\n  };\n  var highlightVisibleOptionWithMouse = function highlightVisibleOptionWithMouse(index) {\n    if (filteredItems[index] && isHighlightable(filteredItems[index])) {\n      highlightedOptionHandlers.setHighlightedIndexWithMouse(index);\n    }\n  };\n  var selectVisibleOptionWithMouse = function selectVisibleOptionWithMouse(index) {\n    if (filteredItems[index] && isInteractive(filteredItems[index])) {\n      onSelectItem(filteredItems[index]);\n    }\n  };\n  return [Object.assign(Object.assign({}, highlightedOptionState), {\n    items: filteredItems,\n    showAll: showAll,\n    getItemGroup: getItemGroup\n  }), Object.assign(Object.assign({}, highlightedOptionHandlers), {\n    setShowAll: setShowAll,\n    selectHighlightedOptionWithKeyboard: selectHighlightedOptionWithKeyboard,\n    highlightVisibleOptionWithMouse: highlightVisibleOptionWithMouse,\n    selectVisibleOptionWithMouse: selectVisibleOptionWithMouse\n  })];\n};\nfunction createItems(options) {\n  var items = [];\n  var itemToGroup = new WeakMap();\n  var getItemGroup = function getItemGroup(item) {\n    return itemToGroup.get(item);\n  };\n  var _iterator = _createForOfIteratorHelper(options),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var option = _step.value;\n      if (isGroup(option)) {\n        var _iterator3 = _createForOfIteratorHelper(flattenGroup(option)),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var item = _step3.value;\n            items.push(item);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      } else {\n        items.push(Object.assign(Object.assign({}, option), {\n          option: option\n        }));\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  function flattenGroup(group) {\n    var options = group.options,\n      rest = __rest(group, [\"options\"]);\n    var hasOnlyDisabledChildren = true;\n    var items = [Object.assign(Object.assign({}, rest), {\n      type: 'parent',\n      option: group\n    })];\n    var _iterator2 = _createForOfIteratorHelper(options),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var option = _step2.value;\n        if (!option.disabled) {\n          hasOnlyDisabledChildren = false;\n        }\n        var childOption = Object.assign(Object.assign({}, option), {\n          type: 'child',\n          disabled: option.disabled || rest.disabled,\n          option: option\n        });\n        items.push(childOption);\n        itemToGroup.set(childOption, group);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    items[0].disabled = items[0].disabled || hasOnlyDisabledChildren;\n    return items;\n  }\n  return {\n    items: items,\n    getItemGroup: getItemGroup\n  };\n}\nfunction isGroup(optionOrGroup) {\n  return 'options' in optionOrGroup;\n}","map":{"version":3,"mappings":"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","names":["useMemo","useState","filterOptions","generateTestIndexes","useHighlightedOption","isHighlightable","option","type","isInteractive","disabled","useAutosuggestItems","options","filterValue","filterText","filteringType","hideEnteredTextLabel","onSelectItem","showAll","setShowAll","createItems","items","getItemGroup","filteredItems","unshift","value","highlightedOptionState","highlightedOptionHandlers","selectHighlightedOptionWithKeyboard","highlightedOption","highlightVisibleOptionWithMouse","index","setHighlightedIndexWithMouse","selectVisibleOptionWithMouse","itemToGroup","WeakMap","item","get","isGroup","flattenGroup","push","group","rest","hasOnlyDisabledChildren","childOption","set","optionOrGroup"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/autosuggest/lib/default/autosuggest/options-controller.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useMemo, useState } from 'react';\nimport { filterOptions } from './utils/utils';\nimport { generateTestIndexes } from '../internal/components/options-list/utils/test-indexes';\nimport { AutosuggestItem, AutosuggestProps } from './interfaces';\nimport {\n  HighlightedOptionHandlers,\n  HighlightedOptionState,\n  useHighlightedOption,\n} from '../internal/components/options-list/utils/use-highlight-option';\n\ntype Options = AutosuggestProps.Options;\n\nexport interface UseAutosuggestItemsProps {\n  options: Options;\n  filterValue: string;\n  filterText: string;\n  filteringType: AutosuggestProps.FilteringType;\n  hideEnteredTextLabel?: boolean;\n  onSelectItem: (option: AutosuggestItem) => void;\n}\n\nexport interface AutosuggestItemsState extends HighlightedOptionState<AutosuggestItem> {\n  items: readonly AutosuggestItem[];\n  showAll: boolean;\n  getItemGroup: (item: AutosuggestItem) => undefined | AutosuggestProps.OptionGroup;\n}\n\nexport interface AutosuggestItemsHandlers extends HighlightedOptionHandlers<AutosuggestItem> {\n  setShowAll(value: boolean): void;\n  selectHighlightedOptionWithKeyboard(): boolean;\n  highlightVisibleOptionWithMouse(index: number): void;\n  selectVisibleOptionWithMouse(index: number): void;\n}\n\nconst isHighlightable = (option?: AutosuggestItem) => {\n  return !!option && option.type !== 'parent';\n};\n\nconst isInteractive = (option?: AutosuggestItem) => !!option && !option.disabled && option.type !== 'parent';\n\nexport const useAutosuggestItems = ({\n  options,\n  filterValue,\n  filterText,\n  filteringType,\n  hideEnteredTextLabel,\n  onSelectItem,\n}: UseAutosuggestItemsProps): [AutosuggestItemsState, AutosuggestItemsHandlers] => {\n  const [showAll, setShowAll] = useState(false);\n\n  const { items, getItemGroup } = useMemo(() => createItems(options), [options]);\n\n  const filteredItems = useMemo(() => {\n    const filteredItems = filteringType === 'auto' && !showAll ? filterOptions(items, filterText) : [...items];\n    if (filterValue && !hideEnteredTextLabel) {\n      filteredItems.unshift({ value: filterValue, type: 'use-entered', option: { value: filterValue } });\n    }\n    generateTestIndexes(filteredItems, getItemGroup);\n    return filteredItems;\n  }, [items, getItemGroup, filterValue, filterText, filteringType, showAll, hideEnteredTextLabel]);\n\n  const [highlightedOptionState, highlightedOptionHandlers] = useHighlightedOption({\n    options: filteredItems,\n    isHighlightable,\n  });\n\n  const selectHighlightedOptionWithKeyboard = () => {\n    if (highlightedOptionState.highlightedOption && isInteractive(highlightedOptionState.highlightedOption)) {\n      onSelectItem(highlightedOptionState.highlightedOption);\n      return true;\n    }\n    return false;\n  };\n\n  const highlightVisibleOptionWithMouse = (index: number) => {\n    if (filteredItems[index] && isHighlightable(filteredItems[index])) {\n      highlightedOptionHandlers.setHighlightedIndexWithMouse(index);\n    }\n  };\n\n  const selectVisibleOptionWithMouse = (index: number) => {\n    if (filteredItems[index] && isInteractive(filteredItems[index])) {\n      onSelectItem(filteredItems[index]);\n    }\n  };\n\n  return [\n    { ...highlightedOptionState, items: filteredItems, showAll, getItemGroup },\n    {\n      ...highlightedOptionHandlers,\n      setShowAll,\n      selectHighlightedOptionWithKeyboard,\n      highlightVisibleOptionWithMouse,\n      selectVisibleOptionWithMouse,\n    },\n  ];\n};\n\nfunction createItems(options: Options) {\n  const items: AutosuggestItem[] = [];\n  const itemToGroup = new WeakMap<AutosuggestItem, AutosuggestProps.OptionGroup>();\n  const getItemGroup = (item: AutosuggestItem) => itemToGroup.get(item);\n\n  for (const option of options) {\n    if (isGroup(option)) {\n      for (const item of flattenGroup(option)) {\n        items.push(item);\n      }\n    } else {\n      items.push({ ...option, option });\n    }\n  }\n\n  function flattenGroup(group: AutosuggestProps.OptionGroup) {\n    const { options, ...rest } = group;\n\n    let hasOnlyDisabledChildren = true;\n\n    const items: AutosuggestItem[] = [{ ...rest, type: 'parent', option: group }];\n\n    for (const option of options) {\n      if (!option.disabled) {\n        hasOnlyDisabledChildren = false;\n      }\n\n      const childOption: AutosuggestItem = {\n        ...option,\n        type: 'child',\n        disabled: option.disabled || rest.disabled,\n        option,\n      };\n\n      items.push(childOption);\n\n      itemToGroup.set(childOption, group);\n    }\n\n    items[0].disabled = items[0].disabled || hasOnlyDisabledChildren;\n\n    return items;\n  }\n\n  return { items, getItemGroup };\n}\n\nfunction isGroup(optionOrGroup: AutosuggestProps.Option): optionOrGroup is AutosuggestProps.OptionGroup {\n  return 'options' in optionOrGroup;\n}\n"]},"metadata":{},"sourceType":"module"}