{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalBox from '../box/internal';\nimport { InternalButton } from '../button/internal';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport styles from './styles.css.js';\nconst MAX_VALUE = 100;\nconst clamp = (value, lowerLimit, upperLimit) => {\n  return Math.max(Math.min(value, upperLimit), lowerLimit);\n};\nexport const Progress = _ref => {\n  let {\n    value,\n    isInFlash,\n    ariaLabel,\n    ariaLabelledby\n  } = _ref;\n  const roundedValue = Math.round(value);\n  const progressValue = clamp(roundedValue, 0, MAX_VALUE);\n  return React.createElement(\"div\", {\n    className: styles['progress-container']\n  }, React.createElement(\"progress\", {\n    className: clsx(styles.progress, progressValue >= MAX_VALUE && styles.complete, isInFlash && styles['progress-in-flash']),\n    max: MAX_VALUE,\n    value: progressValue,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": !ariaLabel ? ariaLabelledby : undefined\n  }), React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: styles['percentage-container']\n  }, React.createElement(InternalBox, {\n    className: styles.percentage,\n    variant: \"small\",\n    color: isInFlash ? 'inherit' : undefined\n  }, `${progressValue}%`)));\n};\nexport const SmallText = _ref2 => {\n  let {\n    color,\n    children\n  } = _ref2;\n  return React.createElement(InternalBox, {\n    className: styles['word-wrap'],\n    variant: \"small\",\n    display: \"block\",\n    color: color\n  }, children);\n};\nconst ResultButton = _ref3 => {\n  let {\n    onClick,\n    children\n  } = _ref3;\n  return React.createElement(\"div\", {\n    className: styles['result-button']\n  }, React.createElement(InternalButton, {\n    formAction: \"none\",\n    onClick: onClick\n  }, children));\n};\nexport const ResultState = _ref4 => {\n  let {\n    isInFlash,\n    resultText,\n    resultButtonText,\n    status,\n    onClick\n  } = _ref4;\n  const hasResultButton = !!resultButtonText;\n  if (isInFlash) {\n    return React.createElement(\"div\", {\n      className: styles[`result-container-${status}`],\n      \"aria-live\": \"polite\",\n      \"aria-atomic\": \"true\"\n    }, React.createElement(\"span\", {\n      className: styles['result-text']\n    }, resultText));\n  }\n  return React.createElement(\"div\", {\n    className: styles[`result-container-${status}`],\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\"\n  }, React.createElement(\"span\", {\n    className: clsx(hasResultButton && styles['with-result-button'])\n  }, React.createElement(InternalStatusIndicator, {\n    type: status === 'success' ? 'success' : 'error'\n  }, React.createElement(\"span\", {\n    className: styles['result-text']\n  }, resultText))), hasResultButton && React.createElement(ResultButton, {\n    onClick: onClick\n  }, resultButtonText));\n};","map":{"version":3,"mappings":"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","names":["React","clsx","InternalBox","InternalButton","InternalStatusIndicator","styles","MAX_VALUE","clamp","value","lowerLimit","upperLimit","Math","max","min","Progress","isInFlash","ariaLabel","ariaLabelledby","roundedValue","round","progressValue","className","progress","complete","undefined","percentage","variant","color","SmallText","children","display","ResultButton","onClick","formAction","ResultState","resultText","resultButtonText","status","hasResultButton","type"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/progress-bar/lib/default/progress-bar/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { BoxProps } from '../box/interfaces';\nimport InternalBox from '../box/internal';\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport InternalStatusIndicator from '../status-indicator/internal';\n\nimport { ProgressBarProps } from './interfaces';\nimport styles from './styles.css.js';\n\nconst MAX_VALUE = 100;\n\nconst clamp = (value: number, lowerLimit: number, upperLimit: number) => {\n  return Math.max(Math.min(value, upperLimit), lowerLimit);\n};\n\ninterface ProgressProps {\n  value: number;\n  isInFlash: boolean;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n}\nexport const Progress = ({ value, isInFlash, ariaLabel, ariaLabelledby }: ProgressProps) => {\n  const roundedValue = Math.round(value);\n  const progressValue = clamp(roundedValue, 0, MAX_VALUE);\n\n  return (\n    <div className={styles['progress-container']}>\n      <progress\n        className={clsx(\n          styles.progress,\n          progressValue >= MAX_VALUE && styles.complete,\n          isInFlash && styles['progress-in-flash']\n        )}\n        max={MAX_VALUE}\n        value={progressValue}\n        aria-label={ariaLabel}\n        // Ensures aria-label takes precedence over aria-labelledby\n        aria-labelledby={!ariaLabel ? ariaLabelledby : undefined}\n      />\n      <span aria-hidden=\"true\" className={styles['percentage-container']}>\n        <InternalBox className={styles.percentage} variant=\"small\" color={isInFlash ? 'inherit' : undefined}>\n          {`${progressValue}%`}\n        </InternalBox>\n      </span>\n    </div>\n  );\n};\n\ninterface SmallTextProps {\n  color?: BoxProps.Color;\n  children: React.ReactNode;\n}\n\nexport const SmallText = ({ color, children }: SmallTextProps) => {\n  return (\n    <InternalBox className={styles['word-wrap']} variant=\"small\" display=\"block\" color={color}>\n      {children}\n    </InternalBox>\n  );\n};\n\nconst ResultButton = ({ onClick, children }: ButtonProps) => {\n  return (\n    <div className={styles['result-button']}>\n      <InternalButton formAction=\"none\" onClick={onClick}>\n        {children}\n      </InternalButton>\n    </div>\n  );\n};\n\ninterface ResultStateProps {\n  isInFlash: boolean;\n  resultText: React.ReactNode;\n  resultButtonText?: string;\n  status: ProgressBarProps.Status;\n  onClick: () => void;\n}\n\nexport const ResultState = ({ isInFlash, resultText, resultButtonText, status, onClick }: ResultStateProps) => {\n  const hasResultButton = !!resultButtonText;\n\n  if (isInFlash) {\n    return (\n      <div className={styles[`result-container-${status}`]} aria-live=\"polite\" aria-atomic=\"true\">\n        <span className={styles['result-text']}>{resultText}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles[`result-container-${status}`]} aria-live=\"polite\" aria-atomic=\"true\">\n      <span className={clsx(hasResultButton && styles['with-result-button'])}>\n        <InternalStatusIndicator type={status === 'success' ? 'success' : 'error'}>\n          <span className={styles['result-text']}>{resultText}</span>\n        </InternalStatusIndicator>\n      </span>\n      {hasResultButton && <ResultButton onClick={onClick}>{resultButtonText}</ResultButton>}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}