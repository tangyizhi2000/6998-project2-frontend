{"ast":null,"code":"import _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useLayoutEffect, useState } from 'react';\nimport { findUpUntil } from '../../utils/dom';\nvar contextMatch = /awsui-context-([\\w-]+)/;\nexport function useVisualContext(elementRef) {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  useLayoutEffect(function () {\n    var _a;\n    if (elementRef.current) {\n      var contextParent = findUpUntil(elementRef.current, function (node) {\n        return !!node.className.match(contextMatch);\n      });\n      setValue((_a = contextParent === null || contextParent === void 0 ? void 0 : contextParent.className.match(contextMatch)[1]) !== null && _a !== void 0 ? _a : '');\n    }\n  }, [elementRef]);\n  return value;\n}\n/**\n * This function returns only the className string needed to apply a\n * visual context to the DOM. It is used by the default export but\n * can also be imported directly for situations where the insertion\n * of a <div> node creates style problems.\n */\nexport function getVisualContextClassname(contextName) {\n  return \"awsui-context-\".concat(contextName);\n}\nexport default function VisualContext(_ref) {\n  var contextName = _ref.contextName,\n    className = _ref.className,\n    children = _ref.children;\n  return React.createElement(\"div\", {\n    className: clsx(getVisualContextClassname(contextName), className)\n  }, children);\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,IAAIC,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,WAAW,QAAQ,iBAAiB;AAQ7C,IAAMC,YAAY,GAAG,wBAAwB;AAE7C,OAAM,SAAUC,gBAAgB,CAACC,UAAwC;EACvE,gBAA0BJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BK,KAAK;IAAEC,QAAQ;EAEtBP,eAAe,CAAC,YAAK;;IACnB,IAAIK,UAAU,CAACG,OAAO,EAAE;MACtB,IAAMC,aAAa,GAAGP,WAAW,CAACG,UAAU,CAACG,OAAO,EAAE,cAAI;QAAA,OAAI,CAAC,CAACE,IAAI,CAACC,SAAS,CAACC,KAAK,CAACT,YAAY,CAAC;MAAA,EAAC;MACnGI,QAAQ,CAAC,mBAAa,aAAbE,aAAa,uBAAbA,aAAa,CAAEE,SAAS,CAACC,KAAK,CAACT,YAAY,EAAG,CAAC,CAAC,mCAAI,EAAE,CAAC;;EAEpE,CAAC,EAAE,CAACE,UAAU,CAAC,CAAC;EAEhB,OAAOC,KAAK;AACd;AAEA;;;;;;AAMA,OAAM,SAAUO,yBAAyB,CAACC,WAAmB;EAC3D,+BAAwBA,WAAW;AACrC;AAEA,eAAc,SAAUC,aAAa,OAAyD;EAAA,IAAtDD,WAAW,QAAXA,WAAW;IAAEH,SAAS,QAATA,SAAS;IAAEK,QAAQ,QAARA,QAAQ;EACtE,OAAOjB;IAAKY,SAAS,EAAEb,IAAI,CAACe,yBAAyB,CAACC,WAAW,CAAC,EAAEH,SAAS;EAAC,GAAGK,QAAQ,CAAO;AAClG","names":["clsx","React","useLayoutEffect","useState","findUpUntil","contextMatch","useVisualContext","elementRef","value","setValue","current","contextParent","node","className","match","getVisualContextClassname","contextName","VisualContext","children"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/components/visual-context/lib/default/internal/components/visual-context/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useLayoutEffect, useState } from 'react';\nimport { findUpUntil } from '../../utils/dom';\n\ninterface VisualContextProps {\n  contextName: string;\n  className?: string;\n  children: React.ReactNode;\n}\n\nconst contextMatch = /awsui-context-([\\w-]+)/;\n\nexport function useVisualContext(elementRef: React.RefObject<HTMLElement>) {\n  const [value, setValue] = useState('');\n\n  useLayoutEffect(() => {\n    if (elementRef.current) {\n      const contextParent = findUpUntil(elementRef.current, node => !!node.className.match(contextMatch));\n      setValue(contextParent?.className.match(contextMatch)![1] ?? '');\n    }\n  }, [elementRef]);\n\n  return value;\n}\n\n/**\n * This function returns only the className string needed to apply a\n * visual context to the DOM. It is used by the default export but\n * can also be imported directly for situations where the insertion\n * of a <div> node creates style problems.\n */\nexport function getVisualContextClassname(contextName: string) {\n  return `awsui-context-${contextName}`;\n}\n\nexport default function VisualContext({ contextName, className, children }: VisualContextProps) {\n  return <div className={clsx(getVisualContextClassname(contextName), className)}>{children}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}