{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef, memo } from 'react';\nimport InternalBox from '../../../box/internal';\nimport { KeyCode } from '../../keycode';\nimport SeriesMarker from '../chart-series-marker';\nimport styles from './styles.css.js';\nimport { useInternalI18n } from '../../../i18n/context';\nexport default memo(ChartLegend);\nfunction ChartLegend(_ref) {\n  let {\n    series,\n    onHighlightChange,\n    highlightedSeries,\n    legendTitle,\n    ariaLabel,\n    plotContainerRef\n  } = _ref;\n  const i18n = useInternalI18n('[charts]');\n  const containerRef = useRef(null);\n  const segmentsRef = useRef([]);\n  const highlightedSeriesIndex = findSeriesIndex(series, highlightedSeries);\n  const highlightLeft = () => {\n    var _a;\n    const currentIndex = highlightedSeriesIndex !== null && highlightedSeriesIndex !== void 0 ? highlightedSeriesIndex : 0;\n    const nextIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : series.length - 1;\n    (_a = segmentsRef.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n  const highlightRight = () => {\n    var _a;\n    const currentIndex = highlightedSeriesIndex !== null && highlightedSeriesIndex !== void 0 ? highlightedSeriesIndex : 0;\n    const nextIndex = currentIndex + 1 < series.length ? currentIndex + 1 : 0;\n    (_a = segmentsRef.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n  const handleKeyPress = event => {\n    if (event.keyCode === KeyCode.right || event.keyCode === KeyCode.left) {\n      // Preventing default fixes an issue in Safari+VO when VO additionally interprets arrow keys as its commands.\n      event.preventDefault();\n      switch (event.keyCode) {\n        case KeyCode.left:\n          return highlightLeft();\n        case KeyCode.right:\n          return highlightRight();\n        default:\n          return;\n      }\n    }\n  };\n  const handleSelection = index => {\n    if (series[index].datum !== highlightedSeries) {\n      onHighlightChange(series[index].datum);\n    }\n  };\n  const handleBlur = event => {\n    var _a;\n    // We need to check if the next element to be focused inside the plot container or not\n    // so we don't clear the selected legend in case we are still focusing elements ( legend elements )\n    // inside the plot container\n    if (event.relatedTarget === null || containerRef.current && !containerRef.current.contains(event.relatedTarget) && !((_a = plotContainerRef === null || plotContainerRef === void 0 ? void 0 : plotContainerRef.current) === null || _a === void 0 ? void 0 : _a.contains(event.relatedTarget))) {\n      onHighlightChange(null);\n    }\n  };\n  const handleMouseOver = s => {\n    if (s !== highlightedSeries) {\n      onHighlightChange(s);\n    }\n  };\n  const handleMouseLeave = () => {\n    onHighlightChange(null);\n  };\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    ref: containerRef,\n    role: \"toolbar\",\n    \"aria-label\": legendTitle || i18n('i18nStrings.legendAriaLabel', ariaLabel),\n    className: styles.root,\n    onKeyDown: handleKeyPress,\n    onBlur: handleBlur\n  }, legendTitle && React.createElement(InternalBox, {\n    fontWeight: \"bold\",\n    className: styles.title\n  }, legendTitle), React.createElement(\"div\", {\n    className: styles.list\n  }, series.map((s, index) => {\n    const someHighlighted = highlightedSeries !== null;\n    const isHighlighted = highlightedSeries === s.datum;\n    const isDimmed = someHighlighted && !isHighlighted;\n    return React.createElement(\"div\", {\n      role: \"button\",\n      key: index,\n      \"aria-pressed\": isHighlighted,\n      className: clsx(styles.marker, {\n        [styles['marker--dimmed']]: isDimmed,\n        [styles['marker--highlighted']]: isHighlighted\n      }),\n      ref: elem => {\n        if (elem) {\n          segmentsRef.current[index] = elem;\n        } else {\n          delete segmentsRef.current[index];\n        }\n      },\n      tabIndex: index === highlightedSeriesIndex || highlightedSeriesIndex === undefined && index === 0 ? 0 : -1,\n      onFocus: () => handleSelection(index),\n      onClick: () => handleSelection(index),\n      onMouseOver: () => handleMouseOver(s.datum),\n      onMouseLeave: handleMouseLeave\n    }, React.createElement(SeriesMarker, {\n      color: s.color,\n      type: s.type\n    }), \" \", s.label);\n  }))));\n}\nfunction findSeriesIndex(series, targetSeries) {\n  for (let index = 0; index < series.length; index++) {\n    if (series[index].datum === targetSeries) {\n      return index;\n    }\n  }\n  return undefined;\n}","map":{"version":3,"mappings":"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","names":["clsx","React","useRef","memo","InternalBox","KeyCode","SeriesMarker","styles","useInternalI18n","ChartLegend","series","onHighlightChange","highlightedSeries","legendTitle","ariaLabel","plotContainerRef","i18n","containerRef","segmentsRef","highlightedSeriesIndex","findSeriesIndex","highlightLeft","currentIndex","nextIndex","length","current","focus","highlightRight","handleKeyPress","event","keyCode","right","left","preventDefault","handleSelection","index","datum","handleBlur","relatedTarget","contains","handleMouseOver","s","handleMouseLeave","ref","role","className","root","onKeyDown","onBlur","fontWeight","title","list","map","someHighlighted","isHighlighted","isDimmed","key","marker","elem","tabIndex","undefined","onFocus","onClick","onMouseOver","onMouseLeave","color","type","label","targetSeries"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/internal/components/chart-legend/lib/default/internal/components/chart-legend/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef, memo } from 'react';\n\nimport InternalBox from '../../../box/internal';\nimport { KeyCode } from '../../keycode';\nimport SeriesMarker, { ChartSeriesMarkerType } from '../chart-series-marker';\nimport styles from './styles.css.js';\nimport { useInternalI18n } from '../../../i18n/context';\n\nexport interface ChartLegendItem<T> {\n  label: string;\n  color: string;\n  type: ChartSeriesMarkerType;\n  datum: T;\n}\n\nexport interface ChartLegendProps<T> {\n  series: ReadonlyArray<ChartLegendItem<T>>;\n  highlightedSeries: T | null;\n  legendTitle?: string;\n  ariaLabel?: string;\n  plotContainerRef?: React.RefObject<HTMLDivElement>;\n  onHighlightChange: (series: T | null) => void;\n}\n\nexport default memo(ChartLegend) as typeof ChartLegend;\n\nfunction ChartLegend<T>({\n  series,\n  onHighlightChange,\n  highlightedSeries,\n  legendTitle,\n  ariaLabel,\n  plotContainerRef,\n}: ChartLegendProps<T>) {\n  const i18n = useInternalI18n('[charts]');\n  const containerRef = useRef<HTMLDivElement>(null);\n  const segmentsRef = useRef<Record<number, HTMLElement>>([]);\n\n  const highlightedSeriesIndex = findSeriesIndex(series, highlightedSeries);\n\n  const highlightLeft = () => {\n    const currentIndex = highlightedSeriesIndex ?? 0;\n    const nextIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : series.length - 1;\n    segmentsRef.current[nextIndex]?.focus();\n  };\n\n  const highlightRight = () => {\n    const currentIndex = highlightedSeriesIndex ?? 0;\n    const nextIndex = currentIndex + 1 < series.length ? currentIndex + 1 : 0;\n    segmentsRef.current[nextIndex]?.focus();\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent) => {\n    if (event.keyCode === KeyCode.right || event.keyCode === KeyCode.left) {\n      // Preventing default fixes an issue in Safari+VO when VO additionally interprets arrow keys as its commands.\n      event.preventDefault();\n\n      switch (event.keyCode) {\n        case KeyCode.left:\n          return highlightLeft();\n\n        case KeyCode.right:\n          return highlightRight();\n\n        default:\n          return;\n      }\n    }\n  };\n\n  const handleSelection = (index: number) => {\n    if (series[index].datum !== highlightedSeries) {\n      onHighlightChange(series[index].datum);\n    }\n  };\n\n  const handleBlur = (event: React.FocusEvent<Element>) => {\n    // We need to check if the next element to be focused inside the plot container or not\n    // so we don't clear the selected legend in case we are still focusing elements ( legend elements )\n    // inside the plot container\n    if (\n      event.relatedTarget === null ||\n      (containerRef.current &&\n        !containerRef.current.contains(event.relatedTarget) &&\n        !plotContainerRef?.current?.contains(event.relatedTarget))\n    ) {\n      onHighlightChange(null);\n    }\n  };\n\n  const handleMouseOver = (s: T) => {\n    if (s !== highlightedSeries) {\n      onHighlightChange(s);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    onHighlightChange(null);\n  };\n\n  return (\n    <>\n      <div\n        ref={containerRef}\n        role=\"toolbar\"\n        aria-label={legendTitle || i18n('i18nStrings.legendAriaLabel', ariaLabel)}\n        className={styles.root}\n        onKeyDown={handleKeyPress}\n        onBlur={handleBlur}\n      >\n        {legendTitle && (\n          <InternalBox fontWeight=\"bold\" className={styles.title}>\n            {legendTitle}\n          </InternalBox>\n        )}\n\n        <div className={styles.list}>\n          {series.map((s, index) => {\n            const someHighlighted = highlightedSeries !== null;\n            const isHighlighted = highlightedSeries === s.datum;\n            const isDimmed = someHighlighted && !isHighlighted;\n            return (\n              <div\n                role=\"button\"\n                key={index}\n                aria-pressed={isHighlighted}\n                className={clsx(styles.marker, {\n                  [styles['marker--dimmed']]: isDimmed,\n                  [styles['marker--highlighted']]: isHighlighted,\n                })}\n                ref={elem => {\n                  if (elem) {\n                    segmentsRef.current[index] = elem;\n                  } else {\n                    delete segmentsRef.current[index];\n                  }\n                }}\n                tabIndex={\n                  index === highlightedSeriesIndex || (highlightedSeriesIndex === undefined && index === 0) ? 0 : -1\n                }\n                onFocus={() => handleSelection(index)}\n                onClick={() => handleSelection(index)}\n                onMouseOver={() => handleMouseOver(s.datum)}\n                onMouseLeave={handleMouseLeave}\n              >\n                <SeriesMarker color={s.color} type={s.type} /> {s.label}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction findSeriesIndex<T>(series: ReadonlyArray<ChartLegendItem<T>>, targetSeries: null | T): undefined | number {\n  for (let index = 0; index < series.length; index++) {\n    if (series[index].datum === targetSeries) {\n      return index;\n    }\n  }\n  return undefined;\n}\n"]},"metadata":{},"sourceType":"module"}