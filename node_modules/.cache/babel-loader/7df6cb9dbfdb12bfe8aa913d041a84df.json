{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\nimport React, { useEffect, useRef } from 'react';\nimport { getBaseProps } from '../../base-component';\nimport { fireNonCancelableEvent, fireKeyboardEvent } from '../../events';\nimport { findUpUntil } from '../../utils/dom';\nimport styles from './styles.css.js';\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\nconst BOTTOM_TRIGGER_OFFSET = 80;\nconst getItemIndex = (containerRef, event) => {\n  const target = findUpUntil(event.target, element => element === containerRef.current || !!element.dataset.mouseTarget);\n  const mouseTarget = target === null || target === void 0 ? void 0 : target.dataset.mouseTarget;\n  return mouseTarget ? parseInt(mouseTarget) : -1;\n};\nconst OptionsList = (_a, ref) => {\n  var {\n      open,\n      statusType,\n      children,\n      nativeAttributes = {},\n      onKeyDown,\n      onBlur,\n      onFocus,\n      onLoadMore,\n      onMouseUp,\n      onMouseMove,\n      position = 'relative',\n      role = 'listbox',\n      decreaseTopMargin = false,\n      ariaLabel,\n      ariaLabelledby,\n      ariaDescribedby\n    } = _a,\n    restProps = __rest(_a, [\"open\", \"statusType\", \"children\", \"nativeAttributes\", \"onKeyDown\", \"onBlur\", \"onFocus\", \"onLoadMore\", \"onMouseUp\", \"onMouseMove\", \"position\", \"role\", \"decreaseTopMargin\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescribedby\"]);\n  const baseProps = getBaseProps(restProps);\n  const menuRef = useRef(null);\n  const handleScroll = useStableCallback(() => {\n    const scrollContainer = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current;\n    if (scrollContainer) {\n      const bottomEdgePosition = scrollContainer.scrollTop + scrollContainer.clientHeight;\n      const remainingScrollHeight = scrollContainer.scrollHeight - bottomEdgePosition;\n      if (remainingScrollHeight < BOTTOM_TRIGGER_OFFSET) {\n        fireNonCancelableEvent(onLoadMore);\n      }\n    }\n  });\n  useEffect(() => {\n    if (open && statusType === 'pending') {\n      handleScroll();\n    }\n  }, [open, statusType, handleScroll]);\n  const className = clsx(styles['options-list'], {\n    [styles['decrease-top-margin']]: decreaseTopMargin\n  });\n  const mergedRef = useMergeRefs(ref, menuRef);\n  return React.createElement(\"ul\", Object.assign({}, baseProps, nativeAttributes, {\n    className: className,\n    ref: mergedRef,\n    style: {\n      position\n    },\n    role: role,\n    onScroll: handleScroll,\n    onKeyDown: event => onKeyDown && fireKeyboardEvent(onKeyDown, event),\n    onMouseMove: event => onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove(getItemIndex(menuRef, event)),\n    onMouseUp: event => onMouseUp === null || onMouseUp === void 0 ? void 0 : onMouseUp(getItemIndex(menuRef, event)),\n    onBlur: event => fireNonCancelableEvent(onBlur, {\n      relatedTarget: event.relatedTarget\n    }),\n    onFocus: () => fireNonCancelableEvent(onFocus),\n    tabIndex: -1,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby\n  }), open && children);\n};\nexport default React.forwardRef(OptionsList);","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAA6BC,YAAY,QAAQ,sBAAsB;AACvE,SACEC,sBAAsB,EAItBC,iBAAiB,QACZ,cAAc;AACrB,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,SAASC,iBAAiB,QAAQ,+CAA+C;AA2BjF,MAAMC,qBAAqB,GAAG,EAAE;AAEhC,MAAMC,YAAY,GAAG,CAACC,YAA0C,EAAEC,KAAuB,KAAI;EAC3F,MAAMC,MAAM,GAAGP,WAAW,CACxBM,KAAK,CAACC,MAAqB,EAC3BC,OAAO,IAAIA,OAAO,KAAKH,YAAY,CAACI,OAAO,IAAI,CAAC,CAACD,OAAO,CAACE,OAAO,CAACC,WAAW,CAC7E;EACD,MAAMA,WAAW,GAAGJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,OAAO,CAACC,WAAW;EAC/C,OAAOA,WAAW,GAAGC,QAAQ,CAACD,WAAW,CAAC,GAAG,CAAC,CAAC;AACjD,CAAC;AAED,MAAME,WAAW,GAAG,CAClBC,EAkBmB,EACnBC,GAAgC,KAC9B;MApBF;MACEC,IAAI;MACJC,UAAU;MACVC,QAAQ;MACRC,gBAAgB,GAAG,EAAE;MACrBC,SAAS;MACTC,MAAM;MACNC,OAAO;MACPC,UAAU;MACVC,SAAS;MACTC,WAAW;MACXC,QAAQ,GAAG,UAAU;MACrBC,IAAI,GAAG,SAAS;MAChBC,iBAAiB,GAAG,KAAK;MACzBC,SAAS;MACTC,cAAc;MACdC;IAAe,MAEE;IADdC,SAAS,cAjBd,6NAkBC,CADa;EAId,MAAMC,SAAS,GAAGpC,YAAY,CAACmC,SAAS,CAAC;EACzC,MAAME,OAAO,GAAGtC,MAAM,CAAmB,IAAI,CAAC;EAE9C,MAAMuC,YAAY,GAAGjC,iBAAiB,CAAC,MAAK;IAC1C,MAAMkC,eAAe,GAAGF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEzB,OAAO;IACxC,IAAI2B,eAAe,EAAE;MACnB,MAAMC,kBAAkB,GAAGD,eAAe,CAACE,SAAS,GAAGF,eAAe,CAACG,YAAY;MACnF,MAAMC,qBAAqB,GAAGJ,eAAe,CAACK,YAAY,GAAGJ,kBAAkB;MAC/E,IAAIG,qBAAqB,GAAGrC,qBAAqB,EAAE;QACjDL,sBAAsB,CAACyB,UAAU,CAAC;;;EAGxC,CAAC,CAAC;EAEF5B,SAAS,CAAC,MAAK;IACb,IAAIqB,IAAI,IAAIC,UAAU,KAAK,SAAS,EAAE;MACpCkB,YAAY,EAAE;;EAElB,CAAC,EAAE,CAACnB,IAAI,EAAEC,UAAU,EAAEkB,YAAY,CAAC,CAAC;EAEpC,MAAMO,SAAS,GAAGlD,IAAI,CAACS,MAAM,CAAC,cAAc,CAAC,EAAE;IAC7C,CAACA,MAAM,CAAC,qBAAqB,CAAC,GAAG2B;GAClC,CAAC;EAEF,MAAMe,SAAS,GAAGlD,YAAY,CAACsB,GAAG,EAAEmB,OAAO,CAAC;EAE5C,OACExC,4CACMuC,SAAS,EACTd,gBAAgB;IACpBuB,SAAS,EAAEA,SAAS;IACpB3B,GAAG,EAAE4B,SAAS;IACdC,KAAK,EAAE;MAAElB;IAAQ,CAAE;IACnBC,IAAI,EAAEA,IAAI;IACVkB,QAAQ,EAAEV,YAAY;IACtBf,SAAS,EAAEd,KAAK,IAAIc,SAAS,IAAIrB,iBAAiB,CAACqB,SAAS,EAAEd,KAAK,CAAC;IACpEmB,WAAW,EAAEnB,KAAK,IAAImB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAGrB,YAAY,CAAC8B,OAAO,EAAE5B,KAAK,CAAC,CAAC;IACjEkB,SAAS,EAAElB,KAAK,IAAIkB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAGpB,YAAY,CAAC8B,OAAO,EAAE5B,KAAK,CAAC,CAAC;IAC7De,MAAM,EAAEf,KAAK,IAAIR,sBAAsB,CAACuB,MAAM,EAAE;MAAEyB,aAAa,EAAExC,KAAK,CAACwC;IAAa,CAAE,CAAC;IACvFxB,OAAO,EAAE,MAAMxB,sBAAsB,CAACwB,OAAO,CAAC;IAC9CyB,QAAQ,EAAE,CAAC,CAAC;IAAA,cACAlB,SAAS;IAAA,mBACJC,cAAc;IAAA,oBACbC;EAAe,IAEhCf,IAAI,IAAIE,QAAQ,CACd;AAET,CAAC;AAED,eAAexB,KAAK,CAACsD,UAAU,CAACnC,WAAW,CAAC","names":["clsx","useMergeRefs","React","useEffect","useRef","getBaseProps","fireNonCancelableEvent","fireKeyboardEvent","findUpUntil","styles","useStableCallback","BOTTOM_TRIGGER_OFFSET","getItemIndex","containerRef","event","target","element","current","dataset","mouseTarget","parseInt","OptionsList","_a","ref","open","statusType","children","nativeAttributes","onKeyDown","onBlur","onFocus","onLoadMore","onMouseUp","onMouseMove","position","role","decreaseTopMargin","ariaLabel","ariaLabelledby","ariaDescribedby","restProps","baseProps","menuRef","handleScroll","scrollContainer","bottomEdgePosition","scrollTop","clientHeight","remainingScrollHeight","scrollHeight","className","mergedRef","style","onScroll","relatedTarget","tabIndex","forwardRef"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/components/options-list/lib/default/internal/components/options-list/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\nimport React, { useEffect, useRef } from 'react';\nimport { BaseComponentProps, getBaseProps } from '../../base-component';\nimport {\n  fireNonCancelableEvent,\n  NonCancelableEventHandler,\n  CancelableEventHandler,\n  BaseKeyDetail,\n  fireKeyboardEvent,\n} from '../../events';\nimport { findUpUntil } from '../../utils/dom';\nimport styles from './styles.css.js';\nimport { DropdownStatusProps } from '../dropdown-status';\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\n\nexport interface OptionsListProps extends BaseComponentProps {\n  open?: boolean;\n  statusType: DropdownStatusProps.StatusType;\n  /**\n   * Options list\n   */\n  children: React.ReactNode;\n  nativeAttributes?: Record<string, any>;\n  /**\n   * Called when more items need to be loaded.\n   */\n  onLoadMore?: NonCancelableEventHandler;\n  onKeyDown?: CancelableEventHandler<BaseKeyDetail>;\n  onBlur?: NonCancelableEventHandler<{ relatedTarget: Node | null }>;\n  onFocus?: NonCancelableEventHandler;\n  onMouseUp?: (itemIndex: number) => void;\n  onMouseMove?: (itemIndex: number) => void;\n  position?: React.CSSProperties['position'];\n  role?: 'listbox' | 'list' | 'menu';\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n  decreaseTopMargin?: boolean;\n}\n\nconst BOTTOM_TRIGGER_OFFSET = 80;\n\nconst getItemIndex = (containerRef: React.RefObject<HTMLElement>, event: React.MouseEvent) => {\n  const target = findUpUntil(\n    event.target as HTMLElement,\n    element => element === containerRef.current || !!element.dataset.mouseTarget\n  );\n  const mouseTarget = target?.dataset.mouseTarget;\n  return mouseTarget ? parseInt(mouseTarget) : -1;\n};\n\nconst OptionsList = (\n  {\n    open,\n    statusType,\n    children,\n    nativeAttributes = {},\n    onKeyDown,\n    onBlur,\n    onFocus,\n    onLoadMore,\n    onMouseUp,\n    onMouseMove,\n    position = 'relative',\n    role = 'listbox',\n    decreaseTopMargin = false,\n    ariaLabel,\n    ariaLabelledby,\n    ariaDescribedby,\n    ...restProps\n  }: OptionsListProps,\n  ref: React.Ref<HTMLUListElement>\n) => {\n  const baseProps = getBaseProps(restProps);\n  const menuRef = useRef<HTMLUListElement>(null);\n\n  const handleScroll = useStableCallback(() => {\n    const scrollContainer = menuRef?.current;\n    if (scrollContainer) {\n      const bottomEdgePosition = scrollContainer.scrollTop + scrollContainer.clientHeight;\n      const remainingScrollHeight = scrollContainer.scrollHeight - bottomEdgePosition;\n      if (remainingScrollHeight < BOTTOM_TRIGGER_OFFSET) {\n        fireNonCancelableEvent(onLoadMore);\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (open && statusType === 'pending') {\n      handleScroll();\n    }\n  }, [open, statusType, handleScroll]);\n\n  const className = clsx(styles['options-list'], {\n    [styles['decrease-top-margin']]: decreaseTopMargin,\n  });\n\n  const mergedRef = useMergeRefs(ref, menuRef);\n\n  return (\n    <ul\n      {...baseProps}\n      {...nativeAttributes}\n      className={className}\n      ref={mergedRef}\n      style={{ position }}\n      role={role}\n      onScroll={handleScroll}\n      onKeyDown={event => onKeyDown && fireKeyboardEvent(onKeyDown, event)}\n      onMouseMove={event => onMouseMove?.(getItemIndex(menuRef, event))}\n      onMouseUp={event => onMouseUp?.(getItemIndex(menuRef, event))}\n      onBlur={event => fireNonCancelableEvent(onBlur, { relatedTarget: event.relatedTarget })}\n      onFocus={() => fireNonCancelableEvent(onFocus)}\n      tabIndex={-1}\n      aria-label={ariaLabel}\n      aria-labelledby={ariaLabelledby}\n      aria-describedby={ariaDescribedby}\n    >\n      {open && children}\n    </ul>\n  );\n};\n\nexport default React.forwardRef(OptionsList);\n"]},"metadata":{},"sourceType":"module"}