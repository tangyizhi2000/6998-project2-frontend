{"ast":null,"code":"import _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { KeyCode } from '../internal/keycode';\nimport FocusLock from '../internal/components/focus-lock';\nimport { InternalButton } from '../button/internal';\nimport { ResizableBox } from './resizable-box';\nimport styles from './styles.css.js';\nvar ANNOTATION_ITEM_HEIGHT = 31;\nvar PANE_ANNOTATIONS_PADDING = 12;\nvar MIN_HEIGHT = 3 * ANNOTATION_ITEM_HEIGHT + 2 * PANE_ANNOTATIONS_PADDING;\nexport var Pane = function Pane(_ref) {\n  var id = _ref.id,\n    visible = _ref.visible,\n    annotations = _ref.annotations,\n    highlighted = _ref.highlighted,\n    onClose = _ref.onClose,\n    onAnnotationClick = _ref.onAnnotationClick,\n    onAnnotationClear = _ref.onAnnotationClear,\n    cursorPositionLabel = _ref.cursorPositionLabel,\n    closeButtonAriaLabel = _ref.closeButtonAriaLabel;\n  var _useState = useState(MIN_HEIGHT),\n    _useState2 = _slicedToArray(_useState, 2),\n    paneHeight = _useState2[0],\n    setPaneHeight = _useState2[1];\n  var listRef = useRef(null);\n  useEffect(function () {\n    var _a;\n    if (!highlighted) {\n      return;\n    }\n    var row = highlighted.row,\n      column = highlighted.column;\n    var highlightedAnnotationIndex = annotations.indexOf(annotations.filter(function (a) {\n      return a.row === row && a.column === column;\n    })[0]);\n    if (highlightedAnnotationIndex > -1) {\n      var errorItem = (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.children[highlightedAnnotationIndex];\n      errorItem === null || errorItem === void 0 ? void 0 : errorItem.focus();\n    }\n  }, [highlighted, annotations]);\n  var onItemClick = function onItemClick(annotation) {\n    onAnnotationClick(annotation);\n  };\n  var onItemKeyDown = function onItemKeyDown(annotation, event) {\n    if (event.keyCode === KeyCode.enter || event.keyCode === KeyCode.space) {\n      event.preventDefault();\n      onAnnotationClick(annotation);\n    }\n  };\n  var onEscKeyDown = function onEscKeyDown(event) {\n    if (event.keyCode === KeyCode.escape) {\n      event.preventDefault();\n      onClose();\n    }\n  };\n  if (!visible) {\n    return null;\n  }\n  return React.createElement(\"div\", {\n    id: id,\n    className: styles.pane,\n    onKeyDown: onEscKeyDown,\n    role: \"tabpanel\"\n  }, React.createElement(ResizableBox, {\n    height: paneHeight,\n    minHeight: MIN_HEIGHT,\n    onResize: function onResize(newHeight) {\n      return setPaneHeight(newHeight);\n    }\n  }, React.createElement(FocusLock, {\n    className: styles['focus-lock'],\n    autoFocus: true,\n    restoreFocus: true\n  }, React.createElement(\"div\", {\n    className: styles.pane__list,\n    tabIndex: -1\n  }, React.createElement(\"table\", {\n    className: styles.pane__table,\n    role: \"presentation\"\n  }, React.createElement(\"colgroup\", null, React.createElement(\"col\", {\n    style: {\n      width: 1\n    } /* shrink to fit content */\n  }), React.createElement(\"col\", {\n    style: {\n      width: 'auto'\n    }\n  })), React.createElement(\"tbody\", {\n    ref: listRef\n  }, annotations.map(function (annotation, i) {\n    var _a;\n    return React.createElement(\"tr\", {\n      key: i,\n      role: \"link\",\n      className: styles.pane__item,\n      onMouseOver: onAnnotationClear,\n      onClick: onItemClick.bind(null, annotation),\n      onKeyDown: onItemKeyDown.bind(null, annotation),\n      tabIndex: 0\n    }, React.createElement(\"td\", {\n      className: clsx(styles.pane__location, styles.pane__cell),\n      tabIndex: -1\n    }, (_a = cursorPositionLabel === null || cursorPositionLabel === void 0 ? void 0 : cursorPositionLabel((annotation.row || 0) + 1, (annotation.column || 0) + 1)) !== null && _a !== void 0 ? _a : ''), React.createElement(\"td\", {\n      className: clsx(styles.pane__description, styles.pane__cell),\n      tabIndex: -1\n    }, annotation.text));\n  })))), React.createElement(\"div\", {\n    className: styles['pane__close-container']\n  }, React.createElement(InternalButton, {\n    formAction: \"none\",\n    variant: \"icon\",\n    iconName: \"close\",\n    onClick: onClose,\n    ariaLabel: closeButtonAriaLabel\n  })))));\n};","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,MAAM;AAGvB,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,OAAOC,SAAS,MAAM,mCAAmC;AAEzD,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,IAAMC,sBAAsB,GAAG,EAAE;AACjC,IAAMC,wBAAwB,GAAG,EAAE;AACnC,IAAMC,UAAU,GAAG,CAAC,GAAGF,sBAAsB,GAAG,CAAC,GAAGC,wBAAwB;AAiB5E,OAAO,IAAME,IAAI,GAAG,SAAPA,IAAI,OAUD;EAAA,IATdC,EAAE,QAAFA,EAAE;IACFC,OAAO,QAAPA,OAAO;IACPC,WAAW,QAAXA,WAAW;IACXC,WAAW,QAAXA,WAAW;IACXC,OAAO,QAAPA,OAAO;IACPC,iBAAiB,QAAjBA,iBAAiB;IACjBC,iBAAiB,QAAjBA,iBAAiB;IACjBC,mBAAmB,QAAnBA,mBAAmB;IACnBC,oBAAoB,QAApBA,oBAAoB;EAEpB,gBAAoCnB,QAAQ,CAACS,UAAU,CAAC;IAAA;IAAjDW,UAAU;IAAEC,aAAa;EAChC,IAAMC,OAAO,GAAGvB,MAAM,CAA0B,IAAI,CAAC;EAErDD,SAAS,CAAC,YAAK;;IACb,IAAI,CAACgB,WAAW,EAAE;MAChB;;IAEF,IAAQS,GAAG,GAAaT,WAAW,CAA3BS,GAAG;MAAEC,MAAM,GAAKV,WAAW,CAAtBU,MAAM;IACnB,IAAMC,0BAA0B,GAAGZ,WAAW,CAACa,OAAO,CACpDb,WAAW,CAACc,MAAM,CAAC,WAAC;MAAA,OAAIC,CAAC,CAACL,GAAG,KAAKA,GAAG,IAAIK,CAAC,CAACJ,MAAM,KAAKA,MAAM;IAAA,EAAC,CAAC,CAAC,CAAC,CACjE;IAED,IAAIC,0BAA0B,GAAG,CAAC,CAAC,EAAE;MACnC,IAAMI,SAAS,GAAG,aAAO,CAACC,OAAO,0CAAEC,QAAQ,CAACN,0BAA0B,CAA4B;MAClGI,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,KAAK,EAAE;;EAEtB,CAAC,EAAE,CAAClB,WAAW,EAAED,WAAW,CAAC,CAAC;EAE9B,IAAMoB,WAAW,GAAG,SAAdA,WAAW,CAAIC,UAA0B,EAAI;IACjDlB,iBAAiB,CAACkB,UAAU,CAAC;EAC/B,CAAC;EAED,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAID,UAA0B,EAAEE,KAA0B,EAAI;IAC/E,IAAIA,KAAK,CAACC,OAAO,KAAKnC,OAAO,CAACoC,KAAK,IAAIF,KAAK,CAACC,OAAO,KAAKnC,OAAO,CAACqC,KAAK,EAAE;MACtEH,KAAK,CAACI,cAAc,EAAE;MACtBxB,iBAAiB,CAACkB,UAAU,CAAC;;EAEjC,CAAC;EAED,IAAMO,YAAY,GAAG,SAAfA,YAAY,CAAIL,KAA0B,EAAI;IAClD,IAAIA,KAAK,CAACC,OAAO,KAAKnC,OAAO,CAACwC,MAAM,EAAE;MACpCN,KAAK,CAACI,cAAc,EAAE;MACtBzB,OAAO,EAAE;;EAEb,CAAC;EAED,IAAI,CAACH,OAAO,EAAE;IACZ,OAAO,IAAI;;EAGb,OACEf;IAAKc,EAAE,EAAEA,EAAE;IAAEgC,SAAS,EAAErC,MAAM,CAACsC,IAAI;IAAEC,SAAS,EAAEJ,YAAY;IAAEK,IAAI,EAAC;EAAU,GAC3EjD,oBAACQ,YAAY;IAAC0C,MAAM,EAAE3B,UAAU;IAAE4B,SAAS,EAAEvC,UAAU;IAAEwC,QAAQ,EAAE,2BAAS;MAAA,OAAI5B,aAAa,CAAC6B,SAAS,CAAC;IAAA;EAAA,GACtGrD,oBAACM,SAAS;IAACwC,SAAS,EAAErC,MAAM,CAAC,YAAY,CAAC;IAAE6C,SAAS,EAAE,IAAI;IAAEC,YAAY,EAAE;EAAI,GAC7EvD;IAAK8C,SAAS,EAAErC,MAAM,CAAC+C,UAAU;IAAEC,QAAQ,EAAE,CAAC;EAAC,GAC7CzD;IAAO8C,SAAS,EAAErC,MAAM,CAACiD,WAAW;IAAET,IAAI,EAAC;EAAc,GACvDjD,sCACEA;IAAK2D,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAC,CAAE,CAAC;EAA2B,EAAI,EACxD5D;IAAK2D,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM;EAAE,EAAI,CACxB,EACX5D;IAAO6D,GAAG,EAAEpC;EAAO,GAChBT,WAAW,CAAC8C,GAAG,CAAC,UAACzB,UAAU,EAAE0B,CAAC,EAAI;;IAAC,OAClC/D;MACEgE,GAAG,EAAED,CAAC;MACNd,IAAI,EAAC,MAAM;MACXH,SAAS,EAAErC,MAAM,CAACwD,UAAU;MAC5BC,WAAW,EAAE9C,iBAAiB;MAC9B+C,OAAO,EAAE/B,WAAW,CAACgC,IAAI,CAAC,IAAI,EAAE/B,UAAU,CAAC;MAC3CW,SAAS,EAAEV,aAAa,CAAC8B,IAAI,CAAC,IAAI,EAAE/B,UAAU,CAAC;MAC/CoB,QAAQ,EAAE;IAAC,GAEXzD;MAAI8C,SAAS,EAAE1C,IAAI,CAACK,MAAM,CAAC4D,cAAc,EAAE5D,MAAM,CAAC6D,UAAU,CAAC;MAAEb,QAAQ,EAAE,CAAC;IAAC,GACxE,yBAAmB,aAAnBpC,mBAAmB,uBAAnBA,mBAAmB,CAAG,CAACgB,UAAU,CAACX,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAACW,UAAU,CAACV,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,mCAAI,EAAE,CAClF,EACL3B;MAAI8C,SAAS,EAAE1C,IAAI,CAACK,MAAM,CAAC8D,iBAAiB,EAAE9D,MAAM,CAAC6D,UAAU,CAAC;MAAEb,QAAQ,EAAE,CAAC;IAAC,GAC3EpB,UAAU,CAACmC,IAAI,CACb,CACF;GACN,CAAC,CACI,CACF,CACJ,EACNxE;IAAK8C,SAAS,EAAErC,MAAM,CAAC,uBAAuB;EAAC,GAC7CT,oBAACO,cAAc;IACbkE,UAAU,EAAC,MAAM;IACjBC,OAAO,EAAC,MAAM;IACdC,QAAQ,EAAC,OAAO;IAChBR,OAAO,EAAEjD,OAAO;IAChB0D,SAAS,EAAEtD;EAAoB,EAC/B,CACE,CACI,CACC,CACX;AAEV,CAAC","names":["React","useEffect","useRef","useState","clsx","KeyCode","FocusLock","InternalButton","ResizableBox","styles","ANNOTATION_ITEM_HEIGHT","PANE_ANNOTATIONS_PADDING","MIN_HEIGHT","Pane","id","visible","annotations","highlighted","onClose","onAnnotationClick","onAnnotationClear","cursorPositionLabel","closeButtonAriaLabel","paneHeight","setPaneHeight","listRef","row","column","highlightedAnnotationIndex","indexOf","filter","a","errorItem","current","children","focus","onItemClick","annotation","onItemKeyDown","event","keyCode","enter","space","preventDefault","onEscKeyDown","escape","className","pane","onKeyDown","role","height","minHeight","onResize","newHeight","autoFocus","restoreFocus","pane__list","tabIndex","pane__table","style","width","ref","map","i","key","pane__item","onMouseOver","onClick","bind","pane__location","pane__cell","pane__description","text","formAction","variant","iconName","ariaLabel"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/code-editor/lib/default/code-editor/pane.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { Ace } from 'ace-builds';\n\nimport { KeyCode } from '../internal/keycode';\nimport FocusLock from '../internal/components/focus-lock';\n\nimport { InternalButton } from '../button/internal';\nimport { ResizableBox } from './resizable-box';\n\nimport styles from './styles.css.js';\n\nconst ANNOTATION_ITEM_HEIGHT = 31;\nconst PANE_ANNOTATIONS_PADDING = 12;\nconst MIN_HEIGHT = 3 * ANNOTATION_ITEM_HEIGHT + 2 * PANE_ANNOTATIONS_PADDING;\n\nexport interface PaneProps {\n  id: string;\n\n  visible: boolean;\n  annotations: Ace.Annotation[];\n  highlighted?: Ace.Annotation;\n\n  cursorPositionLabel?: (row: number, column: number) => string;\n  closeButtonAriaLabel?: string;\n\n  onClose: () => void;\n  onAnnotationClick: (annotation: Ace.Annotation) => void;\n  onAnnotationClear: () => void;\n}\n\nexport const Pane = ({\n  id,\n  visible,\n  annotations,\n  highlighted,\n  onClose,\n  onAnnotationClick,\n  onAnnotationClear,\n  cursorPositionLabel,\n  closeButtonAriaLabel,\n}: PaneProps) => {\n  const [paneHeight, setPaneHeight] = useState(MIN_HEIGHT);\n  const listRef = useRef<HTMLTableSectionElement>(null);\n\n  useEffect(() => {\n    if (!highlighted) {\n      return;\n    }\n    const { row, column } = highlighted;\n    const highlightedAnnotationIndex = annotations.indexOf(\n      annotations.filter(a => a.row === row && a.column === column)[0]\n    );\n\n    if (highlightedAnnotationIndex > -1) {\n      const errorItem = listRef.current?.children[highlightedAnnotationIndex] as HTMLElement | undefined;\n      errorItem?.focus();\n    }\n  }, [highlighted, annotations]);\n\n  const onItemClick = (annotation: Ace.Annotation) => {\n    onAnnotationClick(annotation);\n  };\n\n  const onItemKeyDown = (annotation: Ace.Annotation, event: React.KeyboardEvent) => {\n    if (event.keyCode === KeyCode.enter || event.keyCode === KeyCode.space) {\n      event.preventDefault();\n      onAnnotationClick(annotation);\n    }\n  };\n\n  const onEscKeyDown = (event: React.KeyboardEvent) => {\n    if (event.keyCode === KeyCode.escape) {\n      event.preventDefault();\n      onClose();\n    }\n  };\n\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <div id={id} className={styles.pane} onKeyDown={onEscKeyDown} role=\"tabpanel\">\n      <ResizableBox height={paneHeight} minHeight={MIN_HEIGHT} onResize={newHeight => setPaneHeight(newHeight)}>\n        <FocusLock className={styles['focus-lock']} autoFocus={true} restoreFocus={true}>\n          <div className={styles.pane__list} tabIndex={-1}>\n            <table className={styles.pane__table} role=\"presentation\">\n              <colgroup>\n                <col style={{ width: 1 } /* shrink to fit content */} />\n                <col style={{ width: 'auto' }} />\n              </colgroup>\n              <tbody ref={listRef}>\n                {annotations.map((annotation, i) => (\n                  <tr\n                    key={i}\n                    role=\"link\"\n                    className={styles.pane__item}\n                    onMouseOver={onAnnotationClear}\n                    onClick={onItemClick.bind(null, annotation)}\n                    onKeyDown={onItemKeyDown.bind(null, annotation)}\n                    tabIndex={0}\n                  >\n                    <td className={clsx(styles.pane__location, styles.pane__cell)} tabIndex={-1}>\n                      {cursorPositionLabel?.((annotation.row || 0) + 1, (annotation.column || 0) + 1) ?? ''}\n                    </td>\n                    <td className={clsx(styles.pane__description, styles.pane__cell)} tabIndex={-1}>\n                      {annotation.text}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <div className={styles['pane__close-container']}>\n            <InternalButton\n              formAction=\"none\"\n              variant=\"icon\"\n              iconName=\"close\"\n              onClick={onClose}\n              ariaLabel={closeButtonAriaLabel}\n            />\n          </div>\n        </FocusLock>\n      </ResizableBox>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}