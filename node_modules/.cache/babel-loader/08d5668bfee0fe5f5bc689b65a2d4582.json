{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport Legend from '../internal/components/chart-legend';\nimport Filter from '../internal/components/chart-filter';\nimport { pie } from 'd3-shape';\nimport InternalPieChart from './pie-chart';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport createCategoryColorScale from '../internal/utils/create-category-color-scale';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { nodeBelongs } from '../internal/utils/node-belongs';\nimport { ChartWrapper } from '../internal/components/chart-wrapper';\nimport ChartStatusContainer, { getChartStatus } from '../internal/components/chart-status-container';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { getDimensionsBySize } from './utils';\nconst PieChart = function PieChart(_a) {\n  var {\n      fitHeight,\n      variant = 'pie',\n      size = 'medium',\n      hideTitles = false,\n      hideDescriptions = false,\n      hideLegend = false,\n      hideFilter = false,\n      statusType = 'finished',\n      data: externalData = [],\n      i18nStrings = {},\n      highlightedSegment: controlledHighlightedSegment,\n      visibleSegments: controlledVisibleSegments,\n      onHighlightChange: controlledOnHighlightChange,\n      onFilterChange,\n      additionalFilters,\n      legendTitle,\n      detailPopoverSize = 'medium'\n    } = _a,\n    props = __rest(_a, [\"fitHeight\", \"variant\", \"size\", \"hideTitles\", \"hideDescriptions\", \"hideLegend\", \"hideFilter\", \"statusType\", \"data\", \"i18nStrings\", \"highlightedSegment\", \"visibleSegments\", \"onHighlightChange\", \"onFilterChange\", \"additionalFilters\", \"legendTitle\", \"detailPopoverSize\"]);\n  const {\n    __internalRootRef = null\n  } = useBaseComponent('PieChart');\n  const baseProps = getBaseProps(props);\n  const containerRef = useRef(null);\n  const [containerWidth, measureRef] = useContainerWidth();\n  const data = useMemo(() => {\n    const colors = createCategoryColorScale(externalData, undefined, it => it.color || null);\n    return externalData.map((datum, i) => ({\n      index: i,\n      color: colors[i],\n      datum\n    }));\n  }, [externalData]);\n  const [highlightedSegment = null, setHighlightedSegment] = useControllable(controlledHighlightedSegment, controlledOnHighlightChange, null, {\n    componentName: 'PieChart',\n    controlledProp: 'highlightedSegment',\n    changeHandler: 'onHighlightChange'\n  });\n  const [legendSegment, setLegendSegment] = useState(highlightedSegment);\n  useEffect(() => {\n    setLegendSegment(controlledHighlightedSegment || null);\n  }, [controlledHighlightedSegment]);\n  const [visibleSegments, setVisibleSegments] = useControllable(controlledVisibleSegments, onFilterChange, externalData, {\n    componentName: 'PieChart',\n    controlledProp: 'visibleSegments',\n    changeHandler: 'onFilterChange'\n  });\n  const visibleData = useMemo(() => data.filter(d => (visibleSegments === null || visibleSegments === void 0 ? void 0 : visibleSegments.indexOf(d.datum)) !== -1), [data, visibleSegments]);\n  const filterItems = data === null || data === void 0 ? void 0 : data.map(data => ({\n    label: data.datum.title,\n    color: data.color,\n    type: 'rectangle',\n    datum: data.datum\n  }));\n  const legendItems = filterItems.filter(d => (visibleSegments === null || visibleSegments === void 0 ? void 0 : visibleSegments.indexOf(d.datum)) !== -1);\n  const filterChange = useCallback(selectedSeries => {\n    setVisibleSegments(selectedSeries);\n    fireNonCancelableEvent(onFilterChange, {\n      visibleSegments: selectedSeries\n    });\n  }, [setVisibleSegments, onFilterChange]);\n  const onHighlightChange = useCallback(segment => {\n    setLegendSegment(segment);\n    setHighlightedSegment(segment);\n    fireNonCancelableEvent(controlledOnHighlightChange, {\n      highlightedSegment: segment\n    });\n  }, [controlledOnHighlightChange, setHighlightedSegment]);\n  const onBlur = event => {\n    if (event.relatedTarget && !nodeBelongs(containerRef.current, event.relatedTarget)) {\n      highlightedSegment && onHighlightChange(null);\n      setLegendSegment(null);\n    }\n  };\n  const mergedRef = useMergeRefs(containerRef, measureRef, __internalRootRef);\n  const {\n    pieData,\n    dataSum\n  } = useMemo(() => {\n    const dataSum = visibleData.reduce((sum, d) => sum + d.datum.value, 0);\n    const pieFactory = pie()\n    // Minimum 1% segment size\n    .value(d => d.datum.value < dataSum / 100 ? dataSum / 100 : d.datum.value).sort(null);\n    // Filter out segments with value of zero or below\n    const pieData = pieFactory(visibleData.filter(d => d.datum.value > 0));\n    return {\n      pieData,\n      dataSum\n    };\n  }, [visibleData]);\n  const hasNoData = !externalData || externalData.length === 0;\n  const {\n    isEmpty,\n    showChart\n  } = getChartStatus({\n    externalData: data,\n    visibleData: pieData,\n    statusType\n  });\n  // Pie charts have a special condition for empty/noMatch due to how zero-value segments are handled.\n  const isNoMatch = isEmpty && visibleData.length !== data.length;\n  const showFilters = statusType === 'finished' && !hasNoData && (additionalFilters || !hideFilter);\n  const reserveLegendSpace = !showChart && !hideLegend;\n  const reserveFilterSpace = statusType !== 'finished' && !isNoMatch && (!hideFilter || additionalFilters);\n  const hasLabels = !(hideTitles && hideDescriptions);\n  const isRefresh = useVisualRefresh();\n  const defaultDimensions = getDimensionsBySize({\n    size,\n    hasLabels,\n    visualRefresh: isRefresh\n  });\n  const radius = defaultDimensions.outerRadius;\n  const height = 2 * (radius + defaultDimensions.padding + (hasLabels ? defaultDimensions.paddingLabels : 0));\n  return React.createElement(ChartWrapper, Object.assign({\n    ref: mergedRef,\n    fitHeight: !!fitHeight\n  }, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    contentClassName: clsx(styles.content, styles[`content--${defaultDimensions.size}`], {\n      [styles['content--without-labels']]: !hasLabels,\n      [styles['content--fit-height']]: fitHeight\n    }),\n    defaultFilter: showFilters && !hideFilter ? React.createElement(Filter, {\n      series: filterItems,\n      onChange: filterChange,\n      selectedSeries: visibleSegments,\n      i18nStrings: i18nStrings\n    }) : null,\n    additionalFilters: showFilters ? additionalFilters : null,\n    reserveFilterSpace: !!reserveFilterSpace,\n    reserveLegendSpace: !!reserveLegendSpace,\n    chartStatus: React.createElement(ChartStatusContainer, {\n      isEmpty: isEmpty,\n      isNoMatch: isNoMatch,\n      showChart: showChart,\n      statusType: statusType,\n      empty: props.empty,\n      noMatch: props.noMatch,\n      loadingText: props.loadingText,\n      errorText: props.errorText,\n      recoveryText: props.recoveryText,\n      onRecoveryClick: props.onRecoveryClick\n    }),\n    chart: showChart ? React.createElement(InternalPieChart, Object.assign({}, props, {\n      variant: variant,\n      size: size,\n      height: height,\n      fitHeight: fitHeight,\n      data: externalData,\n      width: containerWidth,\n      hideTitles: hideTitles,\n      hideDescriptions: hideDescriptions,\n      i18nStrings: i18nStrings,\n      onHighlightChange: onHighlightChange,\n      highlightedSegment: highlightedSegment,\n      legendSegment: legendSegment,\n      detailPopoverSize: detailPopoverSize,\n      pieData: pieData,\n      dataSum: dataSum\n    })) : null,\n    legend: !hideLegend && !hasNoData && statusType === 'finished' && React.createElement(Legend, {\n      series: legendItems,\n      highlightedSeries: legendSegment,\n      legendTitle: legendTitle,\n      ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.legendAriaLabel,\n      onHighlightChange: onHighlightChange,\n      plotContainerRef: containerRef\n    }),\n    onBlur: onBlur\n  }));\n};\napplyDisplayName(PieChart, 'PieChart');\nexport default PieChart;","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useMemo","useRef","useState","clsx","getBaseProps","useControllable","fireNonCancelableEvent","Legend","Filter","pie","InternalPieChart","styles","applyDisplayName","useBaseComponent","useMergeRefs","createCategoryColorScale","useContainerWidth","nodeBelongs","ChartWrapper","ChartStatusContainer","getChartStatus","useVisualRefresh","getDimensionsBySize","PieChart","_a","fitHeight","variant","size","hideTitles","hideDescriptions","hideLegend","hideFilter","statusType","data","externalData","i18nStrings","highlightedSegment","controlledHighlightedSegment","visibleSegments","controlledVisibleSegments","onHighlightChange","controlledOnHighlightChange","onFilterChange","additionalFilters","legendTitle","detailPopoverSize","props","__internalRootRef","baseProps","containerRef","containerWidth","measureRef","colors","undefined","it","color","map","datum","i","index","setHighlightedSegment","componentName","controlledProp","changeHandler","legendSegment","setLegendSegment","setVisibleSegments","visibleData","filter","d","indexOf","filterItems","label","title","type","legendItems","filterChange","selectedSeries","segment","onBlur","event","relatedTarget","current","mergedRef","pieData","dataSum","reduce","sum","value","pieFactory","sort","hasNoData","length","isEmpty","showChart","isNoMatch","showFilters","reserveLegendSpace","reserveFilterSpace","hasLabels","isRefresh","defaultDimensions","visualRefresh","radius","outerRadius","height","padding","paddingLabels","ref","className","root","contentClassName","content","defaultFilter","series","onChange","chartStatus","empty","noMatch","loadingText","errorText","recoveryText","onRecoveryClick","chart","width","legend","highlightedSeries","ariaLabel","legendAriaLabel","plotContainerRef"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/pie-chart/lib/default/pie-chart/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport Legend, { ChartLegendProps } from '../internal/components/chart-legend';\nimport Filter, { ChartFilterProps } from '../internal/components/chart-filter';\nimport { pie } from 'd3-shape';\n\nimport InternalPieChart, { InternalChartDatum } from './pie-chart';\nimport { PieChartProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport createCategoryColorScale from '../internal/utils/create-category-color-scale';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { nodeBelongs } from '../internal/utils/node-belongs';\nimport { ChartWrapper } from '../internal/components/chart-wrapper';\nimport ChartStatusContainer, { getChartStatus } from '../internal/components/chart-status-container';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { getDimensionsBySize } from './utils';\n\nexport { PieChartProps };\n\nconst PieChart = function PieChart<T extends PieChartProps.Datum = PieChartProps.Datum>({\n  fitHeight,\n  variant = 'pie',\n  size = 'medium',\n  hideTitles = false,\n  hideDescriptions = false,\n  hideLegend = false,\n  hideFilter = false,\n  statusType = 'finished',\n  data: externalData = [],\n  i18nStrings = {},\n  highlightedSegment: controlledHighlightedSegment,\n  visibleSegments: controlledVisibleSegments,\n  onHighlightChange: controlledOnHighlightChange,\n  onFilterChange,\n  additionalFilters,\n  legendTitle,\n  detailPopoverSize = 'medium',\n  ...props\n}: PieChartProps<T>) {\n  const { __internalRootRef = null } = useBaseComponent('PieChart');\n  const baseProps = getBaseProps(props);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [containerWidth, measureRef] = useContainerWidth();\n\n  const data: ReadonlyArray<InternalChartDatum<T>> = useMemo(() => {\n    const colors = createCategoryColorScale(externalData, undefined, it => it.color || null);\n\n    return externalData.map((datum, i) => ({\n      index: i,\n      color: colors[i],\n      datum,\n    }));\n  }, [externalData]);\n\n  const [highlightedSegment = null, setHighlightedSegment] = useControllable(\n    controlledHighlightedSegment,\n    controlledOnHighlightChange,\n    null,\n    {\n      componentName: 'PieChart',\n      controlledProp: 'highlightedSegment',\n      changeHandler: 'onHighlightChange',\n    }\n  );\n  const [legendSegment, setLegendSegment] = useState<null | T>(highlightedSegment);\n  useEffect(() => {\n    setLegendSegment(controlledHighlightedSegment || null);\n  }, [controlledHighlightedSegment]);\n\n  const [visibleSegments, setVisibleSegments] = useControllable(\n    controlledVisibleSegments,\n    onFilterChange,\n    externalData,\n    {\n      componentName: 'PieChart',\n      controlledProp: 'visibleSegments',\n      changeHandler: 'onFilterChange',\n    }\n  );\n\n  const visibleData = useMemo(\n    () => data.filter(d => visibleSegments?.indexOf(d.datum) !== -1),\n    [data, visibleSegments]\n  );\n\n  const filterItems: ChartFilterProps<T>['series'] = data?.map(data => ({\n    label: data.datum.title,\n    color: data.color,\n    type: 'rectangle',\n    datum: data.datum,\n  }));\n\n  const legendItems: ChartLegendProps<T>['series'] = filterItems.filter(d => visibleSegments?.indexOf(d.datum) !== -1);\n\n  const filterChange = useCallback(\n    (selectedSeries: ReadonlyArray<T>) => {\n      setVisibleSegments(selectedSeries);\n      fireNonCancelableEvent(onFilterChange, {\n        visibleSegments: selectedSeries,\n      });\n    },\n    [setVisibleSegments, onFilterChange]\n  );\n\n  const onHighlightChange = useCallback(\n    (segment: T | null) => {\n      setLegendSegment(segment);\n      setHighlightedSegment(segment);\n      fireNonCancelableEvent(controlledOnHighlightChange, { highlightedSegment: segment });\n    },\n    [controlledOnHighlightChange, setHighlightedSegment]\n  );\n\n  const onBlur = (event: React.FocusEvent) => {\n    if (event.relatedTarget && !nodeBelongs(containerRef.current, event.relatedTarget)) {\n      highlightedSegment && onHighlightChange(null);\n      setLegendSegment(null);\n    }\n  };\n\n  const mergedRef = useMergeRefs(containerRef, measureRef, __internalRootRef);\n\n  const { pieData, dataSum } = useMemo(() => {\n    const dataSum = visibleData.reduce((sum, d) => sum + d.datum.value, 0);\n\n    const pieFactory = pie<InternalChartDatum<T>>()\n      // Minimum 1% segment size\n      .value(d => (d.datum.value < dataSum / 100 ? dataSum / 100 : d.datum.value))\n      .sort(null);\n\n    // Filter out segments with value of zero or below\n    const pieData = pieFactory(visibleData.filter(d => d.datum.value > 0));\n\n    return { pieData, dataSum };\n  }, [visibleData]);\n\n  const hasNoData = !externalData || externalData.length === 0;\n  const { isEmpty, showChart } = getChartStatus({ externalData: data, visibleData: pieData, statusType });\n  // Pie charts have a special condition for empty/noMatch due to how zero-value segments are handled.\n  const isNoMatch = isEmpty && visibleData.length !== data.length;\n  const showFilters = statusType === 'finished' && !hasNoData && (additionalFilters || !hideFilter);\n  const reserveLegendSpace = !showChart && !hideLegend;\n  const reserveFilterSpace = statusType !== 'finished' && !isNoMatch && (!hideFilter || additionalFilters);\n  const hasLabels = !(hideTitles && hideDescriptions);\n\n  const isRefresh = useVisualRefresh();\n  const defaultDimensions = getDimensionsBySize({ size, hasLabels, visualRefresh: isRefresh });\n  const radius = defaultDimensions.outerRadius;\n  const height = 2 * (radius + defaultDimensions.padding + (hasLabels ? defaultDimensions.paddingLabels : 0));\n\n  return (\n    <ChartWrapper\n      ref={mergedRef}\n      fitHeight={!!fitHeight}\n      {...baseProps}\n      className={clsx(baseProps.className, styles.root)}\n      contentClassName={clsx(styles.content, styles[`content--${defaultDimensions.size}`], {\n        [styles['content--without-labels']]: !hasLabels,\n        [styles['content--fit-height']]: fitHeight,\n      })}\n      defaultFilter={\n        showFilters && !hideFilter ? (\n          <Filter\n            series={filterItems}\n            onChange={filterChange}\n            selectedSeries={visibleSegments}\n            i18nStrings={i18nStrings}\n          />\n        ) : null\n      }\n      additionalFilters={showFilters ? additionalFilters : null}\n      reserveFilterSpace={!!reserveFilterSpace}\n      reserveLegendSpace={!!reserveLegendSpace}\n      chartStatus={\n        <ChartStatusContainer\n          isEmpty={isEmpty}\n          isNoMatch={isNoMatch}\n          showChart={showChart}\n          statusType={statusType}\n          empty={props.empty}\n          noMatch={props.noMatch}\n          loadingText={props.loadingText}\n          errorText={props.errorText}\n          recoveryText={props.recoveryText}\n          onRecoveryClick={props.onRecoveryClick}\n        />\n      }\n      chart={\n        showChart ? (\n          <InternalPieChart\n            {...props}\n            variant={variant}\n            size={size}\n            height={height}\n            fitHeight={fitHeight}\n            data={externalData}\n            width={containerWidth}\n            hideTitles={hideTitles}\n            hideDescriptions={hideDescriptions}\n            i18nStrings={i18nStrings}\n            onHighlightChange={onHighlightChange}\n            highlightedSegment={highlightedSegment}\n            legendSegment={legendSegment}\n            detailPopoverSize={detailPopoverSize}\n            pieData={pieData}\n            dataSum={dataSum}\n          />\n        ) : null\n      }\n      legend={\n        !hideLegend &&\n        !hasNoData &&\n        statusType === 'finished' && (\n          <Legend<T>\n            series={legendItems}\n            highlightedSeries={legendSegment}\n            legendTitle={legendTitle}\n            ariaLabel={i18nStrings?.legendAriaLabel}\n            onHighlightChange={onHighlightChange}\n            plotContainerRef={containerRef}\n          />\n        )\n      }\n      onBlur={onBlur}\n    />\n  );\n};\n\napplyDisplayName(PieChart, 'PieChart');\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}