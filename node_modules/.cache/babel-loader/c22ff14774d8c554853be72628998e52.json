{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport Item from '../parts/item';\nimport MutliselectItem from '../parts/multiselect-item';\nimport { getItemProps } from './get-item-props';\nexport const renderOptions = _ref => {\n  let {\n    options,\n    getOptionProps,\n    filteringValue,\n    highlightType,\n    checkboxes = false,\n    hasDropdownStatus,\n    virtualItems,\n    useInteractiveGroups,\n    screenReaderContent,\n    ariaSetsize\n  } = _ref;\n  return options.map((option, index) => {\n    const virtualItem = virtualItems && virtualItems[index];\n    const globalIndex = virtualItem ? virtualItem.index : index;\n    const props = getItemProps({\n      option,\n      index: globalIndex,\n      getOptionProps,\n      filteringValue,\n      checkboxes\n    });\n    const isLastItem = index === options.length - 1;\n    const padBottom = !hasDropdownStatus && isLastItem;\n    const ListItem = useInteractiveGroups ? MutliselectItem : Item;\n    return React.createElement(ListItem, Object.assign({\n      key: globalIndex\n    }, props, {\n      virtualPosition: virtualItem && virtualItem.start,\n      ref: virtualItem && virtualItem.measureRef,\n      padBottom: padBottom,\n      screenReaderContent: screenReaderContent,\n      ariaPosinset: globalIndex + 1,\n      ariaSetsize: ariaSetsize,\n      highlightType: highlightType\n    }));\n  });\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,eAAe,MAAM,2BAA2B;AAEvD,SAASC,YAAY,QAAQ,kBAAkB;AAgB/C,OAAO,MAAMC,aAAa,GAAG,QAWL;EAAA,IAXM;IAC5BC,OAAO;IACPC,cAAc;IACdC,cAAc;IACdC,aAAa;IACbC,UAAU,GAAG,KAAK;IAClBC,iBAAiB;IACjBC,YAAY;IACZC,oBAAoB;IACpBC,mBAAmB;IACnBC;EAAW,CACO;EAClB,OAAOT,OAAO,CAACU,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAI;IACnC,MAAMC,WAAW,GAAGP,YAAY,IAAIA,YAAY,CAACM,KAAK,CAAC;IACvD,MAAME,WAAW,GAAGD,WAAW,GAAGA,WAAW,CAACD,KAAK,GAAGA,KAAK;IAC3D,MAAMG,KAAK,GAAGjB,YAAY,CAAC;MACzBa,MAAM;MACNC,KAAK,EAAEE,WAAW;MAClBb,cAAc;MACdC,cAAc;MACdE;KACD,CAAC;IAEF,MAAMY,UAAU,GAAGJ,KAAK,KAAKZ,OAAO,CAACiB,MAAM,GAAG,CAAC;IAC/C,MAAMC,SAAS,GAAG,CAACb,iBAAiB,IAAIW,UAAU;IAClD,MAAMG,QAAQ,GAAGZ,oBAAoB,GAAGV,eAAe,GAAGD,IAAI;IAE9D,OACED,oBAACwB,QAAQ;MACPC,GAAG,EAAEN;IAAW,GACZC,KAAK;MACTM,eAAe,EAAER,WAAW,IAAIA,WAAW,CAACS,KAAK;MACjDC,GAAG,EAAEV,WAAW,IAAIA,WAAW,CAACW,UAAU;MAC1CN,SAAS,EAAEA,SAAS;MACpBV,mBAAmB,EAAEA,mBAAmB;MACxCiB,YAAY,EAAEX,WAAW,GAAG,CAAC;MAC7BL,WAAW,EAAEA,WAAW;MACxBN,aAAa,EAAEA;IAAa,GAC5B;EAEN,CAAC,CAAC;AACJ,CAAC","names":["React","Item","MutliselectItem","getItemProps","renderOptions","options","getOptionProps","filteringValue","highlightType","checkboxes","hasDropdownStatus","virtualItems","useInteractiveGroups","screenReaderContent","ariaSetsize","map","option","index","virtualItem","globalIndex","props","isLastItem","length","padBottom","ListItem","key","virtualPosition","start","ref","measureRef","ariaPosinset"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/select/utils/lib/default/select/utils/render-options.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { VirtualItem } from 'react-virtual';\nimport Item from '../parts/item';\nimport MutliselectItem from '../parts/multiselect-item';\nimport { DropdownOption } from '../../internal/components/option/interfaces';\nimport { getItemProps } from './get-item-props';\nimport { HighlightType } from '../../internal/components/options-list/utils/use-highlight-option';\n\nexport interface RenderOptionProps {\n  options: ReadonlyArray<DropdownOption>;\n  getOptionProps: any;\n  filteringValue: string;\n  highlightType: HighlightType;\n  checkboxes?: boolean;\n  hasDropdownStatus?: boolean;\n  virtualItems?: VirtualItem[];\n  useInteractiveGroups?: boolean;\n  screenReaderContent?: string;\n  ariaSetsize?: number;\n}\n\nexport const renderOptions = ({\n  options,\n  getOptionProps,\n  filteringValue,\n  highlightType,\n  checkboxes = false,\n  hasDropdownStatus,\n  virtualItems,\n  useInteractiveGroups,\n  screenReaderContent,\n  ariaSetsize,\n}: RenderOptionProps) => {\n  return options.map((option, index) => {\n    const virtualItem = virtualItems && virtualItems[index];\n    const globalIndex = virtualItem ? virtualItem.index : index;\n    const props = getItemProps({\n      option,\n      index: globalIndex,\n      getOptionProps,\n      filteringValue,\n      checkboxes,\n    });\n\n    const isLastItem = index === options.length - 1;\n    const padBottom = !hasDropdownStatus && isLastItem;\n    const ListItem = useInteractiveGroups ? MutliselectItem : Item;\n\n    return (\n      <ListItem\n        key={globalIndex}\n        {...props}\n        virtualPosition={virtualItem && virtualItem.start}\n        ref={virtualItem && virtualItem.measureRef}\n        padBottom={padBottom}\n        screenReaderContent={screenReaderContent}\n        ariaPosinset={globalIndex + 1}\n        ariaSetsize={ariaSetsize}\n        highlightType={highlightType}\n      />\n    );\n  });\n};\n"]},"metadata":{},"sourceType":"module"}