{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport InternalIcon from '../../icon/internal';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport { fireCancelableEvent, isPlainLeftClick } from '../../internal/events';\nimport { getEventDetail } from '../internal';\nimport { Transition } from '../../internal/components/transition';\nimport PopoverContainer from '../../popover/container';\nimport PopoverBody from '../../popover/body';\nimport Portal from '../../internal/components/portal';\nimport popoverStyles from '../../popover/styles.css.js';\nimport { DATA_ATTR_FUNNEL_KEY } from '../../internal/analytics/selectors';\nimport { FUNNEL_KEY_FUNNEL_NAME } from '../../internal/analytics/selectors';\nvar BreadcrumbItemWithPopover = function BreadcrumbItemWithPopover(_a) {\n  var item = _a.item,\n    isLast = _a.isLast,\n    anchorAttributes = _a.anchorAttributes,\n    funnelAttributes = _a.funnelAttributes,\n    itemAttributes = __rest(_a, [\"item\", \"isLast\", \"anchorAttributes\", \"funnelAttributes\"]);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showPopover = _useState2[0],\n    setShowPopover = _useState2[1];\n  var textRef = useRef(null);\n  var virtualTextRef = useRef(null);\n  var isTruncated = function isTruncated(textRef, virtualTextRef) {\n    if (!textRef || !virtualTextRef || !textRef.current || !virtualTextRef.current) {\n      return false;\n    }\n    var virtualTextWidth = virtualTextRef.current.getBoundingClientRect().width;\n    var textWidth = textRef.current.getBoundingClientRect().width;\n    if (virtualTextWidth > textWidth) {\n      return true;\n    }\n    return false;\n  };\n  var popoverContent = React.createElement(Portal, null, React.createElement(\"div\", {\n    className: styles['item-popover']\n  }, React.createElement(Transition, {\n    in: true\n  }, function () {\n    return React.createElement(PopoverContainer, {\n      trackRef: textRef,\n      size: \"small\",\n      fixedWidth: false,\n      position: \"bottom\",\n      arrow: function arrow(position) {\n        return React.createElement(\"div\", {\n          className: clsx(popoverStyles.arrow, popoverStyles[\"arrow-position-\".concat(position)])\n        }, React.createElement(\"div\", {\n          className: popoverStyles['arrow-outer']\n        }), React.createElement(\"div\", {\n          className: popoverStyles['arrow-inner']\n        }));\n      }\n    }, React.createElement(PopoverBody, {\n      dismissButton: false,\n      dismissAriaLabel: undefined,\n      onDismiss: function onDismiss() {},\n      header: undefined\n    }, item.text));\n  })));\n  useEffect(function () {\n    var onKeyDown = function onKeyDown(event) {\n      if (event.key === 'Escape') {\n        setShowPopover(false);\n      }\n    };\n    if (showPopover) {\n      document.addEventListener('keydown', onKeyDown);\n    }\n    return function () {\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [showPopover]);\n  return React.createElement(React.Fragment, null, React.createElement(Item, Object.assign({\n    isLast: isLast\n  }, itemAttributes, {\n    onFocus: function onFocus() {\n      isTruncated(textRef, virtualTextRef) && setShowPopover(true);\n    },\n    onBlur: function onBlur() {\n      return setShowPopover(false);\n    },\n    onMouseEnter: function onMouseEnter() {\n      isTruncated(textRef, virtualTextRef) && setShowPopover(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setShowPopover(false);\n    },\n    anchorAttributes: anchorAttributes\n  }), React.createElement(\"span\", Object.assign({}, funnelAttributes, {\n    className: styles.text,\n    ref: textRef\n  }), item.text), React.createElement(\"span\", {\n    className: styles['virtual-item'],\n    ref: virtualTextRef\n  }, item.text)), showPopover && popoverContent);\n};\nvar Item = function Item(_a) {\n  var anchorAttributes = _a.anchorAttributes,\n    children = _a.children,\n    isLast = _a.isLast,\n    itemAttributes = __rest(_a, [\"anchorAttributes\", \"children\", \"isLast\"]);\n  return isLast ? React.createElement(\"span\", Object.assign({}, itemAttributes), children) : React.createElement(\"a\", Object.assign({}, itemAttributes, anchorAttributes), children);\n};\nexport function BreadcrumbItem(_ref) {\n  var item = _ref.item,\n    onClick = _ref.onClick,\n    onFollow = _ref.onFollow,\n    isDisplayed = _ref.isDisplayed,\n    _ref$isLast = _ref.isLast,\n    isLast = _ref$isLast === void 0 ? false : _ref$isLast,\n    _ref$isCompressed = _ref.isCompressed,\n    isCompressed = _ref$isCompressed === void 0 ? false : _ref$isCompressed;\n  var preventDefault = function preventDefault(event) {\n    return event.preventDefault();\n  };\n  var onClickHandler = function onClickHandler(event) {\n    if (isPlainLeftClick(event)) {\n      fireCancelableEvent(onFollow, getEventDetail(item), event);\n    }\n    fireCancelableEvent(onClick, getEventDetail(item), event);\n  };\n  var itemAttributes = {\n    className: clsx(styles.anchor, _defineProperty({}, styles.compressed, isCompressed))\n  };\n  var anchorAttributes = {\n    href: item.href || '#',\n    onClick: isLast ? preventDefault : onClickHandler\n  };\n  var funnelAttributes = {};\n  if (isLast) {\n    funnelAttributes[DATA_ATTR_FUNNEL_KEY] = FUNNEL_KEY_FUNNEL_NAME;\n  }\n  return React.createElement(\"div\", {\n    className: clsx(styles.breadcrumb, isLast && styles.last)\n  }, isDisplayed && isCompressed ? React.createElement(BreadcrumbItemWithPopover, Object.assign({\n    item: item,\n    isLast: isLast,\n    anchorAttributes: anchorAttributes,\n    funnelAttributes: funnelAttributes\n  }, itemAttributes)) : React.createElement(Item, Object.assign({\n    isLast: isLast,\n    anchorAttributes: anchorAttributes\n  }, itemAttributes), React.createElement(\"span\", Object.assign({}, funnelAttributes, {\n    className: styles.text\n  }), item.text)), !isLast ? React.createElement(\"span\", {\n    className: styles.icon\n  }, React.createElement(InternalIcon, {\n    name: \"angle-right\"\n  })) : null);\n}","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","useState","InternalIcon","styles","clsx","fireCancelableEvent","isPlainLeftClick","getEventDetail","Transition","PopoverContainer","PopoverBody","Portal","popoverStyles","DATA_ATTR_FUNNEL_KEY","FUNNEL_KEY_FUNNEL_NAME","BreadcrumbItemWithPopover","_a","item","isLast","anchorAttributes","funnelAttributes","itemAttributes","showPopover","setShowPopover","textRef","virtualTextRef","isTruncated","current","virtualTextWidth","getBoundingClientRect","width","textWidth","popoverContent","className","in","trackRef","size","fixedWidth","position","arrow","dismissButton","dismissAriaLabel","undefined","onDismiss","header","text","onKeyDown","event","key","document","addEventListener","removeEventListener","Item","onFocus","onBlur","onMouseEnter","onMouseLeave","ref","children","BreadcrumbItem","onClick","onFollow","isDisplayed","isCompressed","preventDefault","onClickHandler","anchor","compressed","href","breadcrumb","last","icon","name"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/breadcrumb-group/item/lib/default/breadcrumb-group/item/item.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport { BreadcrumbGroupProps, BreadcrumbItemProps } from '../interfaces';\nimport InternalIcon from '../../icon/internal';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport { fireCancelableEvent, isPlainLeftClick } from '../../internal/events';\nimport { getEventDetail } from '../internal';\nimport { Transition } from '../../internal/components/transition';\nimport PopoverContainer from '../../popover/container';\nimport PopoverBody from '../../popover/body';\nimport Portal from '../../internal/components/portal';\nimport popoverStyles from '../../popover/styles.css.js';\nimport { DATA_ATTR_FUNNEL_KEY } from '../../internal/analytics/selectors';\nimport { FUNNEL_KEY_FUNNEL_NAME } from '../../internal/analytics/selectors';\n\ntype BreadcrumbItemWithPopoverProps<T extends BreadcrumbGroupProps.Item> = React.HTMLAttributes<HTMLElement> & {\n  item: T;\n  isLast: boolean;\n  anchorAttributes: React.AnchorHTMLAttributes<HTMLAnchorElement>;\n  funnelAttributes: Record<string, string>;\n};\n\nconst BreadcrumbItemWithPopover = <T extends BreadcrumbGroupProps.Item>({\n  item,\n  isLast,\n  anchorAttributes,\n  funnelAttributes,\n  ...itemAttributes\n}: BreadcrumbItemWithPopoverProps<T>) => {\n  const [showPopover, setShowPopover] = useState(false);\n  const textRef = useRef<HTMLElement>(null);\n  const virtualTextRef = useRef<HTMLElement>(null);\n\n  const isTruncated = (textRef: React.RefObject<HTMLElement>, virtualTextRef: React.RefObject<HTMLElement>) => {\n    if (!textRef || !virtualTextRef || !textRef.current || !virtualTextRef.current) {\n      return false;\n    }\n    const virtualTextWidth = virtualTextRef.current.getBoundingClientRect().width;\n    const textWidth = textRef.current.getBoundingClientRect().width;\n    if (virtualTextWidth > textWidth) {\n      return true;\n    }\n    return false;\n  };\n\n  const popoverContent = (\n    <Portal>\n      <div className={styles['item-popover']}>\n        <Transition in={true}>\n          {() => (\n            <PopoverContainer\n              trackRef={textRef}\n              size=\"small\"\n              fixedWidth={false}\n              position=\"bottom\"\n              arrow={position => (\n                <div className={clsx(popoverStyles.arrow, popoverStyles[`arrow-position-${position}`])}>\n                  <div className={popoverStyles['arrow-outer']} />\n                  <div className={popoverStyles['arrow-inner']} />\n                </div>\n              )}\n            >\n              <PopoverBody dismissButton={false} dismissAriaLabel={undefined} onDismiss={() => {}} header={undefined}>\n                {item.text}\n              </PopoverBody>\n            </PopoverContainer>\n          )}\n        </Transition>\n      </div>\n    </Portal>\n  );\n\n  useEffect(() => {\n    const onKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        setShowPopover(false);\n      }\n    };\n    if (showPopover) {\n      document.addEventListener('keydown', onKeyDown);\n    }\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [showPopover]);\n\n  return (\n    <>\n      <Item\n        isLast={isLast}\n        {...itemAttributes}\n        onFocus={() => {\n          isTruncated(textRef, virtualTextRef) && setShowPopover(true);\n        }}\n        onBlur={() => setShowPopover(false)}\n        onMouseEnter={() => {\n          isTruncated(textRef, virtualTextRef) && setShowPopover(true);\n        }}\n        onMouseLeave={() => setShowPopover(false)}\n        anchorAttributes={anchorAttributes}\n      >\n        <span {...funnelAttributes} className={styles.text} ref={textRef}>\n          {item.text}\n        </span>\n        <span className={styles['virtual-item']} ref={virtualTextRef}>\n          {item.text}\n        </span>\n      </Item>\n      {showPopover && popoverContent}\n    </>\n  );\n};\n\ntype ItemProps = React.HTMLAttributes<HTMLElement> & {\n  anchorAttributes: React.AnchorHTMLAttributes<HTMLAnchorElement>;\n  isLast: boolean;\n};\nconst Item = ({ anchorAttributes, children, isLast, ...itemAttributes }: ItemProps) =>\n  isLast ? (\n    <span {...itemAttributes}>{children}</span>\n  ) : (\n    <a {...itemAttributes} {...anchorAttributes}>\n      {children}\n    </a>\n  );\n\nexport function BreadcrumbItem<T extends BreadcrumbGroupProps.Item>({\n  item,\n  onClick,\n  onFollow,\n  isDisplayed,\n  isLast = false,\n  isCompressed = false,\n}: BreadcrumbItemProps<T>) {\n  const preventDefault = (event: React.MouseEvent) => event.preventDefault();\n  const onClickHandler = (event: React.MouseEvent) => {\n    if (isPlainLeftClick(event)) {\n      fireCancelableEvent(onFollow, getEventDetail(item), event);\n    }\n    fireCancelableEvent(onClick, getEventDetail(item), event);\n  };\n\n  const itemAttributes: React.HTMLAttributes<HTMLElement> = {\n    className: clsx(styles.anchor, { [styles.compressed]: isCompressed }),\n  };\n  const anchorAttributes: React.AnchorHTMLAttributes<HTMLAnchorElement> = {\n    href: item.href || '#',\n    onClick: isLast ? preventDefault : onClickHandler,\n  };\n\n  const funnelAttributes: Record<string, string> = {};\n  if (isLast) {\n    funnelAttributes[DATA_ATTR_FUNNEL_KEY] = FUNNEL_KEY_FUNNEL_NAME;\n  }\n\n  return (\n    <div className={clsx(styles.breadcrumb, isLast && styles.last)}>\n      {isDisplayed && isCompressed ? (\n        <BreadcrumbItemWithPopover\n          item={item}\n          isLast={isLast}\n          anchorAttributes={anchorAttributes}\n          funnelAttributes={funnelAttributes}\n          {...itemAttributes}\n        />\n      ) : (\n        <Item isLast={isLast} anchorAttributes={anchorAttributes} {...itemAttributes}>\n          <span {...funnelAttributes} className={styles.text}>\n            {item.text}\n          </span>\n        </Item>\n      )}\n      {!isLast ? (\n        <span className={styles.icon}>\n          <InternalIcon name=\"angle-right\" />\n        </span>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}