{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { DrawersController } from './controllers/drawers';\nimport { ActionButtonsController } from './controllers/action-buttons';\nconst storageKey = Symbol.for('awsui-plugin-api');\nfunction findUpApi(currentWindow) {\n  try {\n    if (currentWindow === null || currentWindow === void 0 ? void 0 : currentWindow[storageKey]) {\n      return currentWindow[storageKey];\n    }\n    if (!currentWindow || currentWindow.parent === currentWindow) {\n      // When the window has no more parents, it references itself\n      return undefined;\n    }\n    return findUpApi(currentWindow.parent);\n  } catch (ex) {\n    // Most likely a cross-origin access error\n    return undefined;\n  }\n}\nexport function loadApi() {\n  if (typeof window === 'undefined') {\n    return installApi({});\n  }\n  const win = window;\n  const existingApi = findUpApi(win);\n  win[storageKey] = installApi(existingApi !== null && existingApi !== void 0 ? existingApi : {});\n  return win[storageKey];\n}\nexport const {\n  awsuiPlugins,\n  awsuiPluginsInternal\n} = loadApi();\nfunction installApi(api) {\n  var _a, _b;\n  (_a = api.awsuiPlugins) !== null && _a !== void 0 ? _a : api.awsuiPlugins = {};\n  (_b = api.awsuiPluginsInternal) !== null && _b !== void 0 ? _b : api.awsuiPluginsInternal = {};\n  const appLayoutDrawers = new DrawersController();\n  api.awsuiPlugins.appLayout = appLayoutDrawers.installPublic(api.awsuiPlugins.appLayout);\n  api.awsuiPluginsInternal.appLayout = appLayoutDrawers.installInternal(api.awsuiPluginsInternal.appLayout);\n  const alertActions = new ActionButtonsController();\n  api.awsuiPlugins.alert = alertActions.installPublic(api.awsuiPlugins.alert);\n  api.awsuiPluginsInternal.alert = alertActions.installInternal(api.awsuiPluginsInternal.alert);\n  const flashbarActions = new ActionButtonsController();\n  api.awsuiPlugins.flashbar = flashbarActions.installPublic(api.awsuiPlugins.flashbar);\n  api.awsuiPluginsInternal.flashbar = flashbarActions.installInternal(api.awsuiPluginsInternal.flashbar);\n  return api;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAA+CA,iBAAiB,QAAQ,uBAAuB;AAC/F,SAA+CC,uBAAuB,QAAQ,8BAA8B;AAE5G,MAAMC,UAAU,GAAGC,MAAM,CAACC,GAAG,CAAC,kBAAkB,CAAC;AAmBjD,SAASC,SAAS,CAACC,aAA4B;EAC7C,IAAI;IACF,IAAIA,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAGJ,UAAU,CAAC,EAAE;MAC/B,OAAOI,aAAa,CAACJ,UAAU,CAAC;;IAGlC,IAAI,CAACI,aAAa,IAAIA,aAAa,CAACC,MAAM,KAAKD,aAAa,EAAE;MAC5D;MACA,OAAOE,SAAS;;IAGlB,OAAOH,SAAS,CAACC,aAAa,CAACC,MAAuB,CAAC;GACxD,CAAC,OAAOE,EAAE,EAAE;IACX;IACA,OAAOD,SAAS;;AAEpB;AAEA,OAAM,SAAUE,OAAO;EACrB,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACjC,OAAOC,UAAU,CAAC,EAAE,CAAC;;EAEvB,MAAMC,GAAG,GAAGF,MAAkC;EAC9C,MAAMG,WAAW,GAAGT,SAAS,CAACQ,GAAG,CAAC;EAClCA,GAAG,CAACX,UAAU,CAAC,GAAGU,UAAU,CAACE,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAI,EAAE,CAAC;EAC/C,OAAOD,GAAG,CAACX,UAAU,CAAC;AACxB;AAEA,OAAO,MAAM;EAAEa,YAAY;EAAEC;AAAoB,CAAE,GAAGN,OAAO,EAAE;AAI/D,SAASE,UAAU,CAACK,GAA0B;;EAC5C,SAAG,CAACF,YAAY,mCAAhBE,GAAG,CAACF,YAAY,GAAK,EAAE;EACvB,SAAG,CAACC,oBAAoB,mCAAxBC,GAAG,CAACD,oBAAoB,GAAK,EAAE;EAE/B,MAAME,gBAAgB,GAAG,IAAIlB,iBAAiB,EAAE;EAChDiB,GAAG,CAACF,YAAY,CAACI,SAAS,GAAGD,gBAAgB,CAACE,aAAa,CAACH,GAAG,CAACF,YAAY,CAACI,SAAS,CAAC;EACvFF,GAAG,CAACD,oBAAoB,CAACG,SAAS,GAAGD,gBAAgB,CAACG,eAAe,CAACJ,GAAG,CAACD,oBAAoB,CAACG,SAAS,CAAC;EAEzG,MAAMG,YAAY,GAAG,IAAIrB,uBAAuB,EAAE;EAClDgB,GAAG,CAACF,YAAY,CAACQ,KAAK,GAAGD,YAAY,CAACF,aAAa,CAACH,GAAG,CAACF,YAAY,CAACQ,KAAK,CAAC;EAC3EN,GAAG,CAACD,oBAAoB,CAACO,KAAK,GAAGD,YAAY,CAACD,eAAe,CAACJ,GAAG,CAACD,oBAAoB,CAACO,KAAK,CAAC;EAE7F,MAAMC,eAAe,GAAG,IAAIvB,uBAAuB,EAAE;EACrDgB,GAAG,CAACF,YAAY,CAACU,QAAQ,GAAGD,eAAe,CAACJ,aAAa,CAACH,GAAG,CAACF,YAAY,CAACU,QAAQ,CAAC;EACpFR,GAAG,CAACD,oBAAoB,CAACS,QAAQ,GAAGD,eAAe,CAACH,eAAe,CAACJ,GAAG,CAACD,oBAAoB,CAACS,QAAQ,CAAC;EAEtG,OAAOR,GAAe;AACxB","names":["DrawersController","ActionButtonsController","storageKey","Symbol","for","findUpApi","currentWindow","parent","undefined","ex","loadApi","window","installApi","win","existingApi","awsuiPlugins","awsuiPluginsInternal","api","appLayoutDrawers","appLayout","installPublic","installInternal","alertActions","alert","flashbarActions","flashbar"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/internal/plugins/lib/default/internal/plugins/api.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { DrawersApiInternal, DrawersApiPublic, DrawersController } from './controllers/drawers';\nimport { ActionsApiInternal, ActionsApiPublic, ActionButtonsController } from './controllers/action-buttons';\n\nconst storageKey = Symbol.for('awsui-plugin-api');\n\ninterface AwsuiApi {\n  awsuiPlugins: {\n    appLayout: DrawersApiPublic;\n    alert: ActionsApiPublic;\n    flashbar: ActionsApiPublic;\n  };\n  awsuiPluginsInternal: {\n    appLayout: DrawersApiInternal;\n    alert: ActionsApiInternal;\n    flashbar: ActionsApiInternal;\n  };\n}\n\ninterface WindowWithApi extends Window {\n  [storageKey]: AwsuiApi;\n}\n\nfunction findUpApi(currentWindow: WindowWithApi): AwsuiApi | undefined {\n  try {\n    if (currentWindow?.[storageKey]) {\n      return currentWindow[storageKey];\n    }\n\n    if (!currentWindow || currentWindow.parent === currentWindow) {\n      // When the window has no more parents, it references itself\n      return undefined;\n    }\n\n    return findUpApi(currentWindow.parent as WindowWithApi);\n  } catch (ex) {\n    // Most likely a cross-origin access error\n    return undefined;\n  }\n}\n\nexport function loadApi() {\n  if (typeof window === 'undefined') {\n    return installApi({});\n  }\n  const win = window as unknown as WindowWithApi;\n  const existingApi = findUpApi(win);\n  win[storageKey] = installApi(existingApi ?? {});\n  return win[storageKey];\n}\n\nexport const { awsuiPlugins, awsuiPluginsInternal } = loadApi();\n\ntype DeepPartial<T> = T extends (...args: any) => any ? T : { [P in keyof T]?: DeepPartial<T[P]> };\n\nfunction installApi(api: DeepPartial<AwsuiApi>): AwsuiApi {\n  api.awsuiPlugins ??= {};\n  api.awsuiPluginsInternal ??= {};\n\n  const appLayoutDrawers = new DrawersController();\n  api.awsuiPlugins.appLayout = appLayoutDrawers.installPublic(api.awsuiPlugins.appLayout);\n  api.awsuiPluginsInternal.appLayout = appLayoutDrawers.installInternal(api.awsuiPluginsInternal.appLayout);\n\n  const alertActions = new ActionButtonsController();\n  api.awsuiPlugins.alert = alertActions.installPublic(api.awsuiPlugins.alert);\n  api.awsuiPluginsInternal.alert = alertActions.installInternal(api.awsuiPluginsInternal.alert);\n\n  const flashbarActions = new ActionButtonsController();\n  api.awsuiPlugins.flashbar = flashbarActions.installPublic(api.awsuiPlugins.flashbar);\n  api.awsuiPluginsInternal.flashbar = flashbarActions.installInternal(api.awsuiPluginsInternal.flashbar);\n\n  return api as AwsuiApi;\n}\n"]},"metadata":{},"sourceType":"module"}