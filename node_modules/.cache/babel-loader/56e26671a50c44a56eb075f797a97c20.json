{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\nexport const useOpenState = _ref => {\n  let {\n    onOpen,\n    onClose\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const openDropdown = () => {\n    if (!isOpen) {\n      setIsOpen(true);\n      onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n    }\n  };\n  const closeDropdown = () => {\n    if (isOpen) {\n      setIsOpen(false);\n      onClose === null || onClose === void 0 ? void 0 : onClose();\n    }\n  };\n  const toggleDropdown = () => {\n    if (isOpen) {\n      closeDropdown();\n    } else {\n      openDropdown();\n    }\n  };\n  return {\n    isOpen,\n    openDropdown,\n    closeDropdown,\n    toggleDropdown\n  };\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAOhC,OAAO,MAAMC,YAAY,GAAG,QAAwC;EAAA,IAAvC;IAAEC,MAAM;IAAEC;EAAO,CAAkB;EAC9D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMM,YAAY,GAAG,MAAK;IACxB,IAAI,CAACF,MAAM,EAAE;MACXC,SAAS,CAAC,IAAI,CAAC;MACfH,MAAM,aAANA,MAAM,uBAANA,MAAM,EAAI;;EAEd,CAAC;EAED,MAAMK,aAAa,GAAG,MAAK;IACzB,IAAIH,MAAM,EAAE;MACVC,SAAS,CAAC,KAAK,CAAC;MAChBF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,EAAI;;EAEf,CAAC;EAED,MAAMK,cAAc,GAAG,MAAK;IAC1B,IAAIJ,MAAM,EAAE;MACVG,aAAa,EAAE;KAChB,MAAM;MACLD,YAAY,EAAE;;EAElB,CAAC;EAED,OAAO;IAAEF,MAAM;IAAEE,YAAY;IAAEC,aAAa;IAAEC;EAAc,CAAE;AAChE,CAAC","names":["useState","useOpenState","onOpen","onClose","isOpen","setIsOpen","openDropdown","closeDropdown","toggleDropdown"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/internal/components/options-list/utils/lib/default/internal/components/options-list/utils/use-open-state.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\n\ninterface OpenStateProps {\n  onOpen?: () => void;\n  onClose?: () => void;\n}\n\nexport const useOpenState = ({ onOpen, onClose }: OpenStateProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openDropdown = () => {\n    if (!isOpen) {\n      setIsOpen(true);\n      onOpen?.();\n    }\n  };\n\n  const closeDropdown = () => {\n    if (isOpen) {\n      setIsOpen(false);\n      onClose?.();\n    }\n  };\n\n  const toggleDropdown = () => {\n    if (isOpen) {\n      closeDropdown();\n    } else {\n      openDropdown();\n    }\n  };\n\n  return { isOpen, openDropdown, closeDropdown, toggleDropdown };\n};\n"]},"metadata":{},"sourceType":"module"}