{"ast":null,"code":"import _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useLayoutEffect, useState } from 'react';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport { usePrevious } from '../../internal/hooks/use-previous';\nvar AsyncStore = /*#__PURE__*/function () {\n  function AsyncStore(state) {\n    _classCallCheck(this, AsyncStore);\n    this._listeners = [];\n    this._state = state;\n  }\n  _createClass(AsyncStore, [{\n    key: \"get\",\n    value: function get() {\n      return this._state;\n    }\n  }, {\n    key: \"set\",\n    value: function set(cb) {\n      var _this = this;\n      var prevState = this._state;\n      var newState = cb(prevState);\n      this._state = newState;\n      unstable_batchedUpdates(function () {\n        var _iterator = _createForOfIteratorHelper(_this._listeners),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _step$value = _slicedToArray(_step.value, 2),\n              selector = _step$value[0],\n              listener = _step$value[1];\n            if (selector(prevState) !== selector(newState)) {\n              listener(newState, prevState);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(selector, listener) {\n      var _this2 = this;\n      this._listeners.push([selector, listener]);\n      return function () {\n        return _this2.unsubscribe(listener);\n      };\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(listener) {\n      for (var index = 0; index < this._listeners.length; index++) {\n        var _this$_listeners$inde = _slicedToArray(this._listeners[index], 2),\n          storedListener = _this$_listeners$inde[1];\n        if (storedListener === listener) {\n          this._listeners.splice(index, 1);\n          break;\n        }\n      }\n    }\n  }]);\n  return AsyncStore;\n}();\nexport { AsyncStore as default };\nexport function useReaction(store, selector, effect) {\n  useLayoutEffect(function () {\n    var unsubscribe = store.subscribe(selector, function (newState, prevState) {\n      return effect(selector(newState), selector(prevState));\n    });\n    return unsubscribe;\n  },\n  // ignoring selector and effect as they are expected to stay constant\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [store]);\n}\nexport function useSelector(store, selector) {\n  var _useState = useState(selector(store.get())),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  useReaction(store, selector, function (newState) {\n    setState(newState);\n  });\n  // When store changes we need the state to be updated synchronously to avoid inconsistencies.\n  var prevStore = usePrevious(store);\n  if (prevStore !== null && prevStore !== store) {\n    return selector(store.get());\n  }\n  return state;\n}","map":{"version":3,"mappings":";;;;AAAA;AACA;AACA,SAASA,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AACjD,SAASC,uBAAuB,QAAQ,WAAW;AACnD,SAASC,WAAW,QAAQ,mCAAmC;AAAC,IAW3CC,UAAU;EAI7B,oBAAYC,KAAQ;IAAA;IAFpB,eAAU,GAAwC,EAAE;IAGlD,IAAI,CAACC,MAAM,GAAGD,KAAK;EACrB;EAAC;IAAA;IAAA,OAED,eAAG;MACD,OAAO,IAAI,CAACC,MAAM;IACpB;EAAC;IAAA;IAAA,OAED,aAAIC,EAAmB;MAAA;MACrB,IAAMC,SAAS,GAAG,IAAI,CAACF,MAAM;MAC7B,IAAMG,QAAQ,GAAGF,EAAE,CAACC,SAAS,CAAC;MAE9B,IAAI,CAACF,MAAM,GAAGG,QAAQ;MAEtBP,uBAAuB,CAAC,YAAK;QAAA,2CACQ,KAAI,CAACQ,UAAU;UAAA;QAAA;UAAlD,oDAAoD;YAAA;cAAxCC,QAAQ;cAAEC,QAAQ;YAC5B,IAAID,QAAQ,CAACH,SAAS,CAAC,KAAKG,QAAQ,CAACF,QAAQ,CAAC,EAAE;cAC9CG,QAAQ,CAACH,QAAQ,EAAED,SAAS,CAAC;;;QAEhC;UAAA;QAAA;UAAA;QAAA;MACH,CAAC,CAAC;IACJ;EAAC;IAAA;IAAA,OAED,mBAAaG,QAAwB,EAAEC,QAAqB;MAAA;MAC1D,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,CAACF,QAAQ,EAAEC,QAAQ,CAAC,CAAC;MAE1C,OAAO;QAAA,OAAM,MAAI,CAACE,WAAW,CAACF,QAAQ,CAAC;MAAA;IACzC;EAAC;IAAA;IAAA,OAED,qBAAYA,QAAuB;MACjC,KAAK,IAAIG,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,IAAI,CAACL,UAAU,CAACM,MAAM,EAAED,KAAK,EAAE,EAAE;QAC3D,2CAA2B,IAAI,CAACL,UAAU,CAACK,KAAK,CAAC;UAAxCE,cAAc;QAEvB,IAAIA,cAAc,KAAKL,QAAQ,EAAE;UAC/B,IAAI,CAACF,UAAU,CAACQ,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;UAChC;;;IAGN;EAAC;EAAA;AAAA;AAAA,SA1CkBX,UAAU;AA6C/B,OAAM,SAAUe,WAAW,CAAOC,KAA4B,EAAET,QAAwB,EAAEU,MAAmB;EAC3GrB,eAAe,CACb,YAAK;IACH,IAAMc,WAAW,GAAGM,KAAK,CAACE,SAAS,CAACX,QAAQ,EAAE,UAACF,QAAQ,EAAED,SAAS;MAAA,OAChEa,MAAM,CAACV,QAAQ,CAACF,QAAQ,CAAC,EAAEE,QAAQ,CAACH,SAAS,CAAC,CAAC;IAAA,EAChD;IACD,OAAOM,WAAW;EACpB,CAAC;EACD;EACA;EACA,CAACM,KAAK,CAAC,CACR;AACH;AAEA,OAAM,SAAUG,WAAW,CAAOH,KAA4B,EAAET,QAAwB;EACtF,gBAA0BV,QAAQ,CAAIU,QAAQ,CAACS,KAAK,CAACI,GAAG,EAAE,CAAC,CAAC;IAAA;IAArDnB,KAAK;IAAEoB,QAAQ;EAEtBN,WAAW,CAACC,KAAK,EAAET,QAAQ,EAAE,kBAAQ,EAAG;IACtCc,QAAQ,CAAChB,QAAQ,CAAC;EACpB,CAAC,CAAC;EAEF;EACA,IAAMiB,SAAS,GAAGvB,WAAW,CAACiB,KAAK,CAAC;EACpC,IAAIM,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAKN,KAAK,EAAE;IAC7C,OAAOT,QAAQ,CAACS,KAAK,CAACI,GAAG,EAAE,CAAC;;EAG9B,OAAOnB,KAAK;AACd","names":["useLayoutEffect","useState","unstable_batchedUpdates","usePrevious","AsyncStore","state","_state","cb","prevState","newState","_listeners","selector","listener","push","unsubscribe","index","length","storedListener","splice","useReaction","store","effect","subscribe","useSelector","get","setState","prevStore"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/area-chart/async-store/lib/default/area-chart/async-store/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useLayoutEffect, useState } from 'react';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport { usePrevious } from '../../internal/hooks/use-previous';\n\ntype Selector<S, R> = (state: S) => R;\ntype Listener<S> = (state: S, prevState: S) => any;\n\nexport interface ReadonlyAsyncStore<S> {\n  get(): S;\n  subscribe<R>(selector: Selector<S, R>, listener: Listener<S>): () => void;\n  unsubscribe(listener: Listener<any>): void;\n}\n\nexport default class AsyncStore<S> implements ReadonlyAsyncStore<S> {\n  _state: S;\n  _listeners: [Selector<S, any>, Listener<any>][] = [];\n\n  constructor(state: S) {\n    this._state = state;\n  }\n\n  get(): S {\n    return this._state;\n  }\n\n  set(cb: (state: S) => S): void {\n    const prevState = this._state;\n    const newState = cb(prevState);\n\n    this._state = newState;\n\n    unstable_batchedUpdates(() => {\n      for (const [selector, listener] of this._listeners) {\n        if (selector(prevState) !== selector(newState)) {\n          listener(newState, prevState);\n        }\n      }\n    });\n  }\n\n  subscribe<R>(selector: Selector<S, R>, listener: Listener<S>): () => void {\n    this._listeners.push([selector, listener]);\n\n    return () => this.unsubscribe(listener);\n  }\n\n  unsubscribe(listener: Listener<any>): void {\n    for (let index = 0; index < this._listeners.length; index++) {\n      const [, storedListener] = this._listeners[index];\n\n      if (storedListener === listener) {\n        this._listeners.splice(index, 1);\n        break;\n      }\n    }\n  }\n}\n\nexport function useReaction<S, R>(store: ReadonlyAsyncStore<S>, selector: Selector<S, R>, effect: Listener<R>): void {\n  useLayoutEffect(\n    () => {\n      const unsubscribe = store.subscribe(selector, (newState, prevState) =>\n        effect(selector(newState), selector(prevState))\n      );\n      return unsubscribe;\n    },\n    // ignoring selector and effect as they are expected to stay constant\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [store]\n  );\n}\n\nexport function useSelector<S, R>(store: ReadonlyAsyncStore<S>, selector: Selector<S, R>): R {\n  const [state, setState] = useState<R>(selector(store.get()));\n\n  useReaction(store, selector, newState => {\n    setState(newState);\n  });\n\n  // When store changes we need the state to be updated synchronously to avoid inconsistencies.\n  const prevStore = usePrevious(store);\n  if (prevStore !== null && prevStore !== store) {\n    return selector(store.get());\n  }\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}