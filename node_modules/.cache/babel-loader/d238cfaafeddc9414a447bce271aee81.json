{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { createContext, useContext, useState } from 'react';\nconst defaultCtx = {\n  state: {\n    view: 'utilities',\n    data: null\n  },\n  setState: () => {}\n};\nexport const ViewContext = createContext(defaultCtx);\nexport const useNavigate = () => {\n  const {\n    setState\n  } = useContext(ViewContext);\n  const navigate = (view, data) => {\n    setState({\n      view,\n      data\n    });\n  };\n  return navigate;\n};\nexport const Route = _ref => {\n  let {\n    view,\n    element\n  } = _ref;\n  const {\n    state\n  } = useContext(ViewContext);\n  if (view === state.view) {\n    if (typeof element === 'function') {\n      return element(state.data);\n    }\n    return React.createElement(React.Fragment, null, element);\n  }\n  return null;\n};\nconst Router = _ref2 => {\n  let {\n    children\n  } = _ref2;\n  const [state, setState] = useState({\n    view: 'utilities',\n    data: null\n  });\n  return React.createElement(ViewContext.Provider, {\n    value: {\n      state,\n      setState\n    }\n  }, children);\n};\nexport default Router;","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAA4BC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAsB5F,MAAMC,UAAU,GAAiB;EAAEC,KAAK,EAAE;IAAEC,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAI,CAAE;EAAEC,QAAQ,EAAE,MAAK,CAAE;AAAC,CAAE;AACjG,OAAO,MAAMC,WAAW,GAAGR,aAAa,CAAeG,UAAU,CAAC;AAElE,OAAO,MAAMM,WAAW,GAAG,MAAK;EAC9B,MAAM;IAAEF;EAAQ,CAAE,GAAGN,UAAU,CAACO,WAAW,CAAC;EAE5C,MAAME,QAAQ,GAAG,CAACL,IAAU,EAAEC,IAAS,KAAI;IACzCC,QAAQ,CAAC;MAAEF,IAAI;MAAEC;IAAI,CAAE,CAAC;EAC1B,CAAC;EAED,OAAOI,QAAQ;AACjB,CAAC;AAOD,OAAO,MAAMC,KAAK,GAAG,QAAkC;EAAA,IAAjC;IAAEN,IAAI;IAAEO;EAAO,CAAc;EACjD,MAAM;IAAER;EAAK,CAAE,GAAGH,UAAU,CAACO,WAAW,CAAC;EAEzC,IAAIH,IAAI,KAAKD,KAAK,CAACC,IAAI,EAAE;IACvB,IAAI,OAAOO,OAAO,KAAK,UAAU,EAAE;MACjC,OAAOA,OAAO,CAACR,KAAK,CAACE,IAAI,CAAC;;IAG5B,OAAOP,0CAAGa,OAAO,CAAI;;EAGvB,OAAO,IAAI;AACb,CAAC;AAMD,MAAMC,MAAM,GAAG,SAA8B;EAAA,IAA7B;IAAEC;EAAQ,CAAe;EACvC,MAAM,CAACV,KAAK,EAAEG,QAAQ,CAAC,GAAGL,QAAQ,CAAa;IAAEG,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAI,CAAE,CAAC;EACjF,OAAOP,oBAACS,WAAW,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEZ,KAAK;MAAEG;IAAQ;EAAE,GAAGO,QAAQ,CAAwB;AAC5F,CAAC;AAED,eAAeD,MAAM","names":["React","createContext","useContext","useState","defaultCtx","state","view","data","setState","ViewContext","useNavigate","navigate","Route","element","Router","children","Provider","value"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/lib/default/top-navigation/parts/overflow-menu/router.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { createContext, Dispatch, SetStateAction, useContext, useState } from 'react';\n\ntype View = 'utilities' | 'dropdown-menu';\n\ninterface RouteData {\n  headerText?: string;\n  headerSecondaryText?: string;\n  definition?: any;\n\n  utilityIndex?: number;\n}\n\ninterface RouteState {\n  view: View;\n  data: RouteData | null;\n}\n\ninterface IViewContext {\n  state: RouteState;\n  setState: Dispatch<SetStateAction<RouteState>>;\n}\n\nconst defaultCtx: IViewContext = { state: { view: 'utilities', data: null }, setState: () => {} };\nexport const ViewContext = createContext<IViewContext>(defaultCtx);\n\nexport const useNavigate = () => {\n  const { setState } = useContext(ViewContext);\n\n  const navigate = (view: View, data: any) => {\n    setState({ view, data });\n  };\n\n  return navigate;\n};\n\ninterface RouteProps {\n  view: View;\n  element?: React.ReactNode | ((data: RouteData | null) => React.ReactElement);\n}\n\nexport const Route = ({ view, element }: RouteProps) => {\n  const { state } = useContext(ViewContext);\n\n  if (view === state.view) {\n    if (typeof element === 'function') {\n      return element(state.data);\n    }\n\n    return <>{element}</>;\n  }\n\n  return null;\n};\n\ninterface RouterProps {\n  children?: React.ReactNode;\n}\n\nconst Router = ({ children }: RouterProps) => {\n  const [state, setState] = useState<RouteState>({ view: 'utilities', data: null });\n  return <ViewContext.Provider value={{ state, setState }}>{children}</ViewContext.Provider>;\n};\n\nexport default Router;\n"]},"metadata":{},"sourceType":"module"}