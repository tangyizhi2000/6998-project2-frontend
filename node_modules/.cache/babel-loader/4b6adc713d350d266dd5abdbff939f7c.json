{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport createCategoryColorScale from '../../internal/utils/create-category-color-scale';\nexport default function createSeriesDecorator(externalSeries) {\n  const colorScale = createCategoryColorScale(externalSeries, s => s.type === 'threshold', s => s.color || null);\n  const decorateSeries = (s, index) => {\n    const title = s.title;\n    const color = colorScale[index];\n    const markerType = s.type === 'area' ? 'hollow-rectangle' : 'dashed';\n    const formatValue = s.type === 'threshold' ? () => s.valueFormatter ? s.valueFormatter(s.y) : s.y : (y, x) => s.valueFormatter ? s.valueFormatter(y, x) : y;\n    return {\n      series: s,\n      title,\n      color,\n      markerType,\n      formatValue\n    };\n  };\n  // Map external series to internal ones.\n  const mapping = externalSeries.reduce((map, series, index) => {\n    map.set(series, decorateSeries(series, index));\n    return map;\n  }, new Map());\n  // It is inconvenient to use internal series everywhere, that's\n  // why we also provide a decorator function to get the internal series on demand.\n  const seriesDecorator = series => mapping.get(series) || decorateSeries(series, externalSeries.length);\n  return seriesDecorator;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,wBAAwB,MAAM,kDAAkD;AAIvF,eAAc,SAAUC,qBAAqB,CAC3CC,cAAmD;EAEnD,MAAMC,UAAU,GAAGH,wBAAwB,CACzCE,cAAc,EACdE,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,WAAW,EAC3BD,CAAC,IAAIA,CAAC,CAACE,KAAK,IAAI,IAAI,CACrB;EAED,MAAMC,cAAc,GAAG,CAACH,CAA2B,EAAEI,KAAa,KAAkC;IAClG,MAAMC,KAAK,GAAGL,CAAC,CAACK,KAAK;IACrB,MAAMH,KAAK,GAAGH,UAAU,CAACK,KAAK,CAAC;IAC/B,MAAME,UAAU,GAAGN,CAAC,CAACC,IAAI,KAAK,MAAM,GAAG,kBAAkB,GAAG,QAAQ;IACpE,MAAMM,WAAW,GACfP,CAAC,CAACC,IAAI,KAAK,WAAW,GAClB,MAAOD,CAAC,CAACQ,cAAc,GAAGR,CAAC,CAACQ,cAAc,CAACR,CAAC,CAACS,CAAC,CAAC,GAAGT,CAAC,CAACS,CAAE,GACtD,CAACA,CAAS,EAAEC,CAAI,KAAMV,CAAC,CAACQ,cAAc,GAAGR,CAAC,CAACQ,cAAc,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGD,CAAE;IAE1E,OAAO;MAAEE,MAAM,EAAEX,CAAC;MAAEK,KAAK;MAAEH,KAAK;MAAEI,UAAU;MAAEC;IAAW,CAAE;EAC7D,CAAC;EAED;EACA,MAAMK,OAAO,GAAGd,cAAc,CAACe,MAAM,CAAC,CAACC,GAAG,EAAEH,MAAM,EAAEP,KAAK,KAAI;IAC3DU,GAAG,CAACC,GAAG,CAACJ,MAAM,EAAER,cAAc,CAACQ,MAAM,EAAEP,KAAK,CAAC,CAAC;IAC9C,OAAOU,GAAG;EACZ,CAAC,EAAE,IAAIE,GAAG,EAA0D,CAAC;EAErE;EACA;EACA,MAAMC,eAAe,GAAIN,MAAgC,IACvDC,OAAO,CAACM,GAAG,CAACP,MAAM,CAAC,IAAIR,cAAc,CAACQ,MAAM,EAAEb,cAAc,CAACqB,MAAM,CAAC;EAEtE,OAAOF,eAAe;AACxB","names":["createCategoryColorScale","createSeriesDecorator","externalSeries","colorScale","s","type","color","decorateSeries","index","title","markerType","formatValue","valueFormatter","y","x","series","mapping","reduce","map","set","Map","seriesDecorator","get","length"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/area-chart/model/lib/default/area-chart/model/create-series-decorator.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport createCategoryColorScale from '../../internal/utils/create-category-color-scale';\nimport { AreaChartProps } from '../interfaces';\nimport { ChartModel } from './index';\n\nexport default function createSeriesDecorator<T extends AreaChartProps.DataTypes>(\n  externalSeries: readonly AreaChartProps.Series<T>[]\n) {\n  const colorScale = createCategoryColorScale(\n    externalSeries,\n    s => s.type === 'threshold',\n    s => s.color || null\n  );\n\n  const decorateSeries = (s: AreaChartProps.Series<T>, index: number): ChartModel.InternalSeries<T> => {\n    const title = s.title;\n    const color = colorScale[index];\n    const markerType = s.type === 'area' ? 'hollow-rectangle' : 'dashed';\n    const formatValue =\n      s.type === 'threshold'\n        ? () => (s.valueFormatter ? s.valueFormatter(s.y) : s.y)\n        : (y: number, x: T) => (s.valueFormatter ? s.valueFormatter(y, x) : y);\n\n    return { series: s, title, color, markerType, formatValue };\n  };\n\n  // Map external series to internal ones.\n  const mapping = externalSeries.reduce((map, series, index) => {\n    map.set(series, decorateSeries(series, index));\n    return map;\n  }, new Map<AreaChartProps.Series<T>, ChartModel.InternalSeries<T>>());\n\n  // It is inconvenient to use internal series everywhere, that's\n  // why we also provide a decorator function to get the internal series on demand.\n  const seriesDecorator = (series: AreaChartProps.Series<T>): ChartModel.InternalSeries<T> =>\n    mapping.get(series) || decorateSeries(series, externalSeries.length);\n\n  return seriesDecorator;\n}\n"]},"metadata":{},"sourceType":"module"}