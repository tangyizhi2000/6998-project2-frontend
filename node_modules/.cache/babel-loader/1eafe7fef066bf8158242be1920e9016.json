{"ast":null,"code":"import _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __rest } from \"tslib\";\nimport React, { useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useAutosuggestItems } from './options-controller';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport DropdownFooter from '../internal/components/dropdown-footer';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { fireCancelableEvent, fireNonCancelableEvent } from '../internal/events';\nimport { checkOptionValueField } from '../select/utils/check-option-value-field';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport AutosuggestOptionsList from './options-list';\nimport { useAutosuggestLoadMore } from './load-more-controller';\nimport AutosuggestInput from '../internal/components/autosuggest-input';\nimport { useFormFieldContext } from '../contexts/form-field';\nimport { useInternalI18n } from '../i18n/context';\nimport styles from './styles.css.js';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nvar InternalAutosuggest = React.forwardRef(function (props, ref) {\n  var _a, _b;\n  var value = props.value,\n    onChange = props.onChange,\n    onBlur = props.onBlur,\n    onFocus = props.onFocus,\n    onKeyUp = props.onKeyUp,\n    _onLoadItems = props.onLoadItems,\n    options = props.options,\n    _props$filteringType = props.filteringType,\n    filteringType = _props$filteringType === void 0 ? 'auto' : _props$filteringType,\n    _props$statusType = props.statusType,\n    statusType = _props$statusType === void 0 ? 'finished' : _props$statusType,\n    placeholder = props.placeholder,\n    clearAriaLabel = props.clearAriaLabel,\n    name = props.name,\n    disabled = props.disabled,\n    _props$disableBrowser = props.disableBrowserAutocorrect,\n    disableBrowserAutocorrect = _props$disableBrowser === void 0 ? false : _props$disableBrowser,\n    autoFocus = props.autoFocus,\n    readOnly = props.readOnly,\n    ariaLabel = props.ariaLabel,\n    ariaRequired = props.ariaRequired,\n    enteredTextLabel = props.enteredTextLabel,\n    filteringResultsText = props.filteringResultsText,\n    onKeyDown = props.onKeyDown,\n    virtualScroll = props.virtualScroll,\n    expandToViewport = props.expandToViewport,\n    onSelect = props.onSelect,\n    renderHighlightedAriaLive = props.renderHighlightedAriaLive,\n    __internalRootRef = props.__internalRootRef,\n    restProps = __rest(props, [\"value\", \"onChange\", \"onBlur\", \"onFocus\", \"onKeyUp\", \"onLoadItems\", \"options\", \"filteringType\", \"statusType\", \"placeholder\", \"clearAriaLabel\", \"name\", \"disabled\", \"disableBrowserAutocorrect\", \"autoFocus\", \"readOnly\", \"ariaLabel\", \"ariaRequired\", \"enteredTextLabel\", \"filteringResultsText\", \"onKeyDown\", \"virtualScroll\", \"expandToViewport\", \"onSelect\", \"renderHighlightedAriaLive\", \"__internalRootRef\"]);\n  checkControlled('Autosuggest', 'value', value, 'onChange', onChange);\n  checkOptionValueField('Autosuggest', 'options', options);\n  var autosuggestInputRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        var _a;\n        return (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      select: function select() {\n        var _a;\n        return (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.select();\n      }\n    };\n  }, []);\n  var i18n = useInternalI18n('autosuggest');\n  var errorIconAriaLabel = i18n('errorIconAriaLabel', restProps.errorIconAriaLabel);\n  var selectedAriaLabel = i18n('selectedAriaLabel', restProps.selectedAriaLabel);\n  var recoveryText = i18n('recoveryText', restProps.recoveryText);\n  if (restProps.recoveryText && !_onLoadItems) {\n    warnOnce('Autosuggest', '`onLoadItems` must be provided for `recoveryText` to be displayed.');\n  }\n  if (!enteredTextLabel) {\n    warnOnce('Autosuggest', 'A value for enteredTextLabel must be provided.');\n  }\n  var _useAutosuggestItems = useAutosuggestItems({\n      options: options || [],\n      filterValue: value,\n      filterText: value,\n      filteringType: filteringType,\n      hideEnteredTextLabel: false,\n      onSelectItem: function onSelectItem(option) {\n        var _a;\n        var value = option.value || '';\n        fireNonCancelableEvent(onChange, {\n          value: value\n        });\n        fireNonCancelableEvent(onSelect, {\n          value: value,\n          selectedOption: option.type !== 'use-entered' ? option.option : undefined\n        });\n        (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.close();\n      }\n    }),\n    _useAutosuggestItems2 = _slicedToArray(_useAutosuggestItems, 2),\n    autosuggestItemsState = _useAutosuggestItems2[0],\n    autosuggestItemsHandlers = _useAutosuggestItems2[1];\n  var autosuggestLoadMoreHandlers = useAutosuggestLoadMore({\n    options: options,\n    statusType: statusType,\n    onLoadItems: function onLoadItems(detail) {\n      return fireNonCancelableEvent(_onLoadItems, detail);\n    }\n  });\n  var handleChange = function handleChange(event) {\n    autosuggestItemsHandlers.setShowAll(false);\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n    fireNonCancelableEvent(onChange, event.detail);\n  };\n  var handleDelayedInput = function handleDelayedInput(event) {\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputChange(event.detail.value);\n  };\n  var handleBlur = function handleBlur() {\n    fireNonCancelableEvent(onBlur, null);\n  };\n  var handleFocus = function handleFocus() {\n    autosuggestItemsHandlers.setShowAll(true);\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputFocus();\n    fireNonCancelableEvent(onFocus, null);\n  };\n  var handleKeyUp = function handleKeyUp(event) {\n    fireCancelableEvent(onKeyUp, event.detail, event);\n  };\n  var handleKeyDown = function handleKeyDown(event) {\n    fireCancelableEvent(onKeyDown, event.detail, event);\n  };\n  var handlePressArrowDown = function handlePressArrowDown() {\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(1);\n  };\n  var handlePressArrowUp = function handlePressArrowUp() {\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(-1);\n  };\n  var handlePressEnter = function handlePressEnter() {\n    return autosuggestItemsHandlers.selectHighlightedOptionWithKeyboard();\n  };\n  var handleCloseDropdown = function handleCloseDropdown() {\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n  };\n  var handleRecoveryClick = function handleRecoveryClick() {\n    var _a;\n    autosuggestLoadMoreHandlers.fireLoadMoreOnRecoveryClick();\n    (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n  var formFieldContext = useFormFieldContext(restProps);\n  var selfControlId = useUniqueId('input');\n  var footerControlId = useUniqueId('footer');\n  var controlId = (_a = formFieldContext.controlId) !== null && _a !== void 0 ? _a : selfControlId;\n  var listId = useUniqueId('list');\n  var highlightedOptionIdSource = useUniqueId();\n  var highlightedOptionId = autosuggestItemsState.highlightedOption ? highlightedOptionIdSource : undefined;\n  var isEmpty = !value && !autosuggestItemsState.items.length;\n  var isFiltered = !!value && value.length !== 0;\n  var filteredText = isFiltered ? filteringResultsText === null || filteringResultsText === void 0 ? void 0 : filteringResultsText(autosuggestItemsState.items.length, (_b = options === null || options === void 0 ? void 0 : options.length) !== null && _b !== void 0 ? _b : 0) : undefined;\n  var dropdownStatus = useDropdownStatus(Object.assign(Object.assign({}, props), {\n    isEmpty: isEmpty,\n    isFiltered: isFiltered,\n    recoveryText: recoveryText,\n    errorIconAriaLabel: errorIconAriaLabel,\n    onRecoveryClick: handleRecoveryClick,\n    filteringResultsText: filteredText,\n    hasRecoveryCallback: !!_onLoadItems\n  }));\n  var shouldRenderDropdownContent = !isEmpty || dropdownStatus.content;\n  return React.createElement(AutosuggestInput, Object.assign({}, restProps, {\n    className: clsx(styles.root, restProps.className),\n    ref: autosuggestInputRef,\n    __internalRootRef: __internalRootRef,\n    value: value,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onKeyUp: handleKeyUp,\n    onKeyDown: handleKeyDown,\n    name: name,\n    controlId: controlId,\n    placeholder: placeholder,\n    disabled: disabled,\n    readOnly: readOnly,\n    autoFocus: autoFocus,\n    ariaLabel: ariaLabel,\n    ariaRequired: ariaRequired,\n    clearAriaLabel: clearAriaLabel,\n    disableBrowserAutocorrect: disableBrowserAutocorrect,\n    expandToViewport: expandToViewport,\n    ariaControls: listId,\n    ariaActivedescendant: highlightedOptionId,\n    dropdownExpanded: autosuggestItemsState.items.length > 1 || dropdownStatus.content !== null,\n    dropdownContent: shouldRenderDropdownContent && React.createElement(AutosuggestOptionsList, {\n      statusType: statusType,\n      autosuggestItemsState: autosuggestItemsState,\n      autosuggestItemsHandlers: autosuggestItemsHandlers,\n      highlightedOptionId: highlightedOptionId,\n      highlightText: value,\n      listId: listId,\n      controlId: controlId,\n      enteredTextLabel: enteredTextLabel,\n      handleLoadMore: autosuggestLoadMoreHandlers.fireLoadMoreOnScroll,\n      hasDropdownStatus: dropdownStatus.content !== null,\n      virtualScroll: virtualScroll,\n      selectedAriaLabel: selectedAriaLabel,\n      renderHighlightedAriaLive: renderHighlightedAriaLive,\n      listBottom: !dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n        content: dropdownStatus.content,\n        id: footerControlId\n      }) : null,\n      ariaDescribedby: dropdownStatus.content ? footerControlId : undefined\n    }),\n    dropdownFooter: dropdownStatus.isSticky && dropdownStatus.content ? React.createElement(DropdownFooter, {\n      id: footerControlId,\n      content: dropdownStatus.content,\n      hasItems: autosuggestItemsState.items.length >= 1\n    }) : null,\n    loopFocus: statusType === 'error' && !!recoveryText && !!_onLoadItems,\n    onCloseDropdown: handleCloseDropdown,\n    onDelayedInput: handleDelayedInput,\n    onPressArrowDown: handlePressArrowDown,\n    onPressArrowUp: handlePressArrowUp,\n    onPressEnter: handlePressEnter\n  }));\n});\nexport default InternalAutosuggest;","map":{"version":3,"mappings":"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","names":["React","useImperativeHandle","useRef","clsx","useAutosuggestItems","useDropdownStatus","DropdownFooter","useUniqueId","fireCancelableEvent","fireNonCancelableEvent","checkOptionValueField","checkControlled","AutosuggestOptionsList","useAutosuggestLoadMore","AutosuggestInput","useFormFieldContext","useInternalI18n","styles","warnOnce","InternalAutosuggest","forwardRef","props","ref","value","onChange","onBlur","onFocus","onKeyUp","onLoadItems","options","filteringType","statusType","placeholder","clearAriaLabel","name","disabled","disableBrowserAutocorrect","autoFocus","readOnly","ariaLabel","ariaRequired","enteredTextLabel","filteringResultsText","onKeyDown","virtualScroll","expandToViewport","onSelect","renderHighlightedAriaLive","__internalRootRef","restProps","autosuggestInputRef","focus","current","select","i18n","errorIconAriaLabel","selectedAriaLabel","recoveryText","filterValue","filterText","hideEnteredTextLabel","onSelectItem","option","selectedOption","type","undefined","close","autosuggestItemsState","autosuggestItemsHandlers","autosuggestLoadMoreHandlers","detail","handleChange","event","setShowAll","resetHighlightWithKeyboard","handleDelayedInput","fireLoadMoreOnInputChange","handleBlur","handleFocus","fireLoadMoreOnInputFocus","handleKeyUp","handleKeyDown","handlePressArrowDown","moveHighlightWithKeyboard","handlePressArrowUp","handlePressEnter","selectHighlightedOptionWithKeyboard","handleCloseDropdown","handleRecoveryClick","fireLoadMoreOnRecoveryClick","formFieldContext","selfControlId","footerControlId","controlId","listId","highlightedOptionIdSource","highlightedOptionId","highlightedOption","isEmpty","items","length","isFiltered","filteredText","dropdownStatus","onRecoveryClick","hasRecoveryCallback","shouldRenderDropdownContent","content","className","root","ariaControls","ariaActivedescendant","dropdownExpanded","dropdownContent","highlightText","handleLoadMore","fireLoadMoreOnScroll","hasDropdownStatus","listBottom","isSticky","id","ariaDescribedby","dropdownFooter","hasItems","loopFocus","onCloseDropdown","onDelayedInput","onPressArrowDown","onPressArrowUp","onPressEnter"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/autosuggest/lib/default/autosuggest/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { Ref, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useAutosuggestItems } from './options-controller';\nimport { AutosuggestItem, AutosuggestProps } from './interfaces';\n\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport DropdownFooter from '../internal/components/dropdown-footer';\n\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport {\n  BaseKeyDetail,\n  fireCancelableEvent,\n  fireNonCancelableEvent,\n  NonCancelableCustomEvent,\n} from '../internal/events';\nimport { BaseChangeDetail } from '../input/interfaces';\nimport { checkOptionValueField } from '../select/utils/check-option-value-field';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport AutosuggestOptionsList from './options-list';\nimport { useAutosuggestLoadMore } from './load-more-controller';\nimport { OptionsLoadItemsDetail } from '../internal/components/dropdown/interfaces';\nimport AutosuggestInput, { AutosuggestInputRef } from '../internal/components/autosuggest-input';\nimport { useFormFieldContext } from '../contexts/form-field';\nimport { useInternalI18n } from '../i18n/context';\n\nimport styles from './styles.css.js';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nexport interface InternalAutosuggestProps extends AutosuggestProps, InternalBaseComponentProps {}\n\nconst InternalAutosuggest = React.forwardRef((props: InternalAutosuggestProps, ref: Ref<AutosuggestProps.Ref>) => {\n  const {\n    value,\n    onChange,\n    onBlur,\n    onFocus,\n    onKeyUp,\n    onLoadItems,\n    options,\n    filteringType = 'auto',\n    statusType = 'finished',\n    placeholder,\n    clearAriaLabel,\n    name,\n    disabled,\n    disableBrowserAutocorrect = false,\n    autoFocus,\n    readOnly,\n    ariaLabel,\n    ariaRequired,\n    enteredTextLabel,\n    filteringResultsText,\n    onKeyDown,\n    virtualScroll,\n    expandToViewport,\n    onSelect,\n    renderHighlightedAriaLive,\n    __internalRootRef,\n    ...restProps\n  } = props;\n\n  checkControlled('Autosuggest', 'value', value, 'onChange', onChange);\n  checkOptionValueField('Autosuggest', 'options', options);\n\n  const autosuggestInputRef = useRef<AutosuggestInputRef>(null);\n  useImperativeHandle(\n    ref,\n    () => ({\n      focus: () => autosuggestInputRef.current?.focus(),\n      select: () => autosuggestInputRef.current?.select(),\n    }),\n    []\n  );\n\n  const i18n = useInternalI18n('autosuggest');\n  const errorIconAriaLabel = i18n('errorIconAriaLabel', restProps.errorIconAriaLabel);\n  const selectedAriaLabel = i18n('selectedAriaLabel', restProps.selectedAriaLabel);\n  const recoveryText = i18n('recoveryText', restProps.recoveryText);\n\n  if (restProps.recoveryText && !onLoadItems) {\n    warnOnce('Autosuggest', '`onLoadItems` must be provided for `recoveryText` to be displayed.');\n  }\n\n  if (!enteredTextLabel) {\n    warnOnce('Autosuggest', 'A value for enteredTextLabel must be provided.');\n  }\n\n  const [autosuggestItemsState, autosuggestItemsHandlers] = useAutosuggestItems({\n    options: options || [],\n    filterValue: value,\n    filterText: value,\n    filteringType,\n    hideEnteredTextLabel: false,\n    onSelectItem: (option: AutosuggestItem) => {\n      const value = option.value || '';\n      fireNonCancelableEvent(onChange, { value });\n      fireNonCancelableEvent(onSelect, {\n        value,\n        selectedOption: option.type !== 'use-entered' ? option.option : undefined,\n      });\n      autosuggestInputRef.current?.close();\n    },\n  });\n\n  const autosuggestLoadMoreHandlers = useAutosuggestLoadMore({\n    options,\n    statusType,\n    onLoadItems: (detail: OptionsLoadItemsDetail) => fireNonCancelableEvent(onLoadItems, detail),\n  });\n\n  const handleChange = (event: NonCancelableCustomEvent<BaseChangeDetail>) => {\n    autosuggestItemsHandlers.setShowAll(false);\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n    fireNonCancelableEvent(onChange, event.detail);\n  };\n\n  const handleDelayedInput = (event: NonCancelableCustomEvent<BaseChangeDetail>) => {\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputChange(event.detail.value);\n  };\n\n  const handleBlur = () => {\n    fireNonCancelableEvent(onBlur, null);\n  };\n\n  const handleFocus = () => {\n    autosuggestItemsHandlers.setShowAll(true);\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputFocus();\n    fireNonCancelableEvent(onFocus, null);\n  };\n\n  const handleKeyUp = (event: CustomEvent<BaseKeyDetail>) => {\n    fireCancelableEvent(onKeyUp, event.detail, event);\n  };\n\n  const handleKeyDown = (event: CustomEvent<BaseKeyDetail>) => {\n    fireCancelableEvent(onKeyDown, event.detail, event);\n  };\n\n  const handlePressArrowDown = () => {\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(1);\n  };\n\n  const handlePressArrowUp = () => {\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(-1);\n  };\n\n  const handlePressEnter = () => {\n    return autosuggestItemsHandlers.selectHighlightedOptionWithKeyboard();\n  };\n\n  const handleCloseDropdown = () => {\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n  };\n\n  const handleRecoveryClick = () => {\n    autosuggestLoadMoreHandlers.fireLoadMoreOnRecoveryClick();\n    autosuggestInputRef.current?.focus();\n  };\n\n  const formFieldContext = useFormFieldContext(restProps);\n  const selfControlId = useUniqueId('input');\n  const footerControlId = useUniqueId('footer');\n  const controlId = formFieldContext.controlId ?? selfControlId;\n  const listId = useUniqueId('list');\n  const highlightedOptionIdSource = useUniqueId();\n  const highlightedOptionId = autosuggestItemsState.highlightedOption ? highlightedOptionIdSource : undefined;\n\n  const isEmpty = !value && !autosuggestItemsState.items.length;\n  const isFiltered = !!value && value.length !== 0;\n  const filteredText = isFiltered\n    ? filteringResultsText?.(autosuggestItemsState.items.length, options?.length ?? 0)\n    : undefined;\n  const dropdownStatus = useDropdownStatus({\n    ...props,\n    isEmpty,\n    isFiltered,\n    recoveryText,\n    errorIconAriaLabel,\n    onRecoveryClick: handleRecoveryClick,\n    filteringResultsText: filteredText,\n    hasRecoveryCallback: !!onLoadItems,\n  });\n\n  const shouldRenderDropdownContent = !isEmpty || dropdownStatus.content;\n\n  return (\n    <AutosuggestInput\n      {...restProps}\n      className={clsx(styles.root, restProps.className)}\n      ref={autosuggestInputRef}\n      __internalRootRef={__internalRootRef}\n      value={value}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onKeyUp={handleKeyUp}\n      onKeyDown={handleKeyDown}\n      name={name}\n      controlId={controlId}\n      placeholder={placeholder}\n      disabled={disabled}\n      readOnly={readOnly}\n      autoFocus={autoFocus}\n      ariaLabel={ariaLabel}\n      ariaRequired={ariaRequired}\n      clearAriaLabel={clearAriaLabel}\n      disableBrowserAutocorrect={disableBrowserAutocorrect}\n      expandToViewport={expandToViewport}\n      ariaControls={listId}\n      ariaActivedescendant={highlightedOptionId}\n      dropdownExpanded={autosuggestItemsState.items.length > 1 || dropdownStatus.content !== null}\n      dropdownContent={\n        shouldRenderDropdownContent && (\n          <AutosuggestOptionsList\n            statusType={statusType}\n            autosuggestItemsState={autosuggestItemsState}\n            autosuggestItemsHandlers={autosuggestItemsHandlers}\n            highlightedOptionId={highlightedOptionId}\n            highlightText={value}\n            listId={listId}\n            controlId={controlId}\n            enteredTextLabel={enteredTextLabel}\n            handleLoadMore={autosuggestLoadMoreHandlers.fireLoadMoreOnScroll}\n            hasDropdownStatus={dropdownStatus.content !== null}\n            virtualScroll={virtualScroll}\n            selectedAriaLabel={selectedAriaLabel}\n            renderHighlightedAriaLive={renderHighlightedAriaLive}\n            listBottom={\n              !dropdownStatus.isSticky ? <DropdownFooter content={dropdownStatus.content} id={footerControlId} /> : null\n            }\n            ariaDescribedby={dropdownStatus.content ? footerControlId : undefined}\n          />\n        )\n      }\n      dropdownFooter={\n        dropdownStatus.isSticky && dropdownStatus.content ? (\n          <DropdownFooter\n            id={footerControlId}\n            content={dropdownStatus.content}\n            hasItems={autosuggestItemsState.items.length >= 1}\n          />\n        ) : null\n      }\n      loopFocus={statusType === 'error' && !!recoveryText && !!onLoadItems}\n      onCloseDropdown={handleCloseDropdown}\n      onDelayedInput={handleDelayedInput}\n      onPressArrowDown={handlePressArrowDown}\n      onPressArrowUp={handlePressArrowUp}\n      onPressEnter={handlePressEnter}\n    />\n  );\n});\n\nexport default InternalAutosuggest;\n"]},"metadata":{},"sourceType":"module"}