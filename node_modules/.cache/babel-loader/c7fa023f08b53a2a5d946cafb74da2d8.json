{"ast":null,"code":"import _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useLayoutEffect } from 'react';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\nimport { getBaseProps } from '../../base-component';\nimport { fireCancelableEvent, fireNonCancelableEvent } from '../../events';\nimport { useFormFieldContext } from '../../context/form-field-context';\nimport InternalInput from '../../../input/internal';\nimport useMask from './use-mask';\nimport MaskFormat from './utils/mask-format';\nvar MaskedInput = React.forwardRef(function (_a, ref) {\n  var value = _a.value,\n    _onBlur = _a.onBlur,\n    _onChange = _a.onChange,\n    _onKeyDown = _a.onKeyDown,\n    mask = _a.mask,\n    _a$autofix = _a.autofix,\n    autofix = _a$autofix === void 0 ? false : _a$autofix,\n    _a$disableAutocomplet = _a.disableAutocompleteOnBlur,\n    disableAutocompleteOnBlur = _a$disableAutocomplet === void 0 ? false : _a$disableAutocomplet,\n    rest = __rest(_a, [\"value\", \"onBlur\", \"onChange\", \"onKeyDown\", \"mask\", \"autofix\", \"disableAutocompleteOnBlur\"]);\n  var baseProps = getBaseProps(rest);\n  var formFieldContext = useFormFieldContext(rest);\n  var inputRef = React.useRef(null);\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    cursorPosition = _useState2[0],\n    setCursorPosition = _useState2[1];\n  useLayoutEffect(function () {\n    var _a;\n    if (cursorPosition !== null) {\n      (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.setSelectionRange(cursorPosition, cursorPosition);\n    }\n  }, [cursorPosition, inputRef]);\n  var _b = useMask({\n      format: new MaskFormat(mask),\n      value: value,\n      inputRef: inputRef,\n      autofix: autofix,\n      disableAutocompleteOnBlur: disableAutocompleteOnBlur,\n      onChange: function onChange(value) {\n        return !rest.readOnly && fireNonCancelableEvent(_onChange, {\n          value: value\n        });\n      },\n      onKeyDown: function onKeyDown(event) {\n        return !rest.readOnly && _onKeyDown && fireCancelableEvent(_onKeyDown, event.detail, event);\n      },\n      onBlur: function onBlur() {\n        return fireNonCancelableEvent(_onBlur);\n      },\n      setPosition: setCursorPosition\n    }),\n    onPaste = _b.onPaste,\n    maskProps = __rest(_b, [\"onPaste\"]);\n  var inputProps = Object.assign(Object.assign(Object.assign(Object.assign({}, rest), baseProps), formFieldContext), maskProps);\n  var mergedRef = useMergeRefs(ref, inputRef);\n  return React.createElement(InternalInput, Object.assign({}, inputProps, {\n    ref: mergedRef,\n    __nativeAttributes: {\n      onPaste: onPaste\n    }\n  }));\n});\nexport { useMask };\nexport default MaskedInput;","map":{"version":3,"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAASC,QAAQ,EAAEC,eAAe,QAAQ,OAAO;AAC7D,SAASC,YAAY,QAAQ,4BAA4B;AAEzD,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,mBAAmB,EAAEC,sBAAsB,QAAQ,cAAc;AAE1E,SAASC,mBAAmB,QAAQ,kCAAkC;AAEtE,OAAOC,aAAa,MAAM,yBAAyB;AAEnD,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,UAAU,MAAM,qBAAqB;AAI5C,IAAMC,WAAW,GAAGX,KAAK,CAACY,UAAU,CAClC,UACEC,EASmB,EACnBC,GAA8B,EAC5B;MAVAC,KAAK,GAM4BF,EAEhB,CARjBE,KAAK;IACLC,OAAM,GAK2BH,EAEhB,CAPjBG,MAAM;IACNC,SAAQ,GAIyBJ,EAEhB,CANjBI,QAAQ;IACRC,UAAS,GAGwBL,EAEhB,CALjBK,SAAS;IACTC,IAAI,GAE6BN,EAEhB,CAJjBM,IAAI;IAAA,aAE6BN,EAEhB,CAHjBO,OAAO;IAAPA,OAAO,2BAAG,KAAK;IAAA,wBACkBP,EAEhB,CAFjBQ,yBAAyB;IAAzBA,yBAAyB,sCAAG,KAAK;IAC9BC,IAAI,cART,4FASC,CADQ;EAIT,IAAMC,SAAS,GAAGnB,YAAY,CAACkB,IAAI,CAAC;EACpC,IAAME,gBAAgB,GAAGjB,mBAAmB,CAACe,IAAI,CAAC;EAClD,IAAMG,QAAQ,GAAGzB,KAAK,CAAC0B,MAAM,CAAmB,IAAI,CAAC;EACrD,gBAA4CzB,QAAQ,CAAgB,IAAI,CAAC;IAAA;IAAlE0B,cAAc;IAAEC,iBAAiB;EAExC1B,eAAe,CAAC,YAAK;;IACnB,IAAIyB,cAAc,KAAK,IAAI,EAAE;MAC3B,cAAQ,CAACE,OAAO,0CAAEC,iBAAiB,CAACH,cAAc,EAAEA,cAAc,CAAC;;EAEvE,CAAC,EAAE,CAACA,cAAc,EAAEF,QAAQ,CAAC,CAAC;EAExB,SAA4BhB,OAAO,CAAC;MACxCsB,MAAM,EAAE,IAAIrB,UAAU,CAACS,IAAI,CAAC;MAC5BJ,KAAK,EAALA,KAAK;MACLU,QAAQ,EAARA,QAAQ;MACRL,OAAO,EAAPA,OAAO;MACPC,yBAAyB,EAAzBA,yBAAyB;MACzBJ,QAAQ,EAAE,kBAACF,KAAa;QAAA,OAAK,CAACO,IAAI,CAACU,QAAQ,IAAI1B,sBAAsB,CAACW,SAAQ,EAAE;UAAEF,KAAK,EAALA;QAAK,CAAE,CAAC;MAAA;MAC1FG,SAAS,EAAE,mBAACe,KAAkB;QAAA,OAC5B,CAACX,IAAI,CAACU,QAAQ,IAAId,UAAS,IAAIb,mBAAmB,CAACa,UAAS,EAAEe,KAAK,CAACC,MAAM,EAAED,KAAK,CAAC;MAAA;MACpFjB,MAAM,EAAE;QAAA,OAAMV,sBAAsB,CAACU,OAAM,CAAC;MAAA;MAC5CmB,WAAW,EAAEP;KACd,CAAC;IAXMQ,OAAO,KAWb,CAXMA,OAAO;IAAKC,SAAS,cAAvB,WAAyB,CAW7B;EAEF,IAAMC,UAAU,+DAAQhB,IAAI,GAAKC,SAAS,GAAKC,gBAAgB,GAAKa,SAAS,CAAE;EAC/E,IAAME,SAAS,GAAGpC,YAAY,CAACW,GAAG,EAAEW,QAAQ,CAAC;EAC7C,OACEzB,oBAACQ,aAAa,oBACR8B,UAAU;IACdxB,GAAG,EAAEyB,SAAS;IACdC,kBAAkB,EAAE;MAClBJ,OAAO,EAAPA;;EACD,GACD;AAEN,CAAC,CACF;AAED,SAA2B3B,OAAO;AAClC,eAAeE,WAAW","names":["React","useState","useLayoutEffect","useMergeRefs","getBaseProps","fireCancelableEvent","fireNonCancelableEvent","useFormFieldContext","InternalInput","useMask","MaskFormat","MaskedInput","forwardRef","_a","ref","value","onBlur","onChange","onKeyDown","mask","autofix","disableAutocompleteOnBlur","rest","baseProps","formFieldContext","inputRef","useRef","cursorPosition","setCursorPosition","current","setSelectionRange","format","readOnly","event","detail","setPosition","onPaste","maskProps","inputProps","mergedRef","__nativeAttributes"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/components/masked-input/lib/default/internal/components/masked-input/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { Ref, useState, useLayoutEffect } from 'react';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\n\nimport { getBaseProps } from '../../base-component';\nimport { fireCancelableEvent, fireNonCancelableEvent } from '../../events';\n\nimport { useFormFieldContext } from '../../context/form-field-context';\n\nimport InternalInput from '../../../input/internal';\n\nimport useMask from './use-mask';\nimport MaskFormat from './utils/mask-format';\n\nimport { MaskedInputProps } from './interfaces';\n\nconst MaskedInput = React.forwardRef(\n  (\n    {\n      value,\n      onBlur,\n      onChange,\n      onKeyDown,\n      mask,\n      autofix = false,\n      disableAutocompleteOnBlur = false,\n      ...rest\n    }: MaskedInputProps,\n    ref: Ref<MaskedInputProps.Ref>\n  ) => {\n    const baseProps = getBaseProps(rest);\n    const formFieldContext = useFormFieldContext(rest);\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const [cursorPosition, setCursorPosition] = useState<number | null>(null);\n\n    useLayoutEffect(() => {\n      if (cursorPosition !== null) {\n        inputRef.current?.setSelectionRange(cursorPosition, cursorPosition);\n      }\n    }, [cursorPosition, inputRef]);\n\n    const { onPaste, ...maskProps } = useMask({\n      format: new MaskFormat(mask),\n      value,\n      inputRef,\n      autofix,\n      disableAutocompleteOnBlur,\n      onChange: (value: string) => !rest.readOnly && fireNonCancelableEvent(onChange, { value }),\n      onKeyDown: (event: CustomEvent) =>\n        !rest.readOnly && onKeyDown && fireCancelableEvent(onKeyDown, event.detail, event),\n      onBlur: () => fireNonCancelableEvent(onBlur),\n      setPosition: setCursorPosition,\n    });\n\n    const inputProps = { ...rest, ...baseProps, ...formFieldContext, ...maskProps };\n    const mergedRef = useMergeRefs(ref, inputRef);\n    return (\n      <InternalInput\n        {...inputProps}\n        ref={mergedRef}\n        __nativeAttributes={{\n          onPaste,\n        }}\n      />\n    );\n  }\n);\n\nexport { MaskedInputProps, useMask };\nexport default MaskedInput;\n"]},"metadata":{},"sourceType":"module"}