{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../../button/internal';\nimport InternalLink from '../../link/internal';\nimport InternalIcon from '../../icon/internal';\nimport MenuDropdown from '../../internal/components/menu-dropdown';\nimport styles from '../styles.css.js';\nimport { checkSafeUrl } from '../../internal/utils/check-safe-url';\nimport { joinStrings } from '../../internal/utils/strings';\nimport { fireCancelableEvent } from '../../internal/events';\nexport default function Utility(_ref) {\n  var hideText = _ref.hideText,\n    definition = _ref.definition,\n    offsetRight = _ref.offsetRight;\n  var _a;\n  var hasIcon = !!definition.iconName || !!definition.iconUrl || !!definition.iconAlt || !!definition.iconSvg;\n  var shouldHideText = hideText && !definition.disableTextCollapse && hasIcon;\n  var ariaLabel = (_a = definition.ariaLabel) !== null && _a !== void 0 ? _a : definition.text;\n  if (definition.type === 'button') {\n    ariaLabel = definition.ariaLabel ? definition.ariaLabel : joinStrings(definition.text, definition.externalIconAriaLabel);\n    checkSafeUrl('TopNavigation', definition.href);\n    if (definition.variant === 'primary-button') {\n      return React.createElement(\"span\", {\n        className: styles[\"offset-right-\".concat(offsetRight)]\n      }, React.createElement(InternalButton, {\n        variant: \"primary\",\n        href: definition.href,\n        target: definition.external ? '_blank' : undefined,\n        onClick: definition.onClick,\n        onFollow: definition.onFollow,\n        ariaLabel: ariaLabel,\n        iconName: definition.iconName,\n        iconUrl: definition.iconUrl,\n        iconAlt: definition.iconAlt,\n        iconSvg: definition.iconSvg\n      }, shouldHideText ? null : React.createElement(React.Fragment, null, definition.text, definition.external && React.createElement(React.Fragment, null, ' ', React.createElement(\"span\", {\n        className: clsx(styles['utility-button-external-icon'], styles[\"offset-right-\".concat(offsetRight)]),\n        \"aria-label\": definition.externalIconAriaLabel,\n        role: definition.externalIconAriaLabel ? 'img' : undefined\n      }, React.createElement(InternalIcon, {\n        name: \"external\"\n      }))))));\n    } else {\n      // Link\n      return React.createElement(\"span\", {\n        className: styles[\"offset-right-\".concat(offsetRight)]\n      }, React.createElement(InternalLink, {\n        variant: \"top-navigation\",\n        href: definition.href,\n        target: definition.target,\n        rel: definition.rel,\n        external: definition.external,\n        onFollow: function onFollow(evt) {\n          fireCancelableEvent(definition.onFollow, {\n            href: definition.href,\n            target: definition.target,\n            external: definition.external\n          }, evt);\n          fireCancelableEvent(definition.onClick, {\n            href: definition.href,\n            target: definition.target,\n            external: definition.external\n          }, evt);\n        },\n        ariaLabel: ariaLabel\n      }, hasIcon && React.createElement(InternalIcon, {\n        name: definition.iconName,\n        url: definition.iconUrl,\n        alt: definition.iconAlt,\n        svg: definition.iconSvg,\n        badge: definition.badge\n      }), !shouldHideText && definition.text && React.createElement(\"span\", {\n        className: hasIcon ? styles['utility-link-icon'] : undefined\n      }, definition.text)));\n    }\n  } else if (definition.type === 'menu-dropdown') {\n    var title = definition.title || definition.text;\n    var shouldShowTitle = shouldHideText || !definition.text;\n    checkSafeUrlRecursively(definition.items);\n    return React.createElement(MenuDropdown, Object.assign({}, definition, {\n      title: shouldShowTitle ? title : '',\n      ariaLabel: ariaLabel,\n      offsetRight: offsetRight\n    }), !shouldHideText && definition.text);\n  }\n  return null;\n}\nfunction checkSafeUrlRecursively(itemOrGroup) {\n  var _iterator = _createForOfIteratorHelper(itemOrGroup),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      checkSafeUrl('TopNavigation', item.href);\n      if ('items' in item) {\n        checkSafeUrlRecursively(item.items);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}","map":{"version":3,"mappings":"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","names":["React","clsx","InternalButton","InternalLink","InternalIcon","MenuDropdown","styles","checkSafeUrl","joinStrings","fireCancelableEvent","Utility","hideText","definition","offsetRight","hasIcon","iconName","iconUrl","iconAlt","iconSvg","shouldHideText","disableTextCollapse","ariaLabel","text","type","externalIconAriaLabel","href","variant","className","target","external","undefined","onClick","onFollow","role","name","rel","evt","url","alt","svg","badge","title","shouldShowTitle","checkSafeUrlRecursively","items","itemOrGroup","item"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/top-navigation/parts/lib/default/top-navigation/parts/utility.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { InternalButton } from '../../button/internal';\nimport InternalLink from '../../link/internal';\nimport InternalIcon from '../../icon/internal';\nimport MenuDropdown, { MenuDropdownProps } from '../../internal/components/menu-dropdown';\n\nimport { TopNavigationProps } from '../interfaces';\n\nimport styles from '../styles.css.js';\nimport { checkSafeUrl } from '../../internal/utils/check-safe-url';\nimport { joinStrings } from '../../internal/utils/strings';\nimport { fireCancelableEvent } from '../../internal/events';\n\nexport interface UtilityProps {\n  hideText: boolean;\n  definition: TopNavigationProps.Utility;\n  offsetRight?: MenuDropdownProps['offsetRight'];\n}\n\nexport default function Utility({ hideText, definition, offsetRight }: UtilityProps) {\n  const hasIcon = !!definition.iconName || !!definition.iconUrl || !!definition.iconAlt || !!definition.iconSvg;\n  const shouldHideText = hideText && !definition.disableTextCollapse && hasIcon;\n  let ariaLabel = definition.ariaLabel ?? definition.text;\n\n  if (definition.type === 'button') {\n    ariaLabel = definition.ariaLabel\n      ? definition.ariaLabel\n      : joinStrings(definition.text, definition.externalIconAriaLabel);\n    checkSafeUrl('TopNavigation', definition.href);\n    if (definition.variant === 'primary-button') {\n      return (\n        <span className={styles[`offset-right-${offsetRight}`]}>\n          <InternalButton\n            variant=\"primary\"\n            href={definition.href}\n            target={definition.external ? '_blank' : undefined}\n            onClick={definition.onClick}\n            onFollow={definition.onFollow}\n            ariaLabel={ariaLabel}\n            iconName={definition.iconName}\n            iconUrl={definition.iconUrl}\n            iconAlt={definition.iconAlt}\n            iconSvg={definition.iconSvg}\n          >\n            {shouldHideText ? null : (\n              <>\n                {definition.text}\n                {definition.external && (\n                  <>\n                    {' '}\n                    <span\n                      className={clsx(styles['utility-button-external-icon'], styles[`offset-right-${offsetRight}`])}\n                      aria-label={definition.externalIconAriaLabel}\n                      role={definition.externalIconAriaLabel ? 'img' : undefined}\n                    >\n                      <InternalIcon name=\"external\" />\n                    </span>\n                  </>\n                )}\n              </>\n            )}\n          </InternalButton>\n        </span>\n      );\n    } else {\n      // Link\n      return (\n        <span className={styles[`offset-right-${offsetRight}`]}>\n          <InternalLink\n            variant=\"top-navigation\"\n            href={definition.href}\n            target={definition.target}\n            rel={definition.rel}\n            external={definition.external}\n            onFollow={evt => {\n              fireCancelableEvent(\n                definition.onFollow,\n                { href: definition.href, target: definition.target, external: definition.external },\n                evt\n              );\n              fireCancelableEvent(\n                definition.onClick,\n                { href: definition.href, target: definition.target, external: definition.external },\n                evt\n              );\n            }}\n            ariaLabel={ariaLabel}\n          >\n            {hasIcon && (\n              <InternalIcon\n                name={definition.iconName}\n                url={definition.iconUrl}\n                alt={definition.iconAlt}\n                svg={definition.iconSvg}\n                badge={definition.badge}\n              />\n            )}\n            {!shouldHideText && definition.text && (\n              <span className={hasIcon ? styles['utility-link-icon'] : undefined}>{definition.text}</span>\n            )}\n          </InternalLink>\n        </span>\n      );\n    }\n  } else if (definition.type === 'menu-dropdown') {\n    const title = definition.title || definition.text;\n    const shouldShowTitle = shouldHideText || !definition.text;\n\n    checkSafeUrlRecursively(definition.items);\n\n    return (\n      <MenuDropdown\n        {...definition}\n        title={shouldShowTitle ? title : ''}\n        ariaLabel={ariaLabel}\n        offsetRight={offsetRight}\n      >\n        {!shouldHideText && definition.text}\n      </MenuDropdown>\n    );\n  }\n\n  return null;\n}\n\nfunction checkSafeUrlRecursively(itemOrGroup: MenuDropdownProps['items']) {\n  for (const item of itemOrGroup) {\n    checkSafeUrl('TopNavigation', item.href);\n\n    if ('items' in item) {\n      checkSafeUrlRecursively(item.items);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}