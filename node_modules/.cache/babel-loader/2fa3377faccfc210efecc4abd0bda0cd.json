{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport testUtilsStyles from './test-classes/styles.css.js';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport useScrollSpy from './use-scroll-spy.js';\nimport { fireCancelableEvent, fireNonCancelableEvent, isPlainLeftClick } from '../internal/events/index';\nimport { getBaseProps } from '../internal/base-component/index.js';\nexport default function InternalAnchorNavigation(_a) {\n  var anchors = _a.anchors,\n    ariaLabelledby = _a.ariaLabelledby,\n    onFollow = _a.onFollow,\n    onActiveHrefChange = _a.onActiveHrefChange,\n    _a$activeHref = _a.activeHref,\n    activeHref = _a$activeHref === void 0 ? '' : _a$activeHref,\n    _a$__internalRootRef = _a.__internalRootRef,\n    __internalRootRef = _a$__internalRootRef === void 0 ? null : _a$__internalRootRef,\n    _a$scrollSpyOffset = _a.scrollSpyOffset,\n    scrollSpyOffset = _a$scrollSpyOffset === void 0 ? 0 : _a$scrollSpyOffset,\n    props = __rest(_a, [\"anchors\", \"ariaLabelledby\", \"onFollow\", \"onActiveHrefChange\", \"activeHref\", \"__internalRootRef\", \"scrollSpyOffset\"]);\n  var baseProps = getBaseProps(props);\n  var hrefs = useMemo(function () {\n    return anchors.map(function (anchor) {\n      return anchor.href;\n    });\n  }, [anchors]);\n  var onFollowHandler = useCallback(function (anchor, sourceEvent) {\n    fireCancelableEvent(onFollow, anchor, sourceEvent);\n  }, [onFollow]);\n  var currentActiveHref = useScrollSpy({\n    hrefs: hrefs,\n    scrollSpyOffset: scrollSpyOffset,\n    activeHref: activeHref\n  });\n  useEffect(function () {\n    if (currentActiveHref) {\n      var newActiveAnchor = anchors.find(function (anchor) {\n        return anchor.href === currentActiveHref;\n      });\n      fireNonCancelableEvent(onActiveHrefChange, newActiveAnchor);\n    }\n  }, [onActiveHrefChange, anchors, currentActiveHref]);\n  return React.createElement(\"nav\", Object.assign({}, baseProps, {\n    ref: __internalRootRef,\n    \"aria-labelledby\": ariaLabelledby,\n    className: clsx(baseProps.className, styles.root, testUtilsStyles.root)\n  }), React.createElement(\"ol\", {\n    className: clsx(styles['anchor-list'], testUtilsStyles['anchor-list'])\n  }, anchors.map(function (anchor, index) {\n    return React.createElement(Anchor, {\n      onFollow: onFollowHandler,\n      isActive: anchor.href === currentActiveHref,\n      key: index,\n      index: index,\n      anchor: anchor\n    });\n  })));\n}\nvar Anchor = function Anchor(_ref) {\n  var anchor = _ref.anchor,\n    onFollow = _ref.onFollow,\n    isActive = _ref.isActive,\n    index = _ref.index;\n  checkSafeUrl('SideNavigation', anchor.href);\n  var onClick = useCallback(function (event) {\n    if (isPlainLeftClick(event)) {\n      onFollow(anchor, event);\n    }\n  }, [onFollow, anchor]);\n  var activeItemClasses = clsx(styles['anchor-item--active'], testUtilsStyles['anchor-item--active']);\n  return React.createElement(\"li\", {\n    \"data-itemid\": \"anchor-item-\".concat(index + 1),\n    className: clsx(styles['anchor-item'], isActive && activeItemClasses)\n  }, React.createElement(\"a\", Object.assign({\n    onClick: onClick,\n    className: clsx(styles['anchor-link'], testUtilsStyles['anchor-link'], isActive && styles['anchor-link--active'])\n  }, isActive ? {\n    'aria-current': true\n  } : {}, {\n    href: anchor.href\n  }), React.createElement(\"span\", {\n    className: clsx(styles['anchor-link-text'], testUtilsStyles['anchor-link-text']),\n    style: {\n      paddingLeft: \"\".concat(anchor.level * 16 + 2, \"px\")\n    }\n  }, anchor.text), anchor.info && React.createElement(\"span\", {\n    className: clsx(styles['anchor-link-info'], testUtilsStyles['anchor-link-info'])\n  }, anchor.info)));\n};","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC9D,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,eAAe,MAAM,8BAA8B;AAE1D,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,SAASC,mBAAmB,EAAEC,sBAAsB,EAAEC,gBAAgB,QAAQ,0BAA0B;AAExG,SAASC,YAAY,QAAQ,qCAAqC;AAElE,eAAc,SAAUC,wBAAwB,CAACC,EASI;MARnDC,OAAO,GAMYD,EAEgC,CARnDC,OAAO;IACPC,cAAc,GAKKF,EAEgC,CAPnDE,cAAc;IACdC,QAAQ,GAIWH,EAEgC,CANnDG,QAAQ;IACRC,kBAAkB,GAGCJ,EAEgC,CALnDI,kBAAkB;IAAA,gBAGCJ,EAEgC,CAJnDK,UAAU;IAAVA,UAAU,8BAAG,EAAE;IAAA,uBAEIL,EAEgC,CAHnDM,iBAAiB;IAAjBA,iBAAiB,qCAAG,IAAI;IAAA,qBACLN,EAEgC,CAFnDO,eAAe;IAAfA,eAAe,mCAAG,CAAC;IAChBC,KAAK,cARuC,qHAShD,CADS;EAER,IAAMC,SAAS,GAAGX,YAAY,CAACU,KAAK,CAAC;EAErC,IAAME,KAAK,GAAGrB,OAAO,CAAC;IAAA,OAAMY,OAAO,CAACU,GAAG,CAAC,gBAAM;MAAA,OAAIC,MAAM,CAACC,IAAI;IAAA,EAAC;EAAA,GAAE,CAACZ,OAAO,CAAC,CAAC;EAE1E,IAAMa,eAAe,GAAG3B,WAAW,CACjC,UAACyB,MAAoC,EAAEG,WAAyC,EAAI;IAClFpB,mBAAmB,CAACQ,QAAQ,EAAES,MAAM,EAAEG,WAAW,CAAC;EACpD,CAAC,EACD,CAACZ,QAAQ,CAAC,CACX;EAED,IAAMa,iBAAiB,GAAGtB,YAAY,CAAC;IACrCgB,KAAK,EAALA,KAAK;IACLH,eAAe,EAAfA,eAAe;IACfF,UAAU,EAAVA;GACD,CAAC;EAEFjB,SAAS,CAAC,YAAK;IACb,IAAI4B,iBAAiB,EAAE;MACrB,IAAMC,eAAe,GAAGhB,OAAO,CAACiB,IAAI,CAAC,gBAAM;QAAA,OAAIN,MAAM,CAACC,IAAI,KAAKG,iBAAiB;MAAA,EAAC;MACjFpB,sBAAsB,CAACQ,kBAAkB,EAAEa,eAAe,CAAC;;EAE/D,CAAC,EAAE,CAACb,kBAAkB,EAAEH,OAAO,EAAEe,iBAAiB,CAAC,CAAC;EAEpD,OACE9B,6CACMuB,SAAS;IACbU,GAAG,EAAEb,iBAAiB;IAAA,mBACLJ,cAAc;IAC/BkB,SAAS,EAAE9B,IAAI,CAACmB,SAAS,CAACW,SAAS,EAAE7B,MAAM,CAAC8B,IAAI,EAAE7B,eAAe,CAAC6B,IAAI;EAAC,IAEvEnC;IAAIkC,SAAS,EAAE9B,IAAI,CAACC,MAAM,CAAC,aAAa,CAAC,EAAEC,eAAe,CAAC,aAAa,CAAC;EAAC,GACvES,OAAO,CAACU,GAAG,CAAC,UAACC,MAAM,EAAEU,KAAK,EAAI;IAC7B,OACEpC,oBAACqC,MAAM;MACLpB,QAAQ,EAAEW,eAAe;MACzBU,QAAQ,EAAEZ,MAAM,CAACC,IAAI,KAAKG,iBAAiB;MAC3CS,GAAG,EAAEH,KAAK;MACVA,KAAK,EAAEA,KAAK;MACZV,MAAM,EAAEA;IAAM,EACd;EAEN,CAAC,CAAC,CACC,CACD;AAEV;AASA,IAAMW,MAAM,GAAG,SAATA,MAAM,OAA0D;EAAA,IAApDX,MAAM,QAANA,MAAM;IAAET,QAAQ,QAARA,QAAQ;IAAEqB,QAAQ,QAARA,QAAQ;IAAEF,KAAK,QAALA,KAAK;EACjD7B,YAAY,CAAC,gBAAgB,EAAEmB,MAAM,CAACC,IAAI,CAAC;EAE3C,IAAMa,OAAO,GAAGvC,WAAW,CACzB,UAACwC,KAAuB,EAAI;IAC1B,IAAI9B,gBAAgB,CAAC8B,KAAK,CAAC,EAAE;MAC3BxB,QAAQ,CAACS,MAAM,EAAEe,KAAK,CAAC;;EAE3B,CAAC,EACD,CAACxB,QAAQ,EAAES,MAAM,CAAC,CACnB;EAED,IAAMgB,iBAAiB,GAAGtC,IAAI,CAACC,MAAM,CAAC,qBAAqB,CAAC,EAAEC,eAAe,CAAC,qBAAqB,CAAC,CAAC;EAErG,OACEN;IAAA,qCAAgCoC,KAAK,GAAG,CAAC,CAAE;IAAEF,SAAS,EAAE9B,IAAI,CAACC,MAAM,CAAC,aAAa,CAAC,EAAEiC,QAAQ,IAAII,iBAAiB;EAAC,GAChH1C;IACEwC,OAAO,EAAEA,OAAO;IAChBN,SAAS,EAAE9B,IAAI,CACbC,MAAM,CAAC,aAAa,CAAC,EACrBC,eAAe,CAAC,aAAa,CAAC,EAC9BgC,QAAQ,IAAIjC,MAAM,CAAC,qBAAqB,CAAC;EAC1C,GACIiC,QAAQ,GAAG;IAAE,cAAc,EAAE;EAAI,CAAE,GAAG,EAAE,EAAC;IAC9CX,IAAI,EAAED,MAAM,CAACC;EAAI,IAEjB3B;IACEkC,SAAS,EAAE9B,IAAI,CAACC,MAAM,CAAC,kBAAkB,CAAC,EAAEC,eAAe,CAAC,kBAAkB,CAAC,CAAC;IAChFqC,KAAK,EAAE;MAAEC,WAAW,YAAKlB,MAAM,CAACmB,KAAK,GAAG,EAAE,GAAG,CAAC;IAAI;EAAE,GAEnDnB,MAAM,CAACoB,IAAI,CACP,EACNpB,MAAM,CAACqB,IAAI,IACV/C;IAAMkC,SAAS,EAAE9B,IAAI,CAACC,MAAM,CAAC,kBAAkB,CAAC,EAAEC,eAAe,CAAC,kBAAkB,CAAC;EAAC,GAAGoB,MAAM,CAACqB,IAAI,CACrG,CACC,CACD;AAET,CAAC","names":["React","useCallback","useEffect","useMemo","clsx","styles","testUtilsStyles","checkSafeUrl","useScrollSpy","fireCancelableEvent","fireNonCancelableEvent","isPlainLeftClick","getBaseProps","InternalAnchorNavigation","_a","anchors","ariaLabelledby","onFollow","onActiveHrefChange","activeHref","__internalRootRef","scrollSpyOffset","props","baseProps","hrefs","map","anchor","href","onFollowHandler","sourceEvent","currentActiveHref","newActiveAnchor","find","ref","className","root","index","Anchor","isActive","key","onClick","event","activeItemClasses","style","paddingLeft","level","text","info"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/anchor-navigation/lib/default/anchor-navigation/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport testUtilsStyles from './test-classes/styles.css.js';\nimport { AnchorNavigationProps } from './interfaces';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport useScrollSpy from './use-scroll-spy.js';\nimport { fireCancelableEvent, fireNonCancelableEvent, isPlainLeftClick } from '../internal/events/index';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component/index.js';\nimport { getBaseProps } from '../internal/base-component/index.js';\n\nexport default function InternalAnchorNavigation({\n  anchors,\n  ariaLabelledby,\n  onFollow,\n  onActiveHrefChange,\n  activeHref = '',\n  __internalRootRef = null,\n  scrollSpyOffset = 0,\n  ...props\n}: AnchorNavigationProps & InternalBaseComponentProps) {\n  const baseProps = getBaseProps(props);\n\n  const hrefs = useMemo(() => anchors.map(anchor => anchor.href), [anchors]);\n\n  const onFollowHandler = useCallback(\n    (anchor: AnchorNavigationProps.Anchor, sourceEvent: React.SyntheticEvent | Event) => {\n      fireCancelableEvent(onFollow, anchor, sourceEvent);\n    },\n    [onFollow]\n  );\n\n  const currentActiveHref = useScrollSpy({\n    hrefs,\n    scrollSpyOffset,\n    activeHref,\n  });\n\n  useEffect(() => {\n    if (currentActiveHref) {\n      const newActiveAnchor = anchors.find(anchor => anchor.href === currentActiveHref);\n      fireNonCancelableEvent(onActiveHrefChange, newActiveAnchor);\n    }\n  }, [onActiveHrefChange, anchors, currentActiveHref]);\n\n  return (\n    <nav\n      {...baseProps}\n      ref={__internalRootRef}\n      aria-labelledby={ariaLabelledby}\n      className={clsx(baseProps.className, styles.root, testUtilsStyles.root)}\n    >\n      <ol className={clsx(styles['anchor-list'], testUtilsStyles['anchor-list'])}>\n        {anchors.map((anchor, index) => {\n          return (\n            <Anchor\n              onFollow={onFollowHandler}\n              isActive={anchor.href === currentActiveHref}\n              key={index}\n              index={index}\n              anchor={anchor}\n            />\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}\n\ninterface AnchorProps {\n  anchor: AnchorNavigationProps.Anchor;\n  onFollow: (anchor: AnchorNavigationProps.Anchor, event: React.SyntheticEvent | Event) => void;\n  isActive: boolean;\n  index: number;\n}\n\nconst Anchor = ({ anchor, onFollow, isActive, index }: AnchorProps) => {\n  checkSafeUrl('SideNavigation', anchor.href);\n\n  const onClick = useCallback(\n    (event: React.MouseEvent) => {\n      if (isPlainLeftClick(event)) {\n        onFollow(anchor, event);\n      }\n    },\n    [onFollow, anchor]\n  );\n\n  const activeItemClasses = clsx(styles['anchor-item--active'], testUtilsStyles['anchor-item--active']);\n\n  return (\n    <li data-itemid={`anchor-item-${index + 1}`} className={clsx(styles['anchor-item'], isActive && activeItemClasses)}>\n      <a\n        onClick={onClick}\n        className={clsx(\n          styles['anchor-link'],\n          testUtilsStyles['anchor-link'],\n          isActive && styles['anchor-link--active']\n        )}\n        {...(isActive ? { 'aria-current': true } : {})}\n        href={anchor.href}\n      >\n        <span\n          className={clsx(styles['anchor-link-text'], testUtilsStyles['anchor-link-text'])}\n          style={{ paddingLeft: `${anchor.level * 16 + 2}px` }}\n        >\n          {anchor.text}\n        </span>\n        {anchor.info && (\n          <span className={clsx(styles['anchor-link-info'], testUtilsStyles['anchor-link-info'])}>{anchor.info}</span>\n        )}\n      </a>\n    </li>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}