{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport Icon from '../../icon/internal';\nimport styles from './styles.css.js';\nfunction TriggerButton(_ref, ref) {\n  var _clsx;\n  var ariaLabel = _ref.ariaLabel,\n    className = _ref.className,\n    iconName = _ref.iconName,\n    iconSvg = _ref.iconSvg,\n    ariaExpanded = _ref.ariaExpanded,\n    ariaControls = _ref.ariaControls,\n    onClick = _ref.onClick,\n    testId = _ref.testId,\n    badge = _ref.badge,\n    _ref$selected = _ref.selected,\n    selected = _ref$selected === void 0 ? false : _ref$selected;\n  return React.createElement(\"div\", {\n    className: clsx(styles['trigger-wrapper'])\n  }, React.createElement(\"button\", {\n    \"aria-expanded\": ariaExpanded,\n    \"aria-controls\": ariaControls,\n    \"aria-haspopup\": true,\n    \"aria-label\": ariaLabel,\n    className: clsx(styles.trigger, (_clsx = {}, _defineProperty(_clsx, styles.selected, selected), _defineProperty(_clsx, styles.badge, badge), _clsx), className),\n    onClick: onClick,\n    ref: ref,\n    type: \"button\",\n    \"data-testid\": testId\n  }, React.createElement(\"span\", {\n    className: clsx(badge && styles['trigger-badge-wrapper'])\n  }, React.createElement(Icon, {\n    name: iconName,\n    svg: iconSvg\n  }))), badge && React.createElement(\"div\", {\n    className: clsx(styles.dot)\n  }));\n}\nexport default React.forwardRef(TriggerButton);","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,IAAI,MAAM,qBAAqB;AACtC,OAAOC,MAAM,MAAM,iBAAiB;AAiBpC,SAASC,aAAa,OAapBC,GAA+B;EAAA;EAAA,IAX7BC,SAAS,QAATA,SAAS;IACTC,SAAS,QAATA,SAAS;IACTC,QAAQ,QAARA,QAAQ;IACRC,OAAO,QAAPA,OAAO;IACPC,YAAY,QAAZA,YAAY;IACZC,YAAY,QAAZA,YAAY;IACZC,OAAO,QAAPA,OAAO;IACPC,MAAM,QAANA,MAAM;IACNC,KAAK,QAALA,KAAK;IAAA,qBACLC,QAAQ;IAARA,QAAQ,8BAAG,KAAK;EAIlB,OACEf;IAAKO,SAAS,EAAEN,IAAI,CAACE,MAAM,CAAC,iBAAiB,CAAC;EAAC,GAC7CH;IAAA,iBACiBU,YAAY;IAAA,iBACZC,YAAY;IAAA,iBACZ,IAAI;IAAA,cACPL,SAAS;IACrBC,SAAS,EAAEN,IAAI,CACbE,MAAM,CAACa,OAAO,sCAEXb,MAAM,CAACY,QAAQ,EAAGA,QAAQ,0BAC1BZ,MAAM,CAACW,KAAK,EAAGA,KAAK,WAEvBP,SAAS,CACV;IACDK,OAAO,EAAEA,OAAO;IAChBP,GAAG,EAAEA,GAAmC;IACxCY,IAAI,EAAC,QAAQ;IAAA,eACAJ;EAAM,GAEnBb;IAAMO,SAAS,EAAEN,IAAI,CAACa,KAAK,IAAIX,MAAM,CAAC,uBAAuB,CAAC;EAAC,GAC7DH,oBAACE,IAAI;IAACgB,IAAI,EAAEV,QAAQ;IAAEW,GAAG,EAAEV;EAAO,EAAI,CACjC,CACA,EACRK,KAAK,IAAId;IAAKO,SAAS,EAAEN,IAAI,CAACE,MAAM,CAACiB,GAAG;EAAC,EAAI,CAC1C;AAEV;AAEA,eAAepB,KAAK,CAACqB,UAAU,CAACjB,aAAa,CAAC","names":["React","clsx","Icon","styles","TriggerButton","ref","ariaLabel","className","iconName","iconSvg","ariaExpanded","ariaControls","onClick","testId","badge","selected","trigger","type","name","svg","dot","forwardRef"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/app-layout/visual-refresh/lib/default/app-layout/visual-refresh/trigger-button.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport Icon from '../../icon/internal';\nimport styles from './styles.css.js';\nimport { ButtonProps } from '../../button/interfaces';\nimport { IconProps } from '../../icon/interfaces';\n\nexport interface TriggerButtonProps {\n  ariaLabel?: string;\n  className?: string;\n  iconName?: IconProps.Name;\n  iconSvg?: React.ReactNode;\n  ariaExpanded: boolean | undefined;\n  ariaControls?: string;\n  testId?: string;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  selected?: boolean;\n  badge?: boolean;\n}\n\nfunction TriggerButton(\n  {\n    ariaLabel,\n    className,\n    iconName,\n    iconSvg,\n    ariaExpanded,\n    ariaControls,\n    onClick,\n    testId,\n    badge,\n    selected = false,\n  }: TriggerButtonProps,\n  ref: React.Ref<ButtonProps.Ref>\n) {\n  return (\n    <div className={clsx(styles['trigger-wrapper'])}>\n      <button\n        aria-expanded={ariaExpanded}\n        aria-controls={ariaControls}\n        aria-haspopup={true}\n        aria-label={ariaLabel}\n        className={clsx(\n          styles.trigger,\n          {\n            [styles.selected]: selected,\n            [styles.badge]: badge,\n          },\n          className\n        )}\n        onClick={onClick}\n        ref={ref as React.Ref<HTMLButtonElement>}\n        type=\"button\"\n        data-testid={testId}\n      >\n        <span className={clsx(badge && styles['trigger-badge-wrapper'])}>\n          <Icon name={iconName} svg={iconSvg} />\n        </span>\n      </button>\n      {badge && <div className={clsx(styles.dot)} />}\n    </div>\n  );\n}\n\nexport default React.forwardRef(TriggerButton);\n"]},"metadata":{},"sourceType":"module"}