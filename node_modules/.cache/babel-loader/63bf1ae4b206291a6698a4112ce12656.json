{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useEffect, useRef } from 'react';\nimport InternalBox from '../../box/internal';\nimport { InternalButton } from '../../button/internal';\nimport InternalFormField from '../../form-field/internal';\nimport InternalSelect from '../../select/internal';\nimport InternalStatusIndicator from '../../status-indicator/internal';\nimport useForwardFocus from '../../internal/hooks/forward-focus';\nimport { useVersionsFetch } from './use-versions-fetch';\nimport { validate, getErrorText } from './validation';\nimport styles from './styles.css.js';\nimport { SearchInput } from './search-input';\nimport LiveRegion from '../../internal/components/live-region';\nimport { useInternalI18n } from '../../i18n/context';\nexport const S3InContext = React.forwardRef((_ref, ref) => {\n  let {\n    i18nStrings,\n    inputPlaceholder,\n    resource,\n    viewHref,\n    invalid,\n    inputAriaDescribedby,\n    selectableItemsTypes,\n    fetchVersions,\n    onChange,\n    onBrowse\n  } = _ref;\n  const i18n = useInternalI18n('s3-resource-selector');\n  const isInputBlurredRef = useRef(true);\n  const [isInputTouched, setInputTouched] = useState(false);\n  const {\n    versions,\n    loading,\n    loadVersions,\n    resetVersions\n  } = useVersionsFetch(fetchVersions);\n  const inputRef = useRef(null);\n  useForwardFocus(ref, inputRef);\n  const uri = resource.uri;\n  const supportsVersions = selectableItemsTypes && selectableItemsTypes.indexOf('versions') > -1;\n  const selectedVersion = versions.filter(version => version.value === resource.versionId)[0] || null;\n  function handleUriChange(event) {\n    const uri = event.detail.value;\n    const errorCode = isInputTouched ? validate(uri) : undefined;\n    resetVersions();\n    onChange({\n      uri\n    }, getErrorText(i18n, i18nStrings, errorCode));\n  }\n  function handleUriBlur() {\n    isInputBlurredRef.current = true;\n    setInputTouched(true);\n    const errorCode = validate(resource.uri);\n    onChange(resource, getErrorText(i18n, i18nStrings, errorCode));\n    if (supportsVersions) {\n      loadVersions(resource.uri);\n    }\n  }\n  useEffect(() => {\n    var _a;\n    if (!isInputBlurredRef.current || !supportsVersions) {\n      return;\n    }\n    const {\n      cancel\n    } = (_a = loadVersions(uri)) !== null && _a !== void 0 ? _a : {};\n    return cancel;\n  }, [uri, supportsVersions, loadVersions]);\n  return React.createElement(\"div\", {\n    className: styles.root\n  }, React.createElement(\"div\", {\n    className: styles.layout\n  }, React.createElement(InternalFormField, {\n    className: styles['layout-uri'],\n    label: i18n('i18nStrings.inContextUriLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextUriLabel),\n    stretch: true\n  }, React.createElement(SearchInput, {\n    ref: inputRef,\n    value: uri,\n    ariaDescribedby: inputAriaDescribedby,\n    clearAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextInputClearAriaLabel,\n    placeholder: inputPlaceholder !== null && inputPlaceholder !== void 0 ? inputPlaceholder : i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextInputPlaceholder,\n    onChange: handleUriChange,\n    invalid: invalid,\n    onFocus: () => isInputBlurredRef.current = false,\n    onBlur: handleUriBlur\n  })), supportsVersions && React.createElement(InternalFormField, {\n    className: styles['layout-version'],\n    label: i18n('i18nStrings.inContextVersionSelectLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextVersionSelectLabel),\n    stretch: true\n  }, React.createElement(InternalSelect, {\n    selectedOption: selectedVersion,\n    placeholder: i18n('i18nStrings.inContextSelectPlaceholder', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextSelectPlaceholder),\n    disabled: versions.length === 0,\n    options: versions,\n    onChange: event => onChange(Object.assign(Object.assign({}, resource), {\n      versionId: event.detail.selectedOption.value\n    }), undefined),\n    invalid: false\n  })), React.createElement(\"div\", null, React.createElement(InternalButton, {\n    className: styles['view-button'],\n    disabled: !viewHref,\n    href: viewHref,\n    target: \"_blank\",\n    iconName: \"external\",\n    iconAlign: \"right\",\n    formAction: \"none\",\n    ariaLabel: i18n('i18nStrings.inContextViewButtonAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextViewButtonAriaLabel)\n  }, i18n('i18nStrings.inContextViewButton', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextViewButton))), React.createElement(\"div\", {\n    className: styles['layout-divider']\n  }), React.createElement(\"div\", null, React.createElement(InternalButton, {\n    className: styles['browse-button'],\n    disabled: loading,\n    formAction: \"none\",\n    onClick: onBrowse\n  }, i18n('i18nStrings.inContextBrowseButton', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextBrowseButton)))), React.createElement(\"div\", {\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }, loading && React.createElement(InternalBox, {\n    margin: {\n      top: 's'\n    }\n  }, React.createElement(InternalStatusIndicator, {\n    type: \"loading\"\n  }, React.createElement(LiveRegion, {\n    visible: true\n  }, i18n('i18nStrings.inContextLoadingText', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextLoadingText))))));\n});","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","useRef","InternalBox","InternalButton","InternalFormField","InternalSelect","InternalStatusIndicator","useForwardFocus","useVersionsFetch","validate","getErrorText","styles","SearchInput","LiveRegion","useInternalI18n","S3InContext","forwardRef","ref","i18nStrings","inputPlaceholder","resource","viewHref","invalid","inputAriaDescribedby","selectableItemsTypes","fetchVersions","onChange","onBrowse","i18n","isInputBlurredRef","isInputTouched","setInputTouched","versions","loading","loadVersions","resetVersions","inputRef","uri","supportsVersions","indexOf","selectedVersion","filter","version","value","versionId","handleUriChange","event","detail","errorCode","undefined","handleUriBlur","current","cancel","className","root","layout","label","inContextUriLabel","stretch","ariaDescribedby","clearAriaLabel","inContextInputClearAriaLabel","placeholder","inContextInputPlaceholder","onFocus","onBlur","inContextVersionSelectLabel","selectedOption","inContextSelectPlaceholder","disabled","length","options","href","target","iconName","iconAlign","formAction","ariaLabel","inContextViewButtonAriaLabel","inContextViewButton","onClick","inContextBrowseButton","role","margin","top","type","visible","inContextLoadingText"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/s3-resource-selector/s3-in-context/lib/default/s3-resource-selector/s3-in-context/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useEffect, useRef } from 'react';\nimport InternalBox from '../../box/internal';\nimport { InternalButton } from '../../button/internal';\nimport InternalFormField from '../../form-field/internal';\nimport { InputProps } from '../../input/interfaces';\nimport InternalSelect from '../../select/internal';\nimport InternalStatusIndicator from '../../status-indicator/internal';\nimport { NonCancelableCustomEvent } from '../../internal/events';\nimport useForwardFocus from '../../internal/hooks/forward-focus';\nimport { useVersionsFetch } from './use-versions-fetch';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { validate, getErrorText } from './validation';\nimport styles from './styles.css.js';\nimport { SearchInput } from './search-input';\nimport LiveRegion from '../../internal/components/live-region';\nimport { useInternalI18n } from '../../i18n/context';\n\ninterface S3InContextProps {\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  inputPlaceholder: string | undefined;\n  resource: S3ResourceSelectorProps.Resource;\n  viewHref: string | undefined;\n  invalid: boolean | undefined;\n  inputAriaDescribedby: string | undefined;\n  selectableItemsTypes: S3ResourceSelectorProps['selectableItemsTypes'];\n  fetchVersions: S3ResourceSelectorProps['fetchVersions'];\n  onBrowse: () => void;\n  onChange: (newResource: S3ResourceSelectorProps.Resource, errorText: string | undefined) => void;\n}\n\nexport interface S3InContextRef {\n  focus(): void;\n}\n\nexport const S3InContext = React.forwardRef(\n  (\n    {\n      i18nStrings,\n      inputPlaceholder,\n      resource,\n      viewHref,\n      invalid,\n      inputAriaDescribedby,\n      selectableItemsTypes,\n      fetchVersions,\n      onChange,\n      onBrowse,\n    }: S3InContextProps,\n    ref: React.Ref<S3InContextRef>\n  ) => {\n    const i18n = useInternalI18n('s3-resource-selector');\n    const isInputBlurredRef = useRef(true);\n    const [isInputTouched, setInputTouched] = useState(false);\n    const { versions, loading, loadVersions, resetVersions } = useVersionsFetch(fetchVersions);\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useForwardFocus(ref, inputRef);\n\n    const uri = resource.uri;\n    const supportsVersions = selectableItemsTypes && selectableItemsTypes.indexOf('versions') > -1;\n    const selectedVersion = versions.filter(version => version.value === resource.versionId)[0] || null;\n\n    function handleUriChange(event: NonCancelableCustomEvent<InputProps.ChangeDetail>) {\n      const uri = event.detail.value;\n      const errorCode = isInputTouched ? validate(uri) : undefined;\n      resetVersions();\n      onChange({ uri }, getErrorText(i18n, i18nStrings, errorCode));\n    }\n\n    function handleUriBlur() {\n      isInputBlurredRef.current = true;\n      setInputTouched(true);\n      const errorCode = validate(resource.uri);\n      onChange(resource, getErrorText(i18n, i18nStrings, errorCode));\n      if (supportsVersions) {\n        loadVersions(resource.uri);\n      }\n    }\n\n    useEffect(() => {\n      if (!isInputBlurredRef.current || !supportsVersions) {\n        return;\n      }\n      const { cancel } = loadVersions(uri) ?? {};\n      return cancel;\n    }, [uri, supportsVersions, loadVersions]);\n\n    return (\n      <div className={styles.root}>\n        <div className={styles.layout}>\n          <InternalFormField\n            className={styles['layout-uri']}\n            label={i18n('i18nStrings.inContextUriLabel', i18nStrings?.inContextUriLabel)}\n            stretch={true}\n          >\n            <SearchInput\n              ref={inputRef}\n              value={uri}\n              ariaDescribedby={inputAriaDescribedby}\n              clearAriaLabel={i18nStrings?.inContextInputClearAriaLabel}\n              placeholder={inputPlaceholder ?? i18nStrings?.inContextInputPlaceholder}\n              onChange={handleUriChange}\n              invalid={invalid}\n              onFocus={() => (isInputBlurredRef.current = false)}\n              onBlur={handleUriBlur}\n            />\n          </InternalFormField>\n          {supportsVersions && (\n            <InternalFormField\n              className={styles['layout-version']}\n              label={i18n('i18nStrings.inContextVersionSelectLabel', i18nStrings?.inContextVersionSelectLabel)}\n              stretch={true}\n            >\n              <InternalSelect\n                selectedOption={selectedVersion}\n                placeholder={i18n('i18nStrings.inContextSelectPlaceholder', i18nStrings?.inContextSelectPlaceholder)}\n                disabled={versions.length === 0}\n                options={versions}\n                onChange={event => onChange({ ...resource, versionId: event.detail.selectedOption.value }, undefined)}\n                invalid={false} // invalid state should not highlight the select, only the text input\n              />\n            </InternalFormField>\n          )}\n          <div>\n            <InternalButton\n              className={styles['view-button']}\n              disabled={!viewHref}\n              href={viewHref}\n              target=\"_blank\"\n              iconName=\"external\"\n              iconAlign=\"right\"\n              formAction=\"none\"\n              ariaLabel={i18n('i18nStrings.inContextViewButtonAriaLabel', i18nStrings?.inContextViewButtonAriaLabel)}\n            >\n              {i18n('i18nStrings.inContextViewButton', i18nStrings?.inContextViewButton)}\n            </InternalButton>\n          </div>\n          <div className={styles['layout-divider']} />\n          <div>\n            <InternalButton className={styles['browse-button']} disabled={loading} formAction=\"none\" onClick={onBrowse}>\n              {i18n('i18nStrings.inContextBrowseButton', i18nStrings?.inContextBrowseButton)}\n            </InternalButton>\n          </div>\n        </div>\n\n        <div role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n          {loading && (\n            <InternalBox margin={{ top: 's' }}>\n              <InternalStatusIndicator type=\"loading\">\n                <LiveRegion visible={true}>\n                  {i18n('i18nStrings.inContextLoadingText', i18nStrings?.inContextLoadingText)}\n                </LiveRegion>\n              </InternalStatusIndicator>\n            </InternalBox>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}