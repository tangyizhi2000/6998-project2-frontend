{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { useOpenState } from '../../internal/components/options-list/utils/use-open-state';\nimport { fireCancelableEvent, isPlainLeftClick } from '../../internal/events';\nimport { KeyCode } from '../../internal/keycode';\nimport { getItemTarget, isItemGroup, isLinkItem } from './utils';\nimport useHighlightedMenu from './use-highlighted-menu';\nexport function useButtonDropdown(_ref) {\n  var items = _ref.items,\n    onItemClick = _ref.onItemClick,\n    onItemFollow = _ref.onItemFollow,\n    onReturnFocus = _ref.onReturnFocus,\n    hasExpandableGroups = _ref.hasExpandableGroups,\n    _ref$isInRestrictedVi = _ref.isInRestrictedView,\n    isInRestrictedView = _ref$isInRestrictedVi === void 0 ? false : _ref$isInRestrictedVi,\n    _ref$expandToViewport = _ref.expandToViewport,\n    expandToViewport = _ref$expandToViewport === void 0 ? false : _ref$expandToViewport;\n  var _useHighlightedMenu = useHighlightedMenu({\n      items: items,\n      hasExpandableGroups: hasExpandableGroups,\n      isInRestrictedView: isInRestrictedView\n    }),\n    targetItem = _useHighlightedMenu.targetItem,\n    isHighlighted = _useHighlightedMenu.isHighlighted,\n    isKeyboardHighlight = _useHighlightedMenu.isKeyboardHighlight,\n    isExpanded = _useHighlightedMenu.isExpanded,\n    highlightItem = _useHighlightedMenu.highlightItem,\n    moveHighlight = _useHighlightedMenu.moveHighlight,\n    expandGroup = _useHighlightedMenu.expandGroup,\n    collapseGroup = _useHighlightedMenu.collapseGroup,\n    reset = _useHighlightedMenu.reset,\n    setIsUsingMouse = _useHighlightedMenu.setIsUsingMouse;\n  var _a = useOpenState({\n      onClose: reset\n    }),\n    isOpen = _a.isOpen,\n    closeDropdown = _a.closeDropdown,\n    openStateProps = __rest(_a, [\"isOpen\", \"closeDropdown\"]);\n  var toggleDropdown = function toggleDropdown() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _a;\n    var moveHighlightOnOpen = (_a = options.moveHighlightOnOpen) !== null && _a !== void 0 ? _a : true;\n    if (!isOpen && moveHighlightOnOpen) {\n      moveHighlight(1);\n    }\n    openStateProps.toggleDropdown();\n  };\n  var onGroupToggle = function onGroupToggle(item) {\n    return !isExpanded(item) ? expandGroup(item) : collapseGroup();\n  };\n  var onItemActivate = function onItemActivate(item, event) {\n    var details = {\n      id: item.id || 'undefined',\n      href: item.href,\n      external: item.external,\n      target: getItemTarget(item)\n    };\n    if (onItemFollow && item.href && isPlainLeftClick(event)) {\n      fireCancelableEvent(onItemFollow, details, event);\n    }\n    if (onItemClick) {\n      fireCancelableEvent(onItemClick, details, event);\n    }\n    onReturnFocus();\n    closeDropdown();\n  };\n  var doVerticalNavigation = function doVerticalNavigation(direction) {\n    if (isOpen) {\n      moveHighlight(direction);\n    }\n  };\n  var openAndSelectFirst = function openAndSelectFirst(event) {\n    toggleDropdown();\n    event.preventDefault();\n  };\n  var actOnParentDropdown = function actOnParentDropdown(event) {\n    // if there is no highlighted item we act on the trigger by opening or closing dropdown\n    if (!targetItem) {\n      if (isOpen && !isInRestrictedView) {\n        toggleDropdown();\n      } else {\n        openAndSelectFirst(event);\n      }\n    } else {\n      if (isItemGroup(targetItem)) {\n        onGroupToggle(targetItem, event);\n      } else {\n        onItemActivate(targetItem, event);\n      }\n    }\n  };\n  var activate = function activate(event, isEnter) {\n    setIsUsingMouse(false);\n    // if item is a link we rely on default behavior of an anchor, no need to prevent\n    if (targetItem && isLinkItem(targetItem) && isEnter) {\n      return;\n    }\n    event.preventDefault();\n    actOnParentDropdown(event);\n  };\n  var onKeyDown = function onKeyDown(event) {\n    setIsUsingMouse(false);\n    switch (event.keyCode) {\n      case KeyCode.down:\n        {\n          doVerticalNavigation(1);\n          event.preventDefault();\n          break;\n        }\n      case KeyCode.up:\n        {\n          doVerticalNavigation(-1);\n          event.preventDefault();\n          break;\n        }\n      case KeyCode.space:\n        {\n          // Prevent scrolling the list of items and highlighting the trigger\n          event.preventDefault();\n          break;\n        }\n      case KeyCode.enter:\n        {\n          if (!(targetItem === null || targetItem === void 0 ? void 0 : targetItem.disabled)) {\n            activate(event, true);\n          }\n          break;\n        }\n      case KeyCode.left:\n      case KeyCode.right:\n        {\n          if (targetItem && !targetItem.disabled && isItemGroup(targetItem) && !isExpanded(targetItem)) {\n            expandGroup();\n          } else if (hasExpandableGroups) {\n            collapseGroup();\n          }\n          event.preventDefault();\n          break;\n        }\n      case KeyCode.escape:\n        {\n          onReturnFocus();\n          closeDropdown();\n          event.preventDefault();\n          break;\n        }\n      case KeyCode.tab:\n        {\n          // When expanded to viewport the focus can't move naturally to the next element.\n          // Returning the focus to the trigger instead.\n          if (expandToViewport) {\n            onReturnFocus();\n          }\n          closeDropdown();\n          break;\n        }\n    }\n  };\n  var onKeyUp = function onKeyUp(event) {\n    // We need to handle activating items with Space separately because there is a bug\n    // in Firefox where changing the focus during a Space keydown event it will trigger\n    // unexpected click events on the new element: https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    if (event.keyCode === KeyCode.space && !(targetItem === null || targetItem === void 0 ? void 0 : targetItem.disabled)) {\n      activate(event);\n    }\n  };\n  return {\n    isOpen: isOpen,\n    targetItem: targetItem,\n    isHighlighted: isHighlighted,\n    isKeyboardHighlight: isKeyboardHighlight,\n    isExpanded: isExpanded,\n    highlightItem: highlightItem,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onItemActivate: onItemActivate,\n    onGroupToggle: onGroupToggle,\n    toggleDropdown: toggleDropdown,\n    closeDropdown: closeDropdown,\n    setIsUsingMouse: setIsUsingMouse\n  };\n}","map":{"version":3,"mappings":";AAIA,SAASA,YAAY,QAAQ,6DAA6D;AAE1F,SAASC,mBAAmB,EAA0BC,gBAAgB,QAAQ,uBAAuB;AACrG,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,aAAa,EAAEC,WAAW,EAAEC,UAAU,QAAQ,SAAS;AAChE,OAAOC,kBAAkB,MAAM,wBAAwB;AAqBvD,OAAM,SAAUC,iBAAiB,OAQN;EAAA,IAPzBC,KAAK,QAALA,KAAK;IACLC,WAAW,QAAXA,WAAW;IACXC,YAAY,QAAZA,YAAY;IACZC,aAAa,QAAbA,aAAa;IACbC,mBAAmB,QAAnBA,mBAAmB;IAAA,6BACnBC,kBAAkB;IAAlBA,kBAAkB,sCAAG,KAAK;IAAA,6BAC1BC,gBAAgB;IAAhBA,gBAAgB,sCAAG,KAAK;EAExB,0BAWIR,kBAAkB,CAAC;MACrBE,KAAK,EAALA,KAAK;MACLI,mBAAmB,EAAnBA,mBAAmB;MACnBC,kBAAkB,EAAlBA;KACD,CAAC;IAdAE,UAAU,uBAAVA,UAAU;IACVC,aAAa,uBAAbA,aAAa;IACbC,mBAAmB,uBAAnBA,mBAAmB;IACnBC,UAAU,uBAAVA,UAAU;IACVC,aAAa,uBAAbA,aAAa;IACbC,aAAa,uBAAbA,aAAa;IACbC,WAAW,uBAAXA,WAAW;IACXC,aAAa,uBAAbA,aAAa;IACbC,KAAK,uBAALA,KAAK;IACLC,eAAe,uBAAfA,eAAe;EAOX,SAA+CzB,YAAY,CAAC;MAAE0B,OAAO,EAAEF;IAAK,CAAE,CAAC;IAA7EG,MAAM,GAAeC,EAAwD,CAA7ED,MAAM;IAAEE,aAAa,KAAwD,CAArEA,aAAa;IAAKC,cAAc,cAA1C,2BAA4C,CAAmC;EACrF,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAuD;IAAA,IAAnDC,8EAA6C,EAAE;;IACrE,IAAMC,mBAAmB,GAAG,aAAO,CAACA,mBAAmB,mCAAI,IAAI;IAC/D,IAAI,CAACN,MAAM,IAAIM,mBAAmB,EAAE;MAClCZ,aAAa,CAAC,CAAC,CAAC;;IAElBS,cAAc,CAACC,cAAc,EAAE;EACjC,CAAC;EAED,IAAMG,aAAa,GAAgB,SAA7BA,aAAa,CAAgBC,IAAI;IAAA,OAAK,CAAChB,UAAU,CAACgB,IAAI,CAAC,GAAGb,WAAW,CAACa,IAAI,CAAC,GAAGZ,aAAa,EAAE;EAAA,CAAC;EAEpG,IAAMa,cAAc,GAAiB,SAA/BA,cAAc,CAAkBD,IAAI,EAAEE,KAAK,EAAI;IACnD,IAAMC,OAAO,GAAG;MACdC,EAAE,EAAEJ,IAAI,CAACI,EAAE,IAAI,WAAW;MAC1BC,IAAI,EAAEL,IAAI,CAACK,IAAI;MACfC,QAAQ,EAAEN,IAAI,CAACM,QAAQ;MACvBC,MAAM,EAAEtC,aAAa,CAAC+B,IAAI;KAC3B;IACD,IAAIxB,YAAY,IAAIwB,IAAI,CAACK,IAAI,IAAItC,gBAAgB,CAACmC,KAAK,CAAC,EAAE;MACxDpC,mBAAmB,CAACU,YAAY,EAAE2B,OAAO,EAAED,KAAK,CAAC;;IAEnD,IAAI3B,WAAW,EAAE;MACfT,mBAAmB,CAACS,WAAW,EAAE4B,OAAO,EAAED,KAAK,CAAC;;IAElDzB,aAAa,EAAE;IACfiB,aAAa,EAAE;EACjB,CAAC;EAED,IAAMc,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAIC,SAAiB,EAAI;IACjD,IAAIjB,MAAM,EAAE;MACVN,aAAa,CAACuB,SAAS,CAAC;;EAE5B,CAAC;EAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIR,KAA0B,EAAI;IACxDN,cAAc,EAAE;IAChBM,KAAK,CAACS,cAAc,EAAE;EACxB,CAAC;EAED,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIV,KAA0B,EAAI;IACzD;IACA,IAAI,CAACrB,UAAU,EAAE;MACf,IAAIW,MAAM,IAAI,CAACb,kBAAkB,EAAE;QACjCiB,cAAc,EAAE;OACjB,MAAM;QACLc,kBAAkB,CAACR,KAAK,CAAC;;KAE5B,MAAM;MACL,IAAIhC,WAAW,CAACW,UAAU,CAAC,EAAE;QAC3BkB,aAAa,CAAClB,UAAU,EAAEqB,KAAK,CAAC;OACjC,MAAM;QACLD,cAAc,CAACpB,UAAU,EAAEqB,KAAK,CAAC;;;EAGvC,CAAC;EAED,IAAMW,QAAQ,GAAG,SAAXA,QAAQ,CAAIX,KAA0B,EAAEY,OAAiB,EAAI;IACjExB,eAAe,CAAC,KAAK,CAAC;IAEtB;IACA,IAAIT,UAAU,IAAIV,UAAU,CAACU,UAAU,CAAC,IAAIiC,OAAO,EAAE;MACnD;;IAGFZ,KAAK,CAACS,cAAc,EAAE;IACtBC,mBAAmB,CAACV,KAAK,CAAC;EAC5B,CAAC;EAED,IAAMa,SAAS,GAAG,SAAZA,SAAS,CAAIb,KAA0B,EAAI;IAC/CZ,eAAe,CAAC,KAAK,CAAC;IACtB,QAAQY,KAAK,CAACc,OAAO;MACnB,KAAKhD,OAAO,CAACiD,IAAI;QAAE;UACjBT,oBAAoB,CAAC,CAAC,CAAC;UACvBN,KAAK,CAACS,cAAc,EAAE;UACtB;;MAEF,KAAK3C,OAAO,CAACkD,EAAE;QAAE;UACfV,oBAAoB,CAAC,CAAC,CAAC,CAAC;UACxBN,KAAK,CAACS,cAAc,EAAE;UACtB;;MAEF,KAAK3C,OAAO,CAACmD,KAAK;QAAE;UAClB;UACAjB,KAAK,CAACS,cAAc,EAAE;UACtB;;MAEF,KAAK3C,OAAO,CAACoD,KAAK;QAAE;UAClB,IAAI,EAACvC,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEwC,QAAQ,GAAE;YACzBR,QAAQ,CAACX,KAAK,EAAE,IAAI,CAAC;;UAEvB;;MAEF,KAAKlC,OAAO,CAACsD,IAAI;MACjB,KAAKtD,OAAO,CAACuD,KAAK;QAAE;UAClB,IAAI1C,UAAU,IAAI,CAACA,UAAU,CAACwC,QAAQ,IAAInD,WAAW,CAACW,UAAU,CAAC,IAAI,CAACG,UAAU,CAACH,UAAU,CAAC,EAAE;YAC5FM,WAAW,EAAE;WACd,MAAM,IAAIT,mBAAmB,EAAE;YAC9BU,aAAa,EAAE;;UAGjBc,KAAK,CAACS,cAAc,EAAE;UACtB;;MAEF,KAAK3C,OAAO,CAACwD,MAAM;QAAE;UACnB/C,aAAa,EAAE;UACfiB,aAAa,EAAE;UACfQ,KAAK,CAACS,cAAc,EAAE;UACtB;;MAEF,KAAK3C,OAAO,CAACyD,GAAG;QAAE;UAChB;UACA;UACA,IAAI7C,gBAAgB,EAAE;YACpBH,aAAa,EAAE;;UAEjBiB,aAAa,EAAE;UACf;;IACD;EAEL,CAAC;EACD,IAAMgC,OAAO,GAAG,SAAVA,OAAO,CAAIxB,KAA0B,EAAI;IAC7C;IACA;IACA;IACA,IAAIA,KAAK,CAACc,OAAO,KAAKhD,OAAO,CAACmD,KAAK,IAAI,EAACtC,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEwC,QAAQ,GAAE;MAC5DR,QAAQ,CAACX,KAAK,CAAC;;EAEnB,CAAC;EAED,OAAO;IACLV,MAAM,EAANA,MAAM;IACNX,UAAU,EAAVA,UAAU;IACVC,aAAa,EAAbA,aAAa;IACbC,mBAAmB,EAAnBA,mBAAmB;IACnBC,UAAU,EAAVA,UAAU;IACVC,aAAa,EAAbA,aAAa;IACb8B,SAAS,EAATA,SAAS;IACTW,OAAO,EAAPA,OAAO;IACPzB,cAAc,EAAdA,cAAc;IACdF,aAAa,EAAbA,aAAa;IACbH,cAAc,EAAdA,cAAc;IACdF,aAAa,EAAbA,aAAa;IACbJ,eAAe,EAAfA;GACD;AACH","names":["useOpenState","fireCancelableEvent","isPlainLeftClick","KeyCode","getItemTarget","isItemGroup","isLinkItem","useHighlightedMenu","useButtonDropdown","items","onItemClick","onItemFollow","onReturnFocus","hasExpandableGroups","isInRestrictedView","expandToViewport","targetItem","isHighlighted","isKeyboardHighlight","isExpanded","highlightItem","moveHighlight","expandGroup","collapseGroup","reset","setIsUsingMouse","onClose","isOpen","_a","closeDropdown","openStateProps","toggleDropdown","options","moveHighlightOnOpen","onGroupToggle","item","onItemActivate","event","details","id","href","external","target","doVerticalNavigation","direction","openAndSelectFirst","preventDefault","actOnParentDropdown","activate","isEnter","onKeyDown","keyCode","down","up","space","enter","disabled","left","right","escape","tab","onKeyUp"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/button-dropdown/utils/lib/default/button-dropdown/utils/use-button-dropdown.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { useOpenState } from '../../internal/components/options-list/utils/use-open-state';\nimport { ButtonDropdownProps, ButtonDropdownSettings, GroupToggle, HighlightProps, ItemActivate } from '../interfaces';\nimport { fireCancelableEvent, CancelableEventHandler, isPlainLeftClick } from '../../internal/events';\nimport { KeyCode } from '../../internal/keycode';\nimport { getItemTarget, isItemGroup, isLinkItem } from './utils';\nimport useHighlightedMenu from './use-highlighted-menu';\n\ninterface UseButtonDropdownOptions extends ButtonDropdownSettings {\n  items: ButtonDropdownProps.Items;\n  onItemClick?: CancelableEventHandler<ButtonDropdownProps.ItemClickDetails>;\n  onItemFollow?: CancelableEventHandler<ButtonDropdownProps.ItemClickDetails>;\n  onReturnFocus: () => void;\n  expandToViewport?: boolean;\n}\n\ninterface UseButtonDropdownApi extends HighlightProps {\n  isOpen: boolean;\n  onKeyDown: (event: React.KeyboardEvent) => void;\n  onKeyUp: (event: React.KeyboardEvent) => void;\n  onItemActivate: ItemActivate;\n  onGroupToggle: GroupToggle;\n  toggleDropdown: (options?: { moveHighlightOnOpen?: boolean }) => void;\n  closeDropdown: () => void;\n  setIsUsingMouse: (isUsingMouse: boolean) => void;\n}\n\nexport function useButtonDropdown({\n  items,\n  onItemClick,\n  onItemFollow,\n  onReturnFocus,\n  hasExpandableGroups,\n  isInRestrictedView = false,\n  expandToViewport = false,\n}: UseButtonDropdownOptions): UseButtonDropdownApi {\n  const {\n    targetItem,\n    isHighlighted,\n    isKeyboardHighlight,\n    isExpanded,\n    highlightItem,\n    moveHighlight,\n    expandGroup,\n    collapseGroup,\n    reset,\n    setIsUsingMouse,\n  } = useHighlightedMenu({\n    items,\n    hasExpandableGroups,\n    isInRestrictedView,\n  });\n\n  const { isOpen, closeDropdown, ...openStateProps } = useOpenState({ onClose: reset });\n  const toggleDropdown = (options: { moveHighlightOnOpen?: boolean } = {}) => {\n    const moveHighlightOnOpen = options.moveHighlightOnOpen ?? true;\n    if (!isOpen && moveHighlightOnOpen) {\n      moveHighlight(1);\n    }\n    openStateProps.toggleDropdown();\n  };\n\n  const onGroupToggle: GroupToggle = item => (!isExpanded(item) ? expandGroup(item) : collapseGroup());\n\n  const onItemActivate: ItemActivate = (item, event) => {\n    const details = {\n      id: item.id || 'undefined',\n      href: item.href,\n      external: item.external,\n      target: getItemTarget(item),\n    };\n    if (onItemFollow && item.href && isPlainLeftClick(event)) {\n      fireCancelableEvent(onItemFollow, details, event);\n    }\n    if (onItemClick) {\n      fireCancelableEvent(onItemClick, details, event);\n    }\n    onReturnFocus();\n    closeDropdown();\n  };\n\n  const doVerticalNavigation = (direction: -1 | 1) => {\n    if (isOpen) {\n      moveHighlight(direction);\n    }\n  };\n\n  const openAndSelectFirst = (event: React.KeyboardEvent) => {\n    toggleDropdown();\n    event.preventDefault();\n  };\n\n  const actOnParentDropdown = (event: React.KeyboardEvent) => {\n    // if there is no highlighted item we act on the trigger by opening or closing dropdown\n    if (!targetItem) {\n      if (isOpen && !isInRestrictedView) {\n        toggleDropdown();\n      } else {\n        openAndSelectFirst(event);\n      }\n    } else {\n      if (isItemGroup(targetItem)) {\n        onGroupToggle(targetItem, event);\n      } else {\n        onItemActivate(targetItem, event);\n      }\n    }\n  };\n\n  const activate = (event: React.KeyboardEvent, isEnter?: boolean) => {\n    setIsUsingMouse(false);\n\n    // if item is a link we rely on default behavior of an anchor, no need to prevent\n    if (targetItem && isLinkItem(targetItem) && isEnter) {\n      return;\n    }\n\n    event.preventDefault();\n    actOnParentDropdown(event);\n  };\n\n  const onKeyDown = (event: React.KeyboardEvent) => {\n    setIsUsingMouse(false);\n    switch (event.keyCode) {\n      case KeyCode.down: {\n        doVerticalNavigation(1);\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.up: {\n        doVerticalNavigation(-1);\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.space: {\n        // Prevent scrolling the list of items and highlighting the trigger\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.enter: {\n        if (!targetItem?.disabled) {\n          activate(event, true);\n        }\n        break;\n      }\n      case KeyCode.left:\n      case KeyCode.right: {\n        if (targetItem && !targetItem.disabled && isItemGroup(targetItem) && !isExpanded(targetItem)) {\n          expandGroup();\n        } else if (hasExpandableGroups) {\n          collapseGroup();\n        }\n\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.escape: {\n        onReturnFocus();\n        closeDropdown();\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.tab: {\n        // When expanded to viewport the focus can't move naturally to the next element.\n        // Returning the focus to the trigger instead.\n        if (expandToViewport) {\n          onReturnFocus();\n        }\n        closeDropdown();\n        break;\n      }\n    }\n  };\n  const onKeyUp = (event: React.KeyboardEvent) => {\n    // We need to handle activating items with Space separately because there is a bug\n    // in Firefox where changing the focus during a Space keydown event it will trigger\n    // unexpected click events on the new element: https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    if (event.keyCode === KeyCode.space && !targetItem?.disabled) {\n      activate(event);\n    }\n  };\n\n  return {\n    isOpen,\n    targetItem,\n    isHighlighted,\n    isKeyboardHighlight,\n    isExpanded,\n    highlightItem,\n    onKeyDown,\n    onKeyUp,\n    onItemActivate,\n    onGroupToggle,\n    toggleDropdown,\n    closeDropdown,\n    setIsUsingMouse,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}