{"ast":null,"code":"import { computePlotPoints, computeDomainX, computeDomainY } from './utils';\nimport { createXTicks, createYTicks, getXTickCount, getYTickCount } from '../../internal/components/cartesian-chart/ticks';\nimport { ChartScale, NumericChartScale } from '../../internal/components/cartesian-chart/scales';\nexport default function computeChartProps(_ref) {\n  var series = _ref.series,\n    externalXDomain = _ref.xDomain,\n    externalYDomain = _ref.yDomain,\n    xScaleType = _ref.xScaleType,\n    yScaleType = _ref.yScaleType,\n    height = _ref.height,\n    width = _ref.width;\n  var xDomain = externalXDomain || computeDomainX(series);\n  var xTickCount = getXTickCount(width);\n  var xScale = new ChartScale(xScaleType, xDomain, [0, width]);\n  var xTicks = xScale.domain.length > 0 ? createXTicks(xScale, xTickCount) : [];\n  var yDomain = externalYDomain || computeDomainY(series, yScaleType);\n  var yTickCount = getYTickCount(height);\n  var yScale = new NumericChartScale(yScaleType, yDomain, [height, 0], externalYDomain ? null : yTickCount);\n  var yTicks = createYTicks(yScale, yTickCount);\n  var plot = computePlotPoints(series, xScale, yScale);\n  return {\n    xDomain: xDomain,\n    yDomain: yDomain,\n    xScale: xScale,\n    yScale: yScale,\n    xTicks: xTicks,\n    yTicks: yTicks,\n    plot: plot\n  };\n}","map":{"version":3,"mappings":"AAGA,SAASA,iBAAiB,EAAEC,cAAc,EAAEC,cAAc,QAAQ,SAAS;AAG3E,SACEC,YAAY,EACZC,YAAY,EACZC,aAAa,EACbC,aAAa,QACR,iDAAiD;AACxD,SAASC,UAAU,EAAEC,iBAAiB,QAAQ,kDAAkD;AAEhG,eAAc,SAAUC,iBAAiB,OAgBxC;EAAA,IAfCC,MAAM,QAANA,MAAM;IACGC,eAAe,QAAxBC,OAAO;IACEC,eAAe,QAAxBC,OAAO;IACPC,UAAU,QAAVA,UAAU;IACVC,UAAU,QAAVA,UAAU;IACVC,MAAM,QAANA,MAAM;IACNC,KAAK,QAALA,KAAK;EAUL,IAAMN,OAAO,GAAGD,eAAe,IAAIV,cAAc,CAACS,MAAM,CAAC;EACzD,IAAMS,UAAU,GAAGd,aAAa,CAACa,KAAK,CAAC;EACvC,IAAME,MAAM,GAAG,IAAIb,UAAU,CAACQ,UAAU,EAAEH,OAAO,EAAE,CAAC,CAAC,EAAEM,KAAK,CAAC,CAAC;EAC9D,IAAMG,MAAM,GAAGD,MAAM,CAACE,MAAM,CAACC,MAAM,GAAG,CAAC,GAAGpB,YAAY,CAACiB,MAAM,EAAED,UAAU,CAAC,GAAG,EAAE;EAE/E,IAAML,OAAO,GAAGD,eAAe,IAAIX,cAAc,CAACQ,MAAM,EAAEM,UAAU,CAAC;EACrE,IAAMQ,UAAU,GAAGlB,aAAa,CAACW,MAAM,CAAC;EACxC,IAAMQ,MAAM,GAAG,IAAIjB,iBAAiB,CAACQ,UAAU,EAAEF,OAAO,EAAE,CAACG,MAAM,EAAE,CAAC,CAAC,EAAEJ,eAAe,GAAG,IAAI,GAAGW,UAAU,CAAC;EAC3G,IAAME,MAAM,GAAGtB,YAAY,CAACqB,MAAM,EAAED,UAAU,CAAC;EAE/C,IAAMG,IAAI,GAAG3B,iBAAiB,CAACU,MAAM,EAAEU,MAAM,EAAEK,MAAM,CAAC;EAEtD,OAAO;IAAEb,OAAO,EAAPA,OAAO;IAAEE,OAAO,EAAPA,OAAO;IAAEM,MAAM,EAANA,MAAM;IAAEK,MAAM,EAANA,MAAM;IAAEJ,MAAM,EAANA,MAAM;IAAEK,MAAM,EAANA,MAAM;IAAEC,IAAI,EAAJA;EAAI,CAAE;AACnE","names":["computePlotPoints","computeDomainX","computeDomainY","createXTicks","createYTicks","getXTickCount","getYTickCount","ChartScale","NumericChartScale","computeChartProps","series","externalXDomain","xDomain","externalYDomain","yDomain","xScaleType","yScaleType","height","width","xTickCount","xScale","xTicks","domain","length","yTickCount","yScale","yTicks","plot"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/area-chart/model/lib/default/area-chart/model/compute-chart-props.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AreaChartProps } from '../interfaces';\nimport { computePlotPoints, computeDomainX, computeDomainY } from './utils';\n\nimport { XDomain, XScaleType, YDomain, YScaleType } from '../../internal/components/cartesian-chart/interfaces';\nimport {\n  createXTicks,\n  createYTicks,\n  getXTickCount,\n  getYTickCount,\n} from '../../internal/components/cartesian-chart/ticks';\nimport { ChartScale, NumericChartScale } from '../../internal/components/cartesian-chart/scales';\n\nexport default function computeChartProps<T extends AreaChartProps.DataTypes>({\n  series,\n  xDomain: externalXDomain,\n  yDomain: externalYDomain,\n  xScaleType,\n  yScaleType,\n  height,\n  width,\n}: {\n  series: readonly AreaChartProps.Series<T>[];\n  xDomain?: XDomain<T>;\n  yDomain?: YDomain;\n  xScaleType: XScaleType;\n  yScaleType: YScaleType;\n  height: number;\n  width: number;\n}) {\n  const xDomain = externalXDomain || computeDomainX(series);\n  const xTickCount = getXTickCount(width);\n  const xScale = new ChartScale(xScaleType, xDomain, [0, width]);\n  const xTicks = xScale.domain.length > 0 ? createXTicks(xScale, xTickCount) : [];\n\n  const yDomain = externalYDomain || computeDomainY(series, yScaleType);\n  const yTickCount = getYTickCount(height);\n  const yScale = new NumericChartScale(yScaleType, yDomain, [height, 0], externalYDomain ? null : yTickCount);\n  const yTicks = createYTicks(yScale, yTickCount);\n\n  const plot = computePlotPoints(series, xScale, yScale);\n\n  return { xDomain, yDomain, xScale, yScale, xTicks, yTicks, plot };\n}\n"]},"metadata":{},"sourceType":"module"}