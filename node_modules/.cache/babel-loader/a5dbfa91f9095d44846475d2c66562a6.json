{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useCallback, useRef, useState } from 'react';\nimport styles from './styles.css.js';\nimport InternalCalendar from '../calendar/internal';\nimport { normalizeLocale } from '../internal/utils/locale';\nimport { getDateLabel, renderMonthAndYear } from '../calendar/utils/intl';\nimport { KeyCode } from '../internal/keycode';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport Dropdown from '../internal/components/dropdown';\nimport InternalDateInput from '../date-input/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name.js';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport { useFocusTracker } from '../internal/hooks/use-focus-tracker.js';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { InternalButton } from '../button/internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport FocusLock from '../internal/components/focus-lock';\nimport { parseDate } from '../internal/utils/date-time';\nimport LiveRegion from '../internal/components/live-region';\nimport { useFormFieldContext } from '../contexts/form-field.js';\nimport { useLocale } from '../i18n/context.js';\nconst DatePicker = React.forwardRef((_a, ref) => {\n  var {\n      locale = '',\n      startOfWeek,\n      isDateEnabled,\n      nextMonthAriaLabel,\n      previousMonthAriaLabel,\n      todayAriaLabel,\n      placeholder = '',\n      value = '',\n      readOnly = false,\n      disabled = false,\n      onBlur,\n      autoFocus = false,\n      onChange,\n      onFocus,\n      name,\n      ariaLabel,\n      ariaRequired,\n      controlId,\n      invalid,\n      openCalendarAriaLabel,\n      expandToViewport\n    } = _a,\n    restProps = __rest(_a, [\"locale\", \"startOfWeek\", \"isDateEnabled\", \"nextMonthAriaLabel\", \"previousMonthAriaLabel\", \"todayAriaLabel\", \"placeholder\", \"value\", \"readOnly\", \"disabled\", \"onBlur\", \"autoFocus\", \"onChange\", \"onFocus\", \"name\", \"ariaLabel\", \"ariaRequired\", \"controlId\", \"invalid\", \"openCalendarAriaLabel\", \"expandToViewport\"]);\n  const {\n    __internalRootRef\n  } = useBaseComponent('DatePicker');\n  checkControlled('DatePicker', 'value', value, 'onChange', onChange);\n  const contextLocale = useLocale();\n  const normalizedLocale = normalizeLocale('DatePicker', locale || contextLocale);\n  const baseProps = getBaseProps(restProps);\n  const [isDropDownOpen, setIsDropDownOpen] = useState(false);\n  const {\n    ariaLabelledby,\n    ariaDescribedby\n  } = useFormFieldContext(restProps);\n  const internalInputRef = useRef(null);\n  const buttonRef = useRef(null);\n  useForwardFocus(ref, internalInputRef);\n  const rootRef = useRef(null);\n  const dropdownId = useUniqueId('calender');\n  const calendarDescriptionId = useUniqueId('calendar-description-');\n  const mergedRef = useMergeRefs(rootRef, __internalRootRef);\n  useFocusTracker({\n    rootRef,\n    onBlur,\n    onFocus\n  });\n  const onDropdownCloseHandler = useCallback(() => setIsDropDownOpen(false), [setIsDropDownOpen]);\n  const onButtonClickHandler = () => {\n    if (!isDropDownOpen) {\n      setIsDropDownOpen(true);\n    }\n  };\n  const onWrapperKeyDownHandler = event => {\n    var _a;\n    if (event.keyCode === KeyCode.escape && isDropDownOpen) {\n      (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      setIsDropDownOpen(false);\n    }\n  };\n  const onInputChangeHandler = event => {\n    fireNonCancelableEvent(onChange, {\n      value: event.detail.value\n    });\n  };\n  const onInputBlurHandler = () => {\n    if (!isDropDownOpen) {\n      setIsDropDownOpen(false);\n    }\n  };\n  // Set displayed date to value if defined or to current date otherwise.\n  const parsedValue = value && value.length >= 4 ? parseDate(value) : null;\n  const baseDate = parsedValue || new Date();\n  const trigger = React.createElement(\"div\", {\n    className: styles['date-picker-trigger']\n  }, React.createElement(\"div\", {\n    className: styles['date-picker-input']\n  }, React.createElement(InternalDateInput, {\n    name: name,\n    invalid: invalid,\n    controlId: controlId,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby,\n    ariaLabel: ariaLabel,\n    ariaRequired: ariaRequired,\n    value: value,\n    disabled: disabled,\n    readOnly: readOnly,\n    onChange: onInputChangeHandler,\n    onBlur: onInputBlurHandler,\n    placeholder: placeholder,\n    ref: internalInputRef,\n    autoFocus: autoFocus,\n    onFocus: onDropdownCloseHandler\n  })), React.createElement(\"div\", null, React.createElement(InternalButton, {\n    iconName: \"calendar\",\n    className: styles['open-calendar-button'],\n    onClick: onButtonClickHandler,\n    ref: buttonRef,\n    ariaLabel: openCalendarAriaLabel && openCalendarAriaLabel(value.length === 10 ? getDateLabel(normalizedLocale, parsedValue) : null),\n    disabled: disabled || readOnly,\n    formAction: \"none\"\n  })));\n  baseProps.className = clsx(baseProps.className, styles.root, styles['date-picker-container']);\n  const handleMouseDown = event => {\n    // prevent currently focused element from losing it\n    event.preventDefault();\n  };\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    ref: mergedRef,\n    onKeyDown: !disabled && !readOnly ? onWrapperKeyDownHandler : undefined\n  }), disabled || readOnly ? trigger : React.createElement(Dropdown, {\n    stretchWidth: true,\n    stretchHeight: true,\n    open: isDropDownOpen,\n    onDropdownClose: onDropdownCloseHandler,\n    onMouseDown: handleMouseDown,\n    trigger: trigger,\n    expandToViewport: expandToViewport,\n    scrollable: false,\n    dropdownId: dropdownId\n  }, isDropDownOpen && React.createElement(FocusLock, {\n    className: styles['focus-lock'],\n    autoFocus: true\n  }, React.createElement(\"div\", {\n    tabIndex: 0,\n    className: styles.calendar,\n    role: \"dialog\",\n    \"aria-modal\": \"true\"\n  }, React.createElement(InternalCalendar, {\n    value: value,\n    onChange: e => {\n      var _a;\n      fireNonCancelableEvent(onChange, e.detail);\n      (_a = buttonRef === null || buttonRef === void 0 ? void 0 : buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      setIsDropDownOpen(false);\n    },\n    locale: normalizedLocale,\n    startOfWeek: startOfWeek,\n    ariaDescribedby: calendarDescriptionId,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    isDateEnabled: isDateEnabled,\n    todayAriaLabel: todayAriaLabel,\n    nextMonthAriaLabel: nextMonthAriaLabel,\n    previousMonthAriaLabel: previousMonthAriaLabel\n  }), React.createElement(LiveRegion, {\n    id: calendarDescriptionId\n  }, renderMonthAndYear(normalizedLocale, baseDate))))));\n});\napplyDisplayName(DatePicker, 'DatePicker');\nexport default DatePicker;","map":{"version":3,"mappings":"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","names":["clsx","React","useCallback","useRef","useState","styles","InternalCalendar","normalizeLocale","getDateLabel","renderMonthAndYear","KeyCode","fireNonCancelableEvent","Dropdown","InternalDateInput","getBaseProps","applyDisplayName","checkControlled","useFocusTracker","useForwardFocus","InternalButton","useBaseComponent","useUniqueId","useMergeRefs","FocusLock","parseDate","LiveRegion","useFormFieldContext","useLocale","DatePicker","forwardRef","_a","ref","locale","startOfWeek","isDateEnabled","nextMonthAriaLabel","previousMonthAriaLabel","todayAriaLabel","placeholder","value","readOnly","disabled","onBlur","autoFocus","onChange","onFocus","name","ariaLabel","ariaRequired","controlId","invalid","openCalendarAriaLabel","expandToViewport","restProps","__internalRootRef","contextLocale","normalizedLocale","baseProps","isDropDownOpen","setIsDropDownOpen","ariaLabelledby","ariaDescribedby","internalInputRef","buttonRef","rootRef","dropdownId","calendarDescriptionId","mergedRef","onDropdownCloseHandler","onButtonClickHandler","onWrapperKeyDownHandler","event","keyCode","escape","current","focus","onInputChangeHandler","detail","onInputBlurHandler","parsedValue","length","baseDate","Date","trigger","className","iconName","onClick","formAction","root","handleMouseDown","preventDefault","onKeyDown","undefined","stretchWidth","stretchHeight","open","onDropdownClose","onMouseDown","scrollable","tabIndex","calendar","role","e","id"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/date-picker/lib/default/date-picker/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { Ref, useCallback, useRef, useState } from 'react';\nimport styles from './styles.css.js';\nimport { DatePickerProps } from './interfaces';\nimport InternalCalendar from '../calendar/internal';\nimport { normalizeLocale } from '../internal/utils/locale';\nimport { getDateLabel, renderMonthAndYear } from '../calendar/utils/intl';\nimport { InputProps } from '../input/interfaces';\nimport { KeyCode } from '../internal/keycode';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport Dropdown from '../internal/components/dropdown';\nimport InternalDateInput from '../date-input/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name.js';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport { useFocusTracker } from '../internal/hooks/use-focus-tracker.js';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport FocusLock from '../internal/components/focus-lock';\nimport { parseDate } from '../internal/utils/date-time';\nimport LiveRegion from '../internal/components/live-region';\nimport { useFormFieldContext } from '../contexts/form-field.js';\nimport { useLocale } from '../i18n/context.js';\n\nexport { DatePickerProps };\n\nconst DatePicker = React.forwardRef(\n  (\n    {\n      locale = '',\n      startOfWeek,\n      isDateEnabled,\n      nextMonthAriaLabel,\n      previousMonthAriaLabel,\n      todayAriaLabel,\n      placeholder = '',\n      value = '',\n      readOnly = false,\n      disabled = false,\n      onBlur,\n      autoFocus = false,\n      onChange,\n      onFocus,\n      name,\n      ariaLabel,\n      ariaRequired,\n      controlId,\n      invalid,\n      openCalendarAriaLabel,\n      expandToViewport,\n      ...restProps\n    }: DatePickerProps,\n    ref: Ref<DatePickerProps.Ref>\n  ) => {\n    const { __internalRootRef } = useBaseComponent('DatePicker');\n    checkControlled('DatePicker', 'value', value, 'onChange', onChange);\n\n    const contextLocale = useLocale();\n    const normalizedLocale = normalizeLocale('DatePicker', locale || contextLocale);\n\n    const baseProps = getBaseProps(restProps);\n    const [isDropDownOpen, setIsDropDownOpen] = useState<boolean>(false);\n    const { ariaLabelledby, ariaDescribedby } = useFormFieldContext(restProps);\n\n    const internalInputRef = useRef<HTMLInputElement>(null);\n    const buttonRef = useRef<ButtonProps.Ref>(null);\n    useForwardFocus(ref, internalInputRef);\n\n    const rootRef = useRef<HTMLDivElement>(null);\n    const dropdownId = useUniqueId('calender');\n    const calendarDescriptionId = useUniqueId('calendar-description-');\n    const mergedRef = useMergeRefs(rootRef, __internalRootRef);\n\n    useFocusTracker({ rootRef, onBlur, onFocus });\n\n    const onDropdownCloseHandler = useCallback(() => setIsDropDownOpen(false), [setIsDropDownOpen]);\n\n    const onButtonClickHandler = () => {\n      if (!isDropDownOpen) {\n        setIsDropDownOpen(true);\n      }\n    };\n\n    const onWrapperKeyDownHandler = (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.keyCode === KeyCode.escape && isDropDownOpen) {\n        buttonRef.current?.focus();\n        setIsDropDownOpen(false);\n      }\n    };\n\n    const onInputChangeHandler: InputProps['onChange'] = event => {\n      fireNonCancelableEvent(onChange, { value: event.detail.value });\n    };\n\n    const onInputBlurHandler: InputProps['onBlur'] = () => {\n      if (!isDropDownOpen) {\n        setIsDropDownOpen(false);\n      }\n    };\n\n    // Set displayed date to value if defined or to current date otherwise.\n    const parsedValue = value && value.length >= 4 ? parseDate(value) : null;\n    const baseDate = parsedValue || new Date();\n\n    const trigger = (\n      <div className={styles['date-picker-trigger']}>\n        <div className={styles['date-picker-input']}>\n          <InternalDateInput\n            name={name}\n            invalid={invalid}\n            controlId={controlId}\n            ariaLabelledby={ariaLabelledby}\n            ariaDescribedby={ariaDescribedby}\n            ariaLabel={ariaLabel}\n            ariaRequired={ariaRequired}\n            value={value}\n            disabled={disabled}\n            readOnly={readOnly}\n            onChange={onInputChangeHandler}\n            onBlur={onInputBlurHandler}\n            placeholder={placeholder}\n            ref={internalInputRef}\n            autoFocus={autoFocus}\n            onFocus={onDropdownCloseHandler}\n          />\n        </div>\n        <div>\n          <InternalButton\n            iconName=\"calendar\"\n            className={styles['open-calendar-button']}\n            onClick={onButtonClickHandler}\n            ref={buttonRef}\n            ariaLabel={\n              openCalendarAriaLabel &&\n              openCalendarAriaLabel(value.length === 10 ? getDateLabel(normalizedLocale, parsedValue!) : null)\n            }\n            disabled={disabled || readOnly}\n            formAction=\"none\"\n          />\n        </div>\n      </div>\n    );\n\n    baseProps.className = clsx(baseProps.className, styles.root, styles['date-picker-container']);\n\n    const handleMouseDown = (event: React.MouseEvent) => {\n      // prevent currently focused element from losing it\n      event.preventDefault();\n    };\n\n    return (\n      <div {...baseProps} ref={mergedRef} onKeyDown={!disabled && !readOnly ? onWrapperKeyDownHandler : undefined}>\n        {disabled || readOnly ? (\n          trigger\n        ) : (\n          <Dropdown\n            stretchWidth={true}\n            stretchHeight={true}\n            open={isDropDownOpen}\n            onDropdownClose={onDropdownCloseHandler}\n            onMouseDown={handleMouseDown}\n            trigger={trigger}\n            expandToViewport={expandToViewport}\n            scrollable={false}\n            dropdownId={dropdownId}\n          >\n            {isDropDownOpen && (\n              <FocusLock className={styles['focus-lock']} autoFocus={true}>\n                <div tabIndex={0} className={styles.calendar} role=\"dialog\" aria-modal=\"true\">\n                  <InternalCalendar\n                    value={value}\n                    onChange={e => {\n                      fireNonCancelableEvent(onChange, e.detail);\n                      buttonRef?.current?.focus();\n                      setIsDropDownOpen(false);\n                    }}\n                    locale={normalizedLocale}\n                    startOfWeek={startOfWeek}\n                    ariaDescribedby={calendarDescriptionId}\n                    ariaLabel={ariaLabel}\n                    ariaLabelledby={ariaLabelledby}\n                    isDateEnabled={isDateEnabled}\n                    todayAriaLabel={todayAriaLabel}\n                    nextMonthAriaLabel={nextMonthAriaLabel}\n                    previousMonthAriaLabel={previousMonthAriaLabel}\n                  />\n                  <LiveRegion id={calendarDescriptionId}>{renderMonthAndYear(normalizedLocale, baseDate)}</LiveRegion>\n                </div>\n              </FocusLock>\n            )}\n          </Dropdown>\n        )}\n      </div>\n    );\n  }\n);\n\napplyDisplayName(DatePicker, 'DatePicker');\nexport default DatePicker;\n"]},"metadata":{},"sourceType":"module"}