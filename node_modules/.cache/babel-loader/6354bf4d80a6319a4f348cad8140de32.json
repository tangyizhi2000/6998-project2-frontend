{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nexport default React.forwardRef(function RadioButton(_ref, ref) {\n  var _clsx2;\n  var name = _ref.name,\n    label = _ref.label,\n    value = _ref.value,\n    checked = _ref.checked,\n    description = _ref.description,\n    disabled = _ref.disabled,\n    controlId = _ref.controlId,\n    onChange = _ref.onChange;\n  var isVisualRefresh = useVisualRefresh();\n  var radioButtonRef = useRef(null);\n  var mergedRefs = useMergeRefs(radioButtonRef, ref);\n  return React.createElement(AbstractSwitch, {\n    className: clsx(styles.radio, description && styles['radio--has-description']),\n    controlClassName: styles['radio-control'],\n    outlineClassName: styles.outline,\n    label: label,\n    description: description,\n    disabled: disabled,\n    controlId: controlId,\n    nativeControl: function nativeControl(nativeControlProps) {\n      return React.createElement(\"input\", Object.assign({}, nativeControlProps, {\n        type: \"radio\",\n        ref: mergedRefs,\n        name: name,\n        value: value,\n        checked: checked,\n        // empty handler to suppress React controllability warning\n        onChange: function onChange() {}\n      }));\n    },\n    onClick: function onClick() {\n      var _a;\n      (_a = radioButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      if (checked) {\n        return;\n      }\n      fireNonCancelableEvent(onChange, {\n        value: value\n      });\n    },\n    styledControl: React.createElement(\"svg\", {\n      viewBox: \"0 0 100 100\",\n      focusable: \"false\",\n      \"aria-hidden\": \"true\"\n    }, React.createElement(\"circle\", {\n      className: clsx(styles['styled-circle-border'], _defineProperty({}, styles['styled-circle-disabled'], disabled)),\n      strokeWidth: isVisualRefresh ? 12 : 8,\n      cx: 50,\n      cy: 50,\n      r: isVisualRefresh ? 44 : 46\n    }), React.createElement(\"circle\", {\n      className: clsx(styles['styled-circle-fill'], (_clsx2 = {}, _defineProperty(_clsx2, styles['styled-circle-disabled'], disabled), _defineProperty(_clsx2, styles['styled-circle-checked'], checked), _clsx2)),\n      strokeWidth: 30,\n      cx: 50,\n      cy: 50,\n      r: 35\n    }))\n  });\n});","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,cAAc,MAAM,wCAAwC;AACnE,SAASC,sBAAsB,QAAmC,oBAAoB;AACtF,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,gBAAgB,QAAQ,mCAAmC;AAEpE,OAAOC,MAAM,MAAM,iBAAiB;AAQpC,eAAeN,KAAK,CAACO,UAAU,CAAC,SAASC,WAAW,OAElDC,GAAgC;EAAA;EAAA,IAD9BC,IAAI,QAAJA,IAAI;IAAEC,KAAK,QAALA,KAAK;IAAEC,KAAK,QAALA,KAAK;IAAEC,OAAO,QAAPA,OAAO;IAAEC,WAAW,QAAXA,WAAW;IAAEC,QAAQ,QAARA,QAAQ;IAAEC,SAAS,QAATA,SAAS;IAAEC,QAAQ,QAARA,QAAQ;EAGzE,IAAMC,eAAe,GAAGb,gBAAgB,EAAE;EAC1C,IAAMc,cAAc,GAAGlB,MAAM,CAAmB,IAAI,CAAC;EACrD,IAAMmB,UAAU,GAAGhB,YAAY,CAACe,cAAc,EAAEV,GAAG,CAAC;EAEpD,OACET,oBAACE,cAAc;IACbmB,SAAS,EAAEtB,IAAI,CAACO,MAAM,CAACgB,KAAK,EAAER,WAAW,IAAIR,MAAM,CAAC,wBAAwB,CAAC,CAAC;IAC9EiB,gBAAgB,EAAEjB,MAAM,CAAC,eAAe,CAAC;IACzCkB,gBAAgB,EAAElB,MAAM,CAACmB,OAAO;IAChCd,KAAK,EAAEA,KAAK;IACZG,WAAW,EAAEA,WAAW;IACxBC,QAAQ,EAAEA,QAAQ;IAClBC,SAAS,EAAEA,SAAS;IACpBU,aAAa,EAAE,yCAAkB;MAAA,OAC/B1B,+CACM2B,kBAAkB;QACtBC,IAAI,EAAC,OAAO;QACZnB,GAAG,EAAEW,UAAU;QACfV,IAAI,EAAEA,IAAI;QACVE,KAAK,EAAEA,KAAK;QACZC,OAAO,EAAEA,OAAO;QAChB;QACAI,QAAQ,EAAE,oBAAK,CAAE;MAAC,GAClB;IAAA,CACH;IACDY,OAAO,EAAE,mBAAK;;MACZ,oBAAc,CAACC,OAAO,0CAAEC,KAAK,EAAE;MAC/B,IAAIlB,OAAO,EAAE;QACX;;MAEFV,sBAAsB,CAACc,QAAQ,EAAE;QAAEL,KAAK,EAALA;MAAK,CAAE,CAAC;IAC7C,CAAC;IACDoB,aAAa,EACXhC;MAAKiC,OAAO,EAAC,aAAa;MAACC,SAAS,EAAC,OAAO;MAAA,eAAa;IAAM,GAC7DlC;MACEqB,SAAS,EAAEtB,IAAI,CAACO,MAAM,CAAC,sBAAsB,CAAC,sBAAKA,MAAM,CAAC,wBAAwB,CAAC,EAAGS,QAAQ,EAAG;MACjGoB,WAAW,EAAEjB,eAAe,GAAG,EAAE,GAAG,CAAC;MACrCkB,EAAE,EAAE,EAAE;MACNC,EAAE,EAAE,EAAE;MACNC,CAAC,EAAEpB,eAAe,GAAG,EAAE,GAAG;IAAE,EAC5B,EACFlB;MACEqB,SAAS,EAAEtB,IAAI,CAACO,MAAM,CAAC,oBAAoB,CAAC,wCACzCA,MAAM,CAAC,wBAAwB,CAAC,EAAGS,QAAQ,2BAC3CT,MAAM,CAAC,uBAAuB,CAAC,EAAGO,OAAO,WAC1C;MACFsB,WAAW,EAAE,EAAE;MACfC,EAAE,EAAE,EAAE;MACNC,EAAE,EAAE,EAAE;MACNC,CAAC,EAAE;IAAE,EACL;EACE,EAER;AAEN,CAAC,CAAC","names":["clsx","React","useRef","AbstractSwitch","fireNonCancelableEvent","useMergeRefs","useVisualRefresh","styles","forwardRef","RadioButton","ref","name","label","value","checked","description","disabled","controlId","onChange","isVisualRefresh","radioButtonRef","mergedRefs","className","radio","controlClassName","outlineClassName","outline","nativeControl","nativeControlProps","type","onClick","current","focus","styledControl","viewBox","focusable","strokeWidth","cx","cy","r"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/radio-group/lib/default/radio-group/radio-button.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { RadioGroupProps } from './interfaces';\nimport styles from './styles.css.js';\n\ninterface RadioButtonProps extends RadioGroupProps.RadioButtonDefinition {\n  name: string;\n  checked: boolean;\n  onChange?: NonCancelableEventHandler<RadioGroupProps.ChangeDetail>;\n}\n\nexport default React.forwardRef(function RadioButton(\n  { name, label, value, checked, description, disabled, controlId, onChange }: RadioButtonProps,\n  ref: React.Ref<HTMLInputElement>\n) {\n  const isVisualRefresh = useVisualRefresh();\n  const radioButtonRef = useRef<HTMLInputElement>(null);\n  const mergedRefs = useMergeRefs(radioButtonRef, ref);\n\n  return (\n    <AbstractSwitch\n      className={clsx(styles.radio, description && styles['radio--has-description'])}\n      controlClassName={styles['radio-control']}\n      outlineClassName={styles.outline}\n      label={label}\n      description={description}\n      disabled={disabled}\n      controlId={controlId}\n      nativeControl={nativeControlProps => (\n        <input\n          {...nativeControlProps}\n          type=\"radio\"\n          ref={mergedRefs}\n          name={name}\n          value={value}\n          checked={checked}\n          // empty handler to suppress React controllability warning\n          onChange={() => {}}\n        />\n      )}\n      onClick={() => {\n        radioButtonRef.current?.focus();\n        if (checked) {\n          return;\n        }\n        fireNonCancelableEvent(onChange, { value });\n      }}\n      styledControl={\n        <svg viewBox=\"0 0 100 100\" focusable=\"false\" aria-hidden=\"true\">\n          <circle\n            className={clsx(styles['styled-circle-border'], { [styles['styled-circle-disabled']]: disabled })}\n            strokeWidth={isVisualRefresh ? 12 : 8}\n            cx={50}\n            cy={50}\n            r={isVisualRefresh ? 44 : 46}\n          />\n          <circle\n            className={clsx(styles['styled-circle-fill'], {\n              [styles['styled-circle-disabled']]: disabled,\n              [styles['styled-circle-checked']]: checked,\n            })}\n            strokeWidth={30}\n            cx={50}\n            cy={50}\n            r={35}\n          />\n        </svg>\n      }\n    />\n  );\n});\n"]},"metadata":{},"sourceType":"module"}