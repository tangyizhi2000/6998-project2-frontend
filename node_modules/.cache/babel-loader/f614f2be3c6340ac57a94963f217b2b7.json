{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { padLeftZeros } from '../strings';\nexport function formatTimezoneOffset(isoDate, offsetInMinutes) {\n  offsetInMinutes = offsetInMinutes !== null && offsetInMinutes !== void 0 ? offsetInMinutes : 0 - new Date(isoDate).getTimezoneOffset();\n  const hoursOffset = padLeftZeros(Math.floor(Math.abs(offsetInMinutes) / 60).toFixed(0), 2);\n  const minuteOffset = padLeftZeros(Math.abs(offsetInMinutes % 60).toFixed(0), 2);\n  const sign = offsetInMinutes < 0 ? '-' : '+';\n  const formattedOffset = `${sign}${hoursOffset}:${minuteOffset}`;\n  return formattedOffset;\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA,SAASA,YAAY,QAAQ,YAAY;AAEzC,OAAM,SAAUC,oBAAoB,CAACC,OAAe,EAAEC,eAAwB;EAC5EA,eAAe,GAAGA,eAAe,aAAfA,eAAe,cAAfA,eAAe,GAAI,CAAC,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC,CAACG,iBAAiB,EAAE;EAC9E,MAAMC,WAAW,GAAGN,YAAY,CAACO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACN,eAAe,CAAC,GAAG,EAAE,CAAC,CAACO,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1F,MAAMC,YAAY,GAAGX,YAAY,CAACO,IAAI,CAACE,GAAG,CAACN,eAAe,GAAG,EAAE,CAAC,CAACO,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAE/E,MAAME,IAAI,GAAGT,eAAe,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;EAC5C,MAAMU,eAAe,GAAG,GAAGD,IAAI,GAAGN,WAAW,IAAIK,YAAY,EAAE;EAE/D,OAAOE,eAAe;AACxB","names":["padLeftZeros","formatTimezoneOffset","isoDate","offsetInMinutes","Date","getTimezoneOffset","hoursOffset","Math","floor","abs","toFixed","minuteOffset","sign","formattedOffset"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/utils/date-time/lib/default/internal/utils/date-time/format-timezone-offset.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { padLeftZeros } from '../strings';\n\nexport function formatTimezoneOffset(isoDate: string, offsetInMinutes?: number) {\n  offsetInMinutes = offsetInMinutes ?? 0 - new Date(isoDate).getTimezoneOffset();\n  const hoursOffset = padLeftZeros(Math.floor(Math.abs(offsetInMinutes) / 60).toFixed(0), 2);\n  const minuteOffset = padLeftZeros(Math.abs(offsetInMinutes % 60).toFixed(0), 2);\n\n  const sign = offsetInMinutes < 0 ? '-' : '+';\n  const formattedOffset = `${sign}${hoursOffset}:${minuteOffset}`;\n\n  return formattedOffset;\n}\n"]},"metadata":{},"sourceType":"module"}