{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useImperativeHandle, useRef } from 'react';\n/**\n * Focus forwarding helper for radio groups where only the first selected\n * child element should be focused.\n */\nexport default function useRadioGroupForwardFocus(forwardedRef, items, value) {\n  var itemRef = useRef(null);\n  var itemIndex = items && findIndex(items, function (item) {\n    return item.value === value;\n  });\n  useImperativeHandle(forwardedRef, function () {\n    return {\n      focus: function focus() {\n        var _a;\n        (_a = itemRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      }\n    };\n  });\n  return [itemRef, itemIndex !== undefined && itemIndex !== -1 ? itemIndex : 0];\n}\nfunction findIndex(items, predicate) {\n  for (var i = 0; i < items.length; i++) {\n    if (predicate(items[i])) {\n      return i;\n    }\n  }\n  return -1;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAgBA,mBAAmB,EAAEC,MAAM,QAAQ,OAAO;AAM1D;;;;AAIA,eAAc,SAAUC,yBAAyB,CAC/CC,YAAwC,EACxCC,KAAmD,EACnDC,KAAoB;EAEpB,IAAMC,OAAO,GAAGL,MAAM,CAA0B,IAAI,CAAC;EACrD,IAAMM,SAAS,GAAGH,KAAK,IAAII,SAAS,CAACJ,KAAK,EAAE,cAAI;IAAA,OAAIK,IAAI,CAACJ,KAAK,KAAKA,KAAK;EAAA,EAAC;EACzEL,mBAAmB,CAACG,YAAY,EAAE;IAAA,OAAO;MACvCO,KAAK;;QACH,aAAO,CAACC,OAAO,0CAAED,KAAK,EAAE;MAC1B;KACD;EAAA,CAAC,CAAC;EAEH,OAAO,CAACJ,OAAO,EAAEC,SAAS,KAAKK,SAAS,IAAIL,SAAS,KAAK,CAAC,CAAC,GAAGA,SAAS,GAAG,CAAC,CAAC;AAC/E;AAEA,SAASC,SAAS,CAAIJ,KAAuB,EAAES,SAAwB;EACrE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,KAAK,CAACW,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,IAAID,SAAS,CAACT,KAAK,CAACU,CAAC,CAAC,CAAC,EAAE;MACvB,OAAOA,CAAC;;;EAGZ,OAAO,CAAC,CAAC;AACX","names":["useImperativeHandle","useRef","useRadioGroupForwardFocus","forwardedRef","items","value","itemRef","itemIndex","findIndex","item","focus","current","undefined","predicate","i","length"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/hooks/forward-focus/lib/default/internal/hooks/forward-focus/radio-group.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef } from 'react';\n\nexport interface ForwardFocusRef {\n  focus(): void;\n}\n\n/**\n * Focus forwarding helper for radio groups where only the first selected\n * child element should be focused.\n */\nexport default function useRadioGroupForwardFocus(\n  forwardedRef: React.Ref<ForwardFocusRef>,\n  items: ReadonlyArray<{ value: string }> | undefined,\n  value: string | null\n): [React.Ref<HTMLInputElement>, number] {\n  const itemRef = useRef<HTMLInputElement | null>(null);\n  const itemIndex = items && findIndex(items, item => item.value === value);\n  useImperativeHandle(forwardedRef, () => ({\n    focus() {\n      itemRef.current?.focus();\n    },\n  }));\n\n  return [itemRef, itemIndex !== undefined && itemIndex !== -1 ? itemIndex : 0];\n}\n\nfunction findIndex<T>(items: ReadonlyArray<T>, predicate: (t: T) => any): number {\n  for (let i = 0; i < items.length; i++) {\n    if (predicate(items[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\n"]},"metadata":{},"sourceType":"module"}