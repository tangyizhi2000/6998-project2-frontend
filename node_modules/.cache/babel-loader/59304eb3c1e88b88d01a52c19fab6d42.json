{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { isLinkItem } from '../utils/utils';\nimport styles from './styles.css.js';\nimport Tooltip from '../tooltip';\nimport { getItemTarget } from '../utils/utils';\nimport useHiddenDescription from '../utils/use-hidden-description';\nimport InternalIcon from '../../icon/internal';\nimport { useDropdownContext } from '../../internal/components/dropdown/context';\nimport { getMenuItemProps } from '../utils/menu-item';\nconst ItemElement = _ref => {\n  let {\n    item,\n    disabled,\n    onItemActivate,\n    highlighted,\n    highlightItem,\n    first = false,\n    last,\n    hasCategoryHeader,\n    isKeyboardHighlighted = false,\n    variant = 'normal'\n  } = _ref;\n  const isLink = isLinkItem(item);\n  const onClick = event => {\n    // Stop propagation to parent node and handle event exclusively in here. This ensures\n    // that no group will interfere with the default behavior of links\n    event.stopPropagation();\n    if (!isLink) {\n      event.preventDefault();\n    }\n    if (!disabled) {\n      onItemActivate(item, event);\n    }\n  };\n  const onHover = () => {\n    highlightItem(item);\n  };\n  return React.createElement(\"li\", {\n    className: clsx(styles['item-element'], styles[`variant-${variant}`], {\n      [styles.highlighted]: highlighted,\n      [styles.disabled]: disabled,\n      [styles.first]: first,\n      [styles.last]: last,\n      [styles['has-category-header']]: hasCategoryHeader,\n      [styles['is-focused']]: isKeyboardHighlighted\n    }),\n    role: \"presentation\",\n    \"data-testid\": item.id,\n    \"data-description\": item.description,\n    onClick: onClick,\n    onMouseEnter: onHover,\n    onTouchStart: onHover\n  }, React.createElement(MenuItem, {\n    item: item,\n    disabled: disabled,\n    highlighted: highlighted\n  }));\n};\nfunction MenuItem(_ref2) {\n  let {\n    item,\n    disabled,\n    highlighted\n  } = _ref2;\n  const menuItemRef = useRef(null);\n  useEffect(() => {\n    if (highlighted && menuItemRef.current) {\n      menuItemRef.current.focus();\n    }\n  }, [highlighted]);\n  const isDisabledWithReason = disabled && item.disabledReason;\n  const {\n    targetProps,\n    descriptionEl\n  } = useHiddenDescription(item.disabledReason);\n  const menuItemProps = Object.assign(Object.assign({\n    className: styles['menu-item'],\n    lang: item.lang,\n    ref: menuItemRef,\n    // We are using the roving tabindex technique to manage the focus state of the dropdown.\n    // The current element will always have tabindex=0 which means that it can be tabbed to,\n    // while all other items have tabindex=-1 so we can focus them when necessary.\n    tabIndex: highlighted ? 0 : -1\n  }, getMenuItemProps({\n    disabled\n  })), isDisabledWithReason ? targetProps : {});\n  const menuItem = isLinkItem(item) ? React.createElement(\"a\", Object.assign({}, menuItemProps, {\n    href: !disabled ? item.href : undefined,\n    target: getItemTarget(item),\n    rel: item.external ? 'noopener noreferrer' : undefined\n  }), React.createElement(MenuItemContent, {\n    item: item,\n    disabled: disabled\n  })) : React.createElement(\"span\", Object.assign({}, menuItemProps), React.createElement(MenuItemContent, {\n    item: item,\n    disabled: disabled\n  }));\n  const {\n    position\n  } = useDropdownContext();\n  const tooltipPosition = position === 'bottom-left' || position === 'top-left' ? 'left' : 'right';\n  return isDisabledWithReason ? React.createElement(Tooltip, {\n    content: item.disabledReason,\n    position: tooltipPosition\n  }, menuItem, descriptionEl) : menuItem;\n}\nconst MenuItemContent = _ref3 => {\n  let {\n    item,\n    disabled\n  } = _ref3;\n  const hasIcon = !!(item.iconName || item.iconUrl || item.iconSvg);\n  const hasExternal = isLinkItem(item) && item.external;\n  return React.createElement(React.Fragment, null, hasIcon && React.createElement(MenuItemIcon, {\n    name: item.iconName,\n    url: item.iconUrl,\n    svg: item.iconSvg,\n    alt: item.iconAlt,\n    badge: item.badge\n  }), ' ', item.text, \" \", hasExternal && React.createElement(ExternalIcon, {\n    disabled: disabled,\n    ariaLabel: item.externalIconAriaLabel\n  }));\n};\nconst MenuItemIcon = props => React.createElement(\"span\", {\n  className: styles.icon\n}, React.createElement(InternalIcon, Object.assign({}, props)));\nconst ExternalIcon = _ref4 => {\n  let {\n    disabled,\n    ariaLabel\n  } = _ref4;\n  const icon = React.createElement(InternalIcon, {\n    variant: disabled ? 'disabled' : 'normal',\n    name: \"external\"\n  });\n  return React.createElement(\"span\", {\n    className: styles['external-icon'],\n    role: ariaLabel ? 'img' : undefined,\n    \"aria-label\": ariaLabel\n  }, icon);\n};\nexport default ItemElement;","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","clsx","isLinkItem","styles","Tooltip","getItemTarget","useHiddenDescription","InternalIcon","useDropdownContext","getMenuItemProps","ItemElement","item","disabled","onItemActivate","highlighted","highlightItem","first","last","hasCategoryHeader","isKeyboardHighlighted","variant","isLink","onClick","event","stopPropagation","preventDefault","onHover","className","role","id","description","onMouseEnter","onTouchStart","MenuItem","menuItemRef","current","focus","isDisabledWithReason","disabledReason","targetProps","descriptionEl","menuItemProps","lang","ref","tabIndex","menuItem","href","undefined","target","rel","external","MenuItemContent","position","tooltipPosition","content","hasIcon","iconName","iconUrl","iconSvg","hasExternal","MenuItemIcon","name","url","svg","alt","iconAlt","badge","text","ExternalIcon","ariaLabel","externalIconAriaLabel","props","icon"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/button-dropdown/item-element/lib/default/button-dropdown/item-element/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { ItemProps } from '../interfaces';\nimport { isLinkItem } from '../utils/utils';\nimport styles from './styles.css.js';\nimport Tooltip from '../tooltip';\n\nimport { ButtonDropdownProps } from '../interfaces';\nimport { getItemTarget } from '../utils/utils';\nimport useHiddenDescription from '../utils/use-hidden-description';\nimport InternalIcon, { InternalIconProps } from '../../icon/internal';\nimport { useDropdownContext } from '../../internal/components/dropdown/context';\nimport { getMenuItemProps } from '../utils/menu-item';\n\nconst ItemElement = ({\n  item,\n  disabled,\n  onItemActivate,\n  highlighted,\n  highlightItem,\n  first = false,\n  last,\n  hasCategoryHeader,\n  isKeyboardHighlighted = false,\n  variant = 'normal',\n}: ItemProps) => {\n  const isLink = isLinkItem(item);\n  const onClick = (event: React.MouseEvent) => {\n    // Stop propagation to parent node and handle event exclusively in here. This ensures\n    // that no group will interfere with the default behavior of links\n    event.stopPropagation();\n    if (!isLink) {\n      event.preventDefault();\n    }\n    if (!disabled) {\n      onItemActivate(item, event);\n    }\n  };\n\n  const onHover = () => {\n    highlightItem(item);\n  };\n\n  return (\n    <li\n      className={clsx(styles['item-element'], styles[`variant-${variant}`], {\n        [styles.highlighted]: highlighted,\n        [styles.disabled]: disabled,\n        [styles.first]: first,\n        [styles.last]: last,\n        [styles['has-category-header']]: hasCategoryHeader,\n        [styles['is-focused']]: isKeyboardHighlighted,\n      })}\n      role=\"presentation\"\n      data-testid={item.id}\n      data-description={item.description}\n      onClick={onClick}\n      onMouseEnter={onHover}\n      onTouchStart={onHover}\n    >\n      <MenuItem item={item} disabled={disabled} highlighted={highlighted} />\n    </li>\n  );\n};\n\nexport type InternalItemProps = ButtonDropdownProps.Item & {\n  badge?: boolean;\n};\n\ninterface MenuItemProps {\n  item: InternalItemProps;\n  disabled: boolean;\n  highlighted: boolean;\n}\n\nfunction MenuItem({ item, disabled, highlighted }: MenuItemProps) {\n  const menuItemRef = useRef<(HTMLSpanElement & HTMLAnchorElement) | null>(null);\n\n  useEffect(() => {\n    if (highlighted && menuItemRef.current) {\n      menuItemRef.current.focus();\n    }\n  }, [highlighted]);\n\n  const isDisabledWithReason = disabled && item.disabledReason;\n  const { targetProps, descriptionEl } = useHiddenDescription(item.disabledReason);\n  const menuItemProps: React.HTMLAttributes<HTMLSpanElement & HTMLAnchorElement> = {\n    className: styles['menu-item'],\n    lang: item.lang,\n    ref: menuItemRef,\n    // We are using the roving tabindex technique to manage the focus state of the dropdown.\n    // The current element will always have tabindex=0 which means that it can be tabbed to,\n    // while all other items have tabindex=-1 so we can focus them when necessary.\n    tabIndex: highlighted ? 0 : -1,\n    ...getMenuItemProps({ disabled }),\n    ...(isDisabledWithReason ? targetProps : {}),\n  };\n\n  const menuItem = isLinkItem(item) ? (\n    <a\n      {...menuItemProps}\n      href={!disabled ? item.href : undefined}\n      target={getItemTarget(item)}\n      rel={item.external ? 'noopener noreferrer' : undefined}\n    >\n      <MenuItemContent item={item} disabled={disabled} />\n    </a>\n  ) : (\n    <span {...menuItemProps}>\n      <MenuItemContent item={item} disabled={disabled} />\n    </span>\n  );\n\n  const { position } = useDropdownContext();\n  const tooltipPosition = position === 'bottom-left' || position === 'top-left' ? 'left' : 'right';\n  return isDisabledWithReason ? (\n    <Tooltip content={item.disabledReason} position={tooltipPosition}>\n      {menuItem}\n      {descriptionEl}\n    </Tooltip>\n  ) : (\n    menuItem\n  );\n}\n\nconst MenuItemContent = ({ item, disabled }: { item: InternalItemProps; disabled: boolean }) => {\n  const hasIcon = !!(item.iconName || item.iconUrl || item.iconSvg);\n  const hasExternal = isLinkItem(item) && item.external;\n  return (\n    <>\n      {hasIcon && (\n        <MenuItemIcon\n          name={item.iconName}\n          url={item.iconUrl}\n          svg={item.iconSvg}\n          alt={item.iconAlt}\n          badge={item.badge}\n        />\n      )}{' '}\n      {item.text} {hasExternal && <ExternalIcon disabled={disabled} ariaLabel={item.externalIconAriaLabel} />}\n    </>\n  );\n};\n\nconst MenuItemIcon = (props: InternalIconProps) => (\n  <span className={styles.icon}>\n    <InternalIcon {...props} />\n  </span>\n);\n\nconst ExternalIcon = ({ disabled, ariaLabel }: { disabled: boolean; ariaLabel?: string }) => {\n  const icon = <InternalIcon variant={disabled ? 'disabled' : 'normal'} name=\"external\" />;\n  return (\n    <span className={styles['external-icon']} role={ariaLabel ? 'img' : undefined} aria-label={ariaLabel}>\n      {icon}\n    </span>\n  );\n};\n\nexport default ItemElement;\n"]},"metadata":{},"sourceType":"module"}