{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useAppLayoutInternals } from './context';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-classes/styles.css.js';\nexport default function Notifications() {\n  var _clsx;\n  var _a;\n  var _useAppLayoutInternal = useAppLayoutInternals(),\n    ariaLabels = _useAppLayoutInternal.ariaLabels,\n    hasDrawerViewportOverlay = _useAppLayoutInternal.hasDrawerViewportOverlay,\n    notifications = _useAppLayoutInternal.notifications,\n    notificationsElement = _useAppLayoutInternal.notificationsElement,\n    stickyNotifications = _useAppLayoutInternal.stickyNotifications;\n  if (!notifications) {\n    return null;\n  }\n  /**\n   * The notificationsElement ref is assigned to an inner div to prevent internal bottom margin\n   * from affecting the calculated height, which is used for sticky elements below.\n   */\n  return React.createElement(\"div\", {\n    role: \"region\",\n    \"aria-label\": (_a = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.notifications) !== null && _a !== void 0 ? _a : undefined,\n    className: clsx(styles.notifications, (_clsx = {}, _defineProperty(_clsx, styles['sticky-notifications'], stickyNotifications), _defineProperty(_clsx, styles.unfocusable, hasDrawerViewportOverlay), _clsx), testutilStyles.notifications, 'awsui-context-content-header')\n  }, React.createElement(\"div\", {\n    ref: notificationsElement\n  }, notifications));\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,qBAAqB,QAAQ,WAAW;AACjD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,cAAc,MAAM,+BAA+B;AAE1D,eAAc,SAAUC,aAAa;EAAA;;EACnC,4BACEH,qBAAqB,EAAE;IADjBI,UAAU,yBAAVA,UAAU;IAAEC,wBAAwB,yBAAxBA,wBAAwB;IAAEC,aAAa,yBAAbA,aAAa;IAAEC,oBAAoB,yBAApBA,oBAAoB;IAAEC,mBAAmB,yBAAnBA,mBAAmB;EAGtG,IAAI,CAACF,aAAa,EAAE;IAClB,OAAO,IAAI;;EAGb;;;;EAIA,OACER;IACEW,IAAI,EAAC,QAAQ;IAAA,cACD,gBAAU,aAAVL,UAAU,uBAAVA,UAAU,CAAEE,aAAa,mCAAII,SAAS;IAClDC,SAAS,EAAEZ,IAAI,CACbE,MAAM,CAACK,aAAa,sCAEjBL,MAAM,CAAC,sBAAsB,CAAC,EAAGO,mBAAmB,0BACpDP,MAAM,CAACW,WAAW,EAAGP,wBAAwB,WAEhDH,cAAc,CAACI,aAAa,EAC5B,8BAA8B;EAC/B,GAEDR;IAAKe,GAAG,EAAEN;EAAoB,GAAGD,aAAa,CAAO,CACjD;AAEV","names":["React","clsx","useAppLayoutInternals","styles","testutilStyles","Notifications","ariaLabels","hasDrawerViewportOverlay","notifications","notificationsElement","stickyNotifications","role","undefined","className","unfocusable","ref"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/app-layout/visual-refresh/lib/default/app-layout/visual-refresh/notifications.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useAppLayoutInternals } from './context';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-classes/styles.css.js';\n\nexport default function Notifications() {\n  const { ariaLabels, hasDrawerViewportOverlay, notifications, notificationsElement, stickyNotifications } =\n    useAppLayoutInternals();\n\n  if (!notifications) {\n    return null;\n  }\n\n  /**\n   * The notificationsElement ref is assigned to an inner div to prevent internal bottom margin\n   * from affecting the calculated height, which is used for sticky elements below.\n   */\n  return (\n    <div\n      role=\"region\"\n      aria-label={ariaLabels?.notifications ?? undefined}\n      className={clsx(\n        styles.notifications,\n        {\n          [styles['sticky-notifications']]: stickyNotifications,\n          [styles.unfocusable]: hasDrawerViewportOverlay,\n        },\n        testutilStyles.notifications,\n        'awsui-context-content-header'\n      )}\n    >\n      <div ref={notificationsElement}>{notifications}</div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}