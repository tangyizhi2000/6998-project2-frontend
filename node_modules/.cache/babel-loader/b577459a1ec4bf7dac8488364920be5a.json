{"ast":null,"code":"import _classCallCheck from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { nodeBelongs } from './utils/node-belongs';\nvar FocusTracker = /*#__PURE__*/function () {\n  function FocusTracker(node, _ref) {\n    var _this = this;\n    var onFocusEnter = _ref.onFocusEnter,\n      onFocusLeave = _ref.onFocusLeave;\n    _classCallCheck(this, FocusTracker);\n    this.node = node;\n    this.currentlyFocused = false;\n    this.focusInListener = function (event) {\n      var focusIsInside = nodeBelongs(_this.node, event.target);\n      if (!_this.currentlyFocused && focusIsInside) {\n        _this.triggerFocus();\n      }\n    };\n    this.focusOutListener = function (event) {\n      var nextFocused = event.relatedTarget;\n      var isNextFocusedInParent = !nodeBelongs(_this.node, nextFocused);\n      if (_this.currentlyFocused && (nextFocused === null || isNextFocusedInParent)) {\n        _this.triggerBlur();\n      }\n    };\n    this.onFocusEnter = onFocusEnter;\n    this.onFocusLeave = onFocusLeave;\n  }\n  _createClass(FocusTracker, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.currentlyFocused = nodeBelongs(this.node, document.activeElement);\n      document.addEventListener('focusin', this.focusInListener);\n      document.addEventListener('focusout', this.focusOutListener);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      document.removeEventListener('focusin', this.focusInListener);\n      document.removeEventListener('focusout', this.focusOutListener);\n    }\n  }, {\n    key: \"triggerBlur\",\n    value: function triggerBlur() {\n      this.currentlyFocused = false;\n      this.onFocusLeave();\n    }\n  }, {\n    key: \"triggerFocus\",\n    value: function triggerFocus() {\n      this.currentlyFocused = true;\n      this.onFocusEnter();\n    }\n  }]);\n  return FocusTracker;\n}();\nexport { FocusTracker as default };","map":{"version":3,"mappings":";;AAAA;AACA;AACA,SAASA,WAAW,QAAQ,sBAAsB;AAAC,IAO9BC,YAAY;EAM/B,sBAAoBC,IAAiB,QAAqD;IAAA;IAAA,IAAjDC,YAAY,QAAZA,YAAY;MAAEC,YAAY,QAAZA,YAAY;IAAA;IAA/C,SAAI,GAAJF,IAAI;IAFhB,qBAAgB,GAAG,KAAK;IAkBxB,oBAAe,GAAG,UAACG,KAAiB,EAAI;MAC9C,IAAMC,aAAa,GAAGN,WAAW,CAAC,KAAI,CAACE,IAAI,EAAEG,KAAK,CAACE,MAAM,CAAC;MAC1D,IAAI,CAAC,KAAI,CAACC,gBAAgB,IAAIF,aAAa,EAAE;QAC3C,KAAI,CAACG,YAAY,EAAE;;IAEvB,CAAC;IAEO,qBAAgB,GAAG,UAACJ,KAAiB,EAAI;MAC/C,IAAMK,WAAW,GAAGL,KAAK,CAACM,aAAa;MACvC,IAAMC,qBAAqB,GAAG,CAACZ,WAAW,CAAC,KAAI,CAACE,IAAI,EAAEQ,WAAW,CAAC;MAClE,IAAI,KAAI,CAACF,gBAAgB,KAAKE,WAAW,KAAK,IAAI,IAAIE,qBAAqB,CAAC,EAAE;QAC5E,KAAI,CAACC,WAAW,EAAE;;IAEtB,CAAC;IA5BC,IAAI,CAACV,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,YAAY,GAAGA,YAAY;EAClC;EAAC;IAAA;IAAA,OAED,sBAAU;MACR,IAAI,CAACI,gBAAgB,GAAGR,WAAW,CAAC,IAAI,CAACE,IAAI,EAAEY,QAAQ,CAACC,aAAa,CAAC;MACtED,QAAQ,CAACE,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACC,eAAe,CAAC;MAC1DH,QAAQ,CAACE,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACE,gBAAgB,CAAC;IAC9D;EAAC;IAAA;IAAA,OAED,mBAAO;MACLJ,QAAQ,CAACK,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACF,eAAe,CAAC;MAC7DH,QAAQ,CAACK,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAACD,gBAAgB,CAAC;IACjE;EAAC;IAAA;IAAA,OAiBO,uBAAW;MACjB,IAAI,CAACV,gBAAgB,GAAG,KAAK;MAC7B,IAAI,CAACJ,YAAY,EAAE;IACrB;EAAC;IAAA;IAAA,OAEO,wBAAY;MAClB,IAAI,CAACI,gBAAgB,GAAG,IAAI;MAC5B,IAAI,CAACL,YAAY,EAAE;IACrB;EAAC;EAAA;AAAA;AAAA,SA7CkBF,YAAY","names":["nodeBelongs","FocusTracker","node","onFocusEnter","onFocusLeave","event","focusIsInside","target","currentlyFocused","triggerFocus","nextFocused","relatedTarget","isNextFocusedInParent","triggerBlur","document","activeElement","addEventListener","focusInListener","focusOutListener","removeEventListener"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/lib/default/internal/focus-tracker.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { nodeBelongs } from './utils/node-belongs';\n\ninterface FocusTrackerOptions {\n  onFocusEnter: () => void;\n  onFocusLeave: () => void;\n}\n\nexport default class FocusTracker {\n  private readonly onFocusLeave: () => void;\n  private readonly onFocusEnter: () => void;\n\n  private currentlyFocused = false;\n\n  constructor(private node: HTMLElement, { onFocusEnter, onFocusLeave }: FocusTrackerOptions) {\n    this.onFocusEnter = onFocusEnter;\n    this.onFocusLeave = onFocusLeave;\n  }\n\n  initialize() {\n    this.currentlyFocused = nodeBelongs(this.node, document.activeElement);\n    document.addEventListener('focusin', this.focusInListener);\n    document.addEventListener('focusout', this.focusOutListener);\n  }\n\n  destroy() {\n    document.removeEventListener('focusin', this.focusInListener);\n    document.removeEventListener('focusout', this.focusOutListener);\n  }\n\n  private focusInListener = (event: FocusEvent) => {\n    const focusIsInside = nodeBelongs(this.node, event.target);\n    if (!this.currentlyFocused && focusIsInside) {\n      this.triggerFocus();\n    }\n  };\n\n  private focusOutListener = (event: FocusEvent) => {\n    const nextFocused = event.relatedTarget;\n    const isNextFocusedInParent = !nodeBelongs(this.node, nextFocused);\n    if (this.currentlyFocused && (nextFocused === null || isNextFocusedInParent)) {\n      this.triggerBlur();\n    }\n  };\n\n  private triggerBlur() {\n    this.currentlyFocused = false;\n    this.onFocusLeave();\n  }\n\n  private triggerFocus() {\n    this.currentlyFocused = true;\n    this.onFocusEnter();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}