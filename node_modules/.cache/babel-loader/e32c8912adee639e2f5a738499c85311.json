{"ast":null,"code":"import _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { Tile } from './tile';\nimport useRadioGroupForwardFocus from '../internal/hooks/forward-focus/radio-group';\nvar COLUMN_TRIGGERS = ['default', 'xxs', 'xs'];\nvar InternalTiles = React.forwardRef(function (_a, ref) {\n  var name = _a.name,\n    value = _a.value,\n    items = _a.items,\n    ariaLabel = _a.ariaLabel,\n    ariaRequired = _a.ariaRequired,\n    ariaControls = _a.ariaControls,\n    columns = _a.columns,\n    onChange = _a.onChange,\n    _a$__internalRootRef = _a.__internalRootRef,\n    __internalRootRef = _a$__internalRootRef === void 0 ? null : _a$__internalRootRef,\n    rest = __rest(_a, [\"name\", \"value\", \"items\", \"ariaLabel\", \"ariaRequired\", \"ariaControls\", \"columns\", \"onChange\", \"__internalRootRef\"]);\n  var baseProps = getBaseProps(rest);\n  var _useFormFieldContext = useFormFieldContext(rest),\n    ariaDescribedby = _useFormFieldContext.ariaDescribedby,\n    ariaLabelledby = _useFormFieldContext.ariaLabelledby;\n  var generatedName = useUniqueId('awsui-tiles-');\n  var _useRadioGroupForward = useRadioGroupForwardFocus(ref, items, value),\n    _useRadioGroupForward2 = _slicedToArray(_useRadioGroupForward, 2),\n    tileRef = _useRadioGroupForward2[0],\n    tileRefIndex = _useRadioGroupForward2[1];\n  var _useContainerBreakpoi = useContainerBreakpoints(COLUMN_TRIGGERS),\n    _useContainerBreakpoi2 = _slicedToArray(_useContainerBreakpoi, 2),\n    breakpoint = _useContainerBreakpoi2[0],\n    breakpointRef = _useContainerBreakpoi2[1];\n  var mergedRef = useMergeRefs(breakpointRef, __internalRootRef);\n  var columnCount = getColumnCount(items, columns);\n  return React.createElement(\"div\", Object.assign({\n    role: \"radiogroup\",\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-required\": ariaRequired,\n    \"aria-controls\": ariaControls\n  }, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: mergedRef\n  }), React.createElement(\"div\", {\n    className: clsx(styles.columns, styles[\"column-\".concat(columnCount)])\n  }, items && items.map(function (item, index) {\n    return React.createElement(Tile, {\n      ref: index === tileRefIndex ? tileRef : undefined,\n      key: item.value,\n      item: item,\n      selected: item.value === value,\n      name: name || generatedName,\n      breakpoint: breakpoint,\n      onChange: onChange\n    });\n  })));\n});\nfunction getColumnCount(items, columns) {\n  if (columns) {\n    return columns;\n  }\n  var nItems = items ? items.length : 0;\n  var columnsLookup = {\n    0: 1,\n    1: 1,\n    2: 2,\n    4: 2,\n    8: 2\n  };\n  return columnsLookup[nItems] || 3;\n}\nexport default InternalTiles;","map":{"version":3,"mappings":"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","names":["clsx","React","getBaseProps","styles","useFormFieldContext","useUniqueId","useContainerBreakpoints","useMergeRefs","Tile","useRadioGroupForwardFocus","COLUMN_TRIGGERS","InternalTiles","forwardRef","_a","ref","name","value","items","ariaLabel","ariaRequired","ariaControls","columns","onChange","__internalRootRef","rest","baseProps","ariaDescribedby","ariaLabelledby","generatedName","tileRef","tileRefIndex","breakpoint","breakpointRef","mergedRef","columnCount","getColumnCount","role","className","root","map","item","index","undefined","key","selected","nItems","length","columnsLookup"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/tiles/lib/default/tiles/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { TilesProps } from './interfaces';\nimport styles from './styles.css.js';\n\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { Tile } from './tile';\nimport useRadioGroupForwardFocus from '../internal/hooks/forward-focus/radio-group';\n\nconst COLUMN_TRIGGERS: TilesProps.Breakpoint[] = ['default', 'xxs', 'xs'];\n\ntype InternalTilesProps = TilesProps & InternalBaseComponentProps;\n\nconst InternalTiles = React.forwardRef(\n  (\n    {\n      name,\n      value,\n      items,\n      ariaLabel,\n      ariaRequired,\n      ariaControls,\n      columns,\n      onChange,\n      __internalRootRef = null,\n      ...rest\n    }: InternalTilesProps,\n    ref: React.Ref<TilesProps.Ref>\n  ) => {\n    const baseProps = getBaseProps(rest);\n    const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(rest);\n    const generatedName = useUniqueId('awsui-tiles-');\n\n    const [tileRef, tileRefIndex] = useRadioGroupForwardFocus(ref, items, value);\n    const [breakpoint, breakpointRef] = useContainerBreakpoints(COLUMN_TRIGGERS);\n    const mergedRef = useMergeRefs(breakpointRef, __internalRootRef);\n\n    const columnCount = getColumnCount(items, columns);\n\n    return (\n      <div\n        role=\"radiogroup\"\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledby}\n        aria-describedby={ariaDescribedby}\n        aria-required={ariaRequired}\n        aria-controls={ariaControls}\n        {...baseProps}\n        className={clsx(baseProps.className, styles.root)}\n        ref={mergedRef}\n      >\n        <div className={clsx(styles.columns, styles[`column-${columnCount}`])}>\n          {items &&\n            items.map((item, index) => (\n              <Tile\n                ref={index === tileRefIndex ? tileRef : undefined}\n                key={item.value}\n                item={item}\n                selected={item.value === value}\n                name={name || generatedName}\n                breakpoint={breakpoint}\n                onChange={onChange}\n              />\n            ))}\n        </div>\n      </div>\n    );\n  }\n);\n\nfunction getColumnCount(\n  items: ReadonlyArray<TilesProps.TilesDefinition> | undefined,\n  columns: number | undefined\n): number {\n  if (columns) {\n    return columns;\n  }\n\n  const nItems = items ? items.length : 0;\n  const columnsLookup: Record<number, number> = {\n    0: 1,\n    1: 1,\n    2: 2,\n    4: 2,\n    8: 2,\n  };\n  return columnsLookup[nItems] || 3;\n}\n\nexport default InternalTiles;\n"]},"metadata":{},"sourceType":"module"}