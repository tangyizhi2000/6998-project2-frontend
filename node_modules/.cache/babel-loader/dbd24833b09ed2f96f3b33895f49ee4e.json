{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport InternalContainer from '../container/internal';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { getTabElementId, TabHeaderBar } from './tab-header-bar';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nvar lastGeneratedId = 0;\nexport var nextGeneratedId = function nextGeneratedId() {\n  return \"awsui-tabs-\".concat(lastGeneratedId++, \"-\").concat(Math.round(Math.random() * 10000));\n};\nfunction firstEnabledTab(tabs) {\n  var enabledTabs = tabs.filter(function (tab) {\n    return !tab.disabled;\n  });\n  if (enabledTabs.length > 0) {\n    return enabledTabs[0];\n  }\n  return null;\n}\nexport default function Tabs(_a) {\n  var _b, _c;\n  var tabs = _a.tabs,\n    _a$variant = _a.variant,\n    variant = _a$variant === void 0 ? 'default' : _a$variant,\n    _onChange = _a.onChange,\n    controlledTabId = _a.activeTabId,\n    ariaLabel = _a.ariaLabel,\n    ariaLabelledby = _a.ariaLabelledby,\n    _a$disableContentPadd = _a.disableContentPaddings,\n    disableContentPaddings = _a$disableContentPadd === void 0 ? false : _a$disableContentPadd,\n    i18nStrings = _a.i18nStrings,\n    rest = __rest(_a, [\"tabs\", \"variant\", \"onChange\", \"activeTabId\", \"ariaLabel\", \"ariaLabelledby\", \"disableContentPaddings\", \"i18nStrings\"]);\n  var _iterator = _createForOfIteratorHelper(tabs),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var tab = _step.value;\n      checkSafeUrl('Tabs', tab.href);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var _useBaseComponent = useBaseComponent('Tabs'),\n    __internalRootRef = _useBaseComponent.__internalRootRef;\n  var _useState = useState(function () {\n      return nextGeneratedId();\n    }),\n    _useState2 = _slicedToArray(_useState, 1),\n    idNamespace = _useState2[0];\n  var _useControllable = useControllable(controlledTabId, _onChange, (_c = (_b = firstEnabledTab(tabs)) === null || _b === void 0 ? void 0 : _b.id) !== null && _c !== void 0 ? _c : '', {\n      componentName: 'Tabs',\n      controlledProp: 'activeTabId',\n      changeHandler: 'onChange'\n    }),\n    _useControllable2 = _slicedToArray(_useControllable, 2),\n    activeTabId = _useControllable2[0],\n    setActiveTabId = _useControllable2[1];\n  var baseProps = getBaseProps(rest);\n  var content = function content() {\n    var selectedTab = tabs.filter(function (tab) {\n      return tab.id === activeTabId;\n    })[0];\n    var renderContent = function renderContent(tab) {\n      var _clsx;\n      var isTabSelected = tab === selectedTab;\n      var classes = clsx((_clsx = {}, _defineProperty(_clsx, styles['tabs-content'], true), _defineProperty(_clsx, styles['tabs-content-active'], isTabSelected), _clsx));\n      var contentAttributes = {\n        className: classes,\n        role: 'tabpanel',\n        id: \"\".concat(idNamespace, \"-\").concat(tab.id, \"-panel\"),\n        key: \"\".concat(idNamespace, \"-\").concat(tab.id, \"-panel\"),\n        tabIndex: 0,\n        'aria-labelledby': getTabElementId({\n          namespace: idNamespace,\n          tabId: tab.id\n        })\n      };\n      var isContentShown = isTabSelected && !selectedTab.disabled;\n      return React.createElement(\"div\", Object.assign({}, contentAttributes), isContentShown && selectedTab.content);\n    };\n    return React.createElement(\"div\", {\n      className: clsx(variant === 'container' || variant === 'stacked' ? styles['tabs-container-content-wrapper'] : styles['tabs-content-wrapper'], _defineProperty({}, styles['with-paddings'], !disableContentPaddings))\n    }, tabs.map(renderContent));\n  };\n  var header = React.createElement(TabHeaderBar, {\n    activeTabId: activeTabId,\n    variant: variant,\n    idNamespace: idNamespace,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    tabs: tabs,\n    onChange: function onChange(changeDetail) {\n      setActiveTabId(changeDetail.activeTabId);\n      fireNonCancelableEvent(_onChange, changeDetail);\n    },\n    i18nStrings: i18nStrings\n  });\n  if (variant === 'container' || variant === 'stacked') {\n    return React.createElement(InternalContainer, Object.assign({\n      header: header,\n      disableHeaderPaddings: true\n    }, baseProps, {\n      className: clsx(baseProps.className, styles.root),\n      __internalRootRef: __internalRootRef,\n      disableContentPaddings: true,\n      variant: variant === 'stacked' ? 'stacked' : 'default'\n    }), content());\n  }\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root, styles.tabs),\n    ref: __internalRootRef\n  }), header, content());\n}\napplyDisplayName(Tabs, 'Tabs');","map":{"version":3,"mappings":"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","names":["React","useState","getBaseProps","fireNonCancelableEvent","InternalContainer","clsx","styles","getTabElementId","TabHeaderBar","useControllable","applyDisplayName","useBaseComponent","checkSafeUrl","lastGeneratedId","nextGeneratedId","Math","round","random","firstEnabledTab","tabs","enabledTabs","filter","tab","disabled","length","Tabs","_a","variant","onChange","controlledTabId","activeTabId","ariaLabel","ariaLabelledby","disableContentPaddings","i18nStrings","rest","href","__internalRootRef","idNamespace","id","componentName","controlledProp","changeHandler","setActiveTabId","baseProps","content","selectedTab","renderContent","isTabSelected","classes","contentAttributes","className","role","key","tabIndex","namespace","tabId","isContentShown","map","header","changeDetail","disableHeaderPaddings","root","ref"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/tabs/lib/default/tabs/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport InternalContainer from '../container/internal';\nimport { TabsProps } from './interfaces';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { getTabElementId, TabHeaderBar } from './tab-header-bar';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\n\nexport { TabsProps };\n\nlet lastGeneratedId = 0;\nexport const nextGeneratedId = () => `awsui-tabs-${lastGeneratedId++}-${Math.round(Math.random() * 10000)}`;\n\nfunction firstEnabledTab(tabs: ReadonlyArray<TabsProps.Tab>) {\n  const enabledTabs = tabs.filter(tab => !tab.disabled);\n  if (enabledTabs.length > 0) {\n    return enabledTabs[0];\n  }\n  return null;\n}\n\nexport default function Tabs({\n  tabs,\n  variant = 'default',\n  onChange,\n  activeTabId: controlledTabId,\n  ariaLabel,\n  ariaLabelledby,\n  disableContentPaddings = false,\n  i18nStrings,\n  ...rest\n}: TabsProps) {\n  for (const tab of tabs) {\n    checkSafeUrl('Tabs', tab.href);\n  }\n  const { __internalRootRef } = useBaseComponent('Tabs');\n  const [idNamespace] = useState(() => nextGeneratedId());\n\n  const [activeTabId, setActiveTabId] = useControllable(controlledTabId, onChange, firstEnabledTab(tabs)?.id ?? '', {\n    componentName: 'Tabs',\n    controlledProp: 'activeTabId',\n    changeHandler: 'onChange',\n  });\n\n  const baseProps = getBaseProps(rest);\n\n  const content = () => {\n    const selectedTab = tabs.filter(tab => tab.id === activeTabId)[0];\n    const renderContent = (tab: TabsProps.Tab) => {\n      const isTabSelected = tab === selectedTab;\n\n      const classes = clsx({\n        [styles['tabs-content']]: true,\n        [styles['tabs-content-active']]: isTabSelected,\n      });\n\n      const contentAttributes: JSX.IntrinsicElements['div'] = {\n        className: classes,\n        role: 'tabpanel',\n        id: `${idNamespace}-${tab.id}-panel`,\n        key: `${idNamespace}-${tab.id}-panel`,\n        tabIndex: 0,\n        'aria-labelledby': getTabElementId({ namespace: idNamespace, tabId: tab.id }),\n      };\n\n      const isContentShown = isTabSelected && !selectedTab.disabled;\n      return <div {...contentAttributes}>{isContentShown && selectedTab.content}</div>;\n    };\n\n    return (\n      <div\n        className={clsx(\n          variant === 'container' || variant === 'stacked'\n            ? styles['tabs-container-content-wrapper']\n            : styles['tabs-content-wrapper'],\n          {\n            [styles['with-paddings']]: !disableContentPaddings,\n          }\n        )}\n      >\n        {tabs.map(renderContent)}\n      </div>\n    );\n  };\n\n  const header = (\n    <TabHeaderBar\n      activeTabId={activeTabId}\n      variant={variant}\n      idNamespace={idNamespace}\n      ariaLabel={ariaLabel}\n      ariaLabelledby={ariaLabelledby}\n      tabs={tabs}\n      onChange={changeDetail => {\n        setActiveTabId(changeDetail.activeTabId);\n        fireNonCancelableEvent(onChange, changeDetail);\n      }}\n      i18nStrings={i18nStrings}\n    />\n  );\n\n  if (variant === 'container' || variant === 'stacked') {\n    return (\n      <InternalContainer\n        header={header}\n        disableHeaderPaddings={true}\n        {...baseProps}\n        className={clsx(baseProps.className, styles.root)}\n        __internalRootRef={__internalRootRef}\n        disableContentPaddings={true}\n        variant={variant === 'stacked' ? 'stacked' : 'default'}\n      >\n        {content()}\n      </InternalContainer>\n    );\n  }\n\n  return (\n    <div {...baseProps} className={clsx(baseProps.className, styles.root, styles.tabs)} ref={__internalRootRef}>\n      {header}\n      {content()}\n    </div>\n  );\n}\n\napplyDisplayName(Tabs, 'Tabs');\n"]},"metadata":{},"sourceType":"module"}