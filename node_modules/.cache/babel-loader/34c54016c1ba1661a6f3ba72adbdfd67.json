{"ast":null,"code":"import React from 'react';\nimport InternalSpinner from '../spinner/internal';\nimport InternalIcon from '../icon/internal';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { InternalButton } from '../button/internal';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { isDevelopment } from '../internal/is-development';\nimport { throttle } from '../internal/utils/throttle';\nimport LiveRegion from '../internal/components/live-region';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport { sendDismissMetric } from './internal/analytics';\nimport { FOCUS_THROTTLE_DELAY } from './utils';\nimport { DATA_ATTR_ANALYTICS_FLASHBAR } from '../internal/analytics/selectors';\nimport { createUseDiscoveredAction } from '../internal/plugins/helpers';\nimport { awsuiPluginsInternal } from '../internal/plugins/api';\nimport { ActionsWrapper } from '../alert/actions-wrapper';\nconst ICON_TYPES = {\n  success: 'status-positive',\n  warning: 'status-warning',\n  info: 'status-info',\n  error: 'status-negative',\n  'in-progress': 'status-in-progress'\n};\nconst useDiscoveredAction = createUseDiscoveredAction(awsuiPluginsInternal.flashbar.onActionRegistered);\nfunction dismissButton(dismissLabel, onDismiss) {\n  return React.createElement(\"div\", {\n    className: styles['dismiss-button-wrapper']\n  }, React.createElement(InternalButton, {\n    onClick: onDismiss,\n    className: styles['dismiss-button'],\n    variant: \"flashbar-icon\",\n    iconName: \"close\",\n    formAction: \"none\",\n    ariaLabel: dismissLabel\n  }));\n}\nexport const focusFlashById = throttle((element, itemId) => {\n  var _a;\n  const selector = `[data-itemid=\"${CSS.escape(itemId)}\"] .${styles['flash-focus-container']}`;\n  (_a = element === null || element === void 0 ? void 0 : element.querySelector(selector)) === null || _a === void 0 ? void 0 : _a.focus();\n}, FOCUS_THROTTLE_DELAY, {\n  trailing: false\n});\nexport const Flash = React.forwardRef((_ref, ref) => {\n  let {\n    id,\n    header,\n    content,\n    dismissible,\n    dismissLabel,\n    statusIconAriaLabel,\n    loading,\n    action,\n    buttonText,\n    onButtonClick,\n    onDismiss,\n    className,\n    transitionState,\n    ariaRole,\n    i18nStrings,\n    type = 'info'\n  } = _ref;\n  if (isDevelopment) {\n    if (buttonText && !onButtonClick) {\n      warnOnce('Flashbar', `You provided a \\`buttonText\\` prop without an \\`onButtonClick\\` handler. This will render a non-interactive action button.`);\n    }\n    if (dismissible && !onDismiss) {\n      warnOnce('Flashbar', `You have set the \\`dismissible\\` prop without an \\`onDismiss\\` handler. This will render a non-interactive dismiss button.`);\n    }\n  }\n  const {\n    discoveredActions,\n    headerRef,\n    contentRef\n  } = useDiscoveredAction(type);\n  const iconType = ICON_TYPES[type];\n  const icon = loading ? React.createElement(InternalSpinner, null) : React.createElement(InternalIcon, {\n    name: iconType\n  });\n  const effectiveType = loading ? 'info' : type;\n  const handleDismiss = event => {\n    sendDismissMetric(effectiveType);\n    onDismiss && onDismiss(event);\n  };\n  const analyticsAttributes = {\n    [DATA_ATTR_ANALYTICS_FLASHBAR]: effectiveType\n  };\n  return (\n    // We're not using \"polite\" or \"assertive\" here, just turning default behavior off.\n    // eslint-disable-next-line @cloudscape-design/prefer-live-region\n    React.createElement(\"div\", Object.assign({\n      ref: ref,\n      role: ariaRole,\n      \"aria-live\": ariaRole ? 'off' : undefined,\n      \"data-itemid\": id,\n      className: clsx(styles.flash, styles[`flash-type-${effectiveType}`], className, transitionState && {\n        [styles.enter]: transitionState === 'enter',\n        [styles.entering]: transitionState === 'entering',\n        [styles.entered]: transitionState === 'entered',\n        [styles.exit]: transitionState === 'exit',\n        [styles.exiting]: transitionState === 'exiting',\n        [styles.exited]: transitionState === 'exited'\n      }, getVisualContextClassname(type === 'warning' && !loading ? 'flashbar-warning' : 'flashbar'))\n    }, analyticsAttributes), React.createElement(\"div\", {\n      className: styles['flash-body']\n    }, React.createElement(\"div\", {\n      className: styles['flash-focus-container'],\n      tabIndex: -1\n    }, React.createElement(\"div\", {\n      className: clsx(styles['flash-icon'], styles['flash-text']),\n      role: \"img\",\n      \"aria-label\": statusIconAriaLabel || (i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings[`${loading || type === 'in-progress' ? 'inProgress' : type}IconAriaLabel`])\n    }, icon), React.createElement(\"div\", {\n      className: clsx(styles['flash-message'], styles['flash-text'])\n    }, React.createElement(\"div\", {\n      className: styles['flash-header'],\n      ref: headerRef\n    }, header), React.createElement(\"div\", {\n      className: styles['flash-content'],\n      ref: contentRef\n    }, content))), React.createElement(ActionsWrapper, {\n      className: styles['action-button-wrapper'],\n      testUtilClasses: {\n        actionSlot: styles['action-slot'],\n        actionButton: styles['action-button']\n      },\n      action: action,\n      discoveredActions: discoveredActions,\n      buttonText: buttonText,\n      onButtonClick: onButtonClick\n    })), dismissible && dismissButton(dismissLabel, handleDismiss), ariaRole === 'status' && React.createElement(LiveRegion, null, statusIconAriaLabel, \" \", header, \" \", content))\n  );\n});","map":{"version":3,"mappings":"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","names":["React","InternalSpinner","InternalIcon","clsx","styles","InternalButton","warnOnce","isDevelopment","throttle","LiveRegion","getVisualContextClassname","sendDismissMetric","FOCUS_THROTTLE_DELAY","DATA_ATTR_ANALYTICS_FLASHBAR","createUseDiscoveredAction","awsuiPluginsInternal","ActionsWrapper","ICON_TYPES","success","warning","info","error","useDiscoveredAction","flashbar","onActionRegistered","dismissButton","dismissLabel","onDismiss","className","onClick","variant","iconName","formAction","ariaLabel","focusFlashById","element","itemId","selector","CSS","escape","querySelector","focus","trailing","Flash","forwardRef","ref","id","header","content","dismissible","statusIconAriaLabel","loading","action","buttonText","onButtonClick","transitionState","ariaRole","i18nStrings","type","discoveredActions","headerRef","contentRef","iconType","icon","name","effectiveType","handleDismiss","event","analyticsAttributes","role","undefined","flash","enter","entering","entered","exit","exiting","exited","tabIndex","testUtilClasses","actionSlot","actionButton"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/flashbar/lib/default/flashbar/flash.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { FlashbarProps } from './interfaces';\nimport React from 'react';\nimport InternalSpinner from '../spinner/internal';\nimport InternalIcon from '../icon/internal';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { InternalButton } from '../button/internal';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { isDevelopment } from '../internal/is-development';\nimport { throttle } from '../internal/utils/throttle';\nimport LiveRegion from '../internal/components/live-region';\nimport { ButtonProps } from '../button/interfaces';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\n\nimport { sendDismissMetric } from './internal/analytics';\n\nimport { FOCUS_THROTTLE_DELAY } from './utils';\nimport { DATA_ATTR_ANALYTICS_FLASHBAR } from '../internal/analytics/selectors';\nimport { createUseDiscoveredAction } from '../internal/plugins/helpers';\nimport { awsuiPluginsInternal } from '../internal/plugins/api';\nimport { ActionsWrapper } from '../alert/actions-wrapper';\n\nconst ICON_TYPES = {\n  success: 'status-positive',\n  warning: 'status-warning',\n  info: 'status-info',\n  error: 'status-negative',\n  'in-progress': 'status-in-progress',\n} as const;\n\nconst useDiscoveredAction = createUseDiscoveredAction(awsuiPluginsInternal.flashbar.onActionRegistered);\n\nfunction dismissButton(\n  dismissLabel: FlashbarProps.MessageDefinition['dismissLabel'],\n  onDismiss: FlashbarProps.MessageDefinition['onDismiss']\n) {\n  return (\n    <div className={styles['dismiss-button-wrapper']}>\n      <InternalButton\n        onClick={onDismiss}\n        className={styles['dismiss-button']}\n        variant=\"flashbar-icon\"\n        iconName=\"close\"\n        formAction=\"none\"\n        ariaLabel={dismissLabel}\n      />\n    </div>\n  );\n}\n\nexport const focusFlashById = throttle(\n  (element: HTMLElement | null, itemId: string) => {\n    const selector = `[data-itemid=\"${CSS.escape(itemId)}\"] .${styles['flash-focus-container']}`;\n    element?.querySelector<HTMLElement>(selector)?.focus();\n  },\n  FOCUS_THROTTLE_DELAY,\n  { trailing: false }\n);\n\nexport interface FlashProps extends FlashbarProps.MessageDefinition {\n  className: string;\n  transitionState?: string;\n  i18nStrings?: FlashbarProps.I18nStrings;\n}\n\nexport const Flash = React.forwardRef(\n  (\n    {\n      id,\n      header,\n      content,\n      dismissible,\n      dismissLabel,\n      statusIconAriaLabel,\n      loading,\n      action,\n      buttonText,\n      onButtonClick,\n      onDismiss,\n      className,\n      transitionState,\n      ariaRole,\n      i18nStrings,\n      type = 'info',\n    }: FlashProps,\n    ref: React.Ref<HTMLDivElement>\n  ) => {\n    if (isDevelopment) {\n      if (buttonText && !onButtonClick) {\n        warnOnce(\n          'Flashbar',\n          `You provided a \\`buttonText\\` prop without an \\`onButtonClick\\` handler. This will render a non-interactive action button.`\n        );\n      }\n\n      if (dismissible && !onDismiss) {\n        warnOnce(\n          'Flashbar',\n          `You have set the \\`dismissible\\` prop without an \\`onDismiss\\` handler. This will render a non-interactive dismiss button.`\n        );\n      }\n    }\n\n    const { discoveredActions, headerRef, contentRef } = useDiscoveredAction(type);\n\n    const iconType = ICON_TYPES[type];\n\n    const icon = loading ? <InternalSpinner /> : <InternalIcon name={iconType} />;\n\n    const effectiveType = loading ? 'info' : type;\n\n    const handleDismiss: ButtonProps['onClick'] = event => {\n      sendDismissMetric(effectiveType);\n      onDismiss && onDismiss(event);\n    };\n\n    const analyticsAttributes = {\n      [DATA_ATTR_ANALYTICS_FLASHBAR]: effectiveType,\n    };\n\n    return (\n      // We're not using \"polite\" or \"assertive\" here, just turning default behavior off.\n      // eslint-disable-next-line @cloudscape-design/prefer-live-region\n      <div\n        ref={ref}\n        role={ariaRole}\n        aria-live={ariaRole ? 'off' : undefined}\n        data-itemid={id}\n        className={clsx(\n          styles.flash,\n          styles[`flash-type-${effectiveType}`],\n          className,\n          transitionState && {\n            [styles.enter]: transitionState === 'enter',\n            [styles.entering]: transitionState === 'entering',\n            [styles.entered]: transitionState === 'entered',\n            [styles.exit]: transitionState === 'exit',\n            [styles.exiting]: transitionState === 'exiting',\n            [styles.exited]: transitionState === 'exited',\n          },\n          getVisualContextClassname(type === 'warning' && !loading ? 'flashbar-warning' : 'flashbar')\n        )}\n        {...analyticsAttributes}\n      >\n        <div className={styles['flash-body']}>\n          <div className={styles['flash-focus-container']} tabIndex={-1}>\n            <div\n              className={clsx(styles['flash-icon'], styles['flash-text'])}\n              role=\"img\"\n              aria-label={\n                statusIconAriaLabel ||\n                i18nStrings?.[`${loading || type === 'in-progress' ? 'inProgress' : type}IconAriaLabel`]\n              }\n            >\n              {icon}\n            </div>\n            <div className={clsx(styles['flash-message'], styles['flash-text'])}>\n              <div className={styles['flash-header']} ref={headerRef}>\n                {header}\n              </div>\n              <div className={styles['flash-content']} ref={contentRef}>\n                {content}\n              </div>\n            </div>\n          </div>\n          <ActionsWrapper\n            className={styles['action-button-wrapper']}\n            testUtilClasses={{\n              actionSlot: styles['action-slot'],\n              actionButton: styles['action-button'],\n            }}\n            action={action}\n            discoveredActions={discoveredActions}\n            buttonText={buttonText}\n            onButtonClick={onButtonClick}\n          />\n        </div>\n        {dismissible && dismissButton(dismissLabel, handleDismiss)}\n        {ariaRole === 'status' && (\n          <LiveRegion>\n            {statusIconAriaLabel} {header} {content}\n          </LiveRegion>\n        )}\n      </div>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}