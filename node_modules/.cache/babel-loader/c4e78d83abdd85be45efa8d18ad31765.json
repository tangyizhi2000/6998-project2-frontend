{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\nimport ChartLegend from '../internal/components/chart-legend';\nimport { chartLegendMap } from './utils';\nexport default function InternalChartLegend(_ref) {\n  var series = _ref.series,\n    visibleSeries = _ref.visibleSeries,\n    highlightedSeries = _ref.highlightedSeries,\n    onHighlightChange = _ref.onHighlightChange,\n    legendTitle = _ref.legendTitle,\n    ariaLabel = _ref.ariaLabel,\n    plotContainerRef = _ref.plotContainerRef;\n  var legendItems = useMemo(function () {\n    return series.filter(function (s) {\n      return visibleSeries.indexOf(s.series) !== -1;\n    }).map(function (_ref2) {\n      var series = _ref2.series,\n        color = _ref2.color;\n      return {\n        label: series.title,\n        type: chartLegendMap[series.type],\n        color: color,\n        datum: series\n      };\n    });\n  }, [series, visibleSeries]);\n  return React.createElement(ChartLegend, {\n    series: legendItems,\n    highlightedSeries: highlightedSeries || null,\n    onHighlightChange: onHighlightChange,\n    legendTitle: legendTitle,\n    ariaLabel: ariaLabel,\n    plotContainerRef: plotContainerRef\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAEtC,OAAOC,WAAW,MAAM,qCAAqC;AAI7D,SAASC,cAAc,QAAQ,SAAS;AAYxC,eAAc,SAAUC,mBAAmB,OAQb;EAAA,IAP5BC,MAAM,QAANA,MAAM;IACNC,aAAa,QAAbA,aAAa;IACbC,iBAAiB,QAAjBA,iBAAiB;IACjBC,iBAAiB,QAAjBA,iBAAiB;IACjBC,WAAW,QAAXA,WAAW;IACXC,SAAS,QAATA,SAAS;IACTC,gBAAgB,QAAhBA,gBAAgB;EAEhB,IAAMC,WAAW,GAAsEX,OAAO,CAAC,YAAK;IAClG,OAAOI,MAAM,CACVQ,MAAM,CAAC,WAAC;MAAA,OAAIP,aAAa,CAACQ,OAAO,CAACC,CAAC,CAACV,MAAM,CAAC,KAAK,CAAC,CAAC;IAAA,EAAC,CACnDW,GAAG,CAAC;MAAA,IAAGX,MAAM,SAANA,MAAM;QAAEY,KAAK,SAALA,KAAK;MAAA,OAAQ;QAC3BC,KAAK,EAAEb,MAAM,CAACc,KAAK;QACnBC,IAAI,EAAEjB,cAAc,CAACE,MAAM,CAACe,IAAI,CAAC;QACjCH,KAAK,EAALA,KAAK;QACLI,KAAK,EAAEhB;OACR;IAAA,CAAC,CAAC;EACP,CAAC,EAAE,CAACA,MAAM,EAAEC,aAAa,CAAC,CAAC;EAE3B,OACEN,oBAACE,WAAW;IACVG,MAAM,EAAEO,WAAW;IACnBL,iBAAiB,EAAEA,iBAAiB,IAAI,IAAI;IAC5CC,iBAAiB,EAAEA,iBAAiB;IACpCC,WAAW,EAAEA,WAAW;IACxBC,SAAS,EAAEA,SAAS;IACpBC,gBAAgB,EAAEA;EAAgB,EAClC;AAEN","names":["React","useMemo","ChartLegend","chartLegendMap","InternalChartLegend","series","visibleSeries","highlightedSeries","onHighlightChange","legendTitle","ariaLabel","plotContainerRef","legendItems","filter","indexOf","s","map","color","label","title","type","datum"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/mixed-line-bar-chart/lib/default/mixed-line-bar-chart/chart-legend.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\n\nimport ChartLegend from '../internal/components/chart-legend';\nimport { ChartFilterProps } from '../internal/components/chart-filter';\n\nimport { ChartDataTypes, MixedLineBarChartProps, InternalChartSeries } from './interfaces';\nimport { chartLegendMap } from './utils';\n\ninterface InternalChartLegendProps<T extends ChartDataTypes> {\n  series: ReadonlyArray<InternalChartSeries<T>>;\n  visibleSeries: ReadonlyArray<MixedLineBarChartProps.ChartSeries<T>>;\n  plotContainerRef: React.RefObject<HTMLDivElement>;\n  highlightedSeries?: MixedLineBarChartProps.ChartSeries<T> | null;\n  onHighlightChange: (series: MixedLineBarChartProps.ChartSeries<T> | null) => void;\n  legendTitle?: string;\n  ariaLabel?: string;\n}\n\nexport default function InternalChartLegend<T extends number | string | Date>({\n  series,\n  visibleSeries,\n  highlightedSeries,\n  onHighlightChange,\n  legendTitle,\n  ariaLabel,\n  plotContainerRef,\n}: InternalChartLegendProps<T>) {\n  const legendItems: ChartFilterProps<MixedLineBarChartProps.ChartSeries<T>>['series'] = useMemo(() => {\n    return series\n      .filter(s => visibleSeries.indexOf(s.series) !== -1)\n      .map(({ series, color }) => ({\n        label: series.title,\n        type: chartLegendMap[series.type],\n        color,\n        datum: series,\n      }));\n  }, [series, visibleSeries]);\n\n  return (\n    <ChartLegend<MixedLineBarChartProps.ChartSeries<T>>\n      series={legendItems}\n      highlightedSeries={highlightedSeries || null}\n      onHighlightChange={onHighlightChange}\n      legendTitle={legendTitle}\n      ariaLabel={ariaLabel}\n      plotContainerRef={plotContainerRef}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}