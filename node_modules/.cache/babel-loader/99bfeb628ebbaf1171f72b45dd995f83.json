{"ast":null,"code":"import _toConsumableArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport InternalBox from '../box/internal';\nimport { InternalButton } from '../button/internal';\nimport InternalCheckbox from '../checkbox/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport InternalFormField from '../form-field/internal';\nimport InternalModal from '../modal/internal';\nimport InternalSelect from '../select/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { LightThemes, DarkThemes } from './ace-themes';\nfunction filterThemes(allThemes, available) {\n  if (!available) {\n    return allThemes;\n  }\n  return allThemes.filter(function (theme) {\n    return available.indexOf(theme.value) > -1;\n  });\n}\nexport default (function (props) {\n  var _a, _b, _c, _d, _e, _f;\n  var _useState = useState((_b = (_a = props.preferences) === null || _a === void 0 ? void 0 : _a.wrapLines) !== null && _b !== void 0 ? _b : true),\n    _useState2 = _slicedToArray(_useState, 2),\n    wrapLines = _useState2[0],\n    setWrapLines = _useState2[1];\n  var _useState3 = useState((_d = (_c = props.preferences) === null || _c === void 0 ? void 0 : _c.theme) !== null && _d !== void 0 ? _d : props.defaultTheme),\n    _useState4 = _slicedToArray(_useState3, 2),\n    theme = _useState4[0],\n    setTheme = _useState4[1];\n  var themeOptions = [{\n    label: props.i18nStrings.lightThemes,\n    options: filterThemes(LightThemes, (_e = props.themes) === null || _e === void 0 ? void 0 : _e.light)\n  }, {\n    label: props.i18nStrings.darkThemes,\n    options: filterThemes(DarkThemes, (_f = props.themes) === null || _f === void 0 ? void 0 : _f.dark)\n  }];\n  var _useState5 = useState(function () {\n      return [].concat(_toConsumableArray(LightThemes), _toConsumableArray(DarkThemes)).filter(function (t) {\n        return t.value === theme;\n      })[0];\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedThemeOption = _useState6[0],\n    setSelectedThemeOption = _useState6[1];\n  var onThemeSelected = function onThemeSelected(e) {\n    setTheme(e.detail.selectedOption.value);\n    setSelectedThemeOption(e.detail.selectedOption);\n  };\n  return React.createElement(InternalModal, {\n    size: \"medium\",\n    visible: true,\n    onDismiss: props.onDismiss,\n    header: props.i18nStrings.header,\n    closeAriaLabel: props.i18nStrings.cancel,\n    footer: React.createElement(InternalBox, {\n      float: \"right\"\n    }, React.createElement(InternalSpaceBetween, {\n      direction: \"horizontal\",\n      size: \"xs\"\n    }, React.createElement(InternalButton, {\n      onClick: props.onDismiss\n    }, props.i18nStrings.cancel), React.createElement(InternalButton, {\n      onClick: function onClick() {\n        return props.onConfirm({\n          wrapLines: wrapLines,\n          theme: theme\n        });\n      },\n      variant: \"primary\"\n    }, props.i18nStrings.confirm)))\n  }, React.createElement(InternalColumnLayout, {\n    columns: 2,\n    variant: \"text-grid\"\n  }, React.createElement(\"div\", null, React.createElement(InternalCheckbox, {\n    checked: wrapLines,\n    onChange: function onChange(e) {\n      return setWrapLines(e.detail.checked);\n    }\n  }, props.i18nStrings.wrapLines)), React.createElement(\"div\", null, React.createElement(InternalFormField, {\n    label: props.i18nStrings.theme\n  }, React.createElement(InternalSelect, {\n    selectedOption: selectedThemeOption,\n    onChange: onThemeSelected,\n    options: themeOptions,\n    filteringType: \"auto\",\n    filteringAriaLabel: props.i18nStrings.themeFilteringAriaLabel,\n    filteringClearAriaLabel: props.i18nStrings.themeFilteringClearAriaLabel,\n    filteringPlaceholder: props.i18nStrings.themeFilteringPlaceholder\n  })))));\n});","map":{"version":3,"mappings":"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","names":["React","useState","InternalBox","InternalButton","InternalCheckbox","InternalColumnLayout","InternalFormField","InternalModal","InternalSelect","InternalSpaceBetween","LightThemes","DarkThemes","filterThemes","allThemes","available","filter","indexOf","theme","value","props","preferences","wrapLines","setWrapLines","defaultTheme","setTheme","themeOptions","label","i18nStrings","lightThemes","options","themes","light","darkThemes","dark","t","selectedThemeOption","setSelectedThemeOption","onThemeSelected","e","detail","selectedOption","size","visible","onDismiss","header","closeAriaLabel","cancel","footer","float","direction","onClick","onConfirm","variant","confirm","columns","checked","onChange","filteringType","filteringAriaLabel","themeFilteringAriaLabel","filteringClearAriaLabel","themeFilteringClearAriaLabel","filteringPlaceholder","themeFilteringPlaceholder"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/code-editor/lib/default/code-editor/preferences-modal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\n\nimport InternalBox from '../box/internal';\nimport { InternalButton } from '../button/internal';\nimport InternalCheckbox from '../checkbox/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport InternalFormField from '../form-field/internal';\nimport InternalModal from '../modal/internal';\nimport { SelectProps } from '../select/interfaces';\nimport InternalSelect from '../select/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { NonCancelableCustomEvent } from '../internal/events';\nimport { LightThemes, DarkThemes } from './ace-themes';\nimport { CodeEditorProps } from './interfaces';\n\ninterface PreferencesModali18nStrings {\n  header?: string;\n  cancel?: string;\n  confirm?: string;\n  wrapLines?: string;\n  theme?: string;\n  lightThemes?: string;\n  darkThemes?: string;\n  themeFilteringPlaceholder?: string;\n  themeFilteringAriaLabel?: string;\n  themeFilteringClearAriaLabel?: string;\n}\n\ninterface PreferencesModalProps {\n  preferences?: Partial<CodeEditorProps.Preferences>;\n\n  i18nStrings: PreferencesModali18nStrings;\n\n  themes: CodeEditorProps['themes'];\n  defaultTheme: CodeEditorProps.Theme;\n\n  onConfirm: (preferences: CodeEditorProps.Preferences) => void;\n  onDismiss: () => void;\n}\n\nfunction filterThemes(allThemes: ReadonlyArray<SelectProps.Option>, available: ReadonlyArray<string> | undefined) {\n  if (!available) {\n    return allThemes;\n  }\n  return allThemes.filter(theme => available.indexOf(theme.value!) > -1);\n}\n\nexport default (props: PreferencesModalProps) => {\n  const [wrapLines, setWrapLines] = useState<boolean>(props.preferences?.wrapLines ?? true);\n  const [theme, setTheme] = useState<CodeEditorProps.Theme>(props.preferences?.theme ?? props.defaultTheme);\n  const themeOptions = [\n    {\n      label: props.i18nStrings.lightThemes,\n      options: filterThemes(LightThemes, props.themes?.light),\n    },\n    {\n      label: props.i18nStrings.darkThemes,\n      options: filterThemes(DarkThemes, props.themes?.dark),\n    },\n  ];\n  const [selectedThemeOption, setSelectedThemeOption] = useState<SelectProps.Option>(\n    () => [...LightThemes, ...DarkThemes].filter(t => t.value === theme)[0]\n  );\n\n  const onThemeSelected = (e: NonCancelableCustomEvent<SelectProps.ChangeDetail>) => {\n    setTheme(e.detail.selectedOption.value as CodeEditorProps.Theme);\n    setSelectedThemeOption(e.detail.selectedOption);\n  };\n\n  return (\n    <InternalModal\n      size=\"medium\"\n      visible={true}\n      onDismiss={props.onDismiss}\n      header={props.i18nStrings.header}\n      closeAriaLabel={props.i18nStrings.cancel}\n      footer={\n        <InternalBox float=\"right\">\n          <InternalSpaceBetween direction=\"horizontal\" size=\"xs\">\n            <InternalButton onClick={props.onDismiss}>{props.i18nStrings.cancel}</InternalButton>\n            <InternalButton onClick={() => props.onConfirm({ wrapLines, theme })} variant=\"primary\">\n              {props.i18nStrings.confirm}\n            </InternalButton>\n          </InternalSpaceBetween>\n        </InternalBox>\n      }\n    >\n      <InternalColumnLayout columns={2} variant=\"text-grid\">\n        <div>\n          <InternalCheckbox checked={wrapLines} onChange={e => setWrapLines(e.detail.checked)}>\n            {props.i18nStrings.wrapLines}\n          </InternalCheckbox>\n        </div>\n        <div>\n          <InternalFormField label={props.i18nStrings.theme}>\n            <InternalSelect\n              selectedOption={selectedThemeOption}\n              onChange={onThemeSelected}\n              options={themeOptions}\n              filteringType=\"auto\"\n              filteringAriaLabel={props.i18nStrings.themeFilteringAriaLabel}\n              filteringClearAriaLabel={props.i18nStrings.themeFilteringClearAriaLabel}\n              filteringPlaceholder={props.i18nStrings.themeFilteringPlaceholder}\n            />\n          </InternalFormField>\n        </div>\n      </InternalColumnLayout>\n    </InternalModal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}