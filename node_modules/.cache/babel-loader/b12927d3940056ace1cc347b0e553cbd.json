{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport InternalBox from '../../box/internal';\nimport { InternalButton } from '../../button/internal';\nimport InternalSpaceBetween from '../../space-between/internal';\nimport PopoverContainer from '../../popover/container';\nimport PopoverBody from '../../popover/body';\nimport InternalAlert from '../../alert/internal';\nimport { scrollElementIntoView } from '../../internal/utils/scrollable-containers';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id/index.js';\nimport { joinStrings } from '../../internal/utils/strings/join-strings.js';\nconst arrow = position => React.createElement(\"div\", {\n  className: clsx(styles.arrow, styles[`arrow-position-${position}`])\n}, React.createElement(\"div\", {\n  className: styles['arrow-outer']\n}), React.createElement(\"div\", {\n  className: styles['arrow-inner']\n}));\nexport function AnnotationPopover(_ref) {\n  let {\n    title,\n    content,\n    alert,\n    direction = 'top',\n    taskLocalStepIndex,\n    totalLocalSteps,\n    showPreviousButton,\n    showFinishButton,\n    onDismiss,\n    nextButtonEnabled,\n    onNextButtonClick,\n    onFinish,\n    trackRef,\n    previousButtonEnabled,\n    onPreviousButtonClick,\n    i18nStrings\n  } = _ref;\n  useEffect(() => {\n    var _a;\n    scrollElementIntoView((_a = trackRef.current) !== null && _a !== void 0 ? _a : undefined);\n  }, [trackRef]);\n  const popoverHeaderId = useUniqueId('poppver-header-');\n  const stepCounterId = useUniqueId('step-counter-');\n  return React.createElement(PopoverContainer, {\n    size: \"medium\",\n    fixedWidth: false,\n    position: direction,\n    trackRef: trackRef,\n    trackKey: taskLocalStepIndex,\n    variant: \"annotation\",\n    arrow: arrow,\n    zIndex: 1000\n  }, React.createElement(PopoverBody, {\n    dismissButton: true,\n    dismissAriaLabel: i18nStrings.labelDismissAnnotation,\n    header: React.createElement(InternalBox, {\n      id: popoverHeaderId,\n      color: \"text-body-secondary\",\n      fontSize: \"body-s\",\n      margin: {\n        top: 'xxxs'\n      },\n      className: styles.header\n    }, title),\n    onDismiss: onDismiss,\n    className: styles.annotation,\n    variant: \"annotation\",\n    overflowVisible: \"content\",\n    // create new dialog to have the native dialog behavior of the screen readers\n    key: taskLocalStepIndex,\n    ariaLabelledby: joinStrings(popoverHeaderId, stepCounterId)\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"s\"\n  }, React.createElement(\"div\", {\n    className: styles.description\n  }, React.createElement(InternalBox, {\n    className: styles.content\n  }, content)), alert && React.createElement(InternalAlert, {\n    type: \"warning\"\n  }, alert), React.createElement(InternalSpaceBetween, {\n    size: \"s\"\n  }, React.createElement(\"div\", {\n    className: styles.divider\n  }), React.createElement(\"div\", {\n    className: styles.actionBar\n  }, React.createElement(\"div\", {\n    className: styles.stepCounter\n  }, React.createElement(InternalBox, {\n    id: stepCounterId,\n    className: styles['step-counter-content'],\n    color: \"text-body-secondary\",\n    fontSize: \"body-s\"\n  }, i18nStrings.stepCounterText(taskLocalStepIndex !== null && taskLocalStepIndex !== void 0 ? taskLocalStepIndex : 0, totalLocalSteps !== null && totalLocalSteps !== void 0 ? totalLocalSteps : 0))), React.createElement(InternalSpaceBetween, {\n    size: \"xs\",\n    direction: \"horizontal\"\n  }, showPreviousButton && React.createElement(InternalButton, {\n    variant: \"link\",\n    onClick: onPreviousButtonClick,\n    disabled: !previousButtonEnabled,\n    formAction: \"none\",\n    ariaLabel: i18nStrings.previousButtonText,\n    className: styles['previous-button']\n  }, i18nStrings.previousButtonText), showFinishButton ? React.createElement(InternalButton, {\n    onClick: onFinish,\n    formAction: \"none\",\n    ariaLabel: i18nStrings.finishButtonText,\n    className: styles['finish-button']\n  }, i18nStrings.finishButtonText) : React.createElement(InternalButton, {\n    onClick: onNextButtonClick,\n    disabled: !nextButtonEnabled,\n    formAction: \"none\",\n    ariaLabel: i18nStrings.nextButtonText,\n    className: styles['next-button']\n  }, i18nStrings.nextButtonText)))))));\n}","map":{"version":3,"mappings":"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","names":["React","useEffect","clsx","styles","InternalBox","InternalButton","InternalSpaceBetween","PopoverContainer","PopoverBody","InternalAlert","scrollElementIntoView","useUniqueId","joinStrings","arrow","position","className","AnnotationPopover","title","content","alert","direction","taskLocalStepIndex","totalLocalSteps","showPreviousButton","showFinishButton","onDismiss","nextButtonEnabled","onNextButtonClick","onFinish","trackRef","previousButtonEnabled","onPreviousButtonClick","i18nStrings","current","undefined","popoverHeaderId","stepCounterId","size","fixedWidth","trackKey","variant","zIndex","dismissButton","dismissAriaLabel","labelDismissAnnotation","header","id","color","fontSize","margin","top","annotation","overflowVisible","key","ariaLabelledby","description","type","divider","actionBar","stepCounter","stepCounterText","onClick","disabled","formAction","ariaLabel","previousButtonText","finishButtonText","nextButtonText"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/annotation-context/annotation/lib/default/annotation-context/annotation/annotation-popover.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport InternalBox from '../../box/internal';\nimport { InternalButton } from '../../button/internal';\nimport InternalSpaceBetween from '../../space-between/internal';\nimport PopoverContainer from '../../popover/container';\nimport PopoverBody from '../../popover/body';\nimport { HotspotProps } from '../../hotspot/interfaces';\nimport { AnnotationContextProps } from '../interfaces';\nimport InternalAlert from '../../alert/internal';\nimport { InternalPosition } from '../../popover/interfaces';\nimport { scrollElementIntoView } from '../../internal/utils/scrollable-containers';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id/index.js';\nimport { joinStrings } from '../../internal/utils/strings/join-strings.js';\n\nexport interface AnnotationPopoverProps {\n  title: string;\n  content: React.ReactNode;\n  alert: React.ReactNode;\n\n  direction: HotspotProps['direction'];\n\n  nextButtonEnabled: boolean;\n  onNextButtonClick: () => void;\n\n  onFinish: () => void;\n\n  showPreviousButton: boolean;\n  previousButtonEnabled: boolean;\n  onPreviousButtonClick: () => void;\n\n  taskLocalStepIndex: number;\n\n  totalLocalSteps: number;\n\n  showFinishButton: boolean;\n\n  onDismiss: () => void;\n\n  trackRef: React.RefObject<HTMLElement>;\n\n  i18nStrings: AnnotationContextProps['i18nStrings'];\n}\n\nconst arrow = (position: InternalPosition | null) => (\n  <div className={clsx(styles.arrow, styles[`arrow-position-${position}`])}>\n    <div className={styles['arrow-outer']} />\n    <div className={styles['arrow-inner']} />\n  </div>\n);\n\nexport function AnnotationPopover({\n  title,\n  content,\n  alert,\n\n  direction = 'top',\n\n  taskLocalStepIndex,\n\n  totalLocalSteps,\n\n  showPreviousButton,\n  showFinishButton,\n\n  onDismiss,\n\n  nextButtonEnabled,\n  onNextButtonClick,\n\n  onFinish,\n\n  trackRef,\n\n  previousButtonEnabled,\n  onPreviousButtonClick,\n  i18nStrings,\n}: AnnotationPopoverProps) {\n  useEffect(() => {\n    scrollElementIntoView(trackRef.current ?? undefined);\n  }, [trackRef]);\n\n  const popoverHeaderId = useUniqueId('poppver-header-');\n  const stepCounterId = useUniqueId('step-counter-');\n\n  return (\n    <PopoverContainer\n      size=\"medium\"\n      fixedWidth={false}\n      position={direction}\n      trackRef={trackRef}\n      trackKey={taskLocalStepIndex}\n      variant=\"annotation\"\n      arrow={arrow}\n      zIndex={1000}\n    >\n      <PopoverBody\n        dismissButton={true}\n        dismissAriaLabel={i18nStrings.labelDismissAnnotation}\n        header={\n          <InternalBox\n            id={popoverHeaderId}\n            color=\"text-body-secondary\"\n            fontSize=\"body-s\"\n            margin={{ top: 'xxxs' }}\n            className={styles.header}\n          >\n            {title}\n          </InternalBox>\n        }\n        onDismiss={onDismiss}\n        className={styles.annotation}\n        variant=\"annotation\"\n        overflowVisible=\"content\"\n        // create new dialog to have the native dialog behavior of the screen readers\n        key={taskLocalStepIndex}\n        ariaLabelledby={joinStrings(popoverHeaderId, stepCounterId)}\n      >\n        <InternalSpaceBetween size=\"s\">\n          <div className={styles.description}>\n            <InternalBox className={styles.content}>{content}</InternalBox>\n          </div>\n\n          {alert && <InternalAlert type=\"warning\">{alert}</InternalAlert>}\n\n          <InternalSpaceBetween size=\"s\">\n            <div className={styles.divider} />\n\n            <div className={styles.actionBar}>\n              <div className={styles.stepCounter}>\n                <InternalBox\n                  id={stepCounterId}\n                  className={styles['step-counter-content']}\n                  color=\"text-body-secondary\"\n                  fontSize=\"body-s\"\n                >\n                  {i18nStrings.stepCounterText(taskLocalStepIndex ?? 0, totalLocalSteps ?? 0)}\n                </InternalBox>\n              </div>\n              <InternalSpaceBetween size=\"xs\" direction=\"horizontal\">\n                {showPreviousButton && (\n                  <InternalButton\n                    variant=\"link\"\n                    onClick={onPreviousButtonClick}\n                    disabled={!previousButtonEnabled}\n                    formAction=\"none\"\n                    ariaLabel={i18nStrings.previousButtonText}\n                    className={styles['previous-button']}\n                  >\n                    {i18nStrings.previousButtonText}\n                  </InternalButton>\n                )}\n\n                {showFinishButton ? (\n                  <InternalButton\n                    onClick={onFinish}\n                    formAction=\"none\"\n                    ariaLabel={i18nStrings.finishButtonText}\n                    className={styles['finish-button']}\n                  >\n                    {i18nStrings.finishButtonText}\n                  </InternalButton>\n                ) : (\n                  <InternalButton\n                    onClick={onNextButtonClick}\n                    disabled={!nextButtonEnabled}\n                    formAction=\"none\"\n                    ariaLabel={i18nStrings.nextButtonText}\n                    className={styles['next-button']}\n                  >\n                    {i18nStrings.nextButtonText}\n                  </InternalButton>\n                )}\n              </InternalSpaceBetween>\n            </div>\n          </InternalSpaceBetween>\n        </InternalSpaceBetween>\n      </PopoverBody>\n    </PopoverContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}