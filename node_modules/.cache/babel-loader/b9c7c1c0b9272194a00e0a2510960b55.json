{"ast":null,"code":"import _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\nexport var useOpenState = function useOpenState(_ref) {\n  var onOpen = _ref.onOpen,\n    onClose = _ref.onClose;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isOpen = _useState2[0],\n    setIsOpen = _useState2[1];\n  var openDropdown = function openDropdown() {\n    if (!isOpen) {\n      setIsOpen(true);\n      onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n    }\n  };\n  var closeDropdown = function closeDropdown() {\n    if (isOpen) {\n      setIsOpen(false);\n      onClose === null || onClose === void 0 ? void 0 : onClose();\n    }\n  };\n  var toggleDropdown = function toggleDropdown() {\n    if (isOpen) {\n      closeDropdown();\n    } else {\n      openDropdown();\n    }\n  };\n  return {\n    isOpen: isOpen,\n    openDropdown: openDropdown,\n    closeDropdown: closeDropdown,\n    toggleDropdown: toggleDropdown\n  };\n};","map":{"version":3,"mappings":";AAAA;AACA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAOhC,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAY,OAA2C;EAAA,IAArCC,MAAM,QAANA,MAAM;IAAEC,OAAO,QAAPA,OAAO;EAC5C,gBAA4BH,QAAQ,CAAC,KAAK,CAAC;IAAA;IAApCI,MAAM;IAAEC,SAAS;EAExB,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAQ;IACxB,IAAI,CAACF,MAAM,EAAE;MACXC,SAAS,CAAC,IAAI,CAAC;MACfH,MAAM,aAANA,MAAM,uBAANA,MAAM,EAAI;;EAEd,CAAC;EAED,IAAMK,aAAa,GAAG,SAAhBA,aAAa,GAAQ;IACzB,IAAIH,MAAM,EAAE;MACVC,SAAS,CAAC,KAAK,CAAC;MAChBF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,EAAI;;EAEf,CAAC;EAED,IAAMK,cAAc,GAAG,SAAjBA,cAAc,GAAQ;IAC1B,IAAIJ,MAAM,EAAE;MACVG,aAAa,EAAE;KAChB,MAAM;MACLD,YAAY,EAAE;;EAElB,CAAC;EAED,OAAO;IAAEF,MAAM,EAANA,MAAM;IAAEE,YAAY,EAAZA,YAAY;IAAEC,aAAa,EAAbA,aAAa;IAAEC,cAAc,EAAdA;EAAc,CAAE;AAChE,CAAC","names":["useState","useOpenState","onOpen","onClose","isOpen","setIsOpen","openDropdown","closeDropdown","toggleDropdown"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/components/options-list/utils/lib/default/internal/components/options-list/utils/use-open-state.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\n\ninterface OpenStateProps {\n  onOpen?: () => void;\n  onClose?: () => void;\n}\n\nexport const useOpenState = ({ onOpen, onClose }: OpenStateProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openDropdown = () => {\n    if (!isOpen) {\n      setIsOpen(true);\n      onOpen?.();\n    }\n  };\n\n  const closeDropdown = () => {\n    if (isOpen) {\n      setIsOpen(false);\n      onClose?.();\n    }\n  };\n\n  const toggleDropdown = () => {\n    if (isOpen) {\n      closeDropdown();\n    } else {\n      openDropdown();\n    }\n  };\n\n  return { isOpen, openDropdown, closeDropdown, toggleDropdown };\n};\n"]},"metadata":{},"sourceType":"module"}