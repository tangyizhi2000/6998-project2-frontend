{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect } from 'react';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport CollapsibleFlashbar from './collapsible-flashbar';\nimport NonCollapsibleFlashbar from './non-collapsible-flashbar';\nimport { sendRenderMetric } from './internal/analytics';\nexport default function Flashbar(props) {\n  useEffect(() => {\n    if (props.items.length > 0) {\n      sendRenderMetric(props.items);\n    }\n  }, [props.items]);\n  if (props.stackItems) {\n    return React.createElement(CollapsibleFlashbar, Object.assign({}, props));\n  } else {\n    return React.createElement(NonCollapsibleFlashbar, Object.assign({}, props));\n  }\n}\napplyDisplayName(Flashbar, 'Flashbar');","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,gBAAgB,QAAQ,sCAAsC;AAEvE,OAAOC,mBAAmB,MAAM,wBAAwB;AACxD,OAAOC,sBAAsB,MAAM,4BAA4B;AAE/D,SAASC,gBAAgB,QAAQ,sBAAsB;AAIvD,eAAc,SAAUC,QAAQ,CAACC,KAAoB;EACnDN,SAAS,CAAC,MAAK;IACb,IAAIM,KAAK,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAC1BJ,gBAAgB,CAACE,KAAK,CAACC,KAAK,CAAC;;EAEjC,CAAC,EAAE,CAACD,KAAK,CAACC,KAAK,CAAC,CAAC;EAEjB,IAAID,KAAK,CAACG,UAAU,EAAE;IACpB,OAAOV,oBAACG,mBAAmB,oBAAKI,KAAK,EAAI;GAC1C,MAAM;IACL,OAAOP,oBAACI,sBAAsB,oBAAKG,KAAK,EAAI;;AAEhD;AAEAL,gBAAgB,CAACI,QAAQ,EAAE,UAAU,CAAC","names":["React","useEffect","applyDisplayName","CollapsibleFlashbar","NonCollapsibleFlashbar","sendRenderMetric","Flashbar","props","items","length","stackItems"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/flashbar/lib/default/flashbar/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect } from 'react';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { FlashbarProps } from './interfaces';\nimport CollapsibleFlashbar from './collapsible-flashbar';\nimport NonCollapsibleFlashbar from './non-collapsible-flashbar';\n\nimport { sendRenderMetric } from './internal/analytics';\n\nexport { FlashbarProps };\n\nexport default function Flashbar(props: FlashbarProps) {\n  useEffect(() => {\n    if (props.items.length > 0) {\n      sendRenderMetric(props.items);\n    }\n  }, [props.items]);\n\n  if (props.stackItems) {\n    return <CollapsibleFlashbar {...props} />;\n  } else {\n    return <NonCollapsibleFlashbar {...props} />;\n  }\n}\n\napplyDisplayName(Flashbar, 'Flashbar');\n"]},"metadata":{},"sourceType":"module"}