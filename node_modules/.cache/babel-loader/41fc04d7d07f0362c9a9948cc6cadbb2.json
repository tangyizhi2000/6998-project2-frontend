{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useAppLayoutInternals } from './context';\nimport { InternalButton } from '../../button/internal';\nimport TriggerButton from './trigger-button';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-classes/styles.css.js';\nimport { Transition } from '../../internal/components/transition';\nimport { findUpUntil } from '../../internal/utils/dom';\nimport customCssProps from '../../internal/generated/custom-css-properties';\n/**\n * The Navigation component consists of the following elements:\n * the container, or root element, that sits as a direct child to the Layout grid definition;\n * the show navigation form that contains the trigger for the drawer in large viewports;\n * the navigation, or drawer, that contains the hide navigation form and the children\n * passed through the API;\n */\nexport default function Navigation() {\n  var _useAppLayoutInternal = useAppLayoutInternals(),\n    ariaLabels = _useAppLayoutInternal.ariaLabels,\n    disableBodyScroll = _useAppLayoutInternal.disableBodyScroll,\n    handleNavigationClick = _useAppLayoutInternal.handleNavigationClick,\n    hasDrawerViewportOverlay = _useAppLayoutInternal.hasDrawerViewportOverlay,\n    isMobile = _useAppLayoutInternal.isMobile,\n    isNavigationOpen = _useAppLayoutInternal.isNavigationOpen,\n    isToolsOpen = _useAppLayoutInternal.isToolsOpen,\n    navigation = _useAppLayoutInternal.navigation,\n    navigationHide = _useAppLayoutInternal.navigationHide,\n    navigationRefs = _useAppLayoutInternal.navigationRefs,\n    navigationWidth = _useAppLayoutInternal.navigationWidth,\n    toolsHide = _useAppLayoutInternal.toolsHide;\n  if (navigationHide) {\n    return null;\n  }\n  // Close the Navigation drawer on mobile when a user clicks a link inside.\n  var onNavigationClick = function onNavigationClick(event) {\n    var hasLink = findUpUntil(event.target, function (node) {\n      return node.tagName === 'A' && !!node.href;\n    });\n    if (hasLink && isMobile) {\n      handleNavigationClick(false);\n    }\n  };\n  var isUnfocusable = hasDrawerViewportOverlay && (!isNavigationOpen || isToolsOpen && !toolsHide);\n  return React.createElement(Transition, {\n    in: isNavigationOpen\n  }, function (state, transitionEventsRef) {\n    var _clsx, _clsx2, _clsx3;\n    var _a, _b, _c;\n    return React.createElement(\"div\", {\n      className: clsx(styles['navigation-container'], (_clsx = {}, _defineProperty(_clsx, styles['disable-body-scroll'], disableBodyScroll), _defineProperty(_clsx, styles.unfocusable, isUnfocusable), _defineProperty(_clsx, testutilStyles['drawer-closed'], !isNavigationOpen), _clsx)),\n      // Overwrite the default nav width (depends on breakpoints) only when the `navigationWidth` property is set.\n      style: Object.assign({}, navigationWidth && _defineProperty({}, customCssProps.navigationWidth, \"\".concat(navigationWidth, \"px\")))\n    }, !isMobile && React.createElement(\"nav\", {\n      \"aria-hidden\": isMobile || isNavigationOpen ? true : false,\n      \"aria-label\": (_a = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigation) !== null && _a !== void 0 ? _a : undefined,\n      className: clsx(styles['show-navigation'], (_clsx2 = {}, _defineProperty(_clsx2, styles.animating, state === 'exiting'), _defineProperty(_clsx2, styles['is-navigation-open'], isNavigationOpen), _clsx2)),\n      ref: state === 'exiting' ? transitionEventsRef : undefined\n    }, React.createElement(TriggerButton, {\n      ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigationToggle,\n      ariaExpanded: isNavigationOpen ? undefined : false,\n      iconName: \"menu\",\n      className: testutilStyles['navigation-toggle'],\n      onClick: function onClick() {\n        return handleNavigationClick(true);\n      },\n      ref: navigationRefs.toggle\n    })), React.createElement(\"nav\", {\n      \"aria-label\": (_b = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigation) !== null && _b !== void 0 ? _b : undefined,\n      className: clsx(styles.navigation, (_clsx3 = {}, _defineProperty(_clsx3, styles.animating, state === 'entering'), _defineProperty(_clsx3, styles['is-navigation-open'], isNavigationOpen), _clsx3), testutilStyles.navigation),\n      ref: state !== 'exiting' ? transitionEventsRef : undefined,\n      \"aria-hidden\": !isNavigationOpen,\n      onClick: function onClick(event) {\n        onNavigationClick && onNavigationClick(event);\n      }\n    }, React.createElement(\"div\", {\n      className: clsx(styles['animated-content'])\n    }, React.createElement(\"div\", {\n      className: clsx(styles['hide-navigation'])\n    }, React.createElement(InternalButton, {\n      ariaLabel: (_c = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigationClose) !== null && _c !== void 0 ? _c : undefined,\n      iconName: isMobile ? 'close' : 'angle-left',\n      onClick: function onClick() {\n        return handleNavigationClick(false);\n      },\n      variant: \"icon\",\n      formAction: \"none\",\n      className: testutilStyles['navigation-close'],\n      ref: navigationRefs.close\n    })), navigation)));\n  });\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,qBAAqB,QAAQ,WAAW;AACjD,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,cAAc,MAAM,+BAA+B;AAC1D,SAASC,UAAU,QAAQ,sCAAsC;AACjE,SAASC,WAAW,QAAQ,0BAA0B;AACtD,OAAOC,cAAc,MAAM,gDAAgD;AAE3E;;;;;;;AAOA,eAAc,SAAUC,UAAU;EAChC,4BAaIR,qBAAqB,EAAE;IAZzBS,UAAU,yBAAVA,UAAU;IACVC,iBAAiB,yBAAjBA,iBAAiB;IACjBC,qBAAqB,yBAArBA,qBAAqB;IACrBC,wBAAwB,yBAAxBA,wBAAwB;IACxBC,QAAQ,yBAARA,QAAQ;IACRC,gBAAgB,yBAAhBA,gBAAgB;IAChBC,WAAW,yBAAXA,WAAW;IACXC,UAAU,yBAAVA,UAAU;IACVC,cAAc,yBAAdA,cAAc;IACdC,cAAc,yBAAdA,cAAc;IACdC,eAAe,yBAAfA,eAAe;IACfC,SAAS,yBAATA,SAAS;EAGX,IAAIH,cAAc,EAAE;IAClB,OAAO,IAAI;;EAGb;EACA,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,KAAuB,EAAI;IACpD,IAAMC,OAAO,GAAGjB,WAAW,CACzBgB,KAAK,CAACE,MAAqB,EAC3B,cAAI;MAAA,OAAIC,IAAI,CAACC,OAAO,KAAK,GAAG,IAAI,CAAC,CAAED,IAA0B,CAACE,IAAI;IAAA,EACnE;IACD,IAAIJ,OAAO,IAAIV,QAAQ,EAAE;MACvBF,qBAAqB,CAAC,KAAK,CAAC;;EAEhC,CAAC;EAED,IAAMiB,aAAa,GAAGhB,wBAAwB,KAAK,CAACE,gBAAgB,IAAKC,WAAW,IAAI,CAACK,SAAU,CAAC;EAEpG,OACEtB,oBAACO,UAAU;IAACwB,EAAE,EAAEf;EAAgB,GAC7B,UAACgB,KAAK,EAAEC,mBAAmB,EAAI;IAAA;;IAAC,OAC/BjC;MACEkC,SAAS,EAAEjC,IAAI,CAACI,MAAM,CAAC,sBAAsB,CAAC,sCAC3CA,MAAM,CAAC,qBAAqB,CAAC,EAAGO,iBAAiB,0BACjDP,MAAM,CAAC8B,WAAW,EAAGL,aAAa,0BAClCxB,cAAc,CAAC,eAAe,CAAC,EAAG,CAACU,gBAAgB,UACpD;MACF;MACAoB,KAAK,oBAAQf,eAAe,wBAAOZ,cAAc,CAACY,eAAe,YAAMA,eAAe,QAAM;IAAC,GAE5F,CAACN,QAAQ,IACRf;MAAA,eACee,QAAQ,IAAIC,gBAAgB,GAAG,IAAI,GAAG,KAAK;MAAA,cAC5C,gBAAU,aAAVL,UAAU,uBAAVA,UAAU,CAAEO,UAAU,mCAAImB,SAAS;MAC/CH,SAAS,EAAEjC,IAAI,CAACI,MAAM,CAAC,iBAAiB,CAAC,wCACtCA,MAAM,CAACiC,SAAS,EAAGN,KAAK,KAAK,SAAS,2BACtC3B,MAAM,CAAC,oBAAoB,CAAC,EAAGW,gBAAgB,WAChD;MACFuB,GAAG,EAAEP,KAAK,KAAK,SAAS,GAAGC,mBAAmB,GAAGI;IAAS,GAE1DrC,oBAACI,aAAa;MACZoC,SAAS,EAAE7B,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAE8B,gBAAgB;MACvCC,YAAY,EAAE1B,gBAAgB,GAAGqB,SAAS,GAAG,KAAK;MAClDM,QAAQ,EAAC,MAAM;MACfT,SAAS,EAAE5B,cAAc,CAAC,mBAAmB,CAAC;MAC9CsC,OAAO,EAAE;QAAA,OAAM/B,qBAAqB,CAAC,IAAI,CAAC;MAAA;MAC1C0B,GAAG,EAAEnB,cAAc,CAACyB;IAAM,EAC1B,CAEL,EAED7C;MAAA,cACc,gBAAU,aAAVW,UAAU,uBAAVA,UAAU,CAAEO,UAAU,mCAAImB,SAAS;MAC/CH,SAAS,EAAEjC,IAAI,CACbI,MAAM,CAACa,UAAU,wCAEdb,MAAM,CAACiC,SAAS,EAAGN,KAAK,KAAK,UAAU,2BACvC3B,MAAM,CAAC,oBAAoB,CAAC,EAAGW,gBAAgB,YAElDV,cAAc,CAACY,UAAU,CAC1B;MACDqB,GAAG,EAAEP,KAAK,KAAK,SAAS,GAAGC,mBAAmB,GAAGI,SAAS;MAAA,eAC7C,CAACrB,gBAAgB;MAC9B4B,OAAO,EAAE,sBAAK,EAAG;QACfrB,iBAAiB,IAAIA,iBAAiB,CAACC,KAAK,CAAC;MAC/C;IAAC,GAEDxB;MAAKkC,SAAS,EAAEjC,IAAI,CAACI,MAAM,CAAC,kBAAkB,CAAC;IAAC,GAC9CL;MAAKkC,SAAS,EAAEjC,IAAI,CAACI,MAAM,CAAC,iBAAiB,CAAC;IAAC,GAC7CL,oBAACG,cAAc;MACbqC,SAAS,EAAE,gBAAU,aAAV7B,UAAU,uBAAVA,UAAU,CAAEmC,eAAe,mCAAIT,SAAS;MACnDM,QAAQ,EAAE5B,QAAQ,GAAG,OAAO,GAAG,YAAY;MAC3C6B,OAAO,EAAE;QAAA,OAAM/B,qBAAqB,CAAC,KAAK,CAAC;MAAA;MAC3CkC,OAAO,EAAC,MAAM;MACdC,UAAU,EAAC,MAAM;MACjBd,SAAS,EAAE5B,cAAc,CAAC,kBAAkB,CAAC;MAC7CiC,GAAG,EAAEnB,cAAc,CAAC6B;IAAK,EACzB,CACE,EACL/B,UAAU,CACP,CACF,CACF;GACP,CACU;AAEjB","names":["React","clsx","useAppLayoutInternals","InternalButton","TriggerButton","styles","testutilStyles","Transition","findUpUntil","customCssProps","Navigation","ariaLabels","disableBodyScroll","handleNavigationClick","hasDrawerViewportOverlay","isMobile","isNavigationOpen","isToolsOpen","navigation","navigationHide","navigationRefs","navigationWidth","toolsHide","onNavigationClick","event","hasLink","target","node","tagName","href","isUnfocusable","in","state","transitionEventsRef","className","unfocusable","style","undefined","animating","ref","ariaLabel","navigationToggle","ariaExpanded","iconName","onClick","toggle","navigationClose","variant","formAction","close"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/app-layout/visual-refresh/lib/default/app-layout/visual-refresh/navigation.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useAppLayoutInternals } from './context';\nimport { InternalButton } from '../../button/internal';\nimport TriggerButton from './trigger-button';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-classes/styles.css.js';\nimport { Transition } from '../../internal/components/transition';\nimport { findUpUntil } from '../../internal/utils/dom';\nimport customCssProps from '../../internal/generated/custom-css-properties';\n\n/**\n * The Navigation component consists of the following elements:\n * the container, or root element, that sits as a direct child to the Layout grid definition;\n * the show navigation form that contains the trigger for the drawer in large viewports;\n * the navigation, or drawer, that contains the hide navigation form and the children\n * passed through the API;\n */\nexport default function Navigation() {\n  const {\n    ariaLabels,\n    disableBodyScroll,\n    handleNavigationClick,\n    hasDrawerViewportOverlay,\n    isMobile,\n    isNavigationOpen,\n    isToolsOpen,\n    navigation,\n    navigationHide,\n    navigationRefs,\n    navigationWidth,\n    toolsHide,\n  } = useAppLayoutInternals();\n\n  if (navigationHide) {\n    return null;\n  }\n\n  // Close the Navigation drawer on mobile when a user clicks a link inside.\n  const onNavigationClick = (event: React.MouseEvent) => {\n    const hasLink = findUpUntil(\n      event.target as HTMLElement,\n      node => node.tagName === 'A' && !!(node as HTMLAnchorElement).href\n    );\n    if (hasLink && isMobile) {\n      handleNavigationClick(false);\n    }\n  };\n\n  const isUnfocusable = hasDrawerViewportOverlay && (!isNavigationOpen || (isToolsOpen && !toolsHide));\n\n  return (\n    <Transition in={isNavigationOpen}>\n      {(state, transitionEventsRef) => (\n        <div\n          className={clsx(styles['navigation-container'], {\n            [styles['disable-body-scroll']]: disableBodyScroll,\n            [styles.unfocusable]: isUnfocusable,\n            [testutilStyles['drawer-closed']]: !isNavigationOpen,\n          })}\n          // Overwrite the default nav width (depends on breakpoints) only when the `navigationWidth` property is set.\n          style={{ ...(navigationWidth && { [customCssProps.navigationWidth]: `${navigationWidth}px` }) }}\n        >\n          {!isMobile && (\n            <nav\n              aria-hidden={isMobile || isNavigationOpen ? true : false}\n              aria-label={ariaLabels?.navigation ?? undefined}\n              className={clsx(styles['show-navigation'], {\n                [styles.animating]: state === 'exiting',\n                [styles['is-navigation-open']]: isNavigationOpen,\n              })}\n              ref={state === 'exiting' ? transitionEventsRef : undefined}\n            >\n              <TriggerButton\n                ariaLabel={ariaLabels?.navigationToggle}\n                ariaExpanded={isNavigationOpen ? undefined : false}\n                iconName=\"menu\"\n                className={testutilStyles['navigation-toggle']}\n                onClick={() => handleNavigationClick(true)}\n                ref={navigationRefs.toggle}\n              />\n            </nav>\n          )}\n\n          <nav\n            aria-label={ariaLabels?.navigation ?? undefined}\n            className={clsx(\n              styles.navigation,\n              {\n                [styles.animating]: state === 'entering',\n                [styles['is-navigation-open']]: isNavigationOpen,\n              },\n              testutilStyles.navigation\n            )}\n            ref={state !== 'exiting' ? transitionEventsRef : undefined}\n            aria-hidden={!isNavigationOpen}\n            onClick={event => {\n              onNavigationClick && onNavigationClick(event);\n            }}\n          >\n            <div className={clsx(styles['animated-content'])}>\n              <div className={clsx(styles['hide-navigation'])}>\n                <InternalButton\n                  ariaLabel={ariaLabels?.navigationClose ?? undefined}\n                  iconName={isMobile ? 'close' : 'angle-left'}\n                  onClick={() => handleNavigationClick(false)}\n                  variant=\"icon\"\n                  formAction=\"none\"\n                  className={testutilStyles['navigation-close']}\n                  ref={navigationRefs.close}\n                />\n              </div>\n              {navigation}\n            </div>\n          </nav>\n        </div>\n      )}\n    </Transition>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}