{"ast":null,"code":"import _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useReducer, useRef } from 'react';\nimport InternalBreadcrumbGroup from '../../breadcrumb-group/internal';\nimport { InternalButton } from '../../button/internal';\nimport InternalModal from '../../modal/internal';\nimport InternalSpaceBetween from '../../space-between/internal';\nimport { useEffectOnUpdate } from '../../internal/hooks/use-effect-on-update';\nimport { useVisualRefresh } from '../../internal/hooks/use-visual-mode';\nimport { BucketsTable } from './buckets-table';\nimport { ObjectsTable } from './objects-table';\nimport { VersionsTable } from './versions-table';\nimport styles from './styles.css.js';\nimport { joinObjectPath } from '../utils';\nimport { useInternalI18n } from '../../i18n/context';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction assertNever(_value) {\n  return null;\n}\nvar initialBrowseState = {\n  selectedItem: null,\n  currentView: 'buckets',\n  breadcrumbs: []\n};\nfunction s3BrowseReducer(state, action) {\n  switch (action.type) {\n    case 'browse-buckets':\n      return initialBrowseState;\n    case 'browse-objects':\n      return {\n        selectedItem: null,\n        currentView: 'objects',\n        breadcrumbs: action.breadcrumbs\n      };\n    case 'browse-versions':\n      return {\n        selectedItem: null,\n        currentView: 'versions',\n        breadcrumbs: action.breadcrumbs\n      };\n    case 'select-item':\n      return Object.assign(Object.assign({}, state), {\n        selectedItem: action.item\n      });\n    default:\n      assertNever(action);\n  }\n  return state;\n}\nfunction createResourceInfo(_ref) {\n  var currentView = _ref.currentView,\n    breadcrumbs = _ref.breadcrumbs,\n    selectedItem = _ref.selectedItem;\n  var prefix = 's3://';\n  if (currentView === 'versions') {\n    return {\n      uri: prefix + joinObjectPath(breadcrumbs),\n      versionId: selectedItem !== null && selectedItem !== void 0 ? selectedItem : undefined\n    };\n  }\n  return {\n    uri: prefix + joinObjectPath([].concat(_toConsumableArray(breadcrumbs), [selectedItem]))\n  };\n}\nexport function S3Modal(_ref2) {\n  var i18nStrings = _ref2.i18nStrings,\n    alert = _ref2.alert,\n    selectableItemsTypes = _ref2.selectableItemsTypes,\n    fetchBuckets = _ref2.fetchBuckets,\n    bucketsVisibleColumns = _ref2.bucketsVisibleColumns,\n    bucketsIsItemDisabled = _ref2.bucketsIsItemDisabled,\n    fetchObjects = _ref2.fetchObjects,\n    objectsVisibleColumns = _ref2.objectsVisibleColumns,\n    objectsIsItemDisabled = _ref2.objectsIsItemDisabled,\n    fetchVersions = _ref2.fetchVersions,\n    versionsVisibleColumns = _ref2.versionsVisibleColumns,\n    versionsIsItemDisabled = _ref2.versionsIsItemDisabled,\n    onSubmit = _ref2.onSubmit,\n    onDismiss = _ref2.onDismiss;\n  var _a;\n  var _useReducer = useReducer(s3BrowseReducer, initialBrowseState),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    _useReducer2$ = _useReducer2[0],\n    currentView = _useReducer2$.currentView,\n    breadcrumbs = _useReducer2$.breadcrumbs,\n    selectedItem = _useReducer2$.selectedItem,\n    dispatch = _useReducer2[1];\n  var forwardFocusRef = useRef(null);\n  var i18n = useInternalI18n('s3-resource-selector');\n  var isVisualRefresh = useVisualRefresh();\n  useEffectOnUpdate(function () {\n    var _a;\n    (_a = forwardFocusRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  }, [breadcrumbs]);\n  return React.createElement(\"div\", null, React.createElement(InternalModal, {\n    visible: true,\n    size: \"max\",\n    closeAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelModalDismiss,\n    onDismiss: onDismiss,\n    header: i18n('i18nStrings.modalTitle', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalTitle),\n    footer: React.createElement(InternalSpaceBetween, {\n      className: styles['modal-actions'],\n      size: \"xs\",\n      direction: \"horizontal\"\n    }, React.createElement(InternalButton, {\n      variant: \"link\",\n      formAction: \"none\",\n      onClick: onDismiss\n    }, i18n('i18nStrings.modalCancelButton', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalCancelButton)), React.createElement(InternalButton, {\n      variant: \"primary\",\n      className: styles['submit-button'],\n      disabled: !selectedItem,\n      formAction: \"none\",\n      onClick: function onClick() {\n        return onSubmit(createResourceInfo({\n          currentView: currentView,\n          breadcrumbs: breadcrumbs,\n          selectedItem: selectedItem\n        }));\n      }\n    }, i18n('i18nStrings.modalSubmitButton', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalSubmitButton)))\n  }, React.createElement(InternalSpaceBetween, {\n    size: isVisualRefresh ? 'xxs' : 'xs'\n  }, React.createElement(InternalBreadcrumbGroup, {\n    ariaLabel: i18n('i18nStrings.labelBreadcrumbs', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelBreadcrumbs),\n    expandAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelExpandBreadcrumbs,\n    onFollow: function onFollow(event) {\n      event.preventDefault();\n      event.detail.item.meta.onClick();\n    },\n    items: [{\n      text: (_a = i18n('i18nStrings.modalBreadcrumbRootItem', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalBreadcrumbRootItem)) !== null && _a !== void 0 ? _a : '',\n      href: '',\n      meta: {\n        onClick: function onClick() {\n          return dispatch({\n            type: 'browse-buckets'\n          });\n        }\n      }\n    }].concat(_toConsumableArray(breadcrumbs.map(function (segment, index) {\n      return {\n        text: segment,\n        href: '',\n        meta: {\n          onClick: function onClick() {\n            return dispatch({\n              type: 'browse-objects',\n              breadcrumbs: breadcrumbs.slice(0, index + 1)\n            });\n          }\n        }\n      };\n    })))\n  }), alert, currentView === 'buckets' ? React.createElement(BucketsTable, {\n    forwardFocusRef: forwardFocusRef,\n    fetchData: fetchBuckets,\n    visibleColumns: bucketsVisibleColumns,\n    isItemDisabled: bucketsIsItemDisabled,\n    selectableItemsTypes: selectableItemsTypes,\n    i18nStrings: i18nStrings,\n    isVisualRefresh: isVisualRefresh,\n    onDrilldown: function onDrilldown(path) {\n      return dispatch({\n        type: 'browse-objects',\n        breadcrumbs: [path]\n      });\n    },\n    onSelect: function onSelect(item) {\n      return dispatch({\n        type: 'select-item',\n        item: item\n      });\n    }\n  }) : currentView === 'objects' ? React.createElement(ObjectsTable, {\n    forwardFocusRef: forwardFocusRef,\n    pathSegments: breadcrumbs,\n    fetchData: fetchObjects,\n    visibleColumns: objectsVisibleColumns,\n    isItemDisabled: objectsIsItemDisabled,\n    selectableItemsTypes: selectableItemsTypes,\n    i18nStrings: i18nStrings,\n    isVisualRefresh: isVisualRefresh,\n    onDrilldown: function onDrilldown(item) {\n      dispatch({\n        type: item.IsFolder ? 'browse-objects' : 'browse-versions',\n        breadcrumbs: [].concat(_toConsumableArray(breadcrumbs), [item.Key])\n      });\n    },\n    onSelect: function onSelect(item) {\n      return dispatch({\n        type: 'select-item',\n        item: item\n      });\n    }\n  }) : currentView === 'versions' ? React.createElement(VersionsTable, {\n    forwardFocusRef: forwardFocusRef,\n    pathSegments: breadcrumbs,\n    fetchData: fetchVersions,\n    visibleColumns: versionsVisibleColumns,\n    isItemDisabled: versionsIsItemDisabled,\n    i18nStrings: i18nStrings,\n    isVisualRefresh: isVisualRefresh,\n    onSelect: function onSelect(item) {\n      return dispatch({\n        type: 'select-item',\n        item: item\n      });\n    }\n  }) : assertNever(currentView))));\n}","map":{"version":3,"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AACjD,OAAOC,uBAAuB,MAAM,iCAAiC;AACrE,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,oBAAoB,MAAM,8BAA8B;AAE/D,SAASC,iBAAiB,QAAQ,2CAA2C;AAC7E,SAASC,gBAAgB,QAAQ,sCAAsC;AAEvE,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,cAAc,QAAQ,UAAU;AACzC,SAASC,eAAe,QAAQ,oBAAoB;AAmBpD;AACA,SAASC,WAAW,CAACC,MAAa;EAChC,OAAO,IAAI;AACb;AAaA,IAAMC,kBAAkB,GAAkB;EACxCC,YAAY,EAAE,IAAI;EAClBC,WAAW,EAAE,SAAS;EACtBC,WAAW,EAAE;CACd;AAED,SAASC,eAAe,CAACC,KAAoB,EAAEC,MAAuB;EACpE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,gBAAgB;MACnB,OAAOP,kBAAkB;IAC3B,KAAK,gBAAgB;MACnB,OAAO;QACLC,YAAY,EAAE,IAAI;QAClBC,WAAW,EAAE,SAAkB;QAC/BC,WAAW,EAAEG,MAAM,CAACH;OACrB;IACH,KAAK,iBAAiB;MACpB,OAAO;QACLF,YAAY,EAAE,IAAI;QAClBC,WAAW,EAAE,UAAmB;QAChCC,WAAW,EAAEG,MAAM,CAACH;OACrB;IACH,KAAK,aAAa;MAChB,uCACKE,KAAK;QACRJ,YAAY,EAAEK,MAAM,CAACE;MAAI;IAE7B;MACEV,WAAW,CAACQ,MAAM,CAAC;EAAC;EAExB,OAAOD,KAAK;AACd;AAEA,SAASI,kBAAkB,OAA0D;EAAA,IAAvDP,WAAW,QAAXA,WAAW;IAAEC,WAAW,QAAXA,WAAW;IAAEF,YAAY,QAAZA,YAAY;EAClE,IAAMS,MAAM,GAAG,OAAO;EACtB,IAAIR,WAAW,KAAK,UAAU,EAAE;IAC9B,OAAO;MAAES,GAAG,EAAED,MAAM,GAAGd,cAAc,CAACO,WAAW,CAAC;MAAES,SAAS,EAAEX,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAIY;IAAS,CAAE;;EAE5F,OAAO;IAAEF,GAAG,EAAED,MAAM,GAAGd,cAAc,8BAAKO,WAAW,IAAEF,YAAa;EAAE,CAAE;AAC1E;AAEA,OAAM,SAAUa,OAAO,QAeR;EAAA,IAdbC,WAAW,SAAXA,WAAW;IACXC,KAAK,SAALA,KAAK;IACLC,oBAAoB,SAApBA,oBAAoB;IACpBC,YAAY,SAAZA,YAAY;IACZC,qBAAqB,SAArBA,qBAAqB;IACrBC,qBAAqB,SAArBA,qBAAqB;IACrBC,YAAY,SAAZA,YAAY;IACZC,qBAAqB,SAArBA,qBAAqB;IACrBC,qBAAqB,SAArBA,qBAAqB;IACrBC,aAAa,SAAbA,aAAa;IACbC,sBAAsB,SAAtBA,sBAAsB;IACtBC,sBAAsB,SAAtBA,sBAAsB;IACtBC,QAAQ,SAARA,QAAQ;IACRC,SAAS,SAATA,SAAS;;EAET,kBAA+D5C,UAAU,CAACoB,eAAe,EAAEJ,kBAAkB,CAAC;IAAA;IAAA;IAArGE,WAAW,iBAAXA,WAAW;IAAEC,WAAW,iBAAXA,WAAW;IAAEF,YAAY,iBAAZA,YAAY;IAAI4B,QAAQ;EAC3D,IAAMC,eAAe,GAAG7C,MAAM,CAAkB,IAAI,CAAC;EACrD,IAAM8C,IAAI,GAAGlC,eAAe,CAAC,sBAAsB,CAAC;EAEpD,IAAMmC,eAAe,GAAGzC,gBAAgB,EAAE;EAE1CD,iBAAiB,CAAC,YAAK;;IACrB,qBAAe,CAAC2C,OAAO,0CAAEC,KAAK,EAAE;EAClC,CAAC,EAAE,CAAC/B,WAAW,CAAC,CAAC;EAEjB,OACEpB,iCACEA,oBAACK,aAAa;IACZ+C,OAAO,EAAE,IAAI;IACbC,IAAI,EAAC,KAAK;IACVC,cAAc,EAAEtB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEuB,iBAAiB;IAC9CV,SAAS,EAAEA,SAAS;IACpBW,MAAM,EAAER,IAAI,CAAC,wBAAwB,EAAEhB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEyB,UAAU,CAAC;IAC/DC,MAAM,EACJ1D,oBAACM,oBAAoB;MAACqD,SAAS,EAAE/C,MAAM,CAAC,eAAe,CAAC;MAAEyC,IAAI,EAAC,IAAI;MAACO,SAAS,EAAC;IAAY,GACxF5D,oBAACI,cAAc;MAACyD,OAAO,EAAC,MAAM;MAACC,UAAU,EAAC,MAAM;MAACC,OAAO,EAAElB;IAAS,GAChEG,IAAI,CAAC,+BAA+B,EAAEhB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEgC,iBAAiB,CAAC,CACvD,EACjBhE,oBAACI,cAAc;MACbyD,OAAO,EAAC,SAAS;MACjBF,SAAS,EAAE/C,MAAM,CAAC,eAAe,CAAC;MAClCqD,QAAQ,EAAE,CAAC/C,YAAY;MACvB4C,UAAU,EAAC,MAAM;MACjBC,OAAO,EAAE;QAAA,OAAMnB,QAAQ,CAAClB,kBAAkB,CAAC;UAAEP,WAAW,EAAXA,WAAW;UAAEC,WAAW,EAAXA,WAAW;UAAEF,YAAY,EAAZA;QAAY,CAAE,CAAC,CAAC;MAAA;IAAA,GAEtF8B,IAAI,CAAC,+BAA+B,EAAEhB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEkC,iBAAiB,CAAC,CACvD;EACI,GAGzBlE,oBAACM,oBAAoB;IAAC+C,IAAI,EAAEJ,eAAe,GAAG,KAAK,GAAG;EAAI,GACxDjD,oBAACG,uBAAuB;IACtBgE,SAAS,EAAEnB,IAAI,CAAC,8BAA8B,EAAEhB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEoC,gBAAgB,CAAC;IAC9EC,eAAe,EAAErC,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEsC,sBAAsB;IACpDC,QAAQ,EAAE,uBAAK,EAAG;MAChBC,KAAK,CAACC,cAAc,EAAE;MACtBD,KAAK,CAACE,MAAM,CAACjD,IAAI,CAACkD,IAAI,CAACZ,OAAO,EAAE;IAClC,CAAC;IACDa,KAAK,GACH;MACEC,IAAI,EAAE,UAAI,CAAC,qCAAqC,EAAE7C,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE8C,uBAAuB,CAAC,mCAAI,EAAE;MAC7FC,IAAI,EAAE,EAAE;MACRJ,IAAI,EAAE;QAAEZ,OAAO,EAAE;UAAA,OAAMjB,QAAQ,CAAC;YAAEtB,IAAI,EAAE;UAAgB,CAAE,CAAC;QAAA;MAAA;KAC5D,4BACEJ,WAAW,CAAC4D,GAAG,CAAC,UAACC,OAAO,EAAEC,KAAK;MAAA,OAAM;QACtCL,IAAI,EAAEI,OAAO;QACbF,IAAI,EAAE,EAAE;QACRJ,IAAI,EAAE;UACJZ,OAAO,EAAE;YAAA,OACPjB,QAAQ,CAAC;cACPtB,IAAI,EAAE,gBAAgB;cACtBJ,WAAW,EAAEA,WAAW,CAAC+D,KAAK,CAAC,CAAC,EAAED,KAAK,GAAG,CAAC;aAC5C,CAAC;UAAA;;OAEP;IAAA,CAAC,CAAC;EACJ,EACD,EACDjD,KAAK,EACLd,WAAW,KAAK,SAAS,GACxBnB,oBAACS,YAAY;IACXsC,eAAe,EAAEA,eAAe;IAChCqC,SAAS,EAAEjD,YAAY;IACvBkD,cAAc,EAAEjD,qBAAqB;IACrCkD,cAAc,EAAEjD,qBAAqB;IACrCH,oBAAoB,EAAEA,oBAAoB;IAC1CF,WAAW,EAAEA,WAAW;IACxBiB,eAAe,EAAEA,eAAe;IAChCsC,WAAW,EAAE,yBAAI;MAAA,OACfzC,QAAQ,CAAC;QACPtB,IAAI,EAAE,gBAAgB;QACtBJ,WAAW,EAAE,CAACoE,IAAI;OACnB,CAAC;IAAA;IAEJC,QAAQ,EAAE,sBAAI;MAAA,OAAI3C,QAAQ,CAAC;QAAEtB,IAAI,EAAE,aAAa;QAAEC,IAAI,EAAJA;MAAI,CAAE,CAAC;IAAA;EAAA,EACzD,GACAN,WAAW,KAAK,SAAS,GAC3BnB,oBAACU,YAAY;IACXqC,eAAe,EAAEA,eAAe;IAChC2C,YAAY,EAAEtE,WAAW;IACzBgE,SAAS,EAAE9C,YAAY;IACvB+C,cAAc,EAAE9C,qBAAqB;IACrC+C,cAAc,EAAE9C,qBAAqB;IACrCN,oBAAoB,EAAEA,oBAAoB;IAC1CF,WAAW,EAAEA,WAAW;IACxBiB,eAAe,EAAEA,eAAe;IAChCsC,WAAW,EAAE,yBAAI,EAAG;MAClBzC,QAAQ,CAAC;QACPtB,IAAI,EAAEC,IAAI,CAACkE,QAAQ,GAAG,gBAAgB,GAAG,iBAAiB;QAC1DvE,WAAW,+BAAMA,WAAW,IAAEK,IAAI,CAACmE,GAAI;OACxC,CAAC;IACJ,CAAC;IACDH,QAAQ,EAAE,sBAAI;MAAA,OAAI3C,QAAQ,CAAC;QAAEtB,IAAI,EAAE,aAAa;QAAEC,IAAI,EAAJA;MAAI,CAAE,CAAC;IAAA;EAAA,EACzD,GACAN,WAAW,KAAK,UAAU,GAC5BnB,oBAACW,aAAa;IACZoC,eAAe,EAAEA,eAAe;IAChC2C,YAAY,EAAEtE,WAAW;IACzBgE,SAAS,EAAE3C,aAAa;IACxB4C,cAAc,EAAE3C,sBAAsB;IACtC4C,cAAc,EAAE3C,sBAAsB;IACtCX,WAAW,EAAEA,WAAW;IACxBiB,eAAe,EAAEA,eAAe;IAChCwC,QAAQ,EAAE,sBAAI;MAAA,OAAI3C,QAAQ,CAAC;QAAEtB,IAAI,EAAE,aAAa;QAAEC,IAAI,EAAJA;MAAI,CAAE,CAAC;IAAA;EAAA,EACzD,GAEFV,WAAW,CAACI,WAAW,CACxB,CACoB,CACT,CACZ;AAEV","names":["React","useReducer","useRef","InternalBreadcrumbGroup","InternalButton","InternalModal","InternalSpaceBetween","useEffectOnUpdate","useVisualRefresh","BucketsTable","ObjectsTable","VersionsTable","styles","joinObjectPath","useInternalI18n","assertNever","_value","initialBrowseState","selectedItem","currentView","breadcrumbs","s3BrowseReducer","state","action","type","item","createResourceInfo","prefix","uri","versionId","undefined","S3Modal","i18nStrings","alert","selectableItemsTypes","fetchBuckets","bucketsVisibleColumns","bucketsIsItemDisabled","fetchObjects","objectsVisibleColumns","objectsIsItemDisabled","fetchVersions","versionsVisibleColumns","versionsIsItemDisabled","onSubmit","onDismiss","dispatch","forwardFocusRef","i18n","isVisualRefresh","current","focus","visible","size","closeAriaLabel","labelModalDismiss","header","modalTitle","footer","className","direction","variant","formAction","onClick","modalCancelButton","disabled","modalSubmitButton","ariaLabel","labelBreadcrumbs","expandAriaLabel","labelExpandBreadcrumbs","onFollow","event","preventDefault","detail","meta","items","text","modalBreadcrumbRootItem","href","map","segment","index","slice","fetchData","visibleColumns","isItemDisabled","onDrilldown","path","onSelect","pathSegments","IsFolder","Key"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/lib/default/s3-resource-selector/s3-modal/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useReducer, useRef } from 'react';\nimport InternalBreadcrumbGroup from '../../breadcrumb-group/internal';\nimport { InternalButton } from '../../button/internal';\nimport InternalModal from '../../modal/internal';\nimport InternalSpaceBetween from '../../space-between/internal';\nimport { ForwardFocusRef } from '../../internal/hooks/forward-focus';\nimport { useEffectOnUpdate } from '../../internal/hooks/use-effect-on-update';\nimport { useVisualRefresh } from '../../internal/hooks/use-visual-mode';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { BucketsTable } from './buckets-table';\nimport { ObjectsTable } from './objects-table';\nimport { VersionsTable } from './versions-table';\nimport styles from './styles.css.js';\nimport { joinObjectPath } from '../utils';\nimport { useInternalI18n } from '../../i18n/context';\n\nexport interface S3ModalProps {\n  alert: React.ReactNode;\n  selectableItemsTypes: S3ResourceSelectorProps['selectableItemsTypes'];\n  fetchBuckets: S3ResourceSelectorProps['fetchBuckets'];\n  bucketsVisibleColumns: ReadonlyArray<string>;\n  bucketsIsItemDisabled: S3ResourceSelectorProps['bucketsIsItemDisabled'];\n  fetchObjects: S3ResourceSelectorProps['fetchObjects'];\n  objectsVisibleColumns: ReadonlyArray<string>;\n  objectsIsItemDisabled: S3ResourceSelectorProps['objectsIsItemDisabled'];\n  fetchVersions: S3ResourceSelectorProps['fetchVersions'];\n  versionsVisibleColumns: ReadonlyArray<string>;\n  versionsIsItemDisabled: S3ResourceSelectorProps['versionsIsItemDisabled'];\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  onDismiss: () => void;\n  onSubmit: (resource: S3ResourceSelectorProps.Resource) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction assertNever(_value: never) {\n  return null;\n}\n\ninterface S3BrowseState {\n  selectedItem: string | null;\n  currentView: 'buckets' | 'objects' | 'versions';\n  breadcrumbs: ReadonlyArray<string>;\n}\n\ntype S3BrowseActions =\n  | { type: 'browse-buckets' }\n  | { type: 'browse-objects' | 'browse-versions'; breadcrumbs: S3BrowseState['breadcrumbs'] }\n  | { type: 'select-item'; item: string };\n\nconst initialBrowseState: S3BrowseState = {\n  selectedItem: null,\n  currentView: 'buckets',\n  breadcrumbs: [],\n};\n\nfunction s3BrowseReducer(state: S3BrowseState, action: S3BrowseActions) {\n  switch (action.type) {\n    case 'browse-buckets':\n      return initialBrowseState;\n    case 'browse-objects':\n      return {\n        selectedItem: null,\n        currentView: 'objects' as const,\n        breadcrumbs: action.breadcrumbs,\n      };\n    case 'browse-versions':\n      return {\n        selectedItem: null,\n        currentView: 'versions' as const,\n        breadcrumbs: action.breadcrumbs,\n      };\n    case 'select-item':\n      return {\n        ...state,\n        selectedItem: action.item,\n      };\n    default:\n      assertNever(action);\n  }\n  return state;\n}\n\nfunction createResourceInfo({ currentView, breadcrumbs, selectedItem }: S3BrowseState) {\n  const prefix = 's3://';\n  if (currentView === 'versions') {\n    return { uri: prefix + joinObjectPath(breadcrumbs), versionId: selectedItem ?? undefined };\n  }\n  return { uri: prefix + joinObjectPath([...breadcrumbs, selectedItem!]) };\n}\n\nexport function S3Modal({\n  i18nStrings,\n  alert,\n  selectableItemsTypes,\n  fetchBuckets,\n  bucketsVisibleColumns,\n  bucketsIsItemDisabled,\n  fetchObjects,\n  objectsVisibleColumns,\n  objectsIsItemDisabled,\n  fetchVersions,\n  versionsVisibleColumns,\n  versionsIsItemDisabled,\n  onSubmit,\n  onDismiss,\n}: S3ModalProps) {\n  const [{ currentView, breadcrumbs, selectedItem }, dispatch] = useReducer(s3BrowseReducer, initialBrowseState);\n  const forwardFocusRef = useRef<ForwardFocusRef>(null);\n  const i18n = useInternalI18n('s3-resource-selector');\n\n  const isVisualRefresh = useVisualRefresh();\n\n  useEffectOnUpdate(() => {\n    forwardFocusRef.current?.focus();\n  }, [breadcrumbs]);\n\n  return (\n    <div>\n      <InternalModal\n        visible={true}\n        size=\"max\"\n        closeAriaLabel={i18nStrings?.labelModalDismiss}\n        onDismiss={onDismiss}\n        header={i18n('i18nStrings.modalTitle', i18nStrings?.modalTitle)}\n        footer={\n          <InternalSpaceBetween className={styles['modal-actions']} size=\"xs\" direction=\"horizontal\">\n            <InternalButton variant=\"link\" formAction=\"none\" onClick={onDismiss}>\n              {i18n('i18nStrings.modalCancelButton', i18nStrings?.modalCancelButton)}\n            </InternalButton>\n            <InternalButton\n              variant=\"primary\"\n              className={styles['submit-button']}\n              disabled={!selectedItem}\n              formAction=\"none\"\n              onClick={() => onSubmit(createResourceInfo({ currentView, breadcrumbs, selectedItem }))}\n            >\n              {i18n('i18nStrings.modalSubmitButton', i18nStrings?.modalSubmitButton)}\n            </InternalButton>\n          </InternalSpaceBetween>\n        }\n      >\n        <InternalSpaceBetween size={isVisualRefresh ? 'xxs' : 'xs'}>\n          <InternalBreadcrumbGroup\n            ariaLabel={i18n('i18nStrings.labelBreadcrumbs', i18nStrings?.labelBreadcrumbs)}\n            expandAriaLabel={i18nStrings?.labelExpandBreadcrumbs}\n            onFollow={event => {\n              event.preventDefault();\n              event.detail.item.meta.onClick();\n            }}\n            items={[\n              {\n                text: i18n('i18nStrings.modalBreadcrumbRootItem', i18nStrings?.modalBreadcrumbRootItem) ?? '',\n                href: '',\n                meta: { onClick: () => dispatch({ type: 'browse-buckets' }) },\n              },\n              ...breadcrumbs.map((segment, index) => ({\n                text: segment,\n                href: '',\n                meta: {\n                  onClick: () =>\n                    dispatch({\n                      type: 'browse-objects',\n                      breadcrumbs: breadcrumbs.slice(0, index + 1),\n                    }),\n                },\n              })),\n            ]}\n          />\n          {alert}\n          {currentView === 'buckets' ? (\n            <BucketsTable\n              forwardFocusRef={forwardFocusRef}\n              fetchData={fetchBuckets}\n              visibleColumns={bucketsVisibleColumns}\n              isItemDisabled={bucketsIsItemDisabled}\n              selectableItemsTypes={selectableItemsTypes}\n              i18nStrings={i18nStrings}\n              isVisualRefresh={isVisualRefresh}\n              onDrilldown={path =>\n                dispatch({\n                  type: 'browse-objects',\n                  breadcrumbs: [path],\n                })\n              }\n              onSelect={item => dispatch({ type: 'select-item', item })}\n            />\n          ) : currentView === 'objects' ? (\n            <ObjectsTable\n              forwardFocusRef={forwardFocusRef}\n              pathSegments={breadcrumbs}\n              fetchData={fetchObjects}\n              visibleColumns={objectsVisibleColumns}\n              isItemDisabled={objectsIsItemDisabled}\n              selectableItemsTypes={selectableItemsTypes}\n              i18nStrings={i18nStrings}\n              isVisualRefresh={isVisualRefresh}\n              onDrilldown={item => {\n                dispatch({\n                  type: item.IsFolder ? 'browse-objects' : 'browse-versions',\n                  breadcrumbs: [...breadcrumbs, item.Key!],\n                });\n              }}\n              onSelect={item => dispatch({ type: 'select-item', item })}\n            />\n          ) : currentView === 'versions' ? (\n            <VersionsTable\n              forwardFocusRef={forwardFocusRef}\n              pathSegments={breadcrumbs}\n              fetchData={fetchVersions}\n              visibleColumns={versionsVisibleColumns}\n              isItemDisabled={versionsIsItemDisabled}\n              i18nStrings={i18nStrings}\n              isVisualRefresh={isVisualRefresh}\n              onSelect={item => dispatch({ type: 'select-item', item })}\n            />\n          ) : (\n            assertNever(currentView)\n          )}\n        </InternalSpaceBetween>\n      </InternalModal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}