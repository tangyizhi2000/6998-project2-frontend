{"ast":null,"code":"import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { nodeContains } from '@cloudscape-design/component-toolkit/dom';\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport ChartPopover from '../internal/components/chart-popover';\nimport SeriesDetails from '../internal/components/chart-series-details';\nimport SeriesMarker from '../internal/components/chart-series-marker';\nimport InternalBox from '../box/internal';\nimport Labels from './labels';\nimport styles from './styles.css.js';\nimport { defaultDetails, getDimensionsBySize } from './utils';\nimport Segments from './segments';\nimport ChartPlot from '../internal/components/chart-plot';\nimport { useInternalI18n } from '../i18n/context';\nimport { nodeBelongs } from '../internal/utils/node-belongs';\nimport clsx from 'clsx';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useHeightMeasure } from '../internal/hooks/container-queries/use-height-measure';\nexport default (_ref => {\n  let {\n    fitHeight,\n    height: explicitHeight,\n    variant,\n    size,\n    width,\n    i18nStrings,\n    ariaLabel,\n    ariaLabelledby,\n    ariaDescription,\n    innerMetricValue,\n    innerMetricDescription,\n    hideTitles,\n    hideDescriptions,\n    detailPopoverContent,\n    detailPopoverSize,\n    detailPopoverFooter,\n    segmentDescription,\n    highlightedSegment,\n    onHighlightChange,\n    legendSegment,\n    pieData,\n    dataSum\n  } = _ref;\n  var _a, _b;\n  const [pinnedSegment, setPinnedSegment] = useState(null);\n  const plotRef = useRef(null);\n  const containerRef = useRef(null);\n  const focusedSegmentRef = useRef(null);\n  const popoverTrackRef = useRef(null);\n  const popoverRef = useRef(null);\n  const hasLabels = !(hideTitles && hideDescriptions);\n  const isRefresh = useVisualRefresh();\n  const height = (_a = useHeightMeasure(() => {\n    var _a, _b;\n    return (_b = (_a = plotRef.current) === null || _a === void 0 ? void 0 : _a.svg) !== null && _b !== void 0 ? _b : null;\n  }, !fitHeight)) !== null && _a !== void 0 ? _a : explicitHeight;\n  const dimensions = useMemo(() => getDimensionsBySize({\n    size: fitHeight ? Math.min(height, width) : size,\n    hasLabels,\n    visualRefresh: isRefresh\n  }), [fitHeight, height, width, size, hasLabels, isRefresh]);\n  // Inner content is only available for donut charts and the inner description is not displayed for small charts\n  const hasInnerContent = variant === 'donut' && (innerMetricValue || innerMetricDescription && dimensions.size !== 'small');\n  const innerMetricId = useUniqueId('awsui-pie-chart__inner');\n  const [isTooltipOpen, setTooltipOpen] = useState(false);\n  const [tooltipData, setTooltipData] = useState();\n  const highlightedSegmentIndex = useMemo(() => {\n    for (let index = 0; index < pieData.length; index++) {\n      if (pieData[index].data.datum === highlightedSegment) {\n        return index;\n      }\n    }\n    return null;\n  }, [pieData, highlightedSegment]);\n  const detailPopoverFooterContent = useMemo(() => detailPopoverFooter && highlightedSegment ? detailPopoverFooter(highlightedSegment) : null, [detailPopoverFooter, highlightedSegment]);\n  const i18n = useInternalI18n('pie-chart');\n  const detailFunction = detailPopoverContent || defaultDetails(i18n, i18nStrings);\n  const details = tooltipData ? detailFunction(tooltipData.datum, dataSum) : [];\n  const tooltipContent = tooltipData && React.createElement(SeriesDetails, {\n    details: details\n  });\n  const popoverDismissedRecently = useRef(false);\n  const escapePressed = useRef(false);\n  const highlightSegment = useCallback(internalDatum => {\n    const segment = internalDatum.datum;\n    if (segment !== highlightedSegment) {\n      onHighlightChange(segment);\n    }\n    if (popoverTrackRef.current) {\n      setTooltipData({\n        datum: internalDatum.datum,\n        series: {\n          color: internalDatum.color,\n          index: internalDatum.index,\n          label: internalDatum.datum.title,\n          markerType: 'rectangle'\n        },\n        trackRef: popoverTrackRef\n      });\n      setTooltipOpen(true);\n    }\n  }, [highlightedSegment, setTooltipOpen, onHighlightChange]);\n  const clearHighlightedSegment = useCallback(() => {\n    setTooltipOpen(false);\n    onHighlightChange(null);\n  }, [onHighlightChange, setTooltipOpen]);\n  const checkMouseLeave = event => {\n    if (pinnedSegment !== null) {\n      return;\n    }\n    if (nodeContains(popoverRef.current, event.relatedTarget) || nodeContains(focusedSegmentRef.current, event.relatedTarget)) {\n      return;\n    }\n    clearHighlightedSegment();\n  };\n  useEffect(() => {\n    const onKeyDown = event => {\n      if (event.key === 'Escape') {\n        clearHighlightedSegment();\n        escapePressed.current = true;\n      }\n    };\n    document.addEventListener('keydown', onKeyDown);\n    return () => document.removeEventListener('keydown', onKeyDown);\n  }, [clearHighlightedSegment]);\n  const onMouseDown = useCallback(internalDatum => {\n    if (pinnedSegment === internalDatum.datum) {\n      setPinnedSegment(null);\n      clearHighlightedSegment();\n    } else {\n      setPinnedSegment(internalDatum.datum);\n      highlightSegment(internalDatum);\n    }\n  }, [pinnedSegment, clearHighlightedSegment, setPinnedSegment, highlightSegment]);\n  const onMouseOver = useCallback(internalDatum => {\n    if (escapePressed.current) {\n      escapePressed.current = false;\n      return;\n    }\n    if (pinnedSegment !== null) {\n      return;\n    }\n    highlightSegment(internalDatum);\n  }, [pinnedSegment, highlightSegment]);\n  const onKeyDown = useCallback(event => {\n    const keyCode = event.keyCode;\n    if (keyCode !== KeyCode.right && keyCode !== KeyCode.left && keyCode !== KeyCode.enter && keyCode !== KeyCode.space) {\n      return;\n    }\n    event.preventDefault();\n    let nextIndex = highlightedSegmentIndex || 0;\n    const MAX = pieData.length - 1;\n    if (keyCode === KeyCode.right) {\n      nextIndex++;\n      if (nextIndex > MAX) {\n        nextIndex = 0;\n      }\n    } else if (keyCode === KeyCode.left) {\n      nextIndex--;\n      if (nextIndex < 0) {\n        nextIndex = MAX;\n      }\n    }\n    if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {\n      setPinnedSegment(pieData[nextIndex].data.datum);\n    }\n    highlightSegment(pieData[nextIndex].data);\n  }, [setPinnedSegment, highlightSegment, pieData, highlightedSegmentIndex]);\n  const onFocus = useCallback((_event, target) => {\n    // We need to make sure that we do not re-show the popover when we focus the segment after the popover is dismissed.\n    // Normally we would check `event.relatedTarget` for the previously focused element,\n    // but this is not supported for SVG elements in IE11. The workaround is this `popoverDismissedRecently` ref.\n    if (pinnedSegment !== null || popoverDismissedRecently.current || target === 'mouse') {\n      return;\n    }\n    const segment = highlightedSegment || legendSegment || pieData[0].data.datum;\n    const matched = pieData.filter(d => d.data.datum === segment);\n    highlightSegment(matched[0].data);\n  }, [pinnedSegment, pieData, highlightSegment, highlightedSegment, legendSegment]);\n  const onBlur = useCallback(event => {\n    const blurTarget = event.relatedTarget || event.target;\n    if (blurTarget === null || !(blurTarget instanceof Element) || !nodeBelongs(containerRef.current, blurTarget)) {\n      // We only need to close the tooltip and remove the pinned segment so that we keep track of the current\n      // highlighted legendSeries. using clearHighlightedSegment() would set the legendSeries to null, in that case\n      // using Keyboard Tab will always highlight the first legend item in the legend component.\n      setTooltipOpen(false);\n      setPinnedSegment(null);\n    }\n  }, [setPinnedSegment]);\n  const onPopoverDismiss = outsideClick => {\n    setTooltipOpen(false);\n    setPinnedSegment(null);\n    if (!outsideClick) {\n      // The delay is needed to bypass focus events caused by click or keypress needed to unpin the popover.\n      setTimeout(() => {\n        popoverDismissedRecently.current = true;\n        plotRef.current.focusApplication();\n        popoverDismissedRecently.current = false;\n      }, 0);\n    } else {\n      onHighlightChange(null);\n    }\n  };\n  return React.createElement(\"div\", {\n    className: clsx(styles['chart-container'], fitHeight && styles['chart-container--fit-height']),\n    ref: containerRef\n  }, React.createElement(\"div\", {\n    className: clsx(styles['chart-container-chart-plot'], fitHeight && styles['chart-container-chart-plot--fit-height'])\n  }, React.createElement(ChartPlot, {\n    ref: plotRef,\n    width: \"100%\",\n    height: fitHeight ? '100%' : height,\n    transform: `translate(${width / 2} ${height / 2})`,\n    isPrecise: true,\n    isClickable: !isTooltipOpen,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescription: ariaDescription,\n    ariaDescribedby: hasInnerContent ? innerMetricId : undefined,\n    ariaRoleDescription: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.chartAriaRoleDescription,\n    ariaLiveRegion: tooltipContent,\n    activeElementRef: focusedSegmentRef,\n    activeElementKey: highlightedSegmentIndex === null || highlightedSegmentIndex === void 0 ? void 0 : highlightedSegmentIndex.toString(),\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onKeyDown: onKeyDown,\n    onMouseOut: checkMouseLeave\n  }, React.createElement(Segments, {\n    pieData: pieData,\n    dimensions: dimensions,\n    variant: variant,\n    focusedSegmentRef: focusedSegmentRef,\n    popoverTrackRef: popoverTrackRef,\n    highlightedSegment: highlightedSegment,\n    segmentAriaRoleDescription: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.segmentAriaRoleDescription,\n    onMouseDown: onMouseDown,\n    onMouseOver: onMouseOver\n  }), hasLabels && React.createElement(Labels, {\n    pieData: pieData,\n    dimensions: dimensions,\n    segmentDescription: segmentDescription,\n    visibleDataSum: dataSum,\n    hideTitles: hideTitles,\n    hideDescriptions: hideDescriptions,\n    highlightedSegment: highlightedSegment,\n    containerRef: containerRef\n  }))), hasInnerContent && React.createElement(\"div\", {\n    className: styles['inner-content'],\n    id: innerMetricId\n  }, innerMetricValue && React.createElement(InternalBox, {\n    variant: dimensions.size === 'small' ? 'h3' : 'h1',\n    tagOverride: \"div\",\n    color: \"inherit\",\n    padding: \"n\"\n  }, innerMetricValue), innerMetricDescription && dimensions.size !== 'small' && React.createElement(InternalBox, {\n    variant: \"h3\",\n    color: \"text-body-secondary\",\n    tagOverride: \"div\",\n    padding: \"n\"\n  }, innerMetricDescription)), isTooltipOpen && tooltipData && React.createElement(ChartPopover, {\n    ref: popoverRef,\n    title: tooltipData.series && React.createElement(InternalBox, {\n      className: styles['popover-header'],\n      variant: \"strong\"\n    }, React.createElement(SeriesMarker, {\n      color: tooltipData.series.color,\n      type: tooltipData.series.markerType\n    }), ' ', tooltipData.series.label),\n    trackRef: tooltipData.trackRef,\n    trackKey: tooltipData.series.index,\n    dismissButton: pinnedSegment !== null,\n    dismissAriaLabel: i18nStrings.detailPopoverDismissAriaLabel,\n    onDismiss: onPopoverDismiss,\n    container: ((_b = plotRef.current) === null || _b === void 0 ? void 0 : _b.svg) || null,\n    size: detailPopoverSize,\n    onMouseLeave: checkMouseLeave\n  }, tooltipContent, detailPopoverFooterContent && React.createElement(InternalBox, {\n    margin: {\n      top: 's'\n    }\n  }, detailPopoverFooterContent)));\n});","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useMemo","useRef","useState","nodeContains","KeyCode","useUniqueId","ChartPopover","SeriesDetails","SeriesMarker","InternalBox","Labels","styles","defaultDetails","getDimensionsBySize","Segments","ChartPlot","useInternalI18n","nodeBelongs","clsx","useVisualRefresh","useHeightMeasure","fitHeight","height","explicitHeight","variant","size","width","i18nStrings","ariaLabel","ariaLabelledby","ariaDescription","innerMetricValue","innerMetricDescription","hideTitles","hideDescriptions","detailPopoverContent","detailPopoverSize","detailPopoverFooter","segmentDescription","highlightedSegment","onHighlightChange","legendSegment","pieData","dataSum","pinnedSegment","setPinnedSegment","plotRef","containerRef","focusedSegmentRef","popoverTrackRef","popoverRef","hasLabels","isRefresh","current","svg","dimensions","Math","min","visualRefresh","hasInnerContent","innerMetricId","isTooltipOpen","setTooltipOpen","tooltipData","setTooltipData","highlightedSegmentIndex","index","length","data","datum","detailPopoverFooterContent","i18n","detailFunction","details","tooltipContent","popoverDismissedRecently","escapePressed","highlightSegment","internalDatum","segment","series","color","label","title","markerType","trackRef","clearHighlightedSegment","checkMouseLeave","event","relatedTarget","onKeyDown","key","document","addEventListener","removeEventListener","onMouseDown","onMouseOver","keyCode","right","left","enter","space","preventDefault","nextIndex","MAX","onFocus","_event","target","matched","filter","d","onBlur","blurTarget","Element","onPopoverDismiss","outsideClick","setTimeout","focusApplication","className","ref","transform","isPrecise","isClickable","ariaDescribedby","undefined","ariaRoleDescription","chartAriaRoleDescription","ariaLiveRegion","activeElementRef","activeElementKey","toString","onMouseOut","segmentAriaRoleDescription","visibleDataSum","id","tagOverride","padding","type","trackKey","dismissButton","dismissAriaLabel","detailPopoverDismissAriaLabel","onDismiss","container","onMouseLeave","margin","top"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/pie-chart/lib/default/pie-chart/pie-chart.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PieArcDatum } from 'd3-shape';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { nodeContains } from '@cloudscape-design/component-toolkit/dom';\n\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport ChartPopover from '../internal/components/chart-popover';\nimport SeriesDetails from '../internal/components/chart-series-details';\nimport SeriesMarker from '../internal/components/chart-series-marker';\nimport InternalBox from '../box/internal';\n\nimport Labels from './labels';\nimport { PieChartProps, SeriesInfo } from './interfaces';\nimport styles from './styles.css.js';\nimport { defaultDetails, getDimensionsBySize } from './utils';\nimport Segments from './segments';\nimport ChartPlot, { ChartPlotRef } from '../internal/components/chart-plot';\nimport { SomeRequired } from '../internal/types';\nimport { useInternalI18n } from '../i18n/context';\nimport { nodeBelongs } from '../internal/utils/node-belongs';\nimport clsx from 'clsx';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useHeightMeasure } from '../internal/hooks/container-queries/use-height-measure';\n\nexport interface InternalChartDatum<T> {\n  index: number;\n  color: string;\n  datum: Readonly<T>;\n}\n\ninterface InternalPieChartProps<T extends PieChartProps.Datum>\n  extends SomeRequired<\n    Omit<PieChartProps<T>, 'onHighlightChange' | 'statusType'>,\n    'variant' | 'size' | 'i18nStrings' | 'hideTitles' | 'hideDescriptions'\n  > {\n  width: number;\n  height: number;\n\n  highlightedSegment: T | null;\n  onHighlightChange: (segment: null | T) => void;\n\n  legendSegment: T | null;\n\n  pieData: PieArcDatum<InternalChartDatum<T>>[];\n  dataSum: number;\n}\n\nexport interface TooltipData<T> {\n  datum: T;\n  trackRef: React.RefObject<SVGElement>;\n  series: SeriesInfo;\n}\n\nexport default <T extends PieChartProps.Datum>({\n  fitHeight,\n  height: explicitHeight,\n  variant,\n  size,\n  width,\n  i18nStrings,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescription,\n  innerMetricValue,\n  innerMetricDescription,\n  hideTitles,\n  hideDescriptions,\n  detailPopoverContent,\n  detailPopoverSize,\n  detailPopoverFooter,\n  segmentDescription,\n  highlightedSegment,\n  onHighlightChange,\n  legendSegment,\n  pieData,\n  dataSum,\n}: InternalPieChartProps<T>) => {\n  const [pinnedSegment, setPinnedSegment] = useState<T | null>(null);\n  const plotRef = useRef<ChartPlotRef>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const focusedSegmentRef = useRef<SVGGElement>(null);\n  const popoverTrackRef = useRef<SVGCircleElement>(null);\n  const popoverRef = useRef<HTMLElement | null>(null);\n\n  const hasLabels = !(hideTitles && hideDescriptions);\n  const isRefresh = useVisualRefresh();\n\n  const height = useHeightMeasure(() => plotRef.current?.svg ?? null, !fitHeight) ?? explicitHeight;\n\n  const dimensions = useMemo(\n    () =>\n      getDimensionsBySize({ size: fitHeight ? Math.min(height, width) : size, hasLabels, visualRefresh: isRefresh }),\n    [fitHeight, height, width, size, hasLabels, isRefresh]\n  );\n\n  // Inner content is only available for donut charts and the inner description is not displayed for small charts\n  const hasInnerContent =\n    variant === 'donut' && (innerMetricValue || (innerMetricDescription && dimensions.size !== 'small'));\n\n  const innerMetricId = useUniqueId('awsui-pie-chart__inner');\n\n  const [isTooltipOpen, setTooltipOpen] = useState<boolean>(false);\n  const [tooltipData, setTooltipData] = useState<TooltipData<T>>();\n\n  const highlightedSegmentIndex = useMemo(() => {\n    for (let index = 0; index < pieData.length; index++) {\n      if (pieData[index].data.datum === highlightedSegment) {\n        return index;\n      }\n    }\n    return null;\n  }, [pieData, highlightedSegment]);\n\n  const detailPopoverFooterContent = useMemo(\n    () => (detailPopoverFooter && highlightedSegment ? detailPopoverFooter(highlightedSegment) : null),\n    [detailPopoverFooter, highlightedSegment]\n  );\n\n  const i18n = useInternalI18n('pie-chart');\n  const detailFunction = detailPopoverContent || defaultDetails(i18n, i18nStrings);\n  const details = tooltipData ? detailFunction(tooltipData.datum, dataSum) : [];\n  const tooltipContent = tooltipData && <SeriesDetails details={details} />;\n\n  const popoverDismissedRecently = useRef(false);\n  const escapePressed = useRef(false);\n\n  const highlightSegment = useCallback(\n    (internalDatum: InternalChartDatum<T>) => {\n      const segment = internalDatum.datum;\n      if (segment !== highlightedSegment) {\n        onHighlightChange(segment);\n      }\n\n      if (popoverTrackRef.current) {\n        setTooltipData({\n          datum: internalDatum.datum,\n          series: {\n            color: internalDatum.color,\n            index: internalDatum.index,\n            label: internalDatum.datum.title,\n            markerType: 'rectangle',\n          },\n          trackRef: popoverTrackRef,\n        });\n        setTooltipOpen(true);\n      }\n    },\n    [highlightedSegment, setTooltipOpen, onHighlightChange]\n  );\n\n  const clearHighlightedSegment = useCallback(() => {\n    setTooltipOpen(false);\n    onHighlightChange(null);\n  }, [onHighlightChange, setTooltipOpen]);\n\n  const checkMouseLeave = (event: React.MouseEvent) => {\n    if (pinnedSegment !== null) {\n      return;\n    }\n\n    if (\n      nodeContains(popoverRef.current, event.relatedTarget) ||\n      nodeContains(focusedSegmentRef.current, event.relatedTarget)\n    ) {\n      return;\n    }\n\n    clearHighlightedSegment();\n  };\n\n  useEffect(() => {\n    const onKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        clearHighlightedSegment();\n        escapePressed.current = true;\n      }\n    };\n    document.addEventListener('keydown', onKeyDown);\n    return () => document.removeEventListener('keydown', onKeyDown);\n  }, [clearHighlightedSegment]);\n\n  const onMouseDown = useCallback(\n    (internalDatum: InternalChartDatum<T>) => {\n      if (pinnedSegment === internalDatum.datum) {\n        setPinnedSegment(null);\n        clearHighlightedSegment();\n      } else {\n        setPinnedSegment(internalDatum.datum);\n        highlightSegment(internalDatum);\n      }\n    },\n    [pinnedSegment, clearHighlightedSegment, setPinnedSegment, highlightSegment]\n  );\n  const onMouseOver = useCallback(\n    (internalDatum: InternalChartDatum<T>) => {\n      if (escapePressed.current) {\n        escapePressed.current = false;\n        return;\n      }\n      if (pinnedSegment !== null) {\n        return;\n      }\n      highlightSegment(internalDatum);\n    },\n    [pinnedSegment, highlightSegment]\n  );\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const keyCode = event.keyCode;\n      if (\n        keyCode !== KeyCode.right &&\n        keyCode !== KeyCode.left &&\n        keyCode !== KeyCode.enter &&\n        keyCode !== KeyCode.space\n      ) {\n        return;\n      }\n\n      event.preventDefault();\n\n      let nextIndex = highlightedSegmentIndex || 0;\n      const MAX = pieData.length - 1;\n      if (keyCode === KeyCode.right) {\n        nextIndex++;\n        if (nextIndex > MAX) {\n          nextIndex = 0;\n        }\n      } else if (keyCode === KeyCode.left) {\n        nextIndex--;\n        if (nextIndex < 0) {\n          nextIndex = MAX;\n        }\n      }\n      if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {\n        setPinnedSegment(pieData[nextIndex].data.datum);\n      }\n      highlightSegment(pieData[nextIndex].data);\n    },\n    [setPinnedSegment, highlightSegment, pieData, highlightedSegmentIndex]\n  );\n  const onFocus = useCallback(\n    (_event: any, target: 'keyboard' | 'mouse') => {\n      // We need to make sure that we do not re-show the popover when we focus the segment after the popover is dismissed.\n      // Normally we would check `event.relatedTarget` for the previously focused element,\n      // but this is not supported for SVG elements in IE11. The workaround is this `popoverDismissedRecently` ref.\n      if (pinnedSegment !== null || popoverDismissedRecently.current || target === 'mouse') {\n        return;\n      }\n\n      const segment = highlightedSegment || legendSegment || pieData[0].data.datum;\n      const matched = pieData.filter(d => d.data.datum === segment);\n      highlightSegment(matched[0].data);\n    },\n    [pinnedSegment, pieData, highlightSegment, highlightedSegment, legendSegment]\n  );\n\n  const onBlur = useCallback(\n    (event: React.FocusEvent) => {\n      const blurTarget = event.relatedTarget || event.target;\n      if (blurTarget === null || !(blurTarget instanceof Element) || !nodeBelongs(containerRef.current, blurTarget)) {\n        // We only need to close the tooltip and remove the pinned segment so that we keep track of the current\n        // highlighted legendSeries. using clearHighlightedSegment() would set the legendSeries to null, in that case\n        // using Keyboard Tab will always highlight the first legend item in the legend component.\n        setTooltipOpen(false);\n        setPinnedSegment(null);\n      }\n    },\n    [setPinnedSegment]\n  );\n  const onPopoverDismiss = (outsideClick?: boolean) => {\n    setTooltipOpen(false);\n    setPinnedSegment(null);\n\n    if (!outsideClick) {\n      // The delay is needed to bypass focus events caused by click or keypress needed to unpin the popover.\n      setTimeout(() => {\n        popoverDismissedRecently.current = true;\n        plotRef.current!.focusApplication();\n        popoverDismissedRecently.current = false;\n      }, 0);\n    } else {\n      onHighlightChange(null);\n    }\n  };\n\n  return (\n    <div\n      className={clsx(styles['chart-container'], fitHeight && styles['chart-container--fit-height'])}\n      ref={containerRef}\n    >\n      <div\n        className={clsx(\n          styles['chart-container-chart-plot'],\n          fitHeight && styles['chart-container-chart-plot--fit-height']\n        )}\n      >\n        <ChartPlot\n          ref={plotRef}\n          width=\"100%\"\n          height={fitHeight ? '100%' : height}\n          transform={`translate(${width / 2} ${height / 2})`}\n          isPrecise={true}\n          isClickable={!isTooltipOpen}\n          ariaLabel={ariaLabel}\n          ariaLabelledby={ariaLabelledby}\n          ariaDescription={ariaDescription}\n          ariaDescribedby={hasInnerContent ? innerMetricId : undefined}\n          ariaRoleDescription={i18nStrings?.chartAriaRoleDescription}\n          ariaLiveRegion={tooltipContent}\n          activeElementRef={focusedSegmentRef}\n          activeElementKey={highlightedSegmentIndex?.toString()}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          onKeyDown={onKeyDown}\n          onMouseOut={checkMouseLeave}\n        >\n          <Segments\n            pieData={pieData}\n            dimensions={dimensions}\n            variant={variant}\n            focusedSegmentRef={focusedSegmentRef}\n            popoverTrackRef={popoverTrackRef}\n            highlightedSegment={highlightedSegment}\n            segmentAriaRoleDescription={i18nStrings?.segmentAriaRoleDescription}\n            onMouseDown={onMouseDown}\n            onMouseOver={onMouseOver}\n          />\n          {hasLabels && (\n            <Labels\n              pieData={pieData}\n              dimensions={dimensions}\n              segmentDescription={segmentDescription}\n              visibleDataSum={dataSum}\n              hideTitles={hideTitles}\n              hideDescriptions={hideDescriptions}\n              highlightedSegment={highlightedSegment}\n              containerRef={containerRef}\n            />\n          )}\n        </ChartPlot>\n      </div>\n\n      {hasInnerContent && (\n        <div className={styles['inner-content']} id={innerMetricId}>\n          {innerMetricValue && (\n            <InternalBox\n              variant={dimensions.size === 'small' ? 'h3' : 'h1'}\n              tagOverride=\"div\"\n              color=\"inherit\"\n              padding=\"n\"\n            >\n              {innerMetricValue}\n            </InternalBox>\n          )}\n          {innerMetricDescription && dimensions.size !== 'small' && (\n            <InternalBox variant=\"h3\" color=\"text-body-secondary\" tagOverride=\"div\" padding=\"n\">\n              {innerMetricDescription}\n            </InternalBox>\n          )}\n        </div>\n      )}\n      {isTooltipOpen && tooltipData && (\n        <ChartPopover\n          ref={popoverRef}\n          title={\n            tooltipData.series && (\n              <InternalBox className={styles['popover-header']} variant=\"strong\">\n                <SeriesMarker color={tooltipData.series.color} type={tooltipData.series.markerType} />{' '}\n                {tooltipData.series.label}\n              </InternalBox>\n            )\n          }\n          trackRef={tooltipData.trackRef}\n          trackKey={tooltipData.series.index}\n          dismissButton={pinnedSegment !== null}\n          dismissAriaLabel={i18nStrings.detailPopoverDismissAriaLabel}\n          onDismiss={onPopoverDismiss}\n          container={plotRef.current?.svg || null}\n          size={detailPopoverSize}\n          onMouseLeave={checkMouseLeave}\n        >\n          {tooltipContent}\n          {detailPopoverFooterContent && <InternalBox margin={{ top: 's' }}>{detailPopoverFooterContent}</InternalBox>}\n        </ChartPopover>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}