{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport Legend from '../internal/components/chart-legend';\nimport Filter from '../internal/components/chart-filter';\nimport { pie } from 'd3-shape';\nimport InternalPieChart from './pie-chart';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport createCategoryColorScale from '../internal/utils/create-category-color-scale';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { nodeBelongs } from '../internal/utils/node-belongs';\nimport { ChartWrapper } from '../internal/components/chart-wrapper';\nimport ChartStatusContainer, { getChartStatus } from '../internal/components/chart-status-container';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { getDimensionsBySize } from './utils';\nvar PieChart = function PieChart(_a) {\n  var _clsx;\n  var fitHeight = _a.fitHeight,\n    _a$variant = _a.variant,\n    variant = _a$variant === void 0 ? 'pie' : _a$variant,\n    _a$size = _a.size,\n    size = _a$size === void 0 ? 'medium' : _a$size,\n    _a$hideTitles = _a.hideTitles,\n    hideTitles = _a$hideTitles === void 0 ? false : _a$hideTitles,\n    _a$hideDescriptions = _a.hideDescriptions,\n    hideDescriptions = _a$hideDescriptions === void 0 ? false : _a$hideDescriptions,\n    _a$hideLegend = _a.hideLegend,\n    hideLegend = _a$hideLegend === void 0 ? false : _a$hideLegend,\n    _a$hideFilter = _a.hideFilter,\n    hideFilter = _a$hideFilter === void 0 ? false : _a$hideFilter,\n    _a$statusType = _a.statusType,\n    statusType = _a$statusType === void 0 ? 'finished' : _a$statusType,\n    _a$data = _a.data,\n    externalData = _a$data === void 0 ? [] : _a$data,\n    _a$i18nStrings = _a.i18nStrings,\n    i18nStrings = _a$i18nStrings === void 0 ? {} : _a$i18nStrings,\n    controlledHighlightedSegment = _a.highlightedSegment,\n    controlledVisibleSegments = _a.visibleSegments,\n    controlledOnHighlightChange = _a.onHighlightChange,\n    onFilterChange = _a.onFilterChange,\n    additionalFilters = _a.additionalFilters,\n    legendTitle = _a.legendTitle,\n    _a$detailPopoverSize = _a.detailPopoverSize,\n    detailPopoverSize = _a$detailPopoverSize === void 0 ? 'medium' : _a$detailPopoverSize,\n    props = __rest(_a, [\"fitHeight\", \"variant\", \"size\", \"hideTitles\", \"hideDescriptions\", \"hideLegend\", \"hideFilter\", \"statusType\", \"data\", \"i18nStrings\", \"highlightedSegment\", \"visibleSegments\", \"onHighlightChange\", \"onFilterChange\", \"additionalFilters\", \"legendTitle\", \"detailPopoverSize\"]);\n  var _useBaseComponent = useBaseComponent('PieChart'),\n    _useBaseComponent$__i = _useBaseComponent.__internalRootRef,\n    __internalRootRef = _useBaseComponent$__i === void 0 ? null : _useBaseComponent$__i;\n  var baseProps = getBaseProps(props);\n  var containerRef = useRef(null);\n  var _useContainerWidth = useContainerWidth(),\n    _useContainerWidth2 = _slicedToArray(_useContainerWidth, 2),\n    containerWidth = _useContainerWidth2[0],\n    measureRef = _useContainerWidth2[1];\n  var data = useMemo(function () {\n    var colors = createCategoryColorScale(externalData, undefined, function (it) {\n      return it.color || null;\n    });\n    return externalData.map(function (datum, i) {\n      return {\n        index: i,\n        color: colors[i],\n        datum: datum\n      };\n    });\n  }, [externalData]);\n  var _useControllable = useControllable(controlledHighlightedSegment, controlledOnHighlightChange, null, {\n      componentName: 'PieChart',\n      controlledProp: 'highlightedSegment',\n      changeHandler: 'onHighlightChange'\n    }),\n    _useControllable2 = _slicedToArray(_useControllable, 2),\n    _useControllable2$ = _useControllable2[0],\n    highlightedSegment = _useControllable2$ === void 0 ? null : _useControllable2$,\n    setHighlightedSegment = _useControllable2[1];\n  var _useState = useState(highlightedSegment),\n    _useState2 = _slicedToArray(_useState, 2),\n    legendSegment = _useState2[0],\n    setLegendSegment = _useState2[1];\n  useEffect(function () {\n    setLegendSegment(controlledHighlightedSegment || null);\n  }, [controlledHighlightedSegment]);\n  var _useControllable3 = useControllable(controlledVisibleSegments, onFilterChange, externalData, {\n      componentName: 'PieChart',\n      controlledProp: 'visibleSegments',\n      changeHandler: 'onFilterChange'\n    }),\n    _useControllable4 = _slicedToArray(_useControllable3, 2),\n    visibleSegments = _useControllable4[0],\n    setVisibleSegments = _useControllable4[1];\n  var visibleData = useMemo(function () {\n    return data.filter(function (d) {\n      return (visibleSegments === null || visibleSegments === void 0 ? void 0 : visibleSegments.indexOf(d.datum)) !== -1;\n    });\n  }, [data, visibleSegments]);\n  var filterItems = data === null || data === void 0 ? void 0 : data.map(function (data) {\n    return {\n      label: data.datum.title,\n      color: data.color,\n      type: 'rectangle',\n      datum: data.datum\n    };\n  });\n  var legendItems = filterItems.filter(function (d) {\n    return (visibleSegments === null || visibleSegments === void 0 ? void 0 : visibleSegments.indexOf(d.datum)) !== -1;\n  });\n  var filterChange = useCallback(function (selectedSeries) {\n    setVisibleSegments(selectedSeries);\n    fireNonCancelableEvent(onFilterChange, {\n      visibleSegments: selectedSeries\n    });\n  }, [setVisibleSegments, onFilterChange]);\n  var onHighlightChange = useCallback(function (segment) {\n    setLegendSegment(segment);\n    setHighlightedSegment(segment);\n    fireNonCancelableEvent(controlledOnHighlightChange, {\n      highlightedSegment: segment\n    });\n  }, [controlledOnHighlightChange, setHighlightedSegment]);\n  var onBlur = function onBlur(event) {\n    if (event.relatedTarget && !nodeBelongs(containerRef.current, event.relatedTarget)) {\n      highlightedSegment && onHighlightChange(null);\n      setLegendSegment(null);\n    }\n  };\n  var mergedRef = useMergeRefs(containerRef, measureRef, __internalRootRef);\n  var _useMemo = useMemo(function () {\n      var dataSum = visibleData.reduce(function (sum, d) {\n        return sum + d.datum.value;\n      }, 0);\n      var pieFactory = pie()\n      // Minimum 1% segment size\n      .value(function (d) {\n        return d.datum.value < dataSum / 100 ? dataSum / 100 : d.datum.value;\n      }).sort(null);\n      // Filter out segments with value of zero or below\n      var pieData = pieFactory(visibleData.filter(function (d) {\n        return d.datum.value > 0;\n      }));\n      return {\n        pieData: pieData,\n        dataSum: dataSum\n      };\n    }, [visibleData]),\n    pieData = _useMemo.pieData,\n    dataSum = _useMemo.dataSum;\n  var hasNoData = !externalData || externalData.length === 0;\n  var _getChartStatus = getChartStatus({\n      externalData: data,\n      visibleData: pieData,\n      statusType: statusType\n    }),\n    isEmpty = _getChartStatus.isEmpty,\n    showChart = _getChartStatus.showChart;\n  // Pie charts have a special condition for empty/noMatch due to how zero-value segments are handled.\n  var isNoMatch = isEmpty && visibleData.length !== data.length;\n  var showFilters = statusType === 'finished' && !hasNoData && (additionalFilters || !hideFilter);\n  var reserveLegendSpace = !showChart && !hideLegend;\n  var reserveFilterSpace = statusType !== 'finished' && !isNoMatch && (!hideFilter || additionalFilters);\n  var hasLabels = !(hideTitles && hideDescriptions);\n  var isRefresh = useVisualRefresh();\n  var defaultDimensions = getDimensionsBySize({\n    size: size,\n    hasLabels: hasLabels,\n    visualRefresh: isRefresh\n  });\n  var radius = defaultDimensions.outerRadius;\n  var height = 2 * (radius + defaultDimensions.padding + (hasLabels ? defaultDimensions.paddingLabels : 0));\n  return React.createElement(ChartWrapper, Object.assign({\n    ref: mergedRef,\n    fitHeight: !!fitHeight\n  }, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    contentClassName: clsx(styles.content, styles[\"content--\".concat(defaultDimensions.size)], (_clsx = {}, _defineProperty(_clsx, styles['content--without-labels'], !hasLabels), _defineProperty(_clsx, styles['content--fit-height'], fitHeight), _clsx)),\n    defaultFilter: showFilters && !hideFilter ? React.createElement(Filter, {\n      series: filterItems,\n      onChange: filterChange,\n      selectedSeries: visibleSegments,\n      i18nStrings: i18nStrings\n    }) : null,\n    additionalFilters: showFilters ? additionalFilters : null,\n    reserveFilterSpace: !!reserveFilterSpace,\n    reserveLegendSpace: !!reserveLegendSpace,\n    chartStatus: React.createElement(ChartStatusContainer, {\n      isEmpty: isEmpty,\n      isNoMatch: isNoMatch,\n      showChart: showChart,\n      statusType: statusType,\n      empty: props.empty,\n      noMatch: props.noMatch,\n      loadingText: props.loadingText,\n      errorText: props.errorText,\n      recoveryText: props.recoveryText,\n      onRecoveryClick: props.onRecoveryClick\n    }),\n    chart: showChart ? React.createElement(InternalPieChart, Object.assign({}, props, {\n      variant: variant,\n      size: size,\n      height: height,\n      fitHeight: fitHeight,\n      data: externalData,\n      width: containerWidth,\n      hideTitles: hideTitles,\n      hideDescriptions: hideDescriptions,\n      i18nStrings: i18nStrings,\n      onHighlightChange: onHighlightChange,\n      highlightedSegment: highlightedSegment,\n      legendSegment: legendSegment,\n      detailPopoverSize: detailPopoverSize,\n      pieData: pieData,\n      dataSum: dataSum\n    })) : null,\n    legend: !hideLegend && !hasNoData && statusType === 'finished' && React.createElement(Legend, {\n      series: legendItems,\n      highlightedSeries: legendSegment,\n      legendTitle: legendTitle,\n      ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.legendAriaLabel,\n      onHighlightChange: onHighlightChange,\n      plotContainerRef: containerRef\n    }),\n    onBlur: onBlur\n  }));\n};\napplyDisplayName(PieChart, 'PieChart');\nexport default PieChart;","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useMemo","useRef","useState","clsx","getBaseProps","useControllable","fireNonCancelableEvent","Legend","Filter","pie","InternalPieChart","styles","applyDisplayName","useBaseComponent","useMergeRefs","createCategoryColorScale","useContainerWidth","nodeBelongs","ChartWrapper","ChartStatusContainer","getChartStatus","useVisualRefresh","getDimensionsBySize","PieChart","_a","fitHeight","variant","size","hideTitles","hideDescriptions","hideLegend","hideFilter","statusType","data","externalData","i18nStrings","controlledHighlightedSegment","highlightedSegment","controlledVisibleSegments","visibleSegments","controlledOnHighlightChange","onHighlightChange","onFilterChange","additionalFilters","legendTitle","detailPopoverSize","props","__internalRootRef","baseProps","containerRef","containerWidth","measureRef","colors","undefined","it","color","map","datum","i","index","componentName","controlledProp","changeHandler","setHighlightedSegment","legendSegment","setLegendSegment","setVisibleSegments","visibleData","filter","indexOf","d","filterItems","label","title","type","legendItems","filterChange","selectedSeries","segment","onBlur","event","relatedTarget","current","mergedRef","dataSum","reduce","sum","value","pieFactory","sort","pieData","hasNoData","length","isEmpty","showChart","isNoMatch","showFilters","reserveLegendSpace","reserveFilterSpace","hasLabels","isRefresh","defaultDimensions","visualRefresh","radius","outerRadius","height","padding","paddingLabels","ref","className","root","contentClassName","content","defaultFilter","series","onChange","chartStatus","empty","noMatch","loadingText","errorText","recoveryText","onRecoveryClick","chart","width","legend","highlightedSeries","ariaLabel","legendAriaLabel","plotContainerRef"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/pie-chart/lib/default/pie-chart/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport Legend, { ChartLegendProps } from '../internal/components/chart-legend';\nimport Filter, { ChartFilterProps } from '../internal/components/chart-filter';\nimport { pie } from 'd3-shape';\n\nimport InternalPieChart, { InternalChartDatum } from './pie-chart';\nimport { PieChartProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport createCategoryColorScale from '../internal/utils/create-category-color-scale';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { nodeBelongs } from '../internal/utils/node-belongs';\nimport { ChartWrapper } from '../internal/components/chart-wrapper';\nimport ChartStatusContainer, { getChartStatus } from '../internal/components/chart-status-container';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { getDimensionsBySize } from './utils';\n\nexport { PieChartProps };\n\nconst PieChart = function PieChart<T extends PieChartProps.Datum = PieChartProps.Datum>({\n  fitHeight,\n  variant = 'pie',\n  size = 'medium',\n  hideTitles = false,\n  hideDescriptions = false,\n  hideLegend = false,\n  hideFilter = false,\n  statusType = 'finished',\n  data: externalData = [],\n  i18nStrings = {},\n  highlightedSegment: controlledHighlightedSegment,\n  visibleSegments: controlledVisibleSegments,\n  onHighlightChange: controlledOnHighlightChange,\n  onFilterChange,\n  additionalFilters,\n  legendTitle,\n  detailPopoverSize = 'medium',\n  ...props\n}: PieChartProps<T>) {\n  const { __internalRootRef = null } = useBaseComponent('PieChart');\n  const baseProps = getBaseProps(props);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [containerWidth, measureRef] = useContainerWidth();\n\n  const data: ReadonlyArray<InternalChartDatum<T>> = useMemo(() => {\n    const colors = createCategoryColorScale(externalData, undefined, it => it.color || null);\n\n    return externalData.map((datum, i) => ({\n      index: i,\n      color: colors[i],\n      datum,\n    }));\n  }, [externalData]);\n\n  const [highlightedSegment = null, setHighlightedSegment] = useControllable(\n    controlledHighlightedSegment,\n    controlledOnHighlightChange,\n    null,\n    {\n      componentName: 'PieChart',\n      controlledProp: 'highlightedSegment',\n      changeHandler: 'onHighlightChange',\n    }\n  );\n  const [legendSegment, setLegendSegment] = useState<null | T>(highlightedSegment);\n  useEffect(() => {\n    setLegendSegment(controlledHighlightedSegment || null);\n  }, [controlledHighlightedSegment]);\n\n  const [visibleSegments, setVisibleSegments] = useControllable(\n    controlledVisibleSegments,\n    onFilterChange,\n    externalData,\n    {\n      componentName: 'PieChart',\n      controlledProp: 'visibleSegments',\n      changeHandler: 'onFilterChange',\n    }\n  );\n\n  const visibleData = useMemo(\n    () => data.filter(d => visibleSegments?.indexOf(d.datum) !== -1),\n    [data, visibleSegments]\n  );\n\n  const filterItems: ChartFilterProps<T>['series'] = data?.map(data => ({\n    label: data.datum.title,\n    color: data.color,\n    type: 'rectangle',\n    datum: data.datum,\n  }));\n\n  const legendItems: ChartLegendProps<T>['series'] = filterItems.filter(d => visibleSegments?.indexOf(d.datum) !== -1);\n\n  const filterChange = useCallback(\n    (selectedSeries: ReadonlyArray<T>) => {\n      setVisibleSegments(selectedSeries);\n      fireNonCancelableEvent(onFilterChange, {\n        visibleSegments: selectedSeries,\n      });\n    },\n    [setVisibleSegments, onFilterChange]\n  );\n\n  const onHighlightChange = useCallback(\n    (segment: T | null) => {\n      setLegendSegment(segment);\n      setHighlightedSegment(segment);\n      fireNonCancelableEvent(controlledOnHighlightChange, { highlightedSegment: segment });\n    },\n    [controlledOnHighlightChange, setHighlightedSegment]\n  );\n\n  const onBlur = (event: React.FocusEvent) => {\n    if (event.relatedTarget && !nodeBelongs(containerRef.current, event.relatedTarget)) {\n      highlightedSegment && onHighlightChange(null);\n      setLegendSegment(null);\n    }\n  };\n\n  const mergedRef = useMergeRefs(containerRef, measureRef, __internalRootRef);\n\n  const { pieData, dataSum } = useMemo(() => {\n    const dataSum = visibleData.reduce((sum, d) => sum + d.datum.value, 0);\n\n    const pieFactory = pie<InternalChartDatum<T>>()\n      // Minimum 1% segment size\n      .value(d => (d.datum.value < dataSum / 100 ? dataSum / 100 : d.datum.value))\n      .sort(null);\n\n    // Filter out segments with value of zero or below\n    const pieData = pieFactory(visibleData.filter(d => d.datum.value > 0));\n\n    return { pieData, dataSum };\n  }, [visibleData]);\n\n  const hasNoData = !externalData || externalData.length === 0;\n  const { isEmpty, showChart } = getChartStatus({ externalData: data, visibleData: pieData, statusType });\n  // Pie charts have a special condition for empty/noMatch due to how zero-value segments are handled.\n  const isNoMatch = isEmpty && visibleData.length !== data.length;\n  const showFilters = statusType === 'finished' && !hasNoData && (additionalFilters || !hideFilter);\n  const reserveLegendSpace = !showChart && !hideLegend;\n  const reserveFilterSpace = statusType !== 'finished' && !isNoMatch && (!hideFilter || additionalFilters);\n  const hasLabels = !(hideTitles && hideDescriptions);\n\n  const isRefresh = useVisualRefresh();\n  const defaultDimensions = getDimensionsBySize({ size, hasLabels, visualRefresh: isRefresh });\n  const radius = defaultDimensions.outerRadius;\n  const height = 2 * (radius + defaultDimensions.padding + (hasLabels ? defaultDimensions.paddingLabels : 0));\n\n  return (\n    <ChartWrapper\n      ref={mergedRef}\n      fitHeight={!!fitHeight}\n      {...baseProps}\n      className={clsx(baseProps.className, styles.root)}\n      contentClassName={clsx(styles.content, styles[`content--${defaultDimensions.size}`], {\n        [styles['content--without-labels']]: !hasLabels,\n        [styles['content--fit-height']]: fitHeight,\n      })}\n      defaultFilter={\n        showFilters && !hideFilter ? (\n          <Filter\n            series={filterItems}\n            onChange={filterChange}\n            selectedSeries={visibleSegments}\n            i18nStrings={i18nStrings}\n          />\n        ) : null\n      }\n      additionalFilters={showFilters ? additionalFilters : null}\n      reserveFilterSpace={!!reserveFilterSpace}\n      reserveLegendSpace={!!reserveLegendSpace}\n      chartStatus={\n        <ChartStatusContainer\n          isEmpty={isEmpty}\n          isNoMatch={isNoMatch}\n          showChart={showChart}\n          statusType={statusType}\n          empty={props.empty}\n          noMatch={props.noMatch}\n          loadingText={props.loadingText}\n          errorText={props.errorText}\n          recoveryText={props.recoveryText}\n          onRecoveryClick={props.onRecoveryClick}\n        />\n      }\n      chart={\n        showChart ? (\n          <InternalPieChart\n            {...props}\n            variant={variant}\n            size={size}\n            height={height}\n            fitHeight={fitHeight}\n            data={externalData}\n            width={containerWidth}\n            hideTitles={hideTitles}\n            hideDescriptions={hideDescriptions}\n            i18nStrings={i18nStrings}\n            onHighlightChange={onHighlightChange}\n            highlightedSegment={highlightedSegment}\n            legendSegment={legendSegment}\n            detailPopoverSize={detailPopoverSize}\n            pieData={pieData}\n            dataSum={dataSum}\n          />\n        ) : null\n      }\n      legend={\n        !hideLegend &&\n        !hasNoData &&\n        statusType === 'finished' && (\n          <Legend<T>\n            series={legendItems}\n            highlightedSeries={legendSegment}\n            legendTitle={legendTitle}\n            ariaLabel={i18nStrings?.legendAriaLabel}\n            onHighlightChange={onHighlightChange}\n            plotContainerRef={containerRef}\n          />\n        )\n      }\n      onBlur={onBlur}\n    />\n  );\n};\n\napplyDisplayName(PieChart, 'PieChart');\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}