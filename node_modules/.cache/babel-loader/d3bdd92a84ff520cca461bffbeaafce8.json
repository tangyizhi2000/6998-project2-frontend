{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useMemo } from 'react';\nimport ChartLegend from '../../internal/components/chart-legend';\nimport { useSelector } from '../async-store';\nexport default memo(AreaChartLegend);\nfunction AreaChartLegend(_ref) {\n  let {\n    model,\n    legendTitle,\n    ariaLabel,\n    plotContainerRef\n  } = _ref;\n  const legendItems = useMemo(() => model.series.map(s => {\n    const {\n      title,\n      color,\n      markerType\n    } = model.getInternalSeries(s);\n    return {\n      label: title,\n      color,\n      type: markerType,\n      datum: s\n    };\n  }), [model]);\n  const legendSeries = useSelector(model.interactions, state => state.legendSeries);\n  return React.createElement(ChartLegend, {\n    series: legendItems,\n    highlightedSeries: legendSeries,\n    onHighlightChange: model.handlers.onLegendHighlight,\n    legendTitle: legendTitle,\n    ariaLabel: ariaLabel,\n    plotContainerRef: plotContainerRef\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,IAAI,EAAEC,OAAO,QAAQ,OAAO;AAG5C,OAAOC,WAAW,MAAM,wCAAwC;AAEhE,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,eAAeH,IAAI,CAACI,eAAe,CAA2B;AAE9D,SAASA,eAAe,OAUvB;EAAA,IAV4D;IAC3DC,KAAK;IACLC,WAAW;IACXC,SAAS;IACTC;EAAgB,CAMjB;EACC,MAAMC,WAAW,GAAGR,OAAO,CACzB,MACEI,KAAK,CAACK,MAAM,CAACC,GAAG,CAACC,CAAC,IAAG;IACnB,MAAM;MAAEC,KAAK;MAAEC,KAAK;MAAEC;IAAU,CAAE,GAAGV,KAAK,CAACW,iBAAiB,CAACJ,CAAC,CAAC;IAC/D,OAAO;MAAEK,KAAK,EAAEJ,KAAK;MAAEC,KAAK;MAAEI,IAAI,EAAEH,UAAU;MAAEI,KAAK,EAAEP;IAAC,CAAE;EAC5D,CAAC,CAAC,EACJ,CAACP,KAAK,CAAC,CACR;EAED,MAAMe,YAAY,GAAGjB,WAAW,CAACE,KAAK,CAACgB,YAAY,EAAEC,KAAK,IAAIA,KAAK,CAACF,YAAY,CAAC;EAEjF,OACErB,oBAACG,WAAW;IACVQ,MAAM,EAAED,WAAW;IACnBc,iBAAiB,EAAEH,YAAY;IAC/BI,iBAAiB,EAAEnB,KAAK,CAACoB,QAAQ,CAACC,iBAAiB;IACnDpB,WAAW,EAAEA,WAAW;IACxBC,SAAS,EAAEA,SAAS;IACpBC,gBAAgB,EAAEA;EAAgB,EAClC;AAEN","names":["React","memo","useMemo","ChartLegend","useSelector","AreaChartLegend","model","legendTitle","ariaLabel","plotContainerRef","legendItems","series","map","s","title","color","markerType","getInternalSeries","label","type","datum","legendSeries","interactions","state","highlightedSeries","onHighlightChange","handlers","onLegendHighlight"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/area-chart/elements/lib/default/area-chart/elements/area-chart-legend.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useMemo } from 'react';\n\nimport { AreaChartProps } from '../interfaces';\nimport ChartLegend from '../../internal/components/chart-legend';\nimport { ChartModel } from '../model';\nimport { useSelector } from '../async-store';\n\nexport default memo(AreaChartLegend) as typeof AreaChartLegend;\n\nfunction AreaChartLegend<T extends AreaChartProps.DataTypes>({\n  model,\n  legendTitle,\n  ariaLabel,\n  plotContainerRef,\n}: {\n  model: ChartModel<T>;\n  plotContainerRef: React.RefObject<HTMLDivElement>;\n  legendTitle?: string;\n  ariaLabel?: string;\n}) {\n  const legendItems = useMemo(\n    () =>\n      model.series.map(s => {\n        const { title, color, markerType } = model.getInternalSeries(s);\n        return { label: title, color, type: markerType, datum: s };\n      }),\n    [model]\n  );\n\n  const legendSeries = useSelector(model.interactions, state => state.legendSeries);\n\n  return (\n    <ChartLegend\n      series={legendItems}\n      highlightedSeries={legendSeries}\n      onHighlightChange={model.handlers.onLegendHighlight}\n      legendTitle={legendTitle}\n      ariaLabel={ariaLabel}\n      plotContainerRef={plotContainerRef}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}