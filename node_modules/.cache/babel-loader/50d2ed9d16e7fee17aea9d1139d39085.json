{"ast":null,"code":"function getWeekStartByRegion(regionCode, regionDayMap) {\n  var code = regionDayMap[typeof regionCode === 'string' ? regionCode.toUpperCase() : regionCode];\n  return typeof code === 'number' ? code : 1;\n}\nfunction getWeekStartByLocale(locale, langRegionMap, regionDayMap) {\n  if (locale) {\n    var data = locale.toLowerCase().split(/[-_]/);\n    var language = data[0];\n    var country;\n    if (data[1] && data[1].length === 4) {\n      language += \"_\" + data[1];\n      country = data[2];\n    } else {\n      country = data[1];\n    }\n    if (!country) {\n      country = langRegionMap[language];\n    }\n    if (country) {\n      return getWeekStartByRegion(country.match(/^\\d+$/) ? Number(country) : country, regionDayMap);\n    }\n  }\n  return 1;\n}\nexport { getWeekStartByRegion, getWeekStartByLocale };","map":{"version":3,"mappings":"AA0BO,SAASA,qBAAqBC,UAAY,gBAAc;EAE3DC,IAAMC,OAAOC,aAAa,OAAOH,UAAP,KAAsB,QAAtB,GACIA,WAAWI,WAAX,KACAJ;EAG9B,OAAO,OAAOE,IAAP,KAAgB,QAAhB,GACDA,OACA;;AAyBV,SAAgBG,qBAAqBC,MAAQ,eAAe,gBAAc;EACtE,IAAIA,QAAQ;IAERL,IAAMM,OAAOD,OAAOE,WAAP,GAAqBC,KAArB,CAA2B;IACxCC,IAAIC,WAAWJ,KAAK;IACpBG,IAAIE;IACJ,IAAIL,KAAK,EAAL,IAAWA,KAAK,EAAL,CAAQM,MAAR,KAAmB,GAAG;MACjCF,YAAY,MAAIJ,KAAK;MACrBK,UAAUL,KAAK;WAEd;MACDK,UAAUL,KAAK;;IAEnB,IAAI,CAAEK,SAAS;MACXA,UAAUE,cAAcH;;IAE5B,IAAIC,SAAS;MACT,OAAOb,qBACHa,QAAQG,KAAR,CAAc,QAAd,GACMC,OAAOJ,WACPA,SACNT;;;EAKZ,OAAO","names":["getWeekStartByRegion","regionCode","const","code","regionDayMap","toUpperCase","getWeekStartByLocale","locale","data","toLowerCase","split","let","language","country","length","langRegionMap","match","Number"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/weekstart/src/api.js"],"sourcesContent":["/**\r\n * Functions to get first day of week.\r\n * \r\n * @module api\r\n */\r\n\r\n\r\n/**\r\n * Return first day of week for country/region code.\r\n *\r\n * @example\r\n * getWeekStartByRegion('PNG', {});   // 1\r\n * getWeekStartByRegion('png', {BR: 0, PNG: 3, EG: 6});   // 3\r\n * getWeekStartByRegion('qa', {QA: 6});   // 6\r\n * getWeekStartByRegion(50, {BD: 5, 50: 5, SD: 6});   // 5\r\n *\r\n * @param {number | string} regionCode\r\n *      ISO 3166 Alpha-2, Alpha-3 or numeric code.\r\n * @param {object} regionDayMap\r\n *      Mapping of country/region code to first day of week that should be used to get result.\r\n *      Country codes should be in upper case.\r\n * @return {number}\r\n *      Code of first day of week for the given country/region code:\r\n *      0 - Sunday, 1 - Monday, 2 - Tuesday, 3 - Wednesday, 4 - Thursday, 5 - Friday, 6 - Saturday.\r\n * @alias module:api.getWeekStartByRegion\r\n */\r\nexport function getWeekStartByRegion(regionCode, regionDayMap) {\r\n    /* eslint-disable indent */\r\n    const code = regionDayMap[typeof regionCode === 'string'\r\n                                ? regionCode.toUpperCase()\r\n                                : regionCode];\r\n    /* eslint-enable indent */\r\n\r\n    return typeof code === 'number'\r\n        ? code\r\n        : 1;\r\n}\r\n\r\n/**\r\n * Return first day of week for locale identifier.\r\n *\r\n * @example\r\n * getWeekStartByLocale('no', {}, {});   // 1\r\n * getWeekStartByLocale('no', {no: 'abc'}, {ABC: 3});   // 3\r\n * getWeekStartByLocale('KK_arab', {kk_arab: 'CN'}, {CN: 0});   // 0\r\n * getWeekStartByLocale('fr-DZ', {fr: 'FR'}, {FR: 1, DZ: 6});   // 6\r\n *\r\n * @param {string} locale\r\n *      Locale identifier.\r\n * @param {object} langRegionMap\r\n *      Mapping of language code to country/region code that should be used to get result.\r\n *      Language codes should be in lower case.\r\n * @param {object} regionDayMap\r\n *      Mapping of country/region code to first day of week that should be used to get result.\r\n *      Country codes should be in upper case.\r\n * @return {number}\r\n *      Code of first day of week for the given locale identifier:\r\n *      0 - Sunday, 1 - Monday, 2 - Tuesday, 3 - Wednesday, 4 - Thursday, 5 - Friday, 6 - Saturday.\r\n * @alias module:api.getWeekStartByLocale\r\n */\r\nexport function getWeekStartByLocale(locale, langRegionMap, regionDayMap) {\r\n    if (locale) {\r\n        // Locale form: http://www.unicode.org/reports/tr35/tr35.html#Unicode_Language_and_Locale_Identifiers\r\n        const data = locale.toLowerCase().split(/[-_]/);\r\n        let language = data[0];\r\n        let country;\r\n        if (data[1] && data[1].length === 4) {\r\n            language += `_${data[1]}`;\r\n            country = data[2];\r\n        }\r\n        else {\r\n            country = data[1];\r\n        }\r\n        if (! country) {\r\n            country = langRegionMap[language];\r\n        }\r\n        if (country) {\r\n            return getWeekStartByRegion(\r\n                country.match(/^\\d+$/)\r\n                    ? Number(country)\r\n                    : country,\r\n                regionDayMap\r\n            );\r\n        }\r\n    }\r\n\r\n    return 1;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}