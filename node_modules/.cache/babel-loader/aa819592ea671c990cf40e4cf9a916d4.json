{"ast":null,"code":"import _toConsumableArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef, useState, useImperativeHandle } from 'react';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { TokenButton } from './token';\nimport { getQueryActions, parseText, getAutosuggestOptions, getAllowedOperators } from './controller';\nimport { useLoadItems } from './use-load-items';\nimport styles from './styles.css.js';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport PropertyFilterAutosuggest from './property-filter-autosuggest';\nimport { PropertyEditor } from './property-editor';\nimport { matchTokenValue } from './utils';\nimport { useInternalI18n } from '../i18n/context';\nimport TokenList from '../internal/components/token-list';\nimport { SearchResults } from '../text-filter/search-results';\nfunction getOperatorI18nString(operator) {\n  switch (operator) {\n    case '=':\n      return 'equals';\n    case '!=':\n      return 'not_equals';\n    case '>':\n      return 'greater_than';\n    case '>=':\n      return 'greater_than_equal';\n    case '<':\n      return 'less_than';\n    case '<=':\n      return 'less_than_equal';\n    case ':':\n      return 'contains';\n    case '!:':\n      return 'not_contains';\n    case '^':\n      return 'starts_with';\n    // The line is ignored from coverage because it is not reachable.\n    // The purpose of it is to prevent TS errors if ComparisonOperator type gets extended.\n    /* istanbul ignore next */\n    default:\n      return operator;\n  }\n}\nvar PropertyFilter = React.forwardRef(function (_a, ref) {\n  var _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\n  var disabled = _a.disabled,\n    countText = _a.countText,\n    query = _a.query,\n    hideOperations = _a.hideOperations,\n    onChange = _a.onChange,\n    filteringProperties = _a.filteringProperties,\n    _a$filteringOptions = _a.filteringOptions,\n    filteringOptions = _a$filteringOptions === void 0 ? [] : _a$filteringOptions,\n    _a$customGroupsText = _a.customGroupsText,\n    customGroupsText = _a$customGroupsText === void 0 ? [] : _a$customGroupsText,\n    _a$disableFreeTextFil = _a.disableFreeTextFiltering,\n    disableFreeTextFiltering = _a$disableFreeTextFil === void 0 ? false : _a$disableFreeTextFil,\n    onLoadItems = _a.onLoadItems,\n    virtualScroll = _a.virtualScroll,\n    customControl = _a.customControl,\n    customFilterActions = _a.customFilterActions,\n    filteringPlaceholder = _a.filteringPlaceholder,\n    filteringAriaLabel = _a.filteringAriaLabel,\n    filteringEmpty = _a.filteringEmpty,\n    filteringLoadingText = _a.filteringLoadingText,\n    filteringFinishedText = _a.filteringFinishedText,\n    filteringErrorText = _a.filteringErrorText,\n    filteringRecoveryText = _a.filteringRecoveryText,\n    filteringStatusType = _a.filteringStatusType,\n    asyncProperties = _a.asyncProperties,\n    tokenLimit = _a.tokenLimit,\n    expandToViewport = _a.expandToViewport,\n    rest = __rest(_a, [\"disabled\", \"countText\", \"query\", \"hideOperations\", \"onChange\", \"filteringProperties\", \"filteringOptions\", \"customGroupsText\", \"disableFreeTextFiltering\", \"onLoadItems\", \"virtualScroll\", \"customControl\", \"customFilterActions\", \"filteringPlaceholder\", \"filteringAriaLabel\", \"filteringEmpty\", \"filteringLoadingText\", \"filteringFinishedText\", \"filteringErrorText\", \"filteringRecoveryText\", \"filteringStatusType\", \"asyncProperties\", \"tokenLimit\", \"expandToViewport\"]);\n  var _useBaseComponent = useBaseComponent('PropertyFilter'),\n    __internalRootRef = _useBaseComponent.__internalRootRef;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    removedTokenIndex = _useState2[0],\n    setRemovedTokenIndex = _useState2[1];\n  var inputRef = useRef(null);\n  var baseProps = getBaseProps(rest);\n  var i18n = useInternalI18n('property-filter');\n  var i18nStrings = Object.assign(Object.assign({}, rest.i18nStrings), {\n    allPropertiesLabel: i18n('i18nStrings.allPropertiesLabel', (_b = rest.i18nStrings) === null || _b === void 0 ? void 0 : _b.allPropertiesLabel),\n    applyActionText: i18n('i18nStrings.applyActionText', (_c = rest.i18nStrings) === null || _c === void 0 ? void 0 : _c.applyActionText),\n    cancelActionText: i18n('i18nStrings.cancelActionText', (_d = rest.i18nStrings) === null || _d === void 0 ? void 0 : _d.cancelActionText),\n    clearFiltersText: i18n('i18nStrings.clearFiltersText', (_e = rest.i18nStrings) === null || _e === void 0 ? void 0 : _e.clearFiltersText),\n    editTokenHeader: i18n('i18nStrings.editTokenHeader', (_f = rest.i18nStrings) === null || _f === void 0 ? void 0 : _f.editTokenHeader),\n    groupPropertiesText: i18n('i18nStrings.groupPropertiesText', (_g = rest.i18nStrings) === null || _g === void 0 ? void 0 : _g.groupPropertiesText),\n    groupValuesText: i18n('i18nStrings.groupValuesText', (_h = rest.i18nStrings) === null || _h === void 0 ? void 0 : _h.groupValuesText),\n    operationAndText: i18n('i18nStrings.operationAndText', (_j = rest.i18nStrings) === null || _j === void 0 ? void 0 : _j.operationAndText),\n    operationOrText: i18n('i18nStrings.operationOrText', (_k = rest.i18nStrings) === null || _k === void 0 ? void 0 : _k.operationOrText),\n    operatorContainsText: i18n('i18nStrings.operatorContainsText', (_l = rest.i18nStrings) === null || _l === void 0 ? void 0 : _l.operatorContainsText),\n    operatorDoesNotContainText: i18n('i18nStrings.operatorDoesNotContainText', (_m = rest.i18nStrings) === null || _m === void 0 ? void 0 : _m.operatorDoesNotContainText),\n    operatorDoesNotEqualText: i18n('i18nStrings.operatorDoesNotEqualText', (_o = rest.i18nStrings) === null || _o === void 0 ? void 0 : _o.operatorDoesNotEqualText),\n    operatorEqualsText: i18n('i18nStrings.operatorEqualsText', (_p = rest.i18nStrings) === null || _p === void 0 ? void 0 : _p.operatorEqualsText),\n    operatorGreaterOrEqualText: i18n('i18nStrings.operatorGreaterOrEqualText', (_q = rest.i18nStrings) === null || _q === void 0 ? void 0 : _q.operatorGreaterOrEqualText),\n    operatorGreaterText: i18n('i18nStrings.operatorGreaterText', (_r = rest.i18nStrings) === null || _r === void 0 ? void 0 : _r.operatorGreaterText),\n    operatorLessOrEqualText: i18n('i18nStrings.operatorLessOrEqualText', (_s = rest.i18nStrings) === null || _s === void 0 ? void 0 : _s.operatorLessOrEqualText),\n    operatorLessText: i18n('i18nStrings.operatorLessText', (_t = rest.i18nStrings) === null || _t === void 0 ? void 0 : _t.operatorLessText),\n    operatorStartsWithText: i18n('i18nStrings.operatorStartsWithText', (_u = rest.i18nStrings) === null || _u === void 0 ? void 0 : _u.operatorStartsWithText),\n    operatorText: i18n('i18nStrings.operatorText', (_v = rest.i18nStrings) === null || _v === void 0 ? void 0 : _v.operatorText),\n    operatorsText: i18n('i18nStrings.operatorsText', (_w = rest.i18nStrings) === null || _w === void 0 ? void 0 : _w.operatorsText),\n    propertyText: i18n('i18nStrings.propertyText', (_x = rest.i18nStrings) === null || _x === void 0 ? void 0 : _x.propertyText),\n    tokenLimitShowFewer: i18n('i18nStrings.tokenLimitShowFewer', (_y = rest.i18nStrings) === null || _y === void 0 ? void 0 : _y.tokenLimitShowFewer),\n    tokenLimitShowMore: i18n('i18nStrings.tokenLimitShowMore', (_z = rest.i18nStrings) === null || _z === void 0 ? void 0 : _z.tokenLimitShowMore),\n    valueText: i18n('i18nStrings.valueText', (_0 = rest.i18nStrings) === null || _0 === void 0 ? void 0 : _0.valueText),\n    removeTokenButtonAriaLabel: i18n('i18nStrings.removeTokenButtonAriaLabel', (_1 = rest.i18nStrings) === null || _1 === void 0 ? void 0 : _1.removeTokenButtonAriaLabel, function (format) {\n      return function (token) {\n        var _a;\n        return format({\n          token__operator: getOperatorI18nString(token.operator),\n          token__propertyKey: (_a = token.propertyKey) !== null && _a !== void 0 ? _a : '',\n          token__value: token.value\n        });\n      };\n    })\n  });\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        var _a;\n        return (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      }\n    };\n  }, []);\n  var showResults = !!((_2 = query.tokens) === null || _2 === void 0 ? void 0 : _2.length) && !disabled && !!countText;\n  var _getQueryActions = getQueryActions(query, onChange, inputRef),\n    addToken = _getQueryActions.addToken,\n    _removeToken = _getQueryActions.removeToken,\n    _setToken = _getQueryActions.setToken,\n    setOperation = _getQueryActions.setOperation,\n    removeAllTokens = _getQueryActions.removeAllTokens;\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteringText = _useState4[0],\n    setFilteringText = _useState4[1];\n  var _ref = function () {\n      var propertyByKey = filteringProperties.reduce(function (acc, property) {\n        var _a, _b, _c, _d, _e;\n        var extendedOperators = ((_a = property === null || property === void 0 ? void 0 : property.operators) !== null && _a !== void 0 ? _a : []).reduce(function (acc, operator) {\n          return typeof operator === 'object' ? acc.set(operator.operator, operator) : acc;\n        }, new Map());\n        acc.set(property.key, {\n          propertyKey: property.key,\n          propertyLabel: (_b = property === null || property === void 0 ? void 0 : property.propertyLabel) !== null && _b !== void 0 ? _b : '',\n          groupValuesLabel: (_c = property === null || property === void 0 ? void 0 : property.groupValuesLabel) !== null && _c !== void 0 ? _c : '',\n          propertyGroup: property === null || property === void 0 ? void 0 : property.group,\n          operators: ((_d = property === null || property === void 0 ? void 0 : property.operators) !== null && _d !== void 0 ? _d : []).map(function (op) {\n            return typeof op === 'string' ? op : op.operator;\n          }),\n          defaultOperator: (_e = property === null || property === void 0 ? void 0 : property.defaultOperator) !== null && _e !== void 0 ? _e : '=',\n          getValueFormatter: function getValueFormatter(operator) {\n            var _a, _b;\n            return operator ? (_b = (_a = extendedOperators.get(operator)) === null || _a === void 0 ? void 0 : _a.format) !== null && _b !== void 0 ? _b : null : null;\n          },\n          getValueFormRenderer: function getValueFormRenderer(operator) {\n            var _a, _b;\n            return operator ? (_b = (_a = extendedOperators.get(operator)) === null || _a === void 0 ? void 0 : _a.form) !== null && _b !== void 0 ? _b : null : null;\n          },\n          externalProperty: property\n        });\n        return acc;\n      }, new Map());\n      var getProperty = function getProperty(propertyKey) {\n        var _a;\n        return (_a = propertyByKey.get(propertyKey)) !== null && _a !== void 0 ? _a : null;\n      };\n      var internalOptions = filteringOptions.map(function (option) {\n        var _a, _b;\n        return {\n          property: getProperty(option.propertyKey),\n          value: option.value,\n          label: (_b = (_a = option.label) !== null && _a !== void 0 ? _a : option.value) !== null && _b !== void 0 ? _b : ''\n        };\n      });\n      var internalQuery = {\n        operation: query.operation,\n        tokens: query.tokens.map(function (token) {\n          return {\n            property: token.propertyKey ? getProperty(token.propertyKey) : null,\n            operator: token.operator,\n            value: token.value\n          };\n        })\n      };\n      return {\n        internalProperties: _toConsumableArray(propertyByKey.values()),\n        internalOptions: internalOptions,\n        internalQuery: internalQuery\n      };\n    }(),\n    internalProperties = _ref.internalProperties,\n    internalOptions = _ref.internalOptions,\n    internalQuery = _ref.internalQuery;\n  var parsedText = parseText(filteringText, internalProperties, disableFreeTextFiltering);\n  var autosuggestOptions = getAutosuggestOptions(parsedText, internalProperties, internalOptions, customGroupsText, i18nStrings);\n  var createToken = function createToken(currentText) {\n    var parsedText = parseText(currentText, internalProperties, disableFreeTextFiltering);\n    var newToken;\n    switch (parsedText.step) {\n      case 'property':\n        {\n          newToken = matchTokenValue({\n            property: parsedText.property,\n            operator: parsedText.operator,\n            value: parsedText.value\n          }, internalOptions);\n          break;\n        }\n      case 'free-text':\n        {\n          newToken = {\n            operator: parsedText.operator || ':',\n            value: parsedText.value\n          };\n          break;\n        }\n      case 'operator':\n        {\n          newToken = {\n            operator: ':',\n            value: currentText\n          };\n          break;\n        }\n    }\n    if (disableFreeTextFiltering && !('propertyKey' in newToken)) {\n      return;\n    }\n    addToken(newToken);\n    setFilteringText('');\n  };\n  var ignoreKeyDown = useRef(false);\n  var handleKeyDown = function handleKeyDown(event) {\n    if (filteringText && !ignoreKeyDown.current && event.detail.keyCode === KeyCode.enter) {\n      createToken(filteringText);\n    }\n  };\n  var getLoadMoreDetail = function getLoadMoreDetail(parsedText, filteringText) {\n    var loadMoreDetail = {\n      filteringProperty: undefined,\n      filteringText: filteringText,\n      filteringOperator: undefined\n    };\n    if (parsedText.step === 'property') {\n      loadMoreDetail.filteringProperty = parsedText.property.externalProperty;\n      loadMoreDetail.filteringText = parsedText.value;\n      loadMoreDetail.filteringOperator = parsedText.operator;\n    }\n    return loadMoreDetail;\n  };\n  var loadMoreDetail = getLoadMoreDetail(parsedText, filteringText);\n  var inputLoadItemsHandlers = useLoadItems(onLoadItems, loadMoreDetail.filteringText, loadMoreDetail.filteringProperty, loadMoreDetail.filteringText, loadMoreDetail.filteringOperator);\n  var asyncProps = {\n    empty: filteringEmpty,\n    loadingText: filteringLoadingText,\n    finishedText: filteringFinishedText,\n    errorText: filteringErrorText,\n    recoveryText: filteringRecoveryText,\n    statusType: filteringStatusType\n  };\n  var asyncAutosuggestProps = !!filteringText.length || asyncProperties ? Object.assign(Object.assign({}, inputLoadItemsHandlers), asyncProps) : {};\n  var handleSelected = function handleSelected(event) {\n    var _a;\n    // The ignoreKeyDown flag makes sure `createToken` routine runs only once. Autosuggest's `onKeyDown` fires,\n    // when an item is selected from the list using \"enter\" key.\n    ignoreKeyDown.current = true;\n    setTimeout(function () {\n      ignoreKeyDown.current = false;\n    }, 0);\n    var option = event.detail;\n    var value = option.value || '';\n    if (!('keepOpenOnSelect' in option)) {\n      createToken(value);\n      return;\n    }\n    // stop dropdown from closing\n    event.preventDefault();\n    var parsedText = parseText(value, internalProperties, disableFreeTextFiltering);\n    var loadMoreDetail = getLoadMoreDetail(parsedText, value);\n    // Insert operator automatically if only one operator is defined for the given property.\n    if (parsedText.step === 'operator') {\n      var operators = getAllowedOperators(parsedText.property);\n      if (value.trim() === parsedText.property.propertyLabel && operators.length === 1) {\n        loadMoreDetail.filteringProperty = (_a = parsedText.property.externalProperty) !== null && _a !== void 0 ? _a : undefined;\n        loadMoreDetail.filteringOperator = operators[0];\n        loadMoreDetail.filteringText = '';\n        setFilteringText(parsedText.property.propertyLabel + ' ' + operators[0] + ' ');\n      }\n    }\n    fireNonCancelableEvent(onLoadItems, Object.assign(Object.assign({}, loadMoreDetail), {\n      firstPage: true,\n      samePage: false\n    }));\n  };\n  var operatorForm = parsedText.step === 'property' && parsedText.property.getValueFormRenderer(parsedText.operator);\n  var searchResultsId = useUniqueId('property-filter-search-results');\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: __internalRootRef\n  }), React.createElement(\"div\", {\n    className: styles['search-field']\n  }, customControl && React.createElement(\"div\", {\n    className: styles['custom-control']\n  }, customControl), React.createElement(PropertyFilterAutosuggest, Object.assign({\n    ref: inputRef,\n    virtualScroll: virtualScroll,\n    enteredTextLabel: i18nStrings.enteredTextLabel,\n    ariaLabel: filteringAriaLabel !== null && filteringAriaLabel !== void 0 ? filteringAriaLabel : i18nStrings.filteringAriaLabel,\n    placeholder: filteringPlaceholder !== null && filteringPlaceholder !== void 0 ? filteringPlaceholder : i18nStrings.filteringPlaceholder,\n    ariaLabelledby: rest.ariaLabelledby,\n    ariaDescribedby: rest.ariaDescribedby,\n    controlId: rest.controlId,\n    value: filteringText,\n    disabled: disabled,\n    onKeyDown: handleKeyDown\n  }, autosuggestOptions, {\n    onChange: function onChange(event) {\n      return setFilteringText(event.detail.value);\n    },\n    empty: filteringEmpty\n  }, asyncAutosuggestProps, {\n    expandToViewport: expandToViewport,\n    onOptionClick: handleSelected,\n    customForm: operatorForm && React.createElement(PropertyEditor, {\n      property: parsedText.property,\n      operator: parsedText.operator,\n      filter: parsedText.value,\n      operatorForm: operatorForm,\n      i18nStrings: i18nStrings,\n      onCancel: function onCancel() {\n        var _a, _b;\n        setFilteringText('');\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.close();\n        (_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.focus({\n          preventDropdown: true\n        });\n      },\n      onSubmit: function onSubmit(token) {\n        var _a, _b;\n        addToken(token);\n        setFilteringText('');\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n          preventDropdown: true\n        });\n        (_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.close();\n      }\n    }),\n    hideEnteredTextOption: disableFreeTextFiltering && parsedText.step !== 'property',\n    clearAriaLabel: i18nStrings.clearAriaLabel,\n    searchResultsId: showResults ? searchResultsId : undefined\n  })), showResults ? React.createElement(\"div\", {\n    className: styles.results\n  }, React.createElement(SearchResults, {\n    id: searchResultsId\n  }, countText)) : null), internalQuery.tokens && internalQuery.tokens.length > 0 && React.createElement(\"div\", {\n    className: styles.tokens\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xs\",\n    direction: \"horizontal\"\n  }, React.createElement(TokenList, {\n    alignment: \"inline\",\n    limit: tokenLimit,\n    items: internalQuery.tokens,\n    renderItem: function renderItem(token, tokenIndex) {\n      return React.createElement(TokenButton, {\n        token: token,\n        first: tokenIndex === 0,\n        operation: internalQuery.operation,\n        removeToken: function removeToken() {\n          _removeToken(tokenIndex);\n          setRemovedTokenIndex(tokenIndex);\n        },\n        setToken: function setToken(newToken) {\n          return _setToken(tokenIndex, newToken);\n        },\n        setOperation: setOperation,\n        filteringProperties: internalProperties,\n        filteringOptions: internalOptions,\n        asyncProps: asyncProps,\n        onLoadItems: onLoadItems,\n        i18nStrings: i18nStrings,\n        asyncProperties: asyncProperties,\n        hideOperations: hideOperations,\n        customGroupsText: customGroupsText,\n        disableFreeTextFiltering: disableFreeTextFiltering,\n        disabled: disabled,\n        expandToViewport: expandToViewport\n      });\n    },\n    i18nStrings: {\n      limitShowFewer: i18nStrings.tokenLimitShowFewer,\n      limitShowMore: i18nStrings.tokenLimitShowMore\n    },\n    after: customFilterActions ? React.createElement(\"div\", {\n      className: styles['custom-filter-actions']\n    }, customFilterActions) : React.createElement(InternalButton, {\n      formAction: \"none\",\n      onClick: removeAllTokens,\n      className: styles['remove-all'],\n      disabled: disabled\n    }, i18nStrings.clearFiltersText),\n    removedItemIndex: removedTokenIndex\n  }))));\n});\napplyDisplayName(PropertyFilter, 'PropertyFilter');\nexport default PropertyFilter;","map":{"version":3,"mappings":"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","names":["clsx","React","useRef","useState","useImperativeHandle","InternalSpaceBetween","InternalButton","getBaseProps","applyDisplayName","KeyCode","useUniqueId","fireNonCancelableEvent","TokenButton","getQueryActions","parseText","getAutosuggestOptions","getAllowedOperators","useLoadItems","styles","useBaseComponent","PropertyFilterAutosuggest","PropertyEditor","matchTokenValue","useInternalI18n","TokenList","SearchResults","getOperatorI18nString","operator","PropertyFilter","forwardRef","_a","ref","disabled","countText","query","hideOperations","onChange","filteringProperties","filteringOptions","customGroupsText","disableFreeTextFiltering","onLoadItems","virtualScroll","customControl","customFilterActions","filteringPlaceholder","filteringAriaLabel","filteringEmpty","filteringLoadingText","filteringFinishedText","filteringErrorText","filteringRecoveryText","filteringStatusType","asyncProperties","tokenLimit","expandToViewport","rest","__internalRootRef","removedTokenIndex","setRemovedTokenIndex","inputRef","baseProps","i18n","i18nStrings","allPropertiesLabel","applyActionText","cancelActionText","clearFiltersText","editTokenHeader","groupPropertiesText","groupValuesText","operationAndText","operationOrText","operatorContainsText","operatorDoesNotContainText","operatorDoesNotEqualText","operatorEqualsText","operatorGreaterOrEqualText","operatorGreaterText","operatorLessOrEqualText","operatorLessText","operatorStartsWithText","operatorText","operatorsText","propertyText","tokenLimitShowFewer","tokenLimitShowMore","valueText","removeTokenButtonAriaLabel","token__operator","token","token__propertyKey","propertyKey","token__value","value","focus","current","showResults","tokens","length","addToken","removeToken","setToken","setOperation","removeAllTokens","filteringText","setFilteringText","propertyByKey","reduce","acc","property","extendedOperators","operators","set","Map","key","propertyLabel","groupValuesLabel","propertyGroup","group","map","op","defaultOperator","getValueFormatter","get","format","getValueFormRenderer","form","externalProperty","getProperty","internalOptions","option","label","internalQuery","operation","internalProperties","values","parsedText","autosuggestOptions","createToken","currentText","newToken","step","ignoreKeyDown","handleKeyDown","event","detail","keyCode","enter","getLoadMoreDetail","loadMoreDetail","filteringProperty","undefined","filteringOperator","inputLoadItemsHandlers","asyncProps","empty","loadingText","finishedText","errorText","recoveryText","statusType","asyncAutosuggestProps","Object","handleSelected","setTimeout","preventDefault","trim","firstPage","samePage","operatorForm","searchResultsId","className","root","enteredTextLabel","ariaLabel","placeholder","ariaLabelledby","ariaDescribedby","controlId","onKeyDown","onOptionClick","customForm","filter","onCancel","close","preventDropdown","onSubmit","hideEnteredTextOption","clearAriaLabel","results","id","size","direction","alignment","limit","items","renderItem","tokenIndex","first","limitShowFewer","limitShowMore","after","formAction","onClick","removedItemIndex"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/property-filter/lib/default/property-filter/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef, useState, useImperativeHandle } from 'react';\n\nimport InternalSpaceBetween from '../space-between/internal';\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { KeyCode } from '../internal/keycode';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index';\nimport { fireNonCancelableEvent } from '../internal/events';\n\nimport {\n  PropertyFilterProps,\n  ParsedText,\n  Ref,\n  ComparisonOperator,\n  Token,\n  InternalFilteringProperty,\n  InternalFilteringOption,\n  FilteringProperty,\n  ExtendedOperator,\n  InternalQuery,\n} from './interfaces';\nimport { TokenButton } from './token';\nimport { getQueryActions, parseText, getAutosuggestOptions, getAllowedOperators } from './controller';\nimport { useLoadItems } from './use-load-items';\nimport styles from './styles.css.js';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport PropertyFilterAutosuggest, { PropertyFilterAutosuggestProps } from './property-filter-autosuggest';\nimport { PropertyEditor } from './property-editor';\nimport { AutosuggestInputRef } from '../internal/components/autosuggest-input';\nimport { matchTokenValue } from './utils';\nimport { PropertyFilterOperator } from '@cloudscape-design/collection-hooks';\nimport { useInternalI18n } from '../i18n/context';\nimport TokenList from '../internal/components/token-list';\nimport { SearchResults } from '../text-filter/search-results';\n\nexport { PropertyFilterProps };\n\nfunction getOperatorI18nString(operator: ComparisonOperator): string {\n  switch (operator) {\n    case '=':\n      return 'equals';\n    case '!=':\n      return 'not_equals';\n    case '>':\n      return 'greater_than';\n    case '>=':\n      return 'greater_than_equal';\n    case '<':\n      return 'less_than';\n    case '<=':\n      return 'less_than_equal';\n    case ':':\n      return 'contains';\n    case '!:':\n      return 'not_contains';\n    case '^':\n      return 'starts_with';\n    // The line is ignored from coverage because it is not reachable.\n    // The purpose of it is to prevent TS errors if ComparisonOperator type gets extended.\n    /* istanbul ignore next */\n    default:\n      return operator;\n  }\n}\n\nconst PropertyFilter = React.forwardRef(\n  (\n    {\n      disabled,\n      countText,\n      query,\n      hideOperations,\n      onChange,\n      filteringProperties,\n      filteringOptions = [],\n      customGroupsText = [],\n      disableFreeTextFiltering = false,\n      onLoadItems,\n      virtualScroll,\n      customControl,\n      customFilterActions,\n      filteringPlaceholder,\n      filteringAriaLabel,\n      filteringEmpty,\n      filteringLoadingText,\n      filteringFinishedText,\n      filteringErrorText,\n      filteringRecoveryText,\n      filteringStatusType,\n      asyncProperties,\n      tokenLimit,\n      expandToViewport,\n      ...rest\n    }: PropertyFilterProps,\n    ref: React.Ref<Ref>\n  ) => {\n    const { __internalRootRef } = useBaseComponent('PropertyFilter');\n    const [removedTokenIndex, setRemovedTokenIndex] = useState<null | number>(null);\n\n    const inputRef = useRef<AutosuggestInputRef>(null);\n    const baseProps = getBaseProps(rest);\n\n    const i18n = useInternalI18n('property-filter');\n    const i18nStrings: PropertyFilterProps.I18nStrings = {\n      ...rest.i18nStrings,\n      allPropertiesLabel: i18n('i18nStrings.allPropertiesLabel', rest.i18nStrings?.allPropertiesLabel),\n      applyActionText: i18n('i18nStrings.applyActionText', rest.i18nStrings?.applyActionText),\n      cancelActionText: i18n('i18nStrings.cancelActionText', rest.i18nStrings?.cancelActionText),\n      clearFiltersText: i18n('i18nStrings.clearFiltersText', rest.i18nStrings?.clearFiltersText),\n      editTokenHeader: i18n('i18nStrings.editTokenHeader', rest.i18nStrings?.editTokenHeader),\n      groupPropertiesText: i18n('i18nStrings.groupPropertiesText', rest.i18nStrings?.groupPropertiesText),\n      groupValuesText: i18n('i18nStrings.groupValuesText', rest.i18nStrings?.groupValuesText),\n      operationAndText: i18n('i18nStrings.operationAndText', rest.i18nStrings?.operationAndText),\n      operationOrText: i18n('i18nStrings.operationOrText', rest.i18nStrings?.operationOrText),\n      operatorContainsText: i18n('i18nStrings.operatorContainsText', rest.i18nStrings?.operatorContainsText),\n      operatorDoesNotContainText: i18n(\n        'i18nStrings.operatorDoesNotContainText',\n        rest.i18nStrings?.operatorDoesNotContainText\n      ),\n      operatorDoesNotEqualText: i18n(\n        'i18nStrings.operatorDoesNotEqualText',\n        rest.i18nStrings?.operatorDoesNotEqualText\n      ),\n      operatorEqualsText: i18n('i18nStrings.operatorEqualsText', rest.i18nStrings?.operatorEqualsText),\n      operatorGreaterOrEqualText: i18n(\n        'i18nStrings.operatorGreaterOrEqualText',\n        rest.i18nStrings?.operatorGreaterOrEqualText\n      ),\n      operatorGreaterText: i18n('i18nStrings.operatorGreaterText', rest.i18nStrings?.operatorGreaterText),\n      operatorLessOrEqualText: i18n('i18nStrings.operatorLessOrEqualText', rest.i18nStrings?.operatorLessOrEqualText),\n      operatorLessText: i18n('i18nStrings.operatorLessText', rest.i18nStrings?.operatorLessText),\n      operatorStartsWithText: i18n('i18nStrings.operatorStartsWithText', rest.i18nStrings?.operatorStartsWithText),\n      operatorText: i18n('i18nStrings.operatorText', rest.i18nStrings?.operatorText),\n      operatorsText: i18n('i18nStrings.operatorsText', rest.i18nStrings?.operatorsText),\n      propertyText: i18n('i18nStrings.propertyText', rest.i18nStrings?.propertyText),\n      tokenLimitShowFewer: i18n('i18nStrings.tokenLimitShowFewer', rest.i18nStrings?.tokenLimitShowFewer),\n      tokenLimitShowMore: i18n('i18nStrings.tokenLimitShowMore', rest.i18nStrings?.tokenLimitShowMore),\n      valueText: i18n('i18nStrings.valueText', rest.i18nStrings?.valueText),\n      removeTokenButtonAriaLabel: i18n(\n        'i18nStrings.removeTokenButtonAriaLabel',\n        rest.i18nStrings?.removeTokenButtonAriaLabel,\n        format => token =>\n          format({\n            token__operator: getOperatorI18nString(token.operator),\n            token__propertyKey: token.propertyKey ?? '',\n            token__value: token.value,\n          })\n      ),\n    };\n\n    useImperativeHandle(ref, () => ({ focus: () => inputRef.current?.focus() }), []);\n    const showResults = !!query.tokens?.length && !disabled && !!countText;\n    const { addToken, removeToken, setToken, setOperation, removeAllTokens } = getQueryActions(\n      query,\n      onChange,\n      inputRef\n    );\n    const [filteringText, setFilteringText] = useState<string>('');\n\n    const { internalProperties, internalOptions, internalQuery } = (() => {\n      const propertyByKey = filteringProperties.reduce((acc, property) => {\n        const extendedOperators = (property?.operators ?? []).reduce(\n          (acc, operator) => (typeof operator === 'object' ? acc.set(operator.operator, operator) : acc),\n          new Map<PropertyFilterOperator, null | ExtendedOperator<any>>()\n        );\n        acc.set(property.key, {\n          propertyKey: property.key,\n          propertyLabel: property?.propertyLabel ?? '',\n          groupValuesLabel: property?.groupValuesLabel ?? '',\n          propertyGroup: property?.group,\n          operators: (property?.operators ?? []).map(op => (typeof op === 'string' ? op : op.operator)),\n          defaultOperator: property?.defaultOperator ?? '=',\n          getValueFormatter: operator => (operator ? extendedOperators.get(operator)?.format ?? null : null),\n          getValueFormRenderer: operator => (operator ? extendedOperators.get(operator)?.form ?? null : null),\n          externalProperty: property,\n        });\n        return acc;\n      }, new Map<string, InternalFilteringProperty>());\n      const getProperty = (propertyKey: string): null | InternalFilteringProperty =>\n        propertyByKey.get(propertyKey) ?? null;\n\n      const internalOptions: readonly InternalFilteringOption[] = filteringOptions.map(option => ({\n        property: getProperty(option.propertyKey),\n        value: option.value,\n        label: option.label ?? option.value ?? '',\n      }));\n\n      const internalQuery: InternalQuery = {\n        operation: query.operation,\n        tokens: query.tokens.map(token => ({\n          property: token.propertyKey ? getProperty(token.propertyKey) : null,\n          operator: token.operator,\n          value: token.value,\n        })),\n      };\n\n      return { internalProperties: [...propertyByKey.values()], internalOptions, internalQuery };\n    })();\n\n    const parsedText = parseText(filteringText, internalProperties, disableFreeTextFiltering);\n    const autosuggestOptions = getAutosuggestOptions(\n      parsedText,\n      internalProperties,\n      internalOptions,\n      customGroupsText,\n      i18nStrings\n    );\n\n    const createToken = (currentText: string) => {\n      const parsedText = parseText(currentText, internalProperties, disableFreeTextFiltering);\n      let newToken: Token;\n      switch (parsedText.step) {\n        case 'property': {\n          newToken = matchTokenValue(\n            {\n              property: parsedText.property,\n              operator: parsedText.operator,\n              value: parsedText.value,\n            },\n            internalOptions\n          );\n          break;\n        }\n        case 'free-text': {\n          newToken = {\n            operator: parsedText.operator || ':',\n            value: parsedText.value,\n          };\n          break;\n        }\n        case 'operator': {\n          newToken = {\n            operator: ':',\n            value: currentText,\n          };\n          break;\n        }\n      }\n      if (disableFreeTextFiltering && !('propertyKey' in newToken)) {\n        return;\n      }\n      addToken(newToken);\n      setFilteringText('');\n    };\n    const ignoreKeyDown = useRef<boolean>(false);\n    const handleKeyDown: PropertyFilterAutosuggestProps['onKeyDown'] = event => {\n      if (filteringText && !ignoreKeyDown.current && event.detail.keyCode === KeyCode.enter) {\n        createToken(filteringText);\n      }\n    };\n    const getLoadMoreDetail = (parsedText: ParsedText, filteringText: string) => {\n      const loadMoreDetail: {\n        filteringProperty: FilteringProperty | undefined;\n        filteringText: string;\n        filteringOperator: ComparisonOperator | undefined;\n      } = {\n        filteringProperty: undefined,\n        filteringText,\n        filteringOperator: undefined,\n      };\n      if (parsedText.step === 'property') {\n        loadMoreDetail.filteringProperty = parsedText.property.externalProperty;\n        loadMoreDetail.filteringText = parsedText.value;\n        loadMoreDetail.filteringOperator = parsedText.operator;\n      }\n      return loadMoreDetail;\n    };\n    const loadMoreDetail = getLoadMoreDetail(parsedText, filteringText);\n    const inputLoadItemsHandlers = useLoadItems(\n      onLoadItems,\n      loadMoreDetail.filteringText,\n      loadMoreDetail.filteringProperty,\n      loadMoreDetail.filteringText,\n      loadMoreDetail.filteringOperator\n    );\n    const asyncProps = {\n      empty: filteringEmpty,\n      loadingText: filteringLoadingText,\n      finishedText: filteringFinishedText,\n      errorText: filteringErrorText,\n      recoveryText: filteringRecoveryText,\n      statusType: filteringStatusType,\n    };\n    const asyncAutosuggestProps =\n      !!filteringText.length || asyncProperties\n        ? {\n            ...inputLoadItemsHandlers,\n            ...asyncProps,\n          }\n        : {};\n    const handleSelected: PropertyFilterAutosuggestProps['onOptionClick'] = event => {\n      // The ignoreKeyDown flag makes sure `createToken` routine runs only once. Autosuggest's `onKeyDown` fires,\n      // when an item is selected from the list using \"enter\" key.\n      ignoreKeyDown.current = true;\n      setTimeout(() => {\n        ignoreKeyDown.current = false;\n      }, 0);\n      const { detail: option } = event;\n      const value = option.value || '';\n\n      if (!('keepOpenOnSelect' in option)) {\n        createToken(value);\n        return;\n      }\n\n      // stop dropdown from closing\n      event.preventDefault();\n\n      const parsedText = parseText(value, internalProperties, disableFreeTextFiltering);\n      const loadMoreDetail = getLoadMoreDetail(parsedText, value);\n\n      // Insert operator automatically if only one operator is defined for the given property.\n      if (parsedText.step === 'operator') {\n        const operators = getAllowedOperators(parsedText.property);\n        if (value.trim() === parsedText.property.propertyLabel && operators.length === 1) {\n          loadMoreDetail.filteringProperty = parsedText.property.externalProperty ?? undefined;\n          loadMoreDetail.filteringOperator = operators[0];\n          loadMoreDetail.filteringText = '';\n          setFilteringText(parsedText.property.propertyLabel + ' ' + operators[0] + ' ');\n        }\n      }\n\n      fireNonCancelableEvent(onLoadItems, { ...loadMoreDetail, firstPage: true, samePage: false });\n    };\n\n    const operatorForm =\n      parsedText.step === 'property' && parsedText.property.getValueFormRenderer(parsedText.operator);\n\n    const searchResultsId = useUniqueId('property-filter-search-results');\n\n    return (\n      <div {...baseProps} className={clsx(baseProps.className, styles.root)} ref={__internalRootRef}>\n        <div className={styles['search-field']}>\n          {customControl && <div className={styles['custom-control']}>{customControl}</div>}\n          <PropertyFilterAutosuggest\n            ref={inputRef}\n            virtualScroll={virtualScroll}\n            enteredTextLabel={i18nStrings.enteredTextLabel}\n            ariaLabel={filteringAriaLabel ?? i18nStrings.filteringAriaLabel}\n            placeholder={filteringPlaceholder ?? i18nStrings.filteringPlaceholder}\n            ariaLabelledby={rest.ariaLabelledby}\n            ariaDescribedby={rest.ariaDescribedby}\n            controlId={rest.controlId}\n            value={filteringText}\n            disabled={disabled}\n            onKeyDown={handleKeyDown}\n            {...autosuggestOptions}\n            onChange={event => setFilteringText(event.detail.value)}\n            empty={filteringEmpty}\n            {...asyncAutosuggestProps}\n            expandToViewport={expandToViewport}\n            onOptionClick={handleSelected}\n            customForm={\n              operatorForm && (\n                <PropertyEditor\n                  property={parsedText.property}\n                  operator={parsedText.operator}\n                  filter={parsedText.value}\n                  operatorForm={operatorForm}\n                  i18nStrings={i18nStrings}\n                  onCancel={() => {\n                    setFilteringText('');\n                    inputRef.current?.close();\n                    inputRef.current?.focus({ preventDropdown: true });\n                  }}\n                  onSubmit={token => {\n                    addToken(token);\n                    setFilteringText('');\n                    inputRef.current?.focus({ preventDropdown: true });\n                    inputRef.current?.close();\n                  }}\n                />\n              )\n            }\n            hideEnteredTextOption={disableFreeTextFiltering && parsedText.step !== 'property'}\n            clearAriaLabel={i18nStrings.clearAriaLabel}\n            searchResultsId={showResults ? searchResultsId : undefined}\n          />\n          {showResults ? (\n            <div className={styles.results}>\n              <SearchResults id={searchResultsId}>{countText}</SearchResults>\n            </div>\n          ) : null}\n        </div>\n        {internalQuery.tokens && internalQuery.tokens.length > 0 && (\n          <div className={styles.tokens}>\n            <InternalSpaceBetween size=\"xs\" direction=\"horizontal\">\n              <TokenList\n                alignment=\"inline\"\n                limit={tokenLimit}\n                items={internalQuery.tokens}\n                renderItem={(token, tokenIndex) => (\n                  <TokenButton\n                    token={token}\n                    first={tokenIndex === 0}\n                    operation={internalQuery.operation}\n                    removeToken={() => {\n                      removeToken(tokenIndex);\n                      setRemovedTokenIndex(tokenIndex);\n                    }}\n                    setToken={(newToken: Token) => setToken(tokenIndex, newToken)}\n                    setOperation={setOperation}\n                    filteringProperties={internalProperties}\n                    filteringOptions={internalOptions}\n                    asyncProps={asyncProps}\n                    onLoadItems={onLoadItems}\n                    i18nStrings={i18nStrings}\n                    asyncProperties={asyncProperties}\n                    hideOperations={hideOperations}\n                    customGroupsText={customGroupsText}\n                    disableFreeTextFiltering={disableFreeTextFiltering}\n                    disabled={disabled}\n                    expandToViewport={expandToViewport}\n                  />\n                )}\n                i18nStrings={{\n                  limitShowFewer: i18nStrings.tokenLimitShowFewer,\n                  limitShowMore: i18nStrings.tokenLimitShowMore,\n                }}\n                after={\n                  customFilterActions ? (\n                    <div className={styles['custom-filter-actions']}>{customFilterActions}</div>\n                  ) : (\n                    <InternalButton\n                      formAction=\"none\"\n                      onClick={removeAllTokens}\n                      className={styles['remove-all']}\n                      disabled={disabled}\n                    >\n                      {i18nStrings.clearFiltersText}\n                    </InternalButton>\n                  )\n                }\n                removedItemIndex={removedTokenIndex}\n              />\n            </InternalSpaceBetween>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\napplyDisplayName(PropertyFilter, 'PropertyFilter');\nexport default PropertyFilter;\n"]},"metadata":{},"sourceType":"module"}