{"ast":null,"code":"import _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useRef, useState, useImperativeHandle } from 'react';\nimport clsx from 'clsx';\nimport { KeyCode } from '../internal/keycode';\nimport { getBaseProps } from '../internal/base-component';\nimport { FormFieldContext } from '../internal/context/form-field-context';\nimport Arrow from './arrow';\nimport Portal from '../internal/components/portal';\nimport PopoverContainer from './container';\nimport PopoverBody from './body';\nimport styles from './styles.css.js';\nimport { fireNonCancelableEvent } from '../internal/events/index';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { usePortalModeClasses } from '../internal/hooks/use-portal-mode-classes';\nimport { useInternalI18n } from '../i18n/context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { getFirstFocusable } from '../internal/components/focus-lock/utils';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nexport default React.forwardRef(InternalPopover);\nfunction InternalPopover(_a, ref) {\n  var _a$position = _a.position,\n    position = _a$position === void 0 ? 'right' : _a$position,\n    _a$size = _a.size,\n    size = _a$size === void 0 ? 'medium' : _a$size,\n    _a$fixedWidth = _a.fixedWidth,\n    fixedWidth = _a$fixedWidth === void 0 ? false : _a$fixedWidth,\n    _a$triggerType = _a.triggerType,\n    triggerType = _a$triggerType === void 0 ? 'text' : _a$triggerType,\n    _a$dismissButton = _a.dismissButton,\n    dismissButton = _a$dismissButton === void 0 ? true : _a$dismissButton,\n    children = _a.children,\n    header = _a.header,\n    content = _a.content,\n    triggerAriaLabel = _a.triggerAriaLabel,\n    _a$renderWithPortal = _a.renderWithPortal,\n    renderWithPortal = _a$renderWithPortal === void 0 ? false : _a$renderWithPortal,\n    __onOpen = _a.__onOpen,\n    _a$__internalRootRef = _a.__internalRootRef,\n    __internalRootRef = _a$__internalRootRef === void 0 ? null : _a$__internalRootRef,\n    restProps = __rest(_a, [\"position\", \"size\", \"fixedWidth\", \"triggerType\", \"dismissButton\", \"children\", \"header\", \"content\", \"triggerAriaLabel\", \"renderWithPortal\", \"__onOpen\", \"__internalRootRef\"]);\n  var baseProps = getBaseProps(restProps);\n  var triggerRef = useRef(null);\n  var popoverRef = useRef(null);\n  var clickFrameId = useRef(null);\n  var i18n = useInternalI18n('popover');\n  var dismissAriaLabel = i18n('dismissAriaLabel', restProps.dismissAriaLabel);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    visible = _useState2[0],\n    setVisible = _useState2[1];\n  var focusTrigger = useCallback(function () {\n    var _a, _b;\n    if (triggerType === 'text') {\n      (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    } else {\n      triggerRef.current && ((_b = getFirstFocusable(triggerRef.current)) === null || _b === void 0 ? void 0 : _b.focus());\n    }\n  }, [triggerType]);\n  var onTriggerClick = useCallback(function () {\n    fireNonCancelableEvent(__onOpen);\n    setVisible(true);\n  }, [__onOpen]);\n  var onDismiss = useCallback(function () {\n    setVisible(false);\n    focusTrigger();\n  }, [focusTrigger]);\n  var onTriggerKeyDown = useCallback(function (event) {\n    if (event.keyCode === KeyCode.tab || event.keyCode === KeyCode.escape) {\n      setVisible(false);\n    }\n  }, []);\n  useImperativeHandle(ref, function () {\n    return {\n      dismissPopover: onDismiss\n    };\n  });\n  useEffect(function () {\n    if (!triggerRef.current) {\n      return;\n    }\n    var document = triggerRef.current.ownerDocument;\n    var onDocumentClick = function onDocumentClick() {\n      // Dismiss popover unless there was a click inside within the last animation frame.\n      if (clickFrameId.current === null) {\n        setVisible(false);\n      }\n    };\n    // useCapture=false makes sure this listener is called after the one attached to the element.\n    // the options.capture notation is unsupported by IE.\n    document.addEventListener('mousedown', onDocumentClick, false);\n    return function () {\n      document.removeEventListener('mousedown', onDocumentClick, false);\n    };\n  }, []);\n  var popoverClasses = usePortalModeClasses(triggerRef);\n  var triggerProps = {\n    // https://github.com/microsoft/TypeScript/issues/36659\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ref: triggerRef,\n    onClick: onTriggerClick,\n    onKeyDown: onTriggerKeyDown,\n    className: clsx(styles.trigger, styles[\"trigger-type-\".concat(triggerType)])\n  };\n  var referrerId = useUniqueId();\n  var popoverContent = React.createElement(\"div\", {\n    \"aria-live\": dismissButton ? undefined : 'polite',\n    \"aria-atomic\": dismissButton ? undefined : true,\n    className: clsx(popoverClasses, styles['popover-content']),\n    \"data-awsui-referrer-id\": referrerId\n  }, visible && React.createElement(PopoverContainer, {\n    size: size,\n    fixedWidth: fixedWidth,\n    position: position,\n    trackRef: triggerRef,\n    arrow: function arrow(position) {\n      return React.createElement(Arrow, {\n        position: position\n      });\n    },\n    renderWithPortal: renderWithPortal,\n    zIndex: renderWithPortal ? 7000 : undefined\n  }, React.createElement(LinkDefaultVariantContext.Provider, {\n    value: {\n      defaultVariant: 'primary'\n    }\n  }, React.createElement(PopoverBody, {\n    dismissButton: dismissButton,\n    dismissAriaLabel: dismissAriaLabel,\n    header: header,\n    onDismiss: onDismiss,\n    overflowVisible: \"both\"\n  }, content))));\n  var mergedRef = useMergeRefs(popoverRef, __internalRootRef);\n  return React.createElement(\"span\", Object.assign({}, baseProps, {\n    className: clsx(styles.root, baseProps.className),\n    ref: mergedRef,\n    onMouseDown: function onMouseDown() {\n      // Indicate there was a click inside popover recently, including nested portals.\n      clickFrameId.current = requestAnimationFrame(function () {\n        clickFrameId.current = null;\n      });\n    }\n  }), triggerType === 'text' ? React.createElement(\"button\", Object.assign({}, triggerProps, {\n    type: \"button\",\n    \"aria-haspopup\": \"dialog\",\n    id: referrerId,\n    \"aria-label\": triggerAriaLabel\n  }), React.createElement(\"span\", {\n    className: styles['trigger-inner-text']\n  }, children)) : React.createElement(\"span\", Object.assign({}, triggerProps, {\n    id: referrerId\n  }), children), React.createElement(FormFieldContext.Provider, {\n    value: {}\n  }, renderWithPortal ? React.createElement(Portal, null, popoverContent) : popoverContent));\n}","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useRef","useState","useImperativeHandle","clsx","KeyCode","getBaseProps","FormFieldContext","Arrow","Portal","PopoverContainer","PopoverBody","styles","fireNonCancelableEvent","useMergeRefs","usePortalModeClasses","useInternalI18n","useUniqueId","getFirstFocusable","LinkDefaultVariantContext","forwardRef","InternalPopover","_a","ref","position","size","fixedWidth","triggerType","dismissButton","children","header","content","triggerAriaLabel","renderWithPortal","__onOpen","__internalRootRef","restProps","baseProps","triggerRef","popoverRef","clickFrameId","i18n","dismissAriaLabel","visible","setVisible","focusTrigger","current","focus","onTriggerClick","onDismiss","onTriggerKeyDown","event","keyCode","tab","escape","dismissPopover","document","ownerDocument","onDocumentClick","addEventListener","removeEventListener","popoverClasses","triggerProps","onClick","onKeyDown","className","trigger","referrerId","popoverContent","undefined","trackRef","arrow","zIndex","Provider","value","defaultVariant","overflowVisible","mergedRef","root","onMouseDown","requestAnimationFrame","type","id"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/popover/lib/default/popover/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useRef, useState, useImperativeHandle } from 'react';\nimport clsx from 'clsx';\n\nimport { KeyCode } from '../internal/keycode';\nimport { getBaseProps } from '../internal/base-component';\nimport { FormFieldContext } from '../internal/context/form-field-context';\n\nimport Arrow from './arrow';\nimport Portal from '../internal/components/portal';\nimport { PopoverProps } from './interfaces';\nimport PopoverContainer from './container';\nimport PopoverBody from './body';\n\nimport styles from './styles.css.js';\nimport { NonCancelableEventHandler, fireNonCancelableEvent } from '../internal/events/index';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { usePortalModeClasses } from '../internal/hooks/use-portal-mode-classes';\nimport { useInternalI18n } from '../i18n/context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { getFirstFocusable } from '../internal/components/focus-lock/utils';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\n\nexport interface InternalPopoverProps extends PopoverProps, InternalBaseComponentProps {\n  __onOpen?: NonCancelableEventHandler<null>;\n}\n\nexport interface InternalPopoverRef {\n  dismissPopover: () => void;\n}\n\nexport default React.forwardRef(InternalPopover);\n\nfunction InternalPopover(\n  {\n    position = 'right',\n    size = 'medium',\n    fixedWidth = false,\n    triggerType = 'text',\n    dismissButton = true,\n\n    children,\n    header,\n    content,\n    triggerAriaLabel,\n\n    renderWithPortal = false,\n\n    __onOpen,\n    __internalRootRef = null,\n    ...restProps\n  }: InternalPopoverProps,\n  ref: React.Ref<InternalPopoverRef>\n) {\n  const baseProps = getBaseProps(restProps);\n  const triggerRef = useRef<HTMLElement | null>(null);\n  const popoverRef = useRef<HTMLDivElement | null>(null);\n  const clickFrameId = useRef<number | null>(null);\n\n  const i18n = useInternalI18n('popover');\n  const dismissAriaLabel = i18n('dismissAriaLabel', restProps.dismissAriaLabel);\n\n  const [visible, setVisible] = useState(false);\n\n  const focusTrigger = useCallback(() => {\n    if (triggerType === 'text') {\n      triggerRef.current?.focus();\n    } else {\n      triggerRef.current && getFirstFocusable(triggerRef.current)?.focus();\n    }\n  }, [triggerType]);\n\n  const onTriggerClick = useCallback(() => {\n    fireNonCancelableEvent(__onOpen);\n    setVisible(true);\n  }, [__onOpen]);\n\n  const onDismiss = useCallback(() => {\n    setVisible(false);\n    focusTrigger();\n  }, [focusTrigger]);\n\n  const onTriggerKeyDown = useCallback((event: React.KeyboardEvent) => {\n    if (event.keyCode === KeyCode.tab || event.keyCode === KeyCode.escape) {\n      setVisible(false);\n    }\n  }, []);\n\n  useImperativeHandle(ref, () => ({\n    dismissPopover: onDismiss,\n  }));\n\n  useEffect(() => {\n    if (!triggerRef.current) {\n      return;\n    }\n    const document = triggerRef.current.ownerDocument;\n\n    const onDocumentClick = () => {\n      // Dismiss popover unless there was a click inside within the last animation frame.\n      if (clickFrameId.current === null) {\n        setVisible(false);\n      }\n    };\n\n    // useCapture=false makes sure this listener is called after the one attached to the element.\n    // the options.capture notation is unsupported by IE.\n    document.addEventListener('mousedown', onDocumentClick, false);\n\n    return () => {\n      document.removeEventListener('mousedown', onDocumentClick, false);\n    };\n  }, []);\n\n  const popoverClasses = usePortalModeClasses(triggerRef);\n\n  const triggerProps = {\n    // https://github.com/microsoft/TypeScript/issues/36659\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ref: triggerRef as any,\n    onClick: onTriggerClick,\n    onKeyDown: onTriggerKeyDown,\n    className: clsx(styles.trigger, styles[`trigger-type-${triggerType}`]),\n  };\n\n  const referrerId = useUniqueId();\n  const popoverContent = (\n    <div\n      aria-live={dismissButton ? undefined : 'polite'}\n      aria-atomic={dismissButton ? undefined : true}\n      className={clsx(popoverClasses, styles['popover-content'])}\n      data-awsui-referrer-id={referrerId}\n    >\n      {visible && (\n        <PopoverContainer\n          size={size}\n          fixedWidth={fixedWidth}\n          position={position}\n          trackRef={triggerRef}\n          arrow={position => <Arrow position={position} />}\n          renderWithPortal={renderWithPortal}\n          zIndex={renderWithPortal ? 7000 : undefined}\n        >\n          <LinkDefaultVariantContext.Provider value={{ defaultVariant: 'primary' }}>\n            <PopoverBody\n              dismissButton={dismissButton}\n              dismissAriaLabel={dismissAriaLabel}\n              header={header}\n              onDismiss={onDismiss}\n              overflowVisible=\"both\"\n            >\n              {content}\n            </PopoverBody>\n          </LinkDefaultVariantContext.Provider>\n        </PopoverContainer>\n      )}\n    </div>\n  );\n\n  const mergedRef = useMergeRefs(popoverRef, __internalRootRef);\n\n  return (\n    <span\n      {...baseProps}\n      className={clsx(styles.root, baseProps.className)}\n      ref={mergedRef}\n      onMouseDown={() => {\n        // Indicate there was a click inside popover recently, including nested portals.\n        clickFrameId.current = requestAnimationFrame(() => {\n          clickFrameId.current = null;\n        });\n      }}\n    >\n      {triggerType === 'text' ? (\n        <button {...triggerProps} type=\"button\" aria-haspopup=\"dialog\" id={referrerId} aria-label={triggerAriaLabel}>\n          <span className={styles['trigger-inner-text']}>{children}</span>\n        </button>\n      ) : (\n        <span {...triggerProps} id={referrerId}>\n          {children}\n        </span>\n      )}\n      <FormFieldContext.Provider value={{}}>\n        {renderWithPortal ? <Portal>{popoverContent}</Portal> : popoverContent}\n      </FormFieldContext.Provider>\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}