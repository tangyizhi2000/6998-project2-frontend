{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport OptionsList from '../../internal/components/options-list';\nimport React, { forwardRef, useImperativeHandle } from 'react';\nimport { renderOptions } from '../utils/render-options';\nimport { scrollElementIntoView } from '../../internal/utils/scrollable-containers';\nimport styles from './styles.css.js';\nconst PlainList = (_ref, ref) => {\n  let {\n    menuProps,\n    getOptionProps,\n    filteredOptions,\n    filteringValue,\n    highlightType,\n    checkboxes,\n    hasDropdownStatus,\n    listBottom,\n    useInteractiveGroups,\n    screenReaderContent\n  } = _ref;\n  const menuRef = menuProps.ref;\n  useImperativeHandle(ref, () => index => {\n    var _a;\n    const item = (_a = menuRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(`[data-mouse-target=\"${index}\"]`);\n    if (highlightType === 'keyboard' && item) {\n      scrollElementIntoView(item);\n    }\n  }, [highlightType, menuRef]);\n  return React.createElement(OptionsList, Object.assign({}, menuProps), renderOptions({\n    options: filteredOptions,\n    getOptionProps,\n    filteringValue,\n    highlightType,\n    checkboxes,\n    hasDropdownStatus,\n    useInteractiveGroups,\n    screenReaderContent\n  }), listBottom ? React.createElement(\"li\", {\n    role: \"option\",\n    className: styles['list-bottom']\n  }, listBottom) : null);\n};\nexport default forwardRef(PlainList);","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,WAAW,MAAM,wCAAwC;AAChE,OAAOC,KAAK,IAAIC,UAAU,EAAEC,mBAAmB,QAAQ,OAAO;AAC9D,SAASC,aAAa,QAAQ,yBAAyB;AAGvD,SAASC,qBAAqB,QAAQ,4CAA4C;AAElF,OAAOC,MAAM,MAAM,iBAAiB;AAoBpC,MAAMC,SAAS,GAAG,OAahBC,GAA6C,KAC3C;EAAA,IAbF;IACEC,SAAS;IACTC,cAAc;IACdC,eAAe;IACfC,cAAc;IACdC,aAAa;IACbC,UAAU;IACVC,iBAAiB;IACjBC,UAAU;IACVC,oBAAoB;IACpBC;EAAmB,CACH;EAGlB,MAAMC,OAAO,GAAGV,SAAS,CAACD,GAAG;EAC7BL,mBAAmB,CACjBK,GAAG,EACH,MAAOY,KAAa,IAAI;;IACtB,MAAMC,IAAI,GAAG,aAAO,CAACC,OAAO,0CAAEC,aAAa,CAAc,uBAAuBH,KAAK,IAAI,CAAC;IAC1F,IAAIP,aAAa,KAAK,UAAU,IAAIQ,IAAI,EAAE;MACxChB,qBAAqB,CAACgB,IAAI,CAAC;;EAE/B,CAAC,EACD,CAACR,aAAa,EAAEM,OAAO,CAAC,CACzB;EAED,OACElB,oBAACD,WAAW,oBAAKS,SAAS,GACvBL,aAAa,CAAC;IACboB,OAAO,EAAEb,eAAe;IACxBD,cAAc;IACdE,cAAc;IACdC,aAAa;IACbC,UAAU;IACVC,iBAAiB;IACjBE,oBAAoB;IACpBC;GACD,CAAC,EACDF,UAAU,GACTf;IAAIwB,IAAI,EAAC,QAAQ;IAACC,SAAS,EAAEpB,MAAM,CAAC,aAAa;EAAC,GAC/CU,UAAU,CACR,GACH,IAAI,CACI;AAElB,CAAC;AAED,eAAed,UAAU,CAACK,SAAS,CAAC","names":["OptionsList","React","forwardRef","useImperativeHandle","renderOptions","scrollElementIntoView","styles","PlainList","ref","menuProps","getOptionProps","filteredOptions","filteringValue","highlightType","checkboxes","hasDropdownStatus","listBottom","useInteractiveGroups","screenReaderContent","menuRef","index","item","current","querySelector","options","role","className"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/select/parts/lib/default/select/parts/plain-list.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport OptionsList from '../../internal/components/options-list';\nimport React, { forwardRef, useImperativeHandle } from 'react';\nimport { renderOptions } from '../utils/render-options';\nimport { MenuProps, GetOptionProps } from '../utils/use-select';\nimport { DropdownOption } from '../../internal/components/option/interfaces';\nimport { scrollElementIntoView } from '../../internal/utils/scrollable-containers';\n\nimport styles from './styles.css.js';\nimport { HighlightType } from '../../internal/components/options-list/utils/use-highlight-option';\n\nexport interface SelectListProps {\n  menuProps: MenuProps;\n  getOptionProps: GetOptionProps;\n  filteredOptions: ReadonlyArray<DropdownOption>;\n  filteringValue: string;\n  highlightType: HighlightType;\n  checkboxes?: boolean;\n  hasDropdownStatus?: boolean;\n  listBottom?: React.ReactNode;\n  useInteractiveGroups?: boolean;\n  screenReaderContent?: string;\n}\n\nexport namespace SelectListProps {\n  export type SelectListRef = (index: number) => void;\n}\n\nconst PlainList = (\n  {\n    menuProps,\n    getOptionProps,\n    filteredOptions,\n    filteringValue,\n    highlightType,\n    checkboxes,\n    hasDropdownStatus,\n    listBottom,\n    useInteractiveGroups,\n    screenReaderContent,\n  }: SelectListProps,\n  ref: React.Ref<SelectListProps.SelectListRef>\n) => {\n  const menuRef = menuProps.ref;\n  useImperativeHandle(\n    ref,\n    () => (index: number) => {\n      const item = menuRef.current?.querySelector<HTMLElement>(`[data-mouse-target=\"${index}\"]`);\n      if (highlightType === 'keyboard' && item) {\n        scrollElementIntoView(item);\n      }\n    },\n    [highlightType, menuRef]\n  );\n\n  return (\n    <OptionsList {...menuProps}>\n      {renderOptions({\n        options: filteredOptions,\n        getOptionProps,\n        filteringValue,\n        highlightType,\n        checkboxes,\n        hasDropdownStatus,\n        useInteractiveGroups,\n        screenReaderContent,\n      })}\n      {listBottom ? (\n        <li role=\"option\" className={styles['list-bottom']}>\n          {listBottom}\n        </li>\n      ) : null}\n    </OptionsList>\n  );\n};\n\nexport default forwardRef(PlainList);\n"]},"metadata":{},"sourceType":"module"}