{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useEffect, useRef } from 'react';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport styles from './styles.css.js';\nimport { useSplitPanelContext } from '../internal/context/split-panel-context';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nexport function SplitPanelContentBottom(_ref) {\n  var _clsx, _clsx2;\n  var baseProps = _ref.baseProps,\n    isOpen = _ref.isOpen,\n    state = _ref.state,\n    transitioningElementRef = _ref.transitioningElementRef,\n    splitPanelRef = _ref.splitPanelRef,\n    cappedSize = _ref.cappedSize,\n    header = _ref.header,\n    resizeHandle = _ref.resizeHandle,\n    children = _ref.children,\n    appLayoutMaxWidth = _ref.appLayoutMaxWidth,\n    panelHeaderId = _ref.panelHeaderId,\n    onToggle = _ref.onToggle;\n  var isRefresh = useVisualRefresh();\n  var _useSplitPanelContext = useSplitPanelContext(),\n    bottomOffset = _useSplitPanelContext.bottomOffset,\n    leftOffset = _useSplitPanelContext.leftOffset,\n    rightOffset = _useSplitPanelContext.rightOffset,\n    disableContentPaddings = _useSplitPanelContext.disableContentPaddings,\n    contentWrapperPaddings = _useSplitPanelContext.contentWrapperPaddings,\n    reportHeaderHeight = _useSplitPanelContext.reportHeaderHeight;\n  var transitionContentBottomRef = useMergeRefs(splitPanelRef || null, transitioningElementRef);\n  var isMobile = useMobile();\n  var headerRef = useRef(null);\n  useResizeObserver(headerRef, function (entry) {\n    return reportHeaderHeight(entry.borderBoxHeight);\n  });\n  useEffect(function () {\n    // report empty height when unmounting the panel\n    return function () {\n      return reportHeaderHeight(0);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var centeredMaxWidthClasses = clsx((_clsx = {}, _defineProperty(_clsx, styles['pane-bottom-center-align'], isRefresh), _defineProperty(_clsx, styles['pane-bottom-content-nav-padding'], contentWrapperPaddings === null || contentWrapperPaddings === void 0 ? void 0 : contentWrapperPaddings.closedNav), _defineProperty(_clsx, styles['pane-bottom-content-tools-padding'], contentWrapperPaddings === null || contentWrapperPaddings === void 0 ? void 0 : contentWrapperPaddings.closedTools), _clsx));\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root, styles.drawer, styles['position-bottom'], (_clsx2 = {}, _defineProperty(_clsx2, styles['drawer-closed'], !isOpen), _defineProperty(_clsx2, styles['drawer-mobile'], isMobile), _defineProperty(_clsx2, styles['drawer-disable-content-paddings'], disableContentPaddings), _defineProperty(_clsx2, styles.animating, isRefresh && (state === 'entering' || state === 'exiting')), _defineProperty(_clsx2, styles.refresh, isRefresh), _clsx2)),\n    onClick: function onClick() {\n      return !isOpen && onToggle();\n    },\n    style: {\n      bottom: bottomOffset,\n      left: leftOffset,\n      right: rightOffset,\n      height: isOpen ? cappedSize : undefined\n    },\n    ref: transitionContentBottomRef\n  }), isOpen && React.createElement(\"div\", {\n    className: styles['slider-wrapper-bottom']\n  }, resizeHandle), React.createElement(\"div\", {\n    className: styles['drawer-content-bottom'],\n    \"aria-labelledby\": panelHeaderId,\n    role: \"region\"\n  }, React.createElement(\"div\", {\n    className: clsx(styles['pane-header-wrapper-bottom'], centeredMaxWidthClasses),\n    ref: headerRef\n  }, header), React.createElement(\"div\", {\n    className: clsx(styles['content-bottom'], centeredMaxWidthClasses),\n    \"aria-hidden\": !isOpen\n  }, React.createElement(\"div\", {\n    className: clsx(_defineProperty({}, styles['content-bottom-max-width'], isRefresh)),\n    style: appLayoutMaxWidth\n  }, children))));\n}","map":{"version":3,"mappings":"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","names":["clsx","React","useEffect","useRef","useMergeRefs","useMobile","styles","useSplitPanelContext","useVisualRefresh","useResizeObserver","SplitPanelContentBottom","baseProps","isOpen","state","transitioningElementRef","splitPanelRef","cappedSize","header","resizeHandle","children","appLayoutMaxWidth","panelHeaderId","onToggle","isRefresh","bottomOffset","leftOffset","rightOffset","disableContentPaddings","contentWrapperPaddings","reportHeaderHeight","transitionContentBottomRef","isMobile","headerRef","entry","borderBoxHeight","centeredMaxWidthClasses","closedNav","closedTools","className","root","drawer","animating","refresh","onClick","style","bottom","left","right","height","undefined","ref","role"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/split-panel/lib/default/split-panel/bottom.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useEffect, useRef } from 'react';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { TransitionStatus } from '../internal/components/transition';\nimport { SplitPanelContentProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { useSplitPanelContext } from '../internal/context/split-panel-context';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\ninterface SplitPanelContentBottomProps extends SplitPanelContentProps {\n  state: TransitionStatus;\n  transitioningElementRef: React.Ref<any>;\n  appLayoutMaxWidth: React.CSSProperties | undefined;\n}\n\nexport function SplitPanelContentBottom({\n  baseProps,\n  isOpen,\n  state,\n  transitioningElementRef,\n  splitPanelRef,\n  cappedSize,\n  header,\n  resizeHandle,\n  children,\n  appLayoutMaxWidth,\n  panelHeaderId,\n  onToggle,\n}: SplitPanelContentBottomProps) {\n  const isRefresh = useVisualRefresh();\n  const { bottomOffset, leftOffset, rightOffset, disableContentPaddings, contentWrapperPaddings, reportHeaderHeight } =\n    useSplitPanelContext();\n  const transitionContentBottomRef = useMergeRefs(splitPanelRef || null, transitioningElementRef);\n  const isMobile = useMobile();\n\n  const headerRef = useRef<HTMLDivElement>(null);\n  useResizeObserver(headerRef, entry => reportHeaderHeight(entry.borderBoxHeight));\n  useEffect(() => {\n    // report empty height when unmounting the panel\n    return () => reportHeaderHeight(0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const centeredMaxWidthClasses = clsx({\n    [styles['pane-bottom-center-align']]: isRefresh,\n    [styles['pane-bottom-content-nav-padding']]: contentWrapperPaddings?.closedNav,\n    [styles['pane-bottom-content-tools-padding']]: contentWrapperPaddings?.closedTools,\n  });\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(baseProps.className, styles.root, styles.drawer, styles['position-bottom'], {\n        [styles['drawer-closed']]: !isOpen,\n        [styles['drawer-mobile']]: isMobile,\n        [styles['drawer-disable-content-paddings']]: disableContentPaddings,\n        [styles.animating]: isRefresh && (state === 'entering' || state === 'exiting'),\n        [styles.refresh]: isRefresh,\n      })}\n      onClick={() => !isOpen && onToggle()}\n      style={{\n        bottom: bottomOffset,\n        left: leftOffset,\n        right: rightOffset,\n        height: isOpen ? cappedSize : undefined,\n      }}\n      ref={transitionContentBottomRef}\n    >\n      {isOpen && <div className={styles['slider-wrapper-bottom']}>{resizeHandle}</div>}\n      <div className={styles['drawer-content-bottom']} aria-labelledby={panelHeaderId} role=\"region\">\n        <div className={clsx(styles['pane-header-wrapper-bottom'], centeredMaxWidthClasses)} ref={headerRef}>\n          {header}\n        </div>\n        <div className={clsx(styles['content-bottom'], centeredMaxWidthClasses)} aria-hidden={!isOpen}>\n          <div className={clsx({ [styles['content-bottom-max-width']]: isRefresh })} style={appLayoutMaxWidth}>\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}