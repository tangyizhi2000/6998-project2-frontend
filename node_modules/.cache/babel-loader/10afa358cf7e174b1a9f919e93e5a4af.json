{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useCallback, useImperativeHandle, useRef } from 'react';\nimport styles from './styles.css.js';\nimport { getCardsPerRow } from './cards-layout-helper';\nimport { getBaseProps } from '../internal/base-component';\nimport ToolsHeader from '../table/tools-header';\nimport { getItemKey } from '../table/utils';\nimport { SelectionControl, focusMarkers, useSelectionFocusMove, useSelection } from '../table/selection';\nimport { InternalContainerAsSubstep } from '../container/internal';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport stickyScrolling from '../table/sticky-scrolling';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport LiveRegion from '../internal/components/live-region';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { supportsStickyPosition } from '../internal/utils/dom';\nimport { useInternalI18n } from '../i18n/context';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { AnalyticsFunnelSubStep } from '../internal/analytics/components/analytics-funnel';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nconst Cards = React.forwardRef(function (_a, ref) {\n  var {\n      items = [],\n      cardDefinition,\n      cardsPerRow = [],\n      header,\n      filter,\n      pagination,\n      preferences,\n      empty,\n      loading,\n      loadingText,\n      trackBy,\n      selectedItems,\n      selectionType,\n      isItemDisabled,\n      onSelectionChange,\n      ariaLabels,\n      visibleSections,\n      stickyHeader,\n      stickyHeaderVerticalOffset,\n      variant = 'container',\n      renderAriaLive,\n      firstIndex,\n      totalItemsCount\n    } = _a,\n    rest = __rest(_a, [\"items\", \"cardDefinition\", \"cardsPerRow\", \"header\", \"filter\", \"pagination\", \"preferences\", \"empty\", \"loading\", \"loadingText\", \"trackBy\", \"selectedItems\", \"selectionType\", \"isItemDisabled\", \"onSelectionChange\", \"ariaLabels\", \"visibleSections\", \"stickyHeader\", \"stickyHeaderVerticalOffset\", \"variant\", \"renderAriaLive\", \"firstIndex\", \"totalItemsCount\"]);\n  const {\n    __internalRootRef\n  } = useBaseComponent('Cards');\n  const baseProps = getBaseProps(rest);\n  const isRefresh = useVisualRefresh();\n  const isMobile = useMobile();\n  const computedVariant = isRefresh ? variant : 'container';\n  const headerIdRef = useRef(undefined);\n  const setHeaderRef = useCallback(id => {\n    headerIdRef.current = id;\n  }, []);\n  const isLabelledByHeader = !(ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.cardsLabel) && !!header;\n  const [columns, measureRef] = useContainerQuery(_ref => {\n    let {\n      contentBoxWidth\n    } = _ref;\n    return getCardsPerRow(contentBoxWidth, cardsPerRow);\n  }, [cardsPerRow]);\n  const refObject = useRef(null);\n  const mergedRef = useMergeRefs(measureRef, refObject, __internalRootRef);\n  const getMouseDownTarget = useMouseDownTarget();\n  const i18n = useInternalI18n('cards');\n  const {\n    isItemSelected,\n    getItemSelectionProps,\n    updateShiftToggle\n  } = useSelection({\n    items,\n    trackBy,\n    selectedItems,\n    selectionType,\n    isItemDisabled,\n    onSelectionChange,\n    ariaLabels: {\n      itemSelectionLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.itemSelectionLabel,\n      selectionGroupLabel: i18n('ariaLabels.selectionGroupLabel', ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.selectionGroupLabel)\n    }\n  });\n  const hasToolsHeader = header || filter || pagination || preferences;\n  const hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n  const headerRef = useRef(null);\n  const {\n    scrollToTop,\n    scrollToItem\n  } = stickyScrolling(refObject, headerRef);\n  stickyHeader = supportsStickyPosition() && !isMobile && stickyHeader;\n  const onCardFocus = event => {\n    // When an element inside card receives focus we want to adjust the scroll.\n    // However, that behavior is unwanted when the focus is received as result of a click\n    // as it causes the click to never reach the target element.\n    if (stickyHeader && !event.currentTarget.contains(getMouseDownTarget())) {\n      scrollToItem(event.currentTarget);\n    }\n  };\n  useImperativeHandle(ref, () => ({\n    scrollToTop: () => {\n      if (stickyHeader) {\n        scrollToTop();\n      }\n    }\n  }), [stickyHeader, scrollToTop]);\n  let status;\n  if (loading) {\n    status = React.createElement(\"div\", {\n      className: styles.loading\n    }, React.createElement(InternalStatusIndicator, {\n      type: \"loading\"\n    }, React.createElement(LiveRegion, {\n      visible: true\n    }, loadingText)));\n  } else if (empty && !items.length) {\n    status = React.createElement(\"div\", {\n      className: styles.empty\n    }, empty);\n  }\n  return React.createElement(LinkDefaultVariantContext.Provider, {\n    value: {\n      defaultVariant: 'primary'\n    }\n  }, React.createElement(AnalyticsFunnelSubStep, null, React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: mergedRef\n  }), React.createElement(InternalContainerAsSubstep, {\n    header: hasToolsHeader && React.createElement(\"div\", {\n      className: clsx(styles.header, isRefresh && styles['header-refresh'], styles[`header-variant-${computedVariant}`])\n    }, React.createElement(CollectionLabelContext.Provider, {\n      value: {\n        assignId: setHeaderRef\n      }\n    }, React.createElement(ToolsHeader, {\n      header: header,\n      filter: filter,\n      pagination: pagination,\n      preferences: preferences\n    }))),\n    footer: hasFooterPagination && React.createElement(\"div\", {\n      className: styles['footer-pagination']\n    }, pagination),\n    disableContentPaddings: true,\n    disableHeaderPaddings: computedVariant === 'full-page',\n    variant: computedVariant === 'container' ? 'cards' : computedVariant,\n    __stickyHeader: stickyHeader,\n    __stickyOffset: stickyHeaderVerticalOffset,\n    __headerRef: headerRef,\n    __darkHeader: computedVariant === 'full-page',\n    __disableFooterDivider: true\n  }, React.createElement(\"div\", {\n    className: clsx(hasToolsHeader && styles['has-header'])\n  }, !!renderAriaLive && !!firstIndex && React.createElement(LiveRegion, null, React.createElement(\"span\", null, renderAriaLive({\n    totalItemsCount,\n    firstIndex,\n    lastIndex: firstIndex + items.length - 1\n  }))), status !== null && status !== void 0 ? status : React.createElement(CardsList, {\n    items: items,\n    cardDefinition: cardDefinition,\n    trackBy: trackBy,\n    selectionType: selectionType,\n    columns: columns,\n    isItemSelected: isItemSelected,\n    getItemSelectionProps: getItemSelectionProps,\n    visibleSections: visibleSections,\n    updateShiftToggle: updateShiftToggle,\n    onFocus: onCardFocus,\n    ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.cardsLabel,\n    ariaLabelledby: isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined\n  }))))));\n});\nexport default Cards;\nconst CardsList = _ref2 => {\n  let {\n    items,\n    cardDefinition,\n    trackBy,\n    selectionType,\n    columns,\n    isItemSelected,\n    getItemSelectionProps,\n    visibleSections,\n    updateShiftToggle,\n    onFocus,\n    ariaLabelledby,\n    ariaLabel\n  } = _ref2;\n  const selectable = !!selectionType;\n  const {\n    moveFocusDown,\n    moveFocusUp\n  } = useSelectionFocusMove(selectionType, items.length);\n  let visibleSectionsDefinition = cardDefinition.sections || [];\n  visibleSectionsDefinition = visibleSections ? visibleSectionsDefinition.filter(section => section.id && visibleSections.indexOf(section.id) !== -1) : visibleSectionsDefinition;\n  let listRole = undefined;\n  let listItemRole = undefined;\n  if (selectable) {\n    listRole = 'group';\n    listItemRole = 'presentation';\n  }\n  return React.createElement(\"ol\", Object.assign({\n    className: clsx(styles.list, styles[`list-grid-${columns || 1}`]),\n    role: listRole,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-label\": ariaLabel\n  }, focusMarkers && focusMarkers.root), items.map((item, index) => React.createElement(\"li\", Object.assign({\n    className: clsx(styles.card, {\n      [styles['card-selectable']]: selectable,\n      [styles['card-selected']]: selectable && isItemSelected(item)\n    }),\n    key: getItemKey(trackBy, item, index),\n    onFocus: onFocus\n  }, focusMarkers && focusMarkers.item, {\n    role: listItemRole\n  }), React.createElement(\"div\", {\n    className: styles['card-inner']\n  }, React.createElement(\"div\", {\n    className: styles['card-header']\n  }, React.createElement(\"div\", {\n    className: styles['card-header-inner']\n  }, cardDefinition.header ? cardDefinition.header(item) : ''), selectable && React.createElement(\"div\", {\n    className: styles['selection-control']\n  }, React.createElement(SelectionControl, Object.assign({\n    onFocusDown: moveFocusDown,\n    onFocusUp: moveFocusUp,\n    onShiftToggle: updateShiftToggle\n  }, getItemSelectionProps(item))))), visibleSectionsDefinition.map((_ref3, index) => {\n    let {\n      width = 100,\n      header,\n      content,\n      id\n    } = _ref3;\n    return React.createElement(\"div\", {\n      key: id || index,\n      className: styles.section,\n      style: {\n        width: `${width}%`\n      }\n    }, header ? React.createElement(\"div\", {\n      className: styles['section-header']\n    }, header) : '', content ? React.createElement(\"div\", {\n      className: styles['section-content']\n    }, content(item)) : '');\n  })))));\n};\napplyDisplayName(Cards, 'Cards');","map":{"version":3,"mappings":"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","names":["clsx","React","useCallback","useImperativeHandle","useRef","styles","getCardsPerRow","getBaseProps","ToolsHeader","getItemKey","SelectionControl","focusMarkers","useSelectionFocusMove","useSelection","InternalContainerAsSubstep","InternalStatusIndicator","applyDisplayName","stickyScrolling","useBaseComponent","useVisualRefresh","useMergeRefs","LiveRegion","useMouseDownTarget","useMobile","supportsStickyPosition","useInternalI18n","useContainerQuery","AnalyticsFunnelSubStep","CollectionLabelContext","LinkDefaultVariantContext","Cards","forwardRef","_a","ref","items","cardDefinition","cardsPerRow","header","filter","pagination","preferences","empty","loading","loadingText","trackBy","selectedItems","selectionType","isItemDisabled","onSelectionChange","ariaLabels","visibleSections","stickyHeader","stickyHeaderVerticalOffset","variant","renderAriaLive","firstIndex","totalItemsCount","rest","__internalRootRef","baseProps","isRefresh","isMobile","computedVariant","headerIdRef","undefined","setHeaderRef","id","current","isLabelledByHeader","cardsLabel","columns","measureRef","contentBoxWidth","refObject","mergedRef","getMouseDownTarget","i18n","isItemSelected","getItemSelectionProps","updateShiftToggle","itemSelectionLabel","selectionGroupLabel","hasToolsHeader","hasFooterPagination","headerRef","scrollToTop","scrollToItem","onCardFocus","event","currentTarget","contains","status","className","type","visible","length","Provider","value","defaultVariant","root","assignId","footer","disableContentPaddings","disableHeaderPaddings","__stickyHeader","__stickyOffset","__headerRef","__darkHeader","__disableFooterDivider","lastIndex","CardsList","onFocus","ariaLabel","ariaLabelledby","selectable","moveFocusDown","moveFocusUp","visibleSectionsDefinition","sections","section","indexOf","listRole","listItemRole","list","role","map","item","index","card","key","onFocusDown","onFocusUp","onShiftToggle","width","content","style"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/cards/lib/default/cards/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { FocusEventHandler, useCallback, useImperativeHandle, useRef } from 'react';\nimport { CardsForwardRefType, CardsProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { getCardsPerRow } from './cards-layout-helper';\nimport { getBaseProps } from '../internal/base-component';\nimport ToolsHeader from '../table/tools-header';\nimport { getItemKey } from '../table/utils';\nimport {\n  SelectionControl,\n  SelectionControlProps,\n  focusMarkers,\n  useSelectionFocusMove,\n  useSelection,\n} from '../table/selection';\nimport { InternalContainerAsSubstep } from '../container/internal';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport stickyScrolling from '../table/sticky-scrolling';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport LiveRegion from '../internal/components/live-region';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { supportsStickyPosition } from '../internal/utils/dom';\nimport { useInternalI18n } from '../i18n/context';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { AnalyticsFunnelSubStep } from '../internal/analytics/components/analytics-funnel';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\n\nexport { CardsProps };\n\nconst Cards = React.forwardRef(function <T = any>(\n  {\n    items = [],\n    cardDefinition,\n    cardsPerRow = [],\n    header,\n    filter,\n    pagination,\n    preferences,\n    empty,\n    loading,\n    loadingText,\n    trackBy,\n    selectedItems,\n    selectionType,\n    isItemDisabled,\n    onSelectionChange,\n    ariaLabels,\n    visibleSections,\n    stickyHeader,\n    stickyHeaderVerticalOffset,\n    variant = 'container',\n    renderAriaLive,\n    firstIndex,\n    totalItemsCount,\n    ...rest\n  }: CardsProps<T>,\n  ref: React.Ref<CardsProps.Ref>\n) {\n  const { __internalRootRef } = useBaseComponent('Cards');\n  const baseProps = getBaseProps(rest);\n  const isRefresh = useVisualRefresh();\n  const isMobile = useMobile();\n\n  const computedVariant = isRefresh ? variant : 'container';\n\n  const headerIdRef = useRef<string | undefined>(undefined);\n  const setHeaderRef = useCallback((id: string) => {\n    headerIdRef.current = id;\n  }, []);\n  const isLabelledByHeader = !ariaLabels?.cardsLabel && !!header;\n\n  const [columns, measureRef] = useContainerQuery<number>(\n    ({ contentBoxWidth }) => getCardsPerRow(contentBoxWidth, cardsPerRow),\n    [cardsPerRow]\n  );\n  const refObject = useRef(null);\n  const mergedRef = useMergeRefs(measureRef, refObject, __internalRootRef);\n  const getMouseDownTarget = useMouseDownTarget();\n\n  const i18n = useInternalI18n('cards');\n  const { isItemSelected, getItemSelectionProps, updateShiftToggle } = useSelection({\n    items,\n    trackBy,\n    selectedItems,\n    selectionType,\n    isItemDisabled,\n    onSelectionChange,\n    ariaLabels: {\n      itemSelectionLabel: ariaLabels?.itemSelectionLabel,\n      selectionGroupLabel: i18n('ariaLabels.selectionGroupLabel', ariaLabels?.selectionGroupLabel),\n    },\n  });\n  const hasToolsHeader = header || filter || pagination || preferences;\n  const hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const { scrollToTop, scrollToItem } = stickyScrolling(refObject, headerRef);\n  stickyHeader = supportsStickyPosition() && !isMobile && stickyHeader;\n  const onCardFocus: FocusEventHandler<HTMLElement> = event => {\n    // When an element inside card receives focus we want to adjust the scroll.\n    // However, that behavior is unwanted when the focus is received as result of a click\n    // as it causes the click to never reach the target element.\n    if (stickyHeader && !event.currentTarget.contains(getMouseDownTarget())) {\n      scrollToItem(event.currentTarget);\n    }\n  };\n  useImperativeHandle(\n    ref,\n    () => ({\n      scrollToTop: () => {\n        if (stickyHeader) {\n          scrollToTop();\n        }\n      },\n    }),\n    [stickyHeader, scrollToTop]\n  );\n  let status;\n  if (loading) {\n    status = (\n      <div className={styles.loading}>\n        <InternalStatusIndicator type=\"loading\">\n          <LiveRegion visible={true}>{loadingText}</LiveRegion>\n        </InternalStatusIndicator>\n      </div>\n    );\n  } else if (empty && !items.length) {\n    status = <div className={styles.empty}>{empty}</div>;\n  }\n\n  return (\n    <LinkDefaultVariantContext.Provider value={{ defaultVariant: 'primary' }}>\n      <AnalyticsFunnelSubStep>\n        <div {...baseProps} className={clsx(baseProps.className, styles.root)} ref={mergedRef}>\n          <InternalContainerAsSubstep\n            header={\n              hasToolsHeader && (\n                <div\n                  className={clsx(\n                    styles.header,\n                    isRefresh && styles['header-refresh'],\n                    styles[`header-variant-${computedVariant}`]\n                  )}\n                >\n                  <CollectionLabelContext.Provider value={{ assignId: setHeaderRef }}>\n                    <ToolsHeader header={header} filter={filter} pagination={pagination} preferences={preferences} />\n                  </CollectionLabelContext.Provider>\n                </div>\n              )\n            }\n            footer={hasFooterPagination && <div className={styles['footer-pagination']}>{pagination}</div>}\n            disableContentPaddings={true}\n            disableHeaderPaddings={computedVariant === 'full-page'}\n            variant={computedVariant === 'container' ? 'cards' : computedVariant}\n            __stickyHeader={stickyHeader}\n            __stickyOffset={stickyHeaderVerticalOffset}\n            __headerRef={headerRef}\n            __darkHeader={computedVariant === 'full-page'}\n            __disableFooterDivider={true}\n          >\n            <div className={clsx(hasToolsHeader && styles['has-header'])}>\n              {!!renderAriaLive && !!firstIndex && (\n                <LiveRegion>\n                  <span>\n                    {renderAriaLive({ totalItemsCount, firstIndex, lastIndex: firstIndex + items.length - 1 })}\n                  </span>\n                </LiveRegion>\n              )}\n              {status ?? (\n                <CardsList\n                  items={items}\n                  cardDefinition={cardDefinition}\n                  trackBy={trackBy}\n                  selectionType={selectionType}\n                  columns={columns}\n                  isItemSelected={isItemSelected}\n                  getItemSelectionProps={getItemSelectionProps}\n                  visibleSections={visibleSections}\n                  updateShiftToggle={updateShiftToggle}\n                  onFocus={onCardFocus}\n                  ariaLabel={ariaLabels?.cardsLabel}\n                  ariaLabelledby={isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined}\n                />\n              )}\n            </div>\n          </InternalContainerAsSubstep>\n        </div>\n      </AnalyticsFunnelSubStep>\n    </LinkDefaultVariantContext.Provider>\n  );\n}) as CardsForwardRefType;\n\nexport default Cards;\n\nconst CardsList = <T,>({\n  items,\n  cardDefinition,\n  trackBy,\n  selectionType,\n  columns,\n  isItemSelected,\n  getItemSelectionProps,\n  visibleSections,\n  updateShiftToggle,\n  onFocus,\n  ariaLabelledby,\n  ariaLabel,\n}: Pick<CardsProps<T>, 'items' | 'cardDefinition' | 'trackBy' | 'selectionType' | 'visibleSections'> & {\n  columns: number | null;\n  isItemSelected: (item: T) => boolean;\n  getItemSelectionProps: (item: T) => SelectionControlProps;\n  updateShiftToggle: (state: boolean) => void;\n  onFocus: FocusEventHandler<HTMLElement>;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n}) => {\n  const selectable = !!selectionType;\n\n  const { moveFocusDown, moveFocusUp } = useSelectionFocusMove(selectionType, items.length);\n\n  let visibleSectionsDefinition = cardDefinition.sections || [];\n  visibleSectionsDefinition = visibleSections\n    ? visibleSectionsDefinition.filter(\n        (section: CardsProps.SectionDefinition<T>) => section.id && visibleSections.indexOf(section.id) !== -1\n      )\n    : visibleSectionsDefinition;\n\n  let listRole: 'group' | undefined = undefined;\n  let listItemRole: 'presentation' | undefined = undefined;\n\n  if (selectable) {\n    listRole = 'group';\n    listItemRole = 'presentation';\n  }\n\n  return (\n    <ol\n      className={clsx(styles.list, styles[`list-grid-${columns || 1}`])}\n      role={listRole}\n      aria-labelledby={ariaLabelledby}\n      aria-label={ariaLabel}\n      {...(focusMarkers && focusMarkers.root)}\n    >\n      {items.map((item, index) => (\n        <li\n          className={clsx(styles.card, {\n            [styles['card-selectable']]: selectable,\n            [styles['card-selected']]: selectable && isItemSelected(item),\n          })}\n          key={getItemKey(trackBy, item, index)}\n          onFocus={onFocus}\n          {...(focusMarkers && focusMarkers.item)}\n          role={listItemRole}\n        >\n          <div className={styles['card-inner']}>\n            <div className={styles['card-header']}>\n              <div className={styles['card-header-inner']}>\n                {cardDefinition.header ? cardDefinition.header(item) : ''}\n              </div>\n              {selectable && (\n                <div className={styles['selection-control']}>\n                  <SelectionControl\n                    onFocusDown={moveFocusDown}\n                    onFocusUp={moveFocusUp}\n                    onShiftToggle={updateShiftToggle}\n                    {...getItemSelectionProps(item)}\n                  />\n                </div>\n              )}\n            </div>\n            {visibleSectionsDefinition.map(({ width = 100, header, content, id }, index) => (\n              <div key={id || index} className={styles.section} style={{ width: `${width}%` }}>\n                {header ? <div className={styles['section-header']}>{header}</div> : ''}\n                {content ? <div className={styles['section-content']}>{content(item)}</div> : ''}\n              </div>\n            ))}\n          </div>\n        </li>\n      ))}\n    </ol>\n  );\n};\n\napplyDisplayName(Cards, 'Cards');\n"]},"metadata":{},"sourceType":"module"}