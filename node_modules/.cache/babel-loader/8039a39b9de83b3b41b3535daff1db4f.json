{"ast":null,"code":"import _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect } from 'react';\nimport { fireNonCancelableEvent } from '../../internal/events';\nimport { useControllable } from '../../internal/hooks/use-controllable';\n// Provides controlled or uncontrolled props to filter chart series.\nexport default function useFilterProps(series, controlledVisibleSeries, controlledOnVisibleChange) {\n  var _useControllable = useControllable(controlledVisibleSeries, controlledOnVisibleChange, series, {\n      componentName: 'AreaChart',\n      controlledProp: 'visibleSeries',\n      changeHandler: 'onFilterChange'\n    }),\n    _useControllable2 = _slicedToArray(_useControllable, 2),\n    _useControllable2$ = _useControllable2[0],\n    visibleSeries = _useControllable2$ === void 0 ? [] : _useControllable2$,\n    setVisibleSeriesState = _useControllable2[1];\n  var setVisibleSeries = useCallback(function (selectedSeries) {\n    setVisibleSeriesState(selectedSeries);\n    fireNonCancelableEvent(controlledOnVisibleChange, {\n      visibleSeries: selectedSeries\n    });\n  }, [controlledOnVisibleChange, setVisibleSeriesState]);\n  // Reset filter if series change.\n  useEffect(function () {\n    var newVisibleSeries = visibleSeries.filter(function (s) {\n      return series.indexOf(s) !== -1;\n    });\n    if (newVisibleSeries.length !== visibleSeries.length) {\n      setVisibleSeries(newVisibleSeries);\n    }\n  }, [series, visibleSeries, setVisibleSeries]);\n  return [visibleSeries, setVisibleSeries];\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,SAASA,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC9C,SAASC,sBAAsB,QAAmC,uBAAuB;AACzF,SAASC,eAAe,QAAQ,uCAAuC;AAKvE;AACA,eAAc,SAAUC,cAAc,CACpCC,MAA2C,EAC3CC,uBAA6D,EAC7DC,yBAA2F;EAE3F,uBAAoDJ,eAAe,CACjEG,uBAAuB,EACvBC,yBAAyB,EACzBF,MAAM,EACN;MACEG,aAAa,EAAE,WAAW;MAC1BC,cAAc,EAAE,eAAe;MAC/BC,aAAa,EAAE;KAChB,CACF;IAAA;IAAA;IATMC,aAAa,mCAAG,EAAE;IAAEC,qBAAqB;EAWhD,IAAMC,gBAAgB,GAAGb,WAAW,CAClC,UAACc,cAAmD,EAAI;IACtDF,qBAAqB,CAACE,cAAc,CAAC;IACrCZ,sBAAsB,CAACK,yBAAyB,EAAE;MAAEI,aAAa,EAAEG;IAAc,CAAE,CAAC;EACtF,CAAC,EACD,CAACP,yBAAyB,EAAEK,qBAAqB,CAAC,CACnD;EAED;EACAX,SAAS,CAAC,YAAK;IACb,IAAMc,gBAAgB,GAAGJ,aAAa,CAACK,MAAM,CAAC,WAAC;MAAA,OAAIX,MAAM,CAACY,OAAO,CAACC,CAAC,CAAC,KAAK,CAAC,CAAC;IAAA,EAAC;IAE5E,IAAIH,gBAAgB,CAACI,MAAM,KAAKR,aAAa,CAACQ,MAAM,EAAE;MACpDN,gBAAgB,CAACE,gBAAgB,CAAC;;EAEtC,CAAC,EAAE,CAACV,MAAM,EAAEM,aAAa,EAAEE,gBAAgB,CAAC,CAAC;EAE7C,OAAO,CAACF,aAAa,EAAEE,gBAAgB,CAAC;AAC1C","names":["useCallback","useEffect","fireNonCancelableEvent","useControllable","useFilterProps","series","controlledVisibleSeries","controlledOnVisibleChange","componentName","controlledProp","changeHandler","visibleSeries","setVisibleSeriesState","setVisibleSeries","selectedSeries","newVisibleSeries","filter","indexOf","s","length"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/area-chart/model/lib/default/area-chart/model/use-filter-props.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect } from 'react';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../../internal/events';\nimport { useControllable } from '../../internal/hooks/use-controllable';\nimport { AreaChartProps } from '../interfaces';\n\ntype FilterProps<T> = [readonly AreaChartProps.Series<T>[], (series: readonly AreaChartProps.Series<T>[]) => void];\n\n// Provides controlled or uncontrolled props to filter chart series.\nexport default function useFilterProps<T>(\n  series: readonly AreaChartProps.Series<T>[],\n  controlledVisibleSeries?: readonly AreaChartProps.Series<T>[],\n  controlledOnVisibleChange?: NonCancelableEventHandler<AreaChartProps.FilterChangeDetail<T>>\n): FilterProps<T> {\n  const [visibleSeries = [], setVisibleSeriesState] = useControllable(\n    controlledVisibleSeries,\n    controlledOnVisibleChange,\n    series,\n    {\n      componentName: 'AreaChart',\n      controlledProp: 'visibleSeries',\n      changeHandler: 'onFilterChange',\n    }\n  );\n\n  const setVisibleSeries = useCallback(\n    (selectedSeries: readonly AreaChartProps.Series<T>[]) => {\n      setVisibleSeriesState(selectedSeries);\n      fireNonCancelableEvent(controlledOnVisibleChange, { visibleSeries: selectedSeries });\n    },\n    [controlledOnVisibleChange, setVisibleSeriesState]\n  );\n\n  // Reset filter if series change.\n  useEffect(() => {\n    const newVisibleSeries = visibleSeries.filter(s => series.indexOf(s) !== -1);\n\n    if (newVisibleSeries.length !== visibleSeries.length) {\n      setVisibleSeries(newVisibleSeries);\n    }\n  }, [series, visibleSeries, setVisibleSeries]);\n\n  return [visibleSeries, setVisibleSeries];\n}\n"]},"metadata":{},"sourceType":"module"}