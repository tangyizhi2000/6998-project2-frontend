{"ast":null,"code":"var testIndexMap = new WeakMap();\n//retrieves the test indexes of the option for the findOption and findOptionInGroup test-utils\nexport var getTestOptionIndexes = function getTestOptionIndexes(item) {\n  return testIndexMap.get(item);\n};\nexport var generateTestIndexes = function generateTestIndexes(filteredItems, getParentGroup) {\n  var throughIndex = 1;\n  var groupIndex = 0;\n  var inGroupIndex = 1;\n  var currentGroup = null;\n  filteredItems.forEach(function (item) {\n    if (!('type' in item)) {\n      testIndexMap.set(item, {\n        throughIndex: throughIndex++\n      });\n    } else if (item.type === 'child') {\n      var parentGroup = getParentGroup(item);\n      if (parentGroup && parentGroup !== currentGroup) {\n        currentGroup = parentGroup;\n        inGroupIndex = 1;\n        testIndexMap.set(item, {\n          throughIndex: throughIndex++,\n          groupIndex: ++groupIndex,\n          inGroupIndex: inGroupIndex++\n        });\n      } else {\n        testIndexMap.set(item, {\n          throughIndex: throughIndex++,\n          groupIndex: groupIndex,\n          inGroupIndex: inGroupIndex++\n        });\n      }\n    }\n  });\n};","map":{"version":3,"mappings":"AAUA,IAAMA,YAAY,GAAG,IAAIC,OAAO,EAAyB;AACzD;AACA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAwBC,IAAO;EAAA,OAAKH,YAAY,CAACI,GAAG,CAACD,IAAI,CAAC;AAAA;AAC3F,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAmB,CAC9BC,aAA+B,EAC/BC,cAA8C,EAC5C;EACF,IAAIC,YAAY,GAAG,CAAC;EACpB,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIC,YAAY,GAAG,CAAC;EACpB,IAAIC,YAAY,GAAiB,IAAI;EACrCL,aAAa,CAACM,OAAO,CAAC,cAAI,EAAG;IAC3B,IAAI,EAAE,MAAM,IAAIT,IAAI,CAAC,EAAE;MACrBH,YAAY,CAACa,GAAG,CAACV,IAAI,EAAE;QAAEK,YAAY,EAAEA,YAAY;MAAE,CAAE,CAAC;KACzD,MAAM,IAAIL,IAAI,CAACW,IAAI,KAAK,OAAO,EAAE;MAChC,IAAMC,WAAW,GAAGR,cAAc,CAACJ,IAAI,CAAC;MACxC,IAAIY,WAAW,IAAIA,WAAW,KAAKJ,YAAY,EAAE;QAC/CA,YAAY,GAAGI,WAAW;QAC1BL,YAAY,GAAG,CAAC;QAChBV,YAAY,CAACa,GAAG,CAACV,IAAI,EAAE;UACrBK,YAAY,EAAEA,YAAY,EAAE;UAC5BC,UAAU,EAAE,EAAEA,UAAU;UACxBC,YAAY,EAAEA,YAAY;SAC3B,CAAC;OACH,MAAM;QACLV,YAAY,CAACa,GAAG,CAACV,IAAI,EAAE;UAAEK,YAAY,EAAEA,YAAY,EAAE;UAAEC,UAAU,EAAVA,UAAU;UAAEC,YAAY,EAAEA,YAAY;QAAE,CAAE,CAAC;;;EAGxG,CAAC,CAAC;AACJ,CAAC","names":["testIndexMap","WeakMap","getTestOptionIndexes","item","get","generateTestIndexes","filteredItems","getParentGroup","throughIndex","groupIndex","inGroupIndex","currentGroup","forEach","set","type","parentGroup"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/components/options-list/utils/lib/default/internal/components/options-list/utils/test-indexes.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\ninterface ListItem {\n  type?: string;\n}\ninterface TestIndexes {\n  throughIndex?: number;\n  groupIndex?: number;\n  inGroupIndex?: number;\n}\nconst testIndexMap = new WeakMap<ListItem, TestIndexes>();\n//retrieves the test indexes of the option for the findOption and findOptionInGroup test-utils\nexport const getTestOptionIndexes = <T extends ListItem>(item: T) => testIndexMap.get(item);\nexport const generateTestIndexes = <T extends ListItem, Group extends object>(\n  filteredItems: ReadonlyArray<T>,\n  getParentGroup: (item: T) => Group | undefined\n) => {\n  let throughIndex = 1;\n  let groupIndex = 0;\n  let inGroupIndex = 1;\n  let currentGroup: Group | null = null;\n  filteredItems.forEach(item => {\n    if (!('type' in item)) {\n      testIndexMap.set(item, { throughIndex: throughIndex++ });\n    } else if (item.type === 'child') {\n      const parentGroup = getParentGroup(item);\n      if (parentGroup && parentGroup !== currentGroup) {\n        currentGroup = parentGroup;\n        inGroupIndex = 1;\n        testIndexMap.set(item, {\n          throughIndex: throughIndex++,\n          groupIndex: ++groupIndex,\n          inGroupIndex: inGroupIndex++,\n        });\n      } else {\n        testIndexMap.set(item, { throughIndex: throughIndex++, groupIndex, inGroupIndex: inGroupIndex++ });\n      }\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}