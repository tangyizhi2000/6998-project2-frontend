{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect, useRef } from 'react';\n/**\n * A callback that stays stable between renders even as the dependencies change.\n * Not a recommended React pattern, so it should be used sparingly and only if\n * the callback is used asynchronously (i.e. not used during rendering) and causing\n * clear performance issues.\n *\n * @remarks\n *\n * The implementation ensures the callback cannot be called synchronously. All synchronous calls\n * (during rendering) are ignored.\n *\n * @example\n * Use stable onMouseMove handler\n * ```\n * function Demo({ args }) {\n *   const stableOnMouseMove = useStableCallback((event) => makeAction(event, args))\n *   return <Container onMouseMove={stableOnMouseMove} />\n * }\n * ```\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n *\n * @typeParam Callback The callback to be made stable\n * @returns Stable callback\n */\nexport function useStableCallback(fn) {\n  var ref = useRef();\n  useEffect(function () {\n    ref.current = fn;\n  });\n  return useCallback(function () {\n    var _a;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.apply(undefined, args);\n  }, []);\n}","map":{"version":3,"names":["useCallback","useEffect","useRef","useStableCallback","fn","ref","current","_a","args","_i","arguments","length","apply","undefined"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/component-toolkit/lib/internal/stable-callback/index.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect, useRef } from 'react';\n/**\n * A callback that stays stable between renders even as the dependencies change.\n * Not a recommended React pattern, so it should be used sparingly and only if\n * the callback is used asynchronously (i.e. not used during rendering) and causing\n * clear performance issues.\n *\n * @remarks\n *\n * The implementation ensures the callback cannot be called synchronously. All synchronous calls\n * (during rendering) are ignored.\n *\n * @example\n * Use stable onMouseMove handler\n * ```\n * function Demo({ args }) {\n *   const stableOnMouseMove = useStableCallback((event) => makeAction(event, args))\n *   return <Container onMouseMove={stableOnMouseMove} />\n * }\n * ```\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n *\n * @typeParam Callback The callback to be made stable\n * @returns Stable callback\n */\nexport function useStableCallback(fn) {\n    var ref = useRef();\n    useEffect(function () {\n        ref.current = fn;\n    });\n    return useCallback(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.apply(undefined, args);\n    }, []);\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiB,CAACC,EAAE,EAAE;EAClC,IAAIC,GAAG,GAAGH,MAAM,EAAE;EAClBD,SAAS,CAAC,YAAY;IAClBI,GAAG,CAACC,OAAO,GAAGF,EAAE;EACpB,CAAC,CAAC;EACF,OAAOJ,WAAW,CAAC,YAAY;IAC3B,IAAIO,EAAE;IACN,IAAIC,IAAI,GAAG,EAAE;IACb,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGC,SAAS,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;MAC1CD,IAAI,CAACC,EAAE,CAAC,GAAGC,SAAS,CAACD,EAAE,CAAC;IAC5B;IACA,OAAO,CAACF,EAAE,GAAGF,GAAG,CAACC,OAAO,MAAM,IAAI,IAAIC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACK,KAAK,CAACC,SAAS,EAAEL,IAAI,CAAC;EAC5F,CAAC,EAAE,EAAE,CAAC;AACV"},"metadata":{},"sourceType":"module"}