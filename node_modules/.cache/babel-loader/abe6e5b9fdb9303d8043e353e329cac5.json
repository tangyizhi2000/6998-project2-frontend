{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isDevelopment } from '../../internal/is-development';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nexport function checkOptionValueField(componentName, propertyName, propertyValue) {\n  if (isDevelopment) {\n    if (!propertyValue) {\n      return;\n    }\n    const valuePropertyMissing = !propertyValue.every(element => {\n      return 'options' in element || 'value' in element;\n    });\n    if (valuePropertyMissing) {\n      warnOnce(componentName, `You provided an \\`${propertyName}\\` prop where at least one non-group array element is missing the \\`value\\` field. This field is required for all options without sub-items.`);\n    }\n  }\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,QAAQ,QAAQ,+CAA+C;AAExE,OAAM,SAAUC,qBAAqB,CACnCC,aAAqB,EACrBC,YAAoB,EACpBC,aAAoC;EAEpC,IAAIL,aAAa,EAAE;IACjB,IAAI,CAACK,aAAa,EAAE;MAClB;;IAGF,MAAMC,oBAAoB,GAAG,CAACD,aAAa,CAACE,KAAK,CAACC,OAAO,IAAG;MAC1D,OAAO,SAAS,IAAIA,OAAO,IAAI,OAAO,IAAIA,OAAO;IACnD,CAAC,CAAC;IAEF,IAAIF,oBAAoB,EAAE;MACxBL,QAAQ,CACNE,aAAa,EACb,qBAAqBC,YAAY,8IAA8I,CAChL;;;AAGP","names":["isDevelopment","warnOnce","checkOptionValueField","componentName","propertyName","propertyValue","valuePropertyMissing","every","element"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/select/utils/lib/default/select/utils/check-option-value-field.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isDevelopment } from '../../internal/is-development';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nexport function checkOptionValueField<ValueType extends ReadonlyArray<any>>(\n  componentName: string,\n  propertyName: string,\n  propertyValue: ValueType | undefined\n) {\n  if (isDevelopment) {\n    if (!propertyValue) {\n      return;\n    }\n\n    const valuePropertyMissing = !propertyValue.every(element => {\n      return 'options' in element || 'value' in element;\n    });\n\n    if (valuePropertyMissing) {\n      warnOnce(\n        componentName,\n        `You provided an \\`${propertyName}\\` prop where at least one non-group array element is missing the \\`value\\` field. This field is required for all options without sub-items.`\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}