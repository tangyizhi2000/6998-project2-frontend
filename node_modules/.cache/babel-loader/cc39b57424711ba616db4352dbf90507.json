{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useRef } from 'react';\nimport InternalSelect from '../select/internal';\nimport InternalAutosuggest from '../autosuggest/internal';\nimport InternalPopover from '../popover/internal';\nimport styles from './styles.css.js';\nimport { useLoadItems } from './use-load-items';\nimport { createPropertiesCompatibilityMap, getAllowedOperators, operatorToDescription, getPropertySuggestions } from './controller';\nimport InternalButton from '../button/internal';\nimport InternalFormField from '../form-field/internal';\nimport { matchTokenValue } from './utils';\nconst freeTextOperators = [':', '!:'];\nfunction PropertyInput(_ref) {\n  let {\n    property,\n    onChangePropertyKey,\n    asyncProps,\n    filteringProperties,\n    onLoadItems,\n    customGroupsText,\n    i18nStrings,\n    disableFreeTextFiltering\n  } = _ref;\n  var _a;\n  const propertySelectHandlers = useLoadItems(onLoadItems);\n  const asyncPropertySelectProps = asyncProps ? Object.assign(Object.assign({}, asyncProps), propertySelectHandlers) : {};\n  const propertyOptions = getPropertySuggestions(filteringProperties, customGroupsText, i18nStrings, _ref2 => {\n    let {\n      propertyKey,\n      propertyLabel\n    } = _ref2;\n    return {\n      value: propertyKey,\n      label: propertyLabel,\n      dontCloseOnSelect: true\n    };\n  });\n  // Disallow selecting properties that have different representation.\n  const checkPropertiesCompatible = createPropertiesCompatibilityMap(filteringProperties);\n  propertyOptions.forEach(optionGroup => {\n    if ('options' in optionGroup) {\n      optionGroup.options.forEach(option => {\n        if ((property === null || property === void 0 ? void 0 : property.propertyKey) && option.value) {\n          option.disabled = !checkPropertiesCompatible(option.value, property.propertyKey);\n        }\n      });\n    }\n  });\n  const allPropertiesOption = {\n    label: i18nStrings.allPropertiesLabel,\n    value: undefined\n  };\n  if (!disableFreeTextFiltering) {\n    propertyOptions.unshift(allPropertiesOption);\n  }\n  return React.createElement(InternalSelect, Object.assign({\n    options: propertyOptions,\n    selectedOption: property ? {\n      value: (_a = property.propertyKey) !== null && _a !== void 0 ? _a : undefined,\n      label: property.propertyLabel\n    } : allPropertiesOption,\n    onChange: e => onChangePropertyKey(e.detail.selectedOption.value)\n  }, asyncPropertySelectProps));\n}\nfunction OperatorInput(_ref3) {\n  let {\n    property,\n    operator,\n    onChangeOperator,\n    i18nStrings\n  } = _ref3;\n  const freeTextOperators = [':', '!:'];\n  const operatorOptions = (property ? getAllowedOperators(property) : freeTextOperators).map(operator => ({\n    value: operator,\n    label: operator,\n    description: operatorToDescription(operator, i18nStrings)\n  }));\n  return React.createElement(InternalSelect, {\n    options: operatorOptions,\n    triggerVariant: \"option\",\n    selectedOption: operator ? {\n      value: operator,\n      label: operator,\n      description: operatorToDescription(operator, i18nStrings)\n    } : null,\n    onChange: e => onChangeOperator(e.detail.selectedOption.value)\n  });\n}\nfunction ValueInput(_ref4) {\n  let {\n    property,\n    operator,\n    value,\n    onChangeValue,\n    asyncProps,\n    filteringOptions,\n    onLoadItems,\n    i18nStrings\n  } = _ref4;\n  var _a, _b, _c;\n  const valueOptions = property ? filteringOptions.filter(option => option.property === property).map(_ref5 => {\n    let {\n      label,\n      value\n    } = _ref5;\n    return {\n      label,\n      value\n    };\n  }) : [];\n  const valueAutosuggestHandlers = useLoadItems(onLoadItems, '', property === null || property === void 0 ? void 0 : property.externalProperty);\n  const asyncValueAutosuggestProps = (property === null || property === void 0 ? void 0 : property.propertyKey) ? Object.assign(Object.assign({}, valueAutosuggestHandlers), asyncProps) : {\n    empty: asyncProps.empty\n  };\n  const [matchedOption] = valueOptions.filter(option => option.value === value);\n  const OperatorForm = (property === null || property === void 0 ? void 0 : property.propertyKey) && operator && (property === null || property === void 0 ? void 0 : property.getValueFormRenderer(operator));\n  return OperatorForm ? React.createElement(OperatorForm, {\n    value: value,\n    onChange: onChangeValue,\n    operator: operator\n  }) : React.createElement(InternalAutosuggest, Object.assign({\n    enteredTextLabel: (_a = i18nStrings.enteredTextLabel) !== null && _a !== void 0 ? _a : value => value,\n    value: (_c = (_b = matchedOption === null || matchedOption === void 0 ? void 0 : matchedOption.label) !== null && _b !== void 0 ? _b : value) !== null && _c !== void 0 ? _c : '',\n    clearAriaLabel: i18nStrings.clearAriaLabel,\n    onChange: e => onChangeValue(e.detail.value),\n    disabled: !operator,\n    options: valueOptions\n  }, asyncValueAutosuggestProps, {\n    virtualScroll: true\n  }));\n}\nexport function TokenEditor(_ref6) {\n  let {\n    asyncProperties,\n    asyncProps,\n    customGroupsText,\n    disableFreeTextFiltering,\n    expandToViewport,\n    filteringProperties,\n    filteringOptions,\n    i18nStrings,\n    onLoadItems,\n    setToken,\n    token,\n    triggerComponent\n  } = _ref6;\n  const [temporaryToken, setTemporaryToken] = useState(token);\n  const popoverRef = useRef(null);\n  const closePopover = () => {\n    popoverRef.current && popoverRef.current.dismissPopover();\n  };\n  const property = temporaryToken.property;\n  const onChangePropertyKey = newPropertyKey => {\n    var _a;\n    const filteringProperty = filteringProperties.reduce((acc, property) => property.propertyKey === newPropertyKey ? property : acc, undefined);\n    const allowedOperators = filteringProperty ? getAllowedOperators(filteringProperty) : freeTextOperators;\n    const operator = temporaryToken.operator && allowedOperators.indexOf(temporaryToken.operator) !== -1 ? temporaryToken.operator : allowedOperators[0];\n    const matchedProperty = (_a = filteringProperties.find(property => property.propertyKey === newPropertyKey)) !== null && _a !== void 0 ? _a : null;\n    setTemporaryToken(Object.assign(Object.assign({}, temporaryToken), {\n      property: matchedProperty,\n      operator\n    }));\n  };\n  const operator = temporaryToken.operator;\n  const onChangeOperator = newOperator => {\n    setTemporaryToken(Object.assign(Object.assign({}, temporaryToken), {\n      operator: newOperator\n    }));\n  };\n  const value = temporaryToken.value;\n  const onChangeValue = newValue => {\n    setTemporaryToken(Object.assign(Object.assign({}, temporaryToken), {\n      value: newValue\n    }));\n  };\n  return React.createElement(InternalPopover, {\n    ref: popoverRef,\n    className: styles['token-label'],\n    triggerType: \"text\",\n    header: i18nStrings.editTokenHeader,\n    size: \"large\",\n    position: \"right\",\n    dismissAriaLabel: i18nStrings.dismissAriaLabel,\n    __onOpen: () => setTemporaryToken(token),\n    renderWithPortal: expandToViewport,\n    content: React.createElement(\"div\", {\n      className: styles['token-editor']\n    }, React.createElement(\"div\", {\n      className: styles['token-editor-form']\n    }, React.createElement(InternalFormField, {\n      label: i18nStrings.propertyText,\n      className: styles['token-editor-field-property']\n    }, React.createElement(PropertyInput, {\n      property: property,\n      onChangePropertyKey: onChangePropertyKey,\n      asyncProps: asyncProperties ? asyncProps : null,\n      filteringProperties: filteringProperties,\n      onLoadItems: onLoadItems,\n      customGroupsText: customGroupsText,\n      i18nStrings: i18nStrings,\n      disableFreeTextFiltering: disableFreeTextFiltering\n    })), React.createElement(InternalFormField, {\n      label: i18nStrings.operatorText,\n      className: styles['token-editor-field-operator']\n    }, React.createElement(OperatorInput, {\n      property: property,\n      operator: operator,\n      onChangeOperator: onChangeOperator,\n      i18nStrings: i18nStrings\n    })), React.createElement(InternalFormField, {\n      label: i18nStrings.valueText,\n      className: styles['token-editor-field-value']\n    }, React.createElement(ValueInput, {\n      property: property,\n      operator: operator,\n      value: value,\n      onChangeValue: onChangeValue,\n      asyncProps: asyncProps,\n      filteringOptions: filteringOptions,\n      onLoadItems: onLoadItems,\n      i18nStrings: i18nStrings\n    }))), React.createElement(\"div\", {\n      className: styles['token-editor-actions']\n    }, React.createElement(InternalButton, {\n      formAction: \"none\",\n      variant: \"link\",\n      className: styles['token-editor-cancel'],\n      onClick: closePopover\n    }, i18nStrings.cancelActionText), React.createElement(InternalButton, {\n      className: styles['token-editor-submit'],\n      formAction: \"none\",\n      onClick: () => {\n        setToken(matchTokenValue(temporaryToken, filteringOptions));\n        closePopover();\n      }\n    }, i18nStrings.applyActionText)))\n  }, triggerComponent);\n}","map":{"version":3,"mappings":"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","names":["React","useState","useRef","InternalSelect","InternalAutosuggest","InternalPopover","styles","useLoadItems","createPropertiesCompatibilityMap","getAllowedOperators","operatorToDescription","getPropertySuggestions","InternalButton","InternalFormField","matchTokenValue","freeTextOperators","PropertyInput","property","onChangePropertyKey","asyncProps","filteringProperties","onLoadItems","customGroupsText","i18nStrings","disableFreeTextFiltering","propertySelectHandlers","asyncPropertySelectProps","Object","propertyOptions","propertyKey","propertyLabel","value","label","dontCloseOnSelect","checkPropertiesCompatible","forEach","optionGroup","options","option","disabled","allPropertiesOption","allPropertiesLabel","undefined","unshift","selectedOption","onChange","e","detail","OperatorInput","operator","onChangeOperator","operatorOptions","map","description","triggerVariant","ValueInput","onChangeValue","filteringOptions","valueOptions","filter","valueAutosuggestHandlers","externalProperty","asyncValueAutosuggestProps","empty","matchedOption","OperatorForm","getValueFormRenderer","enteredTextLabel","clearAriaLabel","virtualScroll","TokenEditor","asyncProperties","expandToViewport","setToken","token","triggerComponent","temporaryToken","setTemporaryToken","popoverRef","closePopover","current","dismissPopover","newPropertyKey","filteringProperty","reduce","acc","allowedOperators","indexOf","matchedProperty","find","newOperator","newValue","ref","className","triggerType","header","editTokenHeader","size","position","dismissAriaLabel","__onOpen","renderWithPortal","content","propertyText","operatorText","valueText","formAction","variant","onClick","cancelActionText","applyActionText"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/property-filter/lib/default/property-filter/token-editor.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useRef } from 'react';\n\nimport { SelectProps } from '../select/interfaces';\nimport InternalSelect from '../select/internal';\nimport InternalAutosuggest from '../autosuggest/internal';\nimport InternalPopover, { InternalPopoverRef } from '../popover/internal';\nimport {\n  ComparisonOperator,\n  GroupText,\n  I18nStrings,\n  InternalFilteringOption,\n  InternalFilteringProperty,\n  InternalToken,\n  LoadItemsDetail,\n  Token,\n} from './interfaces';\nimport styles from './styles.css.js';\nimport { useLoadItems } from './use-load-items';\nimport {\n  createPropertiesCompatibilityMap,\n  getAllowedOperators,\n  operatorToDescription,\n  getPropertySuggestions,\n} from './controller';\nimport { NonCancelableEventHandler } from '../internal/events';\nimport { DropdownStatusProps } from '../internal/components/dropdown-status/interfaces';\nimport InternalButton from '../button/internal';\nimport InternalFormField from '../form-field/internal';\nimport { matchTokenValue } from './utils';\n\nconst freeTextOperators: ComparisonOperator[] = [':', '!:'];\n\ninterface PropertyInputProps {\n  asyncProps: null | DropdownStatusProps;\n  customGroupsText: readonly GroupText[];\n  disableFreeTextFiltering?: boolean;\n  filteringProperties: readonly InternalFilteringProperty[];\n  i18nStrings: I18nStrings;\n  onChangePropertyKey: (propertyKey: undefined | string) => void;\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;\n  property: null | InternalFilteringProperty;\n}\n\nfunction PropertyInput({\n  property,\n  onChangePropertyKey,\n  asyncProps,\n  filteringProperties,\n  onLoadItems,\n  customGroupsText,\n  i18nStrings,\n  disableFreeTextFiltering,\n}: PropertyInputProps) {\n  const propertySelectHandlers = useLoadItems(onLoadItems);\n  const asyncPropertySelectProps = asyncProps ? { ...asyncProps, ...propertySelectHandlers } : {};\n  const propertyOptions: (SelectProps.Option | SelectProps.OptionGroup)[] = getPropertySuggestions(\n    filteringProperties,\n    customGroupsText,\n    i18nStrings,\n    ({ propertyKey, propertyLabel }) => ({\n      value: propertyKey,\n      label: propertyLabel,\n      dontCloseOnSelect: true,\n    })\n  );\n\n  // Disallow selecting properties that have different representation.\n  const checkPropertiesCompatible = createPropertiesCompatibilityMap(filteringProperties);\n  propertyOptions.forEach(optionGroup => {\n    if ('options' in optionGroup) {\n      optionGroup.options.forEach(option => {\n        if (property?.propertyKey && option.value) {\n          option.disabled = !checkPropertiesCompatible(option.value, property.propertyKey);\n        }\n      });\n    }\n  });\n\n  const allPropertiesOption = {\n    label: i18nStrings.allPropertiesLabel,\n    value: undefined,\n  };\n  if (!disableFreeTextFiltering) {\n    propertyOptions.unshift(allPropertiesOption);\n  }\n  return (\n    <InternalSelect\n      options={propertyOptions}\n      selectedOption={\n        property\n          ? {\n              value: property.propertyKey ?? undefined,\n              label: property.propertyLabel,\n            }\n          : allPropertiesOption\n      }\n      onChange={e => onChangePropertyKey(e.detail.selectedOption.value)}\n      {...asyncPropertySelectProps}\n    />\n  );\n}\n\ninterface OperatorInputProps {\n  i18nStrings: I18nStrings;\n  onChangeOperator: (operator: ComparisonOperator) => void;\n  operator: undefined | ComparisonOperator;\n  property: null | InternalFilteringProperty;\n}\n\nfunction OperatorInput({ property, operator, onChangeOperator, i18nStrings }: OperatorInputProps) {\n  const freeTextOperators: ComparisonOperator[] = [':', '!:'];\n  const operatorOptions = (property ? getAllowedOperators(property) : freeTextOperators).map(operator => ({\n    value: operator,\n    label: operator,\n    description: operatorToDescription(operator, i18nStrings),\n  }));\n  return (\n    <InternalSelect\n      options={operatorOptions}\n      triggerVariant=\"option\"\n      selectedOption={\n        operator\n          ? {\n              value: operator,\n              label: operator,\n              description: operatorToDescription(operator, i18nStrings),\n            }\n          : null\n      }\n      onChange={e => onChangeOperator(e.detail.selectedOption.value as ComparisonOperator)}\n    />\n  );\n}\n\ninterface ValueInputProps {\n  asyncProps: DropdownStatusProps;\n  filteringOptions: readonly InternalFilteringOption[];\n  i18nStrings: I18nStrings;\n  onChangeValue: (value: string) => void;\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;\n  operator: undefined | ComparisonOperator;\n  property: null | InternalFilteringProperty;\n  value: undefined | string;\n}\n\nfunction ValueInput({\n  property,\n  operator,\n  value,\n  onChangeValue,\n  asyncProps,\n  filteringOptions,\n  onLoadItems,\n  i18nStrings,\n}: ValueInputProps) {\n  const valueOptions = property\n    ? filteringOptions\n        .filter(option => option.property === property)\n        .map(({ label, value }) => ({\n          label,\n          value,\n        }))\n    : [];\n  const valueAutosuggestHandlers = useLoadItems(onLoadItems, '', property?.externalProperty);\n  const asyncValueAutosuggestProps = property?.propertyKey\n    ? { ...valueAutosuggestHandlers, ...asyncProps }\n    : { empty: asyncProps.empty };\n  const [matchedOption] = valueOptions.filter(option => option.value === value);\n\n  const OperatorForm = property?.propertyKey && operator && property?.getValueFormRenderer(operator);\n\n  return OperatorForm ? (\n    <OperatorForm value={value} onChange={onChangeValue} operator={operator} />\n  ) : (\n    <InternalAutosuggest\n      enteredTextLabel={i18nStrings.enteredTextLabel ?? (value => value)}\n      value={matchedOption?.label ?? value ?? ''}\n      clearAriaLabel={i18nStrings.clearAriaLabel}\n      onChange={e => onChangeValue(e.detail.value)}\n      disabled={!operator}\n      options={valueOptions}\n      {...asyncValueAutosuggestProps}\n      virtualScroll={true}\n    />\n  );\n}\n\ninterface TokenEditorProps {\n  asyncProperties?: boolean;\n  asyncProps: DropdownStatusProps;\n  customGroupsText: readonly GroupText[];\n  disabled?: boolean;\n  disableFreeTextFiltering?: boolean;\n  expandToViewport?: boolean;\n  filteringProperties: readonly InternalFilteringProperty[];\n  filteringOptions: readonly InternalFilteringOption[];\n  i18nStrings: I18nStrings;\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;\n  setToken: (newToken: Token) => void;\n  token: InternalToken;\n  triggerComponent?: React.ReactNode;\n}\n\nexport function TokenEditor({\n  asyncProperties,\n  asyncProps,\n  customGroupsText,\n  disableFreeTextFiltering,\n  expandToViewport,\n  filteringProperties,\n  filteringOptions,\n  i18nStrings,\n  onLoadItems,\n  setToken,\n  token,\n  triggerComponent,\n}: TokenEditorProps) {\n  const [temporaryToken, setTemporaryToken] = useState<InternalToken>(token);\n  const popoverRef = useRef<InternalPopoverRef>(null);\n  const closePopover = () => {\n    popoverRef.current && popoverRef.current.dismissPopover();\n  };\n\n  const property = temporaryToken.property;\n  const onChangePropertyKey = (newPropertyKey: undefined | string) => {\n    const filteringProperty = filteringProperties.reduce<InternalFilteringProperty | undefined>(\n      (acc, property) => (property.propertyKey === newPropertyKey ? property : acc),\n      undefined\n    );\n    const allowedOperators = filteringProperty ? getAllowedOperators(filteringProperty) : freeTextOperators;\n    const operator =\n      temporaryToken.operator && allowedOperators.indexOf(temporaryToken.operator) !== -1\n        ? temporaryToken.operator\n        : allowedOperators[0];\n    const matchedProperty = filteringProperties.find(property => property.propertyKey === newPropertyKey) ?? null;\n    setTemporaryToken({ ...temporaryToken, property: matchedProperty, operator });\n  };\n\n  const operator = temporaryToken.operator;\n  const onChangeOperator = (newOperator: ComparisonOperator) => {\n    setTemporaryToken({ ...temporaryToken, operator: newOperator });\n  };\n\n  const value = temporaryToken.value;\n  const onChangeValue = (newValue: string) => {\n    setTemporaryToken({ ...temporaryToken, value: newValue });\n  };\n\n  return (\n    <InternalPopover\n      ref={popoverRef}\n      className={styles['token-label']}\n      triggerType=\"text\"\n      header={i18nStrings.editTokenHeader}\n      size=\"large\"\n      position=\"right\"\n      dismissAriaLabel={i18nStrings.dismissAriaLabel}\n      __onOpen={() => setTemporaryToken(token)}\n      renderWithPortal={expandToViewport}\n      content={\n        <div className={styles['token-editor']}>\n          <div className={styles['token-editor-form']}>\n            <InternalFormField label={i18nStrings.propertyText} className={styles['token-editor-field-property']}>\n              <PropertyInput\n                property={property}\n                onChangePropertyKey={onChangePropertyKey}\n                asyncProps={asyncProperties ? asyncProps : null}\n                filteringProperties={filteringProperties}\n                onLoadItems={onLoadItems}\n                customGroupsText={customGroupsText}\n                i18nStrings={i18nStrings}\n                disableFreeTextFiltering={disableFreeTextFiltering}\n              />\n            </InternalFormField>\n\n            <InternalFormField label={i18nStrings.operatorText} className={styles['token-editor-field-operator']}>\n              <OperatorInput\n                property={property}\n                operator={operator}\n                onChangeOperator={onChangeOperator}\n                i18nStrings={i18nStrings}\n              />\n            </InternalFormField>\n\n            <InternalFormField label={i18nStrings.valueText} className={styles['token-editor-field-value']}>\n              <ValueInput\n                property={property}\n                operator={operator}\n                value={value}\n                onChangeValue={onChangeValue}\n                asyncProps={asyncProps}\n                filteringOptions={filteringOptions}\n                onLoadItems={onLoadItems}\n                i18nStrings={i18nStrings}\n              />\n            </InternalFormField>\n          </div>\n\n          <div className={styles['token-editor-actions']}>\n            <InternalButton\n              formAction=\"none\"\n              variant=\"link\"\n              className={styles['token-editor-cancel']}\n              onClick={closePopover}\n            >\n              {i18nStrings.cancelActionText}\n            </InternalButton>\n            <InternalButton\n              className={styles['token-editor-submit']}\n              formAction=\"none\"\n              onClick={() => {\n                setToken(matchTokenValue(temporaryToken, filteringOptions));\n                closePopover();\n              }}\n            >\n              {i18nStrings.applyActionText}\n            </InternalButton>\n          </div>\n        </div>\n      }\n    >\n      {triggerComponent}\n    </InternalPopover>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}