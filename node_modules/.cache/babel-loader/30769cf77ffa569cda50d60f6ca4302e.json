{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useEffect, useRef } from 'react';\nimport { fireCancelableEvent, isPlainLeftClick } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport styles from './styles.css.js';\nimport { LeftIcon, RightIcon } from './icon-helper';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport LiveRegion from '../internal/components/live-region';\nimport { useButtonContext } from '../internal/context/button-context';\nimport { useFunnel, useFunnelStep, useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { DATA_ATTR_FUNNEL_VALUE, getFunnelValueSelector, getNameFromSelector, getSubStepAllSelector } from '../internal/analytics/selectors';\nimport { FunnelMetrics } from '../internal/analytics';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nexport const InternalButton = React.forwardRef((_a, ref) => {\n  var {\n      children,\n      iconName,\n      __iconClass,\n      onClick,\n      onFollow,\n      iconAlign = 'left',\n      iconUrl,\n      iconSvg,\n      iconAlt,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      wrapText = true,\n      href,\n      target,\n      rel,\n      download,\n      formAction = 'submit',\n      ariaLabel,\n      ariaDescribedby,\n      ariaExpanded,\n      fullWidth,\n      badge,\n      __nativeAttributes,\n      __internalRootRef = null,\n      __activated = false\n    } = _a,\n    props = __rest(_a, [\"children\", \"iconName\", \"__iconClass\", \"onClick\", \"onFollow\", \"iconAlign\", \"iconUrl\", \"iconSvg\", \"iconAlt\", \"variant\", \"loading\", \"loadingText\", \"disabled\", \"wrapText\", \"href\", \"target\", \"rel\", \"download\", \"formAction\", \"ariaLabel\", \"ariaDescribedby\", \"ariaExpanded\", \"fullWidth\", \"badge\", \"__nativeAttributes\", \"__internalRootRef\", \"__activated\"]);\n  checkSafeUrl('Button', href);\n  const isAnchor = Boolean(href);\n  const isNotInteractive = loading || disabled;\n  const shouldHaveContent = children && ['icon', 'inline-icon', 'flashbar-icon', 'modal-dismiss'].indexOf(variant) === -1;\n  const buttonRef = useRef(null);\n  useForwardFocus(ref, buttonRef);\n  const buttonContext = useButtonContext();\n  const uniqueId = useUniqueId('button');\n  const {\n    funnelInteractionId\n  } = useFunnel();\n  const {\n    stepNumber,\n    stepNameSelector\n  } = useFunnelStep();\n  const {\n    subStepSelector,\n    subStepNameSelector\n  } = useFunnelSubStep();\n  const handleClick = event => {\n    if (isNotInteractive) {\n      return event.preventDefault();\n    }\n    if (isAnchor && isPlainLeftClick(event)) {\n      fireCancelableEvent(onFollow, {\n        href,\n        target\n      }, event);\n      if ((iconName === 'external' || target === '_blank') && funnelInteractionId) {\n        const stepName = getNameFromSelector(stepNameSelector);\n        const subStepName = getNameFromSelector(subStepNameSelector);\n        FunnelMetrics.externalLinkInteracted({\n          funnelInteractionId,\n          stepNumber,\n          stepName,\n          stepNameSelector,\n          subStepSelector,\n          subStepName,\n          subStepNameSelector,\n          elementSelector: getFunnelValueSelector(uniqueId),\n          subStepAllSelector: getSubStepAllSelector()\n        });\n      }\n    }\n    const {\n      altKey,\n      button,\n      ctrlKey,\n      metaKey,\n      shiftKey\n    } = event;\n    fireCancelableEvent(onClick, {\n      altKey,\n      button,\n      ctrlKey,\n      metaKey,\n      shiftKey\n    }, event);\n    buttonContext.onClick({\n      variant\n    });\n  };\n  const buttonClass = clsx(props.className, styles.button, styles[`variant-${variant}`], {\n    [styles.disabled]: isNotInteractive,\n    [styles['button-no-wrap']]: !wrapText,\n    [styles['button-no-text']]: !shouldHaveContent,\n    [styles['is-activated']]: __activated,\n    [styles['full-width']]: shouldHaveContent && fullWidth\n  });\n  const buttonProps = Object.assign(Object.assign(Object.assign({}, props), __nativeAttributes), {\n    // https://github.com/microsoft/TypeScript/issues/36659\n    ref: useMergeRefs(buttonRef, __internalRootRef),\n    'aria-label': ariaLabel,\n    'aria-describedby': ariaDescribedby,\n    'aria-expanded': ariaExpanded,\n    // add ariaLabel as `title` as visible hint text\n    title: ariaLabel,\n    className: buttonClass,\n    onClick: handleClick,\n    [DATA_ATTR_FUNNEL_VALUE]: uniqueId\n  });\n  const iconProps = {\n    loading,\n    iconName,\n    iconAlign,\n    iconUrl,\n    iconSvg,\n    iconAlt,\n    variant,\n    badge,\n    iconClass: __iconClass,\n    iconSize: variant === 'modal-dismiss' ? 'medium' : 'normal'\n  };\n  const buttonContent = React.createElement(React.Fragment, null, React.createElement(LeftIcon, Object.assign({}, iconProps)), shouldHaveContent && React.createElement(\"span\", {\n    className: styles.content\n  }, children), React.createElement(RightIcon, Object.assign({}, iconProps)));\n  const {\n    loadingButtonCount\n  } = useFunnel();\n  useEffect(() => {\n    if (loading) {\n      loadingButtonCount.current++;\n      return () => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        loadingButtonCount.current--;\n      };\n    }\n  }, [loading, loadingButtonCount]);\n  if (isAnchor) {\n    return (\n      // https://github.com/yannickcr/eslint-plugin-react/issues/2962\n      // eslint-disable-next-line react/jsx-no-target-blank\n      React.createElement(React.Fragment, null, React.createElement(\"a\", Object.assign({}, buttonProps, {\n        href: href,\n        target: target,\n        // security recommendation: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target\n        rel: rel !== null && rel !== void 0 ? rel : target === '_blank' ? 'noopener noreferrer' : undefined,\n        tabIndex: isNotInteractive ? -1 : undefined,\n        \"aria-disabled\": isNotInteractive ? true : undefined,\n        download: download\n      }), buttonContent), loading && loadingText && React.createElement(LiveRegion, null, loadingText))\n    );\n  }\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", Object.assign({}, buttonProps, {\n    type: formAction === 'none' ? 'button' : 'submit',\n    disabled: disabled,\n    \"aria-disabled\": loading && !disabled ? true : undefined\n  }), buttonContent), loading && loadingText && React.createElement(LiveRegion, null, loadingText));\n});\nexport default InternalButton;","map":{"version":3,"mappings":"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","names":["clsx","React","useEffect","useRef","fireCancelableEvent","isPlainLeftClick","useForwardFocus","styles","LeftIcon","RightIcon","checkSafeUrl","useMergeRefs","LiveRegion","useButtonContext","useFunnel","useFunnelStep","useFunnelSubStep","DATA_ATTR_FUNNEL_VALUE","getFunnelValueSelector","getNameFromSelector","getSubStepAllSelector","FunnelMetrics","useUniqueId","InternalButton","forwardRef","_a","ref","children","iconName","__iconClass","onClick","onFollow","iconAlign","iconUrl","iconSvg","iconAlt","variant","loading","loadingText","disabled","wrapText","href","target","rel","download","formAction","ariaLabel","ariaDescribedby","ariaExpanded","fullWidth","badge","__nativeAttributes","__internalRootRef","__activated","props","isAnchor","Boolean","isNotInteractive","shouldHaveContent","indexOf","buttonRef","buttonContext","uniqueId","funnelInteractionId","stepNumber","stepNameSelector","subStepSelector","subStepNameSelector","handleClick","event","preventDefault","stepName","subStepName","externalLinkInteracted","elementSelector","subStepAllSelector","altKey","button","ctrlKey","metaKey","shiftKey","buttonClass","className","buttonProps","Object","title","iconProps","iconClass","iconSize","buttonContent","content","loadingButtonCount","current","undefined","tabIndex","type"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/button/lib/default/button/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useEffect, useRef } from 'react';\nimport { fireCancelableEvent, isPlainLeftClick } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport styles from './styles.css.js';\nimport { ButtonIconProps, LeftIcon, RightIcon } from './icon-helper';\nimport { ButtonProps } from './interfaces';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport LiveRegion from '../internal/components/live-region';\nimport { useButtonContext } from '../internal/context/button-context';\nimport { useFunnel, useFunnelStep, useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport {\n  DATA_ATTR_FUNNEL_VALUE,\n  getFunnelValueSelector,\n  getNameFromSelector,\n  getSubStepAllSelector,\n} from '../internal/analytics/selectors';\nimport { FunnelMetrics } from '../internal/analytics';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\n\nexport type InternalButtonProps = Omit<ButtonProps, 'variant'> & {\n  variant?: ButtonProps['variant'] | 'flashbar-icon' | 'breadcrumb-group' | 'menu-trigger' | 'modal-dismiss';\n  badge?: boolean;\n  __nativeAttributes?: Record<string, any>;\n  __iconClass?: string;\n  __activated?: boolean;\n} & InternalBaseComponentProps;\n\nexport const InternalButton = React.forwardRef(\n  (\n    {\n      children,\n      iconName,\n      __iconClass,\n      onClick,\n      onFollow,\n      iconAlign = 'left',\n      iconUrl,\n      iconSvg,\n      iconAlt,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      wrapText = true,\n      href,\n      target,\n      rel,\n      download,\n      formAction = 'submit',\n      ariaLabel,\n      ariaDescribedby,\n      ariaExpanded,\n      fullWidth,\n      badge,\n      __nativeAttributes,\n      __internalRootRef = null,\n      __activated = false,\n      ...props\n    }: InternalButtonProps,\n    ref: React.Ref<ButtonProps.Ref>\n  ) => {\n    checkSafeUrl('Button', href);\n    const isAnchor = Boolean(href);\n    const isNotInteractive = loading || disabled;\n    const shouldHaveContent =\n      children && ['icon', 'inline-icon', 'flashbar-icon', 'modal-dismiss'].indexOf(variant) === -1;\n\n    const buttonRef = useRef<HTMLElement>(null);\n    useForwardFocus(ref, buttonRef);\n\n    const buttonContext = useButtonContext();\n\n    const uniqueId = useUniqueId('button');\n    const { funnelInteractionId } = useFunnel();\n    const { stepNumber, stepNameSelector } = useFunnelStep();\n    const { subStepSelector, subStepNameSelector } = useFunnelSubStep();\n\n    const handleClick = (event: React.MouseEvent) => {\n      if (isNotInteractive) {\n        return event.preventDefault();\n      }\n\n      if (isAnchor && isPlainLeftClick(event)) {\n        fireCancelableEvent(onFollow, { href, target }, event);\n\n        if ((iconName === 'external' || target === '_blank') && funnelInteractionId) {\n          const stepName = getNameFromSelector(stepNameSelector);\n          const subStepName = getNameFromSelector(subStepNameSelector);\n\n          FunnelMetrics.externalLinkInteracted({\n            funnelInteractionId,\n            stepNumber,\n            stepName,\n            stepNameSelector,\n            subStepSelector,\n            subStepName,\n            subStepNameSelector,\n            elementSelector: getFunnelValueSelector(uniqueId),\n            subStepAllSelector: getSubStepAllSelector(),\n          });\n        }\n      }\n\n      const { altKey, button, ctrlKey, metaKey, shiftKey } = event;\n      fireCancelableEvent(onClick, { altKey, button, ctrlKey, metaKey, shiftKey }, event);\n      buttonContext.onClick({ variant });\n    };\n\n    const buttonClass = clsx(props.className, styles.button, styles[`variant-${variant}`], {\n      [styles.disabled]: isNotInteractive,\n      [styles['button-no-wrap']]: !wrapText,\n      [styles['button-no-text']]: !shouldHaveContent,\n      [styles['is-activated']]: __activated,\n      [styles['full-width']]: shouldHaveContent && fullWidth,\n    });\n\n    const buttonProps = {\n      ...props,\n      ...__nativeAttributes,\n      // https://github.com/microsoft/TypeScript/issues/36659\n      ref: useMergeRefs(buttonRef as any, __internalRootRef),\n      'aria-label': ariaLabel,\n      'aria-describedby': ariaDescribedby,\n      'aria-expanded': ariaExpanded,\n      // add ariaLabel as `title` as visible hint text\n      title: ariaLabel,\n      className: buttonClass,\n      onClick: handleClick,\n      [DATA_ATTR_FUNNEL_VALUE]: uniqueId,\n    } as const;\n    const iconProps: ButtonIconProps = {\n      loading,\n      iconName,\n      iconAlign,\n      iconUrl,\n      iconSvg,\n      iconAlt,\n      variant,\n      badge,\n      iconClass: __iconClass,\n      iconSize: variant === 'modal-dismiss' ? 'medium' : 'normal',\n    };\n    const buttonContent = (\n      <>\n        <LeftIcon {...iconProps} />\n        {shouldHaveContent && <span className={styles.content}>{children}</span>}\n        <RightIcon {...iconProps} />\n      </>\n    );\n\n    const { loadingButtonCount } = useFunnel();\n    useEffect(() => {\n      if (loading) {\n        loadingButtonCount.current++;\n        return () => {\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          loadingButtonCount.current--;\n        };\n      }\n    }, [loading, loadingButtonCount]);\n\n    if (isAnchor) {\n      return (\n        // https://github.com/yannickcr/eslint-plugin-react/issues/2962\n        // eslint-disable-next-line react/jsx-no-target-blank\n        <>\n          <a\n            {...buttonProps}\n            href={href}\n            target={target}\n            // security recommendation: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target\n            rel={rel ?? (target === '_blank' ? 'noopener noreferrer' : undefined)}\n            tabIndex={isNotInteractive ? -1 : undefined}\n            aria-disabled={isNotInteractive ? true : undefined}\n            download={download}\n          >\n            {buttonContent}\n          </a>\n          {loading && loadingText && <LiveRegion>{loadingText}</LiveRegion>}\n        </>\n      );\n    }\n    return (\n      <>\n        <button\n          {...buttonProps}\n          type={formAction === 'none' ? 'button' : 'submit'}\n          disabled={disabled}\n          aria-disabled={loading && !disabled ? true : undefined}\n        >\n          {buttonContent}\n        </button>\n        {loading && loadingText && <LiveRegion>{loadingText}</LiveRegion>}\n      </>\n    );\n  }\n);\n\nexport default InternalButton;\n"]},"metadata":{},"sourceType":"module"}