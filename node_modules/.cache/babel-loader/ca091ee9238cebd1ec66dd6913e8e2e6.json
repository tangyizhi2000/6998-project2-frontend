{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { isDataSeries, isXThreshold, isYThreshold, matchesX } from './utils';\n/** Formats provided x-position and its corresponding series values. */\nexport default function formatHighlighted(position, series, xTickFormatter) {\n  var formattedPosition = xTickFormatter ? xTickFormatter(position) : position.toString();\n  var details = [];\n  series.forEach(function (s) {\n    var detail = getSeriesDetail(s, position);\n    if (detail) {\n      details.push(detail);\n    }\n  });\n  return {\n    position: formattedPosition,\n    details: details\n  };\n}\nfunction getSeriesDetail(internalSeries, targetX) {\n  var series = internalSeries.series,\n    color = internalSeries.color;\n  // X-thresholds are only shown when X matches.\n  if (isXThreshold(series)) {\n    return series.x === targetX ? {\n      key: series.title,\n      value: '',\n      color: color,\n      markerType: 'dashed'\n    } : null;\n  }\n  if (isYThreshold(series)) {\n    return {\n      key: series.title,\n      value: series.valueFormatter ? series.valueFormatter(series.y) : series.y,\n      color: color,\n      markerType: 'dashed'\n    };\n  }\n  if (isDataSeries(series)) {\n    var _iterator = _createForOfIteratorHelper(series.data),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var datum = _step.value;\n        if (matchesX(targetX, datum.x)) {\n          return {\n            key: series.title,\n            value: series.valueFormatter ? series.valueFormatter(datum.y, targetX) : datum.y,\n            color: color,\n            markerType: series.type === 'line' ? 'line' : 'rectangle'\n          };\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return null;\n}","map":{"version":3,"mappings":";AAKA,SAASA,YAAY,EAAEC,YAAY,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,SAAS;AAO5E;AACA,eAAc,SAAUC,iBAAiB,CACvCC,QAAW,EACXC,MAAyC,EACzCC,cAAqD;EAErD,IAAMC,iBAAiB,GAAGD,cAAc,GAAGA,cAAc,CAACF,QAAQ,CAAC,GAAGA,QAAQ,CAACI,QAAQ,EAAE;EAEzF,IAAMC,OAAO,GAA4B,EAAE;EAC3CJ,MAAM,CAACK,OAAO,CAAC,WAAC,EAAG;IACjB,IAAMC,MAAM,GAAGC,eAAe,CAACC,CAAC,EAAET,QAAQ,CAAC;IAC3C,IAAIO,MAAM,EAAE;MACVF,OAAO,CAACK,IAAI,CAACH,MAAM,CAAC;;EAExB,CAAC,CAAC;EAEF,OAAO;IAAEP,QAAQ,EAAEG,iBAAiB;IAAEE,OAAO,EAAPA;EAAO,CAAE;AACjD;AAEA,SAASG,eAAe,CAAIG,cAAsC,EAAEC,OAAU;EAC5E,IAAQX,MAAM,GAAYU,cAAc,CAAhCV,MAAM;IAAEY,KAAK,GAAKF,cAAc,CAAxBE,KAAK;EAErB;EACA,IAAIjB,YAAY,CAACK,MAAM,CAAC,EAAE;IACxB,OAAOA,MAAM,CAACa,CAAC,KAAKF,OAAO,GACvB;MACEG,GAAG,EAAEd,MAAM,CAACe,KAAK;MACjBC,KAAK,EAAE,EAAE;MACTJ,KAAK,EAALA,KAAK;MACLK,UAAU,EAAE;KACb,GACD,IAAI;;EAGV,IAAIrB,YAAY,CAACI,MAAM,CAAC,EAAE;IACxB,OAAO;MACLc,GAAG,EAAEd,MAAM,CAACe,KAAK;MACjBC,KAAK,EAAEhB,MAAM,CAACkB,cAAc,GAAGlB,MAAM,CAACkB,cAAc,CAAClB,MAAM,CAACmB,CAAC,CAAC,GAAGnB,MAAM,CAACmB,CAAC;MACzEP,KAAK,EAALA,KAAK;MACLK,UAAU,EAAE;KACb;;EAGH,IAAIvB,YAAY,CAACM,MAAM,CAAC,EAAE;IAAA,2CACJA,MAAM,CAACoB,IAAI;MAAA;IAAA;MAA/B,oDAAiC;QAAA,IAAtBC,KAAK;QACd,IAAIxB,QAAQ,CAACc,OAAO,EAAEU,KAAK,CAACR,CAAC,CAAC,EAAE;UAC9B,OAAO;YACLC,GAAG,EAAEd,MAAM,CAACe,KAAK;YACjBC,KAAK,EAAEhB,MAAM,CAACkB,cAAc,GAAGlB,MAAM,CAACkB,cAAc,CAACG,KAAK,CAACF,CAAC,EAAER,OAAO,CAAC,GAAGU,KAAK,CAACF,CAAC;YAChFP,KAAK,EAALA,KAAK;YACLK,UAAU,EAAEjB,MAAM,CAACsB,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG;WAC/C;;;IAEJ;MAAA;IAAA;MAAA;IAAA;;EAGH,OAAO,IAAI;AACb","names":["isDataSeries","isXThreshold","isYThreshold","matchesX","formatHighlighted","position","series","xTickFormatter","formattedPosition","toString","details","forEach","detail","getSeriesDetail","s","push","internalSeries","targetX","color","x","key","title","value","markerType","valueFormatter","y","data","datum","type"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/mixed-line-bar-chart/lib/default/mixed-line-bar-chart/format-highlighted.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ChartDataTypes, InternalChartSeries } from './interfaces';\nimport { ChartSeriesDetailItem } from '../internal/components/chart-series-details';\nimport { CartesianChartProps } from '../internal/components/cartesian-chart/interfaces';\nimport { isDataSeries, isXThreshold, isYThreshold, matchesX } from './utils';\n\nexport interface HighlightDetails {\n  position: string;\n  details: ChartSeriesDetailItem[];\n}\n\n/** Formats provided x-position and its corresponding series values. */\nexport default function formatHighlighted<T extends ChartDataTypes>(\n  position: T,\n  series: readonly InternalChartSeries<T>[],\n  xTickFormatter?: CartesianChartProps.TickFormatter<T>\n): HighlightDetails {\n  const formattedPosition = xTickFormatter ? xTickFormatter(position) : position.toString();\n\n  const details: ChartSeriesDetailItem[] = [];\n  series.forEach(s => {\n    const detail = getSeriesDetail(s, position);\n    if (detail) {\n      details.push(detail);\n    }\n  });\n\n  return { position: formattedPosition, details };\n}\n\nfunction getSeriesDetail<T>(internalSeries: InternalChartSeries<T>, targetX: T): ChartSeriesDetailItem | null {\n  const { series, color } = internalSeries;\n\n  // X-thresholds are only shown when X matches.\n  if (isXThreshold(series)) {\n    return series.x === targetX\n      ? {\n          key: series.title,\n          value: '',\n          color,\n          markerType: 'dashed',\n        }\n      : null;\n  }\n\n  if (isYThreshold(series)) {\n    return {\n      key: series.title,\n      value: series.valueFormatter ? series.valueFormatter(series.y) : series.y,\n      color,\n      markerType: 'dashed',\n    };\n  }\n\n  if (isDataSeries(series)) {\n    for (const datum of series.data) {\n      if (matchesX(targetX, datum.x)) {\n        return {\n          key: series.title,\n          value: series.valueFormatter ? series.valueFormatter(datum.y, targetX) : datum.y,\n          color,\n          markerType: series.type === 'line' ? 'line' : 'rectangle',\n        };\n      }\n    }\n  }\n\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}