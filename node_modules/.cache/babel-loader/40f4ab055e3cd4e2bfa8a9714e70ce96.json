{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction setDayIndex(date, dayIndex) {\n  var diff = dayIndex - date.getDay();\n  date.setDate(date.getDate() + diff);\n}\nexport function renderDayName(locale, dayIndex, mode) {\n  var tempDate = new Date();\n  setDayIndex(tempDate, dayIndex);\n  return tempDate.toLocaleDateString(locale, {\n    weekday: mode\n  });\n}\nexport function renderMonthAndYear(locale, baseDate) {\n  var result = baseDate.toLocaleDateString(locale, {\n    year: 'numeric',\n    month: 'long'\n  });\n  return result;\n}\n/*\n `toLocaleDateString` is expensive (10+ ms) to calculate in IE11.\n*/\nvar dayLabelCache = new Map();\nexport function getDateLabel(locale, date) {\n  var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'full';\n  var cacheKey = locale + date.getTime() + mode;\n  var cachedValue = dayLabelCache.get(cacheKey);\n  if (cachedValue) {\n    return cachedValue;\n  }\n  var value = date.toLocaleDateString(locale, {\n    weekday: mode === 'full' ? 'long' : undefined,\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric'\n  });\n  dayLabelCache.set(cacheKey, value);\n  return value;\n}\nexport function renderTimeLabel(locale, date, format) {\n  var options = {};\n  if (format === 'hh') {\n    options = {\n      hour: '2-digit'\n    };\n  }\n  if (format === 'hh:mm') {\n    options = {\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n  }\n  var value = date.toLocaleTimeString(locale, options);\n  return value;\n}","map":{"version":3,"mappings":"AAAA;AACA;AAIA,SAASA,WAAW,CAACC,IAAU,EAAEC,QAAgB;EAC/C,IAAMC,IAAI,GAAGD,QAAQ,GAAGD,IAAI,CAACG,MAAM,EAAE;EACrCH,IAAI,CAACI,OAAO,CAACJ,IAAI,CAACK,OAAO,EAAE,GAAGH,IAAI,CAAC;AACrC;AAEA,OAAM,SAAUI,aAAa,CAACC,MAAc,EAAEN,QAAgB,EAAEO,IAAsB;EACpF,IAAMC,QAAQ,GAAG,IAAIC,IAAI,EAAE;EAC3BX,WAAW,CAACU,QAAQ,EAAER,QAAQ,CAAC;EAC/B,OAAOQ,QAAQ,CAACE,kBAAkB,CAACJ,MAAM,EAAE;IAAEK,OAAO,EAAEJ;EAAI,CAAE,CAAC;AAC/D;AAEA,OAAM,SAAUK,kBAAkB,CAACN,MAAc,EAAEO,QAAc;EAC/D,IAAMC,MAAM,GAAGD,QAAQ,CAACH,kBAAkB,CAACJ,MAAM,EAAE;IACjDS,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE;GACR,CAAC;EAEF,OAAOF,MAAM;AACf;AAEA;;;AAGA,IAAMG,aAAa,GAAG,IAAIC,GAAG,EAAkB;AAC/C,OAAM,SAAUC,YAAY,CAACb,MAAc,EAAEP,IAAU,EAAiC;EAAA,IAA/BQ,2EAAyB,MAAM;EACtF,IAAMa,QAAQ,GAAGd,MAAM,GAAGP,IAAI,CAACsB,OAAO,EAAE,GAAGd,IAAI;EAC/C,IAAMe,WAAW,GAAGL,aAAa,CAACM,GAAG,CAACH,QAAQ,CAAC;EAC/C,IAAIE,WAAW,EAAE;IACf,OAAOA,WAAW;;EAEpB,IAAME,KAAK,GAAGzB,IAAI,CAACW,kBAAkB,CAACJ,MAAM,EAAE;IAC5CK,OAAO,EAAEJ,IAAI,KAAK,MAAM,GAAG,MAAM,GAAGkB,SAAS;IAC7CT,KAAK,EAAE,MAAM;IACbU,GAAG,EAAE,SAAS;IACdX,IAAI,EAAE;GACP,CAAC;EACFE,aAAa,CAACU,GAAG,CAACP,QAAQ,EAAEI,KAAK,CAAC;EAClC,OAAOA,KAAK;AACd;AAEA,OAAM,SAAUI,eAAe,CAACtB,MAAc,EAAEP,IAAU,EAAE8B,MAA8B;EACxF,IAAIC,OAAO,GAA+B,EAAE;EAC5C,IAAID,MAAM,KAAK,IAAI,EAAE;IACnBC,OAAO,GAAG;MAAEC,IAAI,EAAE;IAAS,CAAE;;EAE/B,IAAIF,MAAM,KAAK,OAAO,EAAE;IACtBC,OAAO,GAAG;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAS,CAAE;;EAElD,IAAMR,KAAK,GAAGzB,IAAI,CAACkC,kBAAkB,CAAC3B,MAAM,EAAEwB,OAAO,CAAC;EACtD,OAAON,KAAK;AACd","names":["setDayIndex","date","dayIndex","diff","getDay","setDate","getDate","renderDayName","locale","mode","tempDate","Date","toLocaleDateString","weekday","renderMonthAndYear","baseDate","result","year","month","dayLabelCache","Map","getDateLabel","cacheKey","getTime","cachedValue","get","value","undefined","day","set","renderTimeLabel","format","options","hour","minute","toLocaleTimeString"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/calendar/utils/lib/default/calendar/utils/intl.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { TimeInputProps } from '../../time-input/interfaces';\n\nfunction setDayIndex(date: Date, dayIndex: number): void {\n  const diff = dayIndex - date.getDay();\n  date.setDate(date.getDate() + diff);\n}\n\nexport function renderDayName(locale: string, dayIndex: number, mode: 'short' | 'long'): string {\n  const tempDate = new Date();\n  setDayIndex(tempDate, dayIndex);\n  return tempDate.toLocaleDateString(locale, { weekday: mode });\n}\n\nexport function renderMonthAndYear(locale: string, baseDate: Date): string {\n  const result = baseDate.toLocaleDateString(locale, {\n    year: 'numeric',\n    month: 'long',\n  });\n\n  return result;\n}\n\n/*\n `toLocaleDateString` is expensive (10+ ms) to calculate in IE11.\n*/\nconst dayLabelCache = new Map<string, string>();\nexport function getDateLabel(locale: string, date: Date, mode: 'full' | 'short' = 'full'): string {\n  const cacheKey = locale + date.getTime() + mode;\n  const cachedValue = dayLabelCache.get(cacheKey);\n  if (cachedValue) {\n    return cachedValue;\n  }\n  const value = date.toLocaleDateString(locale, {\n    weekday: mode === 'full' ? 'long' : undefined,\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric',\n  });\n  dayLabelCache.set(cacheKey, value);\n  return value;\n}\n\nexport function renderTimeLabel(locale: string, date: Date, format?: TimeInputProps.Format): string {\n  let options: Intl.DateTimeFormatOptions = {};\n  if (format === 'hh') {\n    options = { hour: '2-digit' };\n  }\n  if (format === 'hh:mm') {\n    options = { hour: '2-digit', minute: '2-digit' };\n  }\n  const value = date.toLocaleTimeString(locale, options);\n  return value;\n}\n"]},"metadata":{},"sourceType":"module"}