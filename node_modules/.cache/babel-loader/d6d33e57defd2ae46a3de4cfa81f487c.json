{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport Handle from '../handle';\nimport InternalIcon from '../../../icon/internal';\nimport styles from './styles.css.js';\nimport handleStyles from '../handle/styles.css.js';\nimport clsx from 'clsx';\nexport default function DragHandle(_ref) {\n  let {\n    attributes,\n    hideFocus,\n    listeners\n  } = _ref;\n  return React.createElement(Handle, Object.assign({\n    className: clsx(styles.handle, hideFocus && handleStyles['hide-focus'])\n  }, attributes, listeners), React.createElement(InternalIcon, {\n    name: \"drag-indicator\"\n  }));\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAA+B,MAAM,OAAO;AAEnD,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,YAAY,MAAM,yBAAyB;AAElD,OAAOC,IAAI,MAAM,MAAM;AAQvB,eAAc,SAAUC,UAAU,OAAsD;EAAA,IAArD;IAAEC,UAAU;IAAEC,SAAS;IAAEC;EAAS,CAAmB;EACtF,OACET,oBAACC,MAAM;IAACS,SAAS,EAAEL,IAAI,CAACF,MAAM,CAACQ,MAAM,EAAEH,SAAS,IAAIJ,YAAY,CAAC,YAAY,CAAC;EAAC,GAAMG,UAAU,EAAME,SAAS,GAC5GT,oBAACE,YAAY;IAACU,IAAI,EAAC;EAAgB,EAAG,CAC/B;AAEb","names":["React","Handle","InternalIcon","styles","handleStyles","clsx","DragHandle","attributes","hideFocus","listeners","className","handle","name"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/internal/components/drag-handle/lib/default/internal/components/drag-handle/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { ButtonHTMLAttributes } from 'react';\n\nimport Handle from '../handle';\nimport InternalIcon from '../../../icon/internal';\nimport styles from './styles.css.js';\nimport handleStyles from '../handle/styles.css.js';\nimport { SyntheticListenerMap } from '@dnd-kit/core/dist/hooks/utilities';\nimport clsx from 'clsx';\n\nexport interface DragHandleProps {\n  attributes: ButtonHTMLAttributes<HTMLDivElement>;\n  hideFocus?: boolean;\n  listeners?: SyntheticListenerMap;\n}\n\nexport default function DragHandle({ attributes, hideFocus, listeners }: DragHandleProps) {\n  return (\n    <Handle className={clsx(styles.handle, hideFocus && handleStyles['hide-focus'])} {...attributes} {...listeners}>\n      <InternalIcon name=\"drag-indicator\" />\n    </Handle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}