{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef, useEffect } from 'react';\nimport { FunnelMetrics } from '../internal/analytics';\nexport function useFunnelChangeEvent(funnelInteractionId, steps) {\n  const listenForStepChanges = useRef(false);\n  useEffect(() => {\n    // We prevent emitting the event before the funnel has stabilised.\n    const handle = setTimeout(() => listenForStepChanges.current = true, 0);\n    return () => {\n      clearTimeout(handle);\n      listenForStepChanges.current = false;\n    };\n  }, [funnelInteractionId]);\n  const stepTitles = steps.map(step => step.title).join();\n  useEffect(() => {\n    if (!funnelInteractionId || !listenForStepChanges.current) {\n      return;\n    }\n    FunnelMetrics.funnelChange({\n      funnelInteractionId,\n      stepConfiguration: getStepConfiguration(steps)\n    });\n    // This dependency array does not include `steps`, because `steps` is not stable across renders.\n    // We use `stepTitles` as a stable proxy.\n    //\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [funnelInteractionId, stepTitles]);\n}\nexport function getStepConfiguration(steps) {\n  return steps.map((step, index) => {\n    var _a;\n    return {\n      name: step.title,\n      number: index + 1,\n      isOptional: (_a = step.isOptional) !== null && _a !== void 0 ? _a : false\n    };\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzC,SAASC,aAAa,QAAQ,uBAAuB;AAGrD,OAAM,SAAUC,oBAAoB,CAACC,mBAAuC,EAAEC,KAA2B;EACvG,MAAMC,oBAAoB,GAAGN,MAAM,CAAC,KAAK,CAAC;EAE1CC,SAAS,CAAC,MAAK;IACb;IACA,MAAMM,MAAM,GAAGC,UAAU,CAAC,MAAOF,oBAAoB,CAACG,OAAO,GAAG,IAAK,EAAE,CAAC,CAAC;IAEzE,OAAO,MAAK;MACVC,YAAY,CAACH,MAAM,CAAC;MACpBD,oBAAoB,CAACG,OAAO,GAAG,KAAK;IACtC,CAAC;EACH,CAAC,EAAE,CAACL,mBAAmB,CAAC,CAAC;EAEzB,MAAMO,UAAU,GAAGN,KAAK,CAACO,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC,CAACC,IAAI,EAAE;EACvDd,SAAS,CAAC,MAAK;IACb,IAAI,CAACG,mBAAmB,IAAI,CAACE,oBAAoB,CAACG,OAAO,EAAE;MACzD;;IAGFP,aAAa,CAACc,YAAY,CAAC;MACzBZ,mBAAmB;MACnBa,iBAAiB,EAAEC,oBAAoB,CAACb,KAAK;KAC9C,CAAC;IAEF;IACA;IACA;IACA;EACF,CAAC,EAAE,CAACD,mBAAmB,EAAEO,UAAU,CAAC,CAAC;AACvC;AAEA,OAAM,SAAUO,oBAAoB,CAACb,KAA2B;EAC9D,OAAOA,KAAK,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEM,KAAK,KAAI;;IAAC,OAAC;MACjCC,IAAI,EAAEP,IAAI,CAACC,KAAK;MAChBO,MAAM,EAAEF,KAAK,GAAG,CAAC;MACjBG,UAAU,EAAE,UAAI,CAACA,UAAU,mCAAI;KAChC;GAAC,CAAC;AACL","names":["useRef","useEffect","FunnelMetrics","useFunnelChangeEvent","funnelInteractionId","steps","listenForStepChanges","handle","setTimeout","current","clearTimeout","stepTitles","map","step","title","join","funnelChange","stepConfiguration","getStepConfiguration","index","name","number","isOptional"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/wizard/lib/default/wizard/analytics.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useRef, useEffect } from 'react';\nimport { FunnelMetrics } from '../internal/analytics';\nimport { WizardProps } from './interfaces';\n\nexport function useFunnelChangeEvent(funnelInteractionId: string | undefined, steps: WizardProps['steps']) {\n  const listenForStepChanges = useRef(false);\n\n  useEffect(() => {\n    // We prevent emitting the event before the funnel has stabilised.\n    const handle = setTimeout(() => (listenForStepChanges.current = true), 0);\n\n    return () => {\n      clearTimeout(handle);\n      listenForStepChanges.current = false;\n    };\n  }, [funnelInteractionId]);\n\n  const stepTitles = steps.map(step => step.title).join();\n  useEffect(() => {\n    if (!funnelInteractionId || !listenForStepChanges.current) {\n      return;\n    }\n\n    FunnelMetrics.funnelChange({\n      funnelInteractionId,\n      stepConfiguration: getStepConfiguration(steps),\n    });\n\n    // This dependency array does not include `steps`, because `steps` is not stable across renders.\n    // We use `stepTitles` as a stable proxy.\n    //\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [funnelInteractionId, stepTitles]);\n}\n\nexport function getStepConfiguration(steps: WizardProps['steps']) {\n  return steps.map((step, index) => ({\n    name: step.title,\n    number: index + 1,\n    isOptional: step.isOptional ?? false,\n  }));\n}\n"]},"metadata":{},"sourceType":"module"}