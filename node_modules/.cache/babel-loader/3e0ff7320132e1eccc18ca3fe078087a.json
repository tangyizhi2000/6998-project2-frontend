{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport styles from './styles.css.js';\nimport { TokenEditor } from './token-editor';\nimport FilteringToken from '../internal/components/filtering-token';\nimport { getFormattedToken } from './utils';\nexport const TokenButton = _ref => {\n  let {\n    token,\n    operation = 'and',\n    first,\n    removeToken,\n    setToken,\n    setOperation,\n    filteringProperties,\n    filteringOptions,\n    asyncProps,\n    onLoadItems,\n    i18nStrings,\n    asyncProperties,\n    hideOperations,\n    customGroupsText,\n    disabled,\n    disableFreeTextFiltering,\n    expandToViewport\n  } = _ref;\n  var _a, _b, _c, _d;\n  const externalToken = Object.assign(Object.assign({}, token), {\n    propertyKey: (_a = token.property) === null || _a === void 0 ? void 0 : _a.propertyKey\n  });\n  const formattedToken = getFormattedToken(token);\n  return React.createElement(FilteringToken, {\n    ariaLabel: formattedToken.label,\n    showOperation: !first && !hideOperations,\n    operation: operation,\n    andText: (_b = i18nStrings.operationAndText) !== null && _b !== void 0 ? _b : '',\n    orText: (_c = i18nStrings.operationOrText) !== null && _c !== void 0 ? _c : '',\n    dismissAriaLabel: (_d = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.removeTokenButtonAriaLabel) === null || _d === void 0 ? void 0 : _d.call(i18nStrings, externalToken),\n    operatorAriaLabel: i18nStrings.tokenOperatorAriaLabel,\n    onChange: setOperation,\n    onDismiss: removeToken,\n    disabled: disabled\n  }, React.createElement(TokenEditor, {\n    setToken: setToken,\n    triggerComponent: React.createElement(\"span\", {\n      className: styles['token-trigger']\n    }, React.createElement(TokenTrigger, {\n      property: formattedToken.property,\n      operator: token.operator,\n      value: formattedToken.value\n    })),\n    filteringProperties: filteringProperties,\n    filteringOptions: filteringOptions,\n    token: token,\n    asyncProps: asyncProps,\n    onLoadItems: onLoadItems,\n    i18nStrings: i18nStrings,\n    asyncProperties: asyncProperties,\n    customGroupsText: customGroupsText,\n    disableFreeTextFiltering: disableFreeTextFiltering,\n    expandToViewport: expandToViewport\n  }));\n};\nconst TokenTrigger = _ref2 => {\n  let {\n    property,\n    operator,\n    value\n  } = _ref2;\n  if (property) {\n    property += ' ';\n  }\n  const freeTextContainsToken = operator === ':' && !property;\n  const operatorText = freeTextContainsToken ? '' : operator + ' ';\n  return React.createElement(React.Fragment, null, property, React.createElement(\"span\", {\n    className: styles['token-operator']\n  }, operatorText), value);\n};","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAYzB,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,OAAOC,cAAc,MAAM,wCAAwC;AAGnE,SAASC,iBAAiB,QAAQ,SAAS;AAsB3C,OAAO,MAAMC,WAAW,GAAG,QAkBV;EAAA,IAlBW;IAC1BC,KAAK;IACLC,SAAS,GAAG,KAAK;IACjBC,KAAK;IACLC,WAAW;IACXC,QAAQ;IACRC,YAAY;IACZC,mBAAmB;IACnBC,gBAAgB;IAChBC,UAAU;IACVC,WAAW;IACXC,WAAW;IACXC,eAAe;IACfC,cAAc;IACdC,gBAAgB;IAChBC,QAAQ;IACRC,wBAAwB;IACxBC;EAAgB,CACL;;EACX,MAAMC,aAAa,mCAAQjB,KAAK;IAAEkB,WAAW,EAAE,WAAK,CAACC,QAAQ,0CAAED;EAAW,EAAE;EAC5E,MAAME,cAAc,GAAGtB,iBAAiB,CAACE,KAAK,CAAC;EAC/C,OACEN,oBAACG,cAAc;IACbwB,SAAS,EAAED,cAAc,CAACE,KAAK;IAC/BC,aAAa,EAAE,CAACrB,KAAK,IAAI,CAACU,cAAc;IACxCX,SAAS,EAAEA,SAAS;IACpBuB,OAAO,EAAE,iBAAW,CAACC,gBAAgB,mCAAI,EAAE;IAC3CC,MAAM,EAAE,iBAAW,CAACC,eAAe,mCAAI,EAAE;IACzCC,gBAAgB,EAAE,iBAAW,aAAXlB,WAAW,uBAAXA,WAAW,CAAEmB,0BAA0B,4DAAGZ,aAAa,CAAC;IAC1Ea,iBAAiB,EAAEpB,WAAW,CAACqB,sBAAsB;IACrDC,QAAQ,EAAE3B,YAAY;IACtB4B,SAAS,EAAE9B,WAAW;IACtBW,QAAQ,EAAEA;EAAQ,GAElBpB,oBAACE,WAAW;IACVQ,QAAQ,EAAEA,QAAQ;IAClB8B,gBAAgB,EACdxC;MAAMyC,SAAS,EAAExC,MAAM,CAAC,eAAe;IAAC,GACtCD,oBAAC0C,YAAY;MAACjB,QAAQ,EAAEC,cAAc,CAACD,QAAQ;MAAEkB,QAAQ,EAAErC,KAAK,CAACqC,QAAQ;MAAEC,KAAK,EAAElB,cAAc,CAACkB;IAAK,EAAI,CACrG;IAEThC,mBAAmB,EAAEA,mBAAmB;IACxCC,gBAAgB,EAAEA,gBAAgB;IAClCP,KAAK,EAAEA,KAAK;IACZQ,UAAU,EAAEA,UAAU;IACtBC,WAAW,EAAEA,WAAW;IACxBC,WAAW,EAAEA,WAAW;IACxBC,eAAe,EAAEA,eAAe;IAChCE,gBAAgB,EAAEA,gBAAgB;IAClCE,wBAAwB,EAAEA,wBAAwB;IAClDC,gBAAgB,EAAEA;EAAgB,EAClC,CACa;AAErB,CAAC;AAED,MAAMoB,YAAY,GAAG,SAQhB;EAAA,IARiB;IACpBjB,QAAQ;IACRkB,QAAQ;IACRC;EAAK,CAKN;EACC,IAAInB,QAAQ,EAAE;IACZA,QAAQ,IAAI,GAAG;;EAEjB,MAAMoB,qBAAqB,GAAGF,QAAQ,KAAK,GAAG,IAAI,CAAClB,QAAQ;EAC3D,MAAMqB,YAAY,GAAGD,qBAAqB,GAAG,EAAE,GAAGF,QAAQ,GAAG,GAAG;EAChE,OACE3C,0CACGyB,QAAQ,EACTzB;IAAMyC,SAAS,EAAExC,MAAM,CAAC,gBAAgB;EAAC,GAAG6C,YAAY,CAAQ,EAC/DF,KAAK,CACL;AAEP,CAAC","names":["React","styles","TokenEditor","FilteringToken","getFormattedToken","TokenButton","token","operation","first","removeToken","setToken","setOperation","filteringProperties","filteringOptions","asyncProps","onLoadItems","i18nStrings","asyncProperties","hideOperations","customGroupsText","disabled","disableFreeTextFiltering","expandToViewport","externalToken","propertyKey","property","formattedToken","ariaLabel","label","showOperation","andText","operationAndText","orText","operationOrText","dismissAriaLabel","removeTokenButtonAriaLabel","operatorAriaLabel","tokenOperatorAriaLabel","onChange","onDismiss","triggerComponent","className","TokenTrigger","operator","value","freeTextContainsToken","operatorText"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/property-filter/lib/default/property-filter/token.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport {\n  ComparisonOperator,\n  GroupText,\n  I18nStrings,\n  InternalFilteringOption,\n  InternalFilteringProperty,\n  InternalToken,\n  JoinOperation,\n  LoadItemsDetail,\n  Token,\n} from './interfaces';\nimport styles from './styles.css.js';\nimport { TokenEditor } from './token-editor';\n\nimport FilteringToken from '../internal/components/filtering-token';\nimport { NonCancelableEventHandler } from '../internal/events';\nimport { DropdownStatusProps } from '../internal/components/dropdown-status/interfaces';\nimport { getFormattedToken } from './utils';\n\ninterface TokenProps {\n  asyncProperties?: boolean;\n  asyncProps: DropdownStatusProps;\n  customGroupsText: readonly GroupText[];\n  disabled?: boolean;\n  disableFreeTextFiltering?: boolean;\n  expandToViewport?: boolean;\n  filteringProperties: readonly InternalFilteringProperty[];\n  filteringOptions: readonly InternalFilteringOption[];\n  first?: boolean;\n  hideOperations?: boolean;\n  i18nStrings: I18nStrings;\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;\n  operation: JoinOperation;\n  removeToken: () => void;\n  setOperation: (newOperation: JoinOperation) => void;\n  setToken: (newToken: Token) => void;\n  token: InternalToken;\n}\n\nexport const TokenButton = ({\n  token,\n  operation = 'and',\n  first,\n  removeToken,\n  setToken,\n  setOperation,\n  filteringProperties,\n  filteringOptions,\n  asyncProps,\n  onLoadItems,\n  i18nStrings,\n  asyncProperties,\n  hideOperations,\n  customGroupsText,\n  disabled,\n  disableFreeTextFiltering,\n  expandToViewport,\n}: TokenProps) => {\n  const externalToken = { ...token, propertyKey: token.property?.propertyKey };\n  const formattedToken = getFormattedToken(token);\n  return (\n    <FilteringToken\n      ariaLabel={formattedToken.label}\n      showOperation={!first && !hideOperations}\n      operation={operation}\n      andText={i18nStrings.operationAndText ?? ''}\n      orText={i18nStrings.operationOrText ?? ''}\n      dismissAriaLabel={i18nStrings?.removeTokenButtonAriaLabel?.(externalToken)}\n      operatorAriaLabel={i18nStrings.tokenOperatorAriaLabel}\n      onChange={setOperation}\n      onDismiss={removeToken}\n      disabled={disabled}\n    >\n      <TokenEditor\n        setToken={setToken}\n        triggerComponent={\n          <span className={styles['token-trigger']}>\n            <TokenTrigger property={formattedToken.property} operator={token.operator} value={formattedToken.value} />\n          </span>\n        }\n        filteringProperties={filteringProperties}\n        filteringOptions={filteringOptions}\n        token={token}\n        asyncProps={asyncProps}\n        onLoadItems={onLoadItems}\n        i18nStrings={i18nStrings}\n        asyncProperties={asyncProperties}\n        customGroupsText={customGroupsText}\n        disableFreeTextFiltering={disableFreeTextFiltering}\n        expandToViewport={expandToViewport}\n      />\n    </FilteringToken>\n  );\n};\n\nconst TokenTrigger = ({\n  property,\n  operator,\n  value,\n}: {\n  property?: string;\n  operator?: ComparisonOperator;\n  value: string;\n}) => {\n  if (property) {\n    property += ' ';\n  }\n  const freeTextContainsToken = operator === ':' && !property;\n  const operatorText = freeTextContainsToken ? '' : operator + ' ';\n  return (\n    <>\n      {property}\n      <span className={styles['token-operator']}>{operatorText}</span>\n      {value}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}