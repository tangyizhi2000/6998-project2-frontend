{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport React from 'react';\nimport InternalIcon from '../../../icon/internal';\nimport HighlightMatch from './highlight-match';\nexport var Label = function Label(_ref) {\n  var label = _ref.label,\n    prefix = _ref.prefix,\n    highlightText = _ref.highlightText,\n    triggerVariant = _ref.triggerVariant;\n  return React.createElement(\"span\", {\n    className: clsx(styles.label, triggerVariant && styles['trigger-variant'])\n  }, prefix && React.createElement(\"span\", {\n    className: clsx(styles['label-prefix'], triggerVariant && styles['trigger-variant'])\n  }, prefix, \" \"), React.createElement(HighlightMatch, {\n    str: label,\n    highlightText: highlightText\n  }));\n};\nexport var LabelTag = function LabelTag(_ref2) {\n  var labelTag = _ref2.labelTag,\n    highlightText = _ref2.highlightText,\n    triggerVariant = _ref2.triggerVariant;\n  return labelTag ? React.createElement(\"span\", {\n    className: clsx(styles['label-tag'], triggerVariant && styles['trigger-variant'])\n  }, React.createElement(HighlightMatch, {\n    str: labelTag,\n    highlightText: highlightText\n  })) : null;\n};\nexport var Description = function Description(_ref3) {\n  var _clsx;\n  var description = _ref3.description,\n    highlightedOption = _ref3.highlightedOption,\n    highlightText = _ref3.highlightText,\n    selectedOption = _ref3.selectedOption,\n    triggerVariant = _ref3.triggerVariant;\n  return description ? React.createElement(\"span\", {\n    className: clsx(styles.description, (_clsx = {}, _defineProperty(_clsx, styles['trigger-variant'], triggerVariant), _defineProperty(_clsx, styles.highlighted, highlightedOption), _defineProperty(_clsx, styles.selected, selectedOption), _clsx))\n  }, React.createElement(HighlightMatch, {\n    str: description,\n    highlightText: highlightText\n  })) : null;\n};\nexport var Tags = function Tags(_ref4) {\n  var _clsx2;\n  var tags = _ref4.tags,\n    highlightedOption = _ref4.highlightedOption,\n    highlightText = _ref4.highlightText,\n    selectedOption = _ref4.selectedOption,\n    triggerVariant = _ref4.triggerVariant;\n  return tags ? React.createElement(\"span\", {\n    className: clsx(styles.tags, (_clsx2 = {}, _defineProperty(_clsx2, styles.highlighted, highlightedOption), _defineProperty(_clsx2, styles.selected, selectedOption), _clsx2))\n  }, tags.map(function (tag, idx) {\n    return React.createElement(\"span\", {\n      key: idx,\n      className: clsx(styles.tag, triggerVariant && styles['trigger-variant'])\n    }, React.createElement(HighlightMatch, {\n      str: tag,\n      highlightText: highlightText\n    }));\n  })) : null;\n};\nexport var FilteringTags = function FilteringTags(_ref5) {\n  var _clsx3;\n  var filteringTags = _ref5.filteringTags,\n    highlightedOption = _ref5.highlightedOption,\n    highlightText = _ref5.highlightText,\n    selectedOption = _ref5.selectedOption,\n    triggerVariant = _ref5.triggerVariant;\n  if (!highlightText || !filteringTags) {\n    return null;\n  }\n  var searchElement = highlightText.toLowerCase();\n  return React.createElement(\"span\", {\n    className: clsx(styles.tags, (_clsx3 = {}, _defineProperty(_clsx3, styles.highlighted, highlightedOption), _defineProperty(_clsx3, styles.selected, selectedOption), _clsx3))\n  }, filteringTags.map(function (filteringTag, key) {\n    var match = filteringTag.toLowerCase().indexOf(searchElement) !== -1;\n    if (match) {\n      return React.createElement(\"span\", {\n        className: clsx(styles.tag, triggerVariant && styles['trigger-variant']),\n        key: key,\n        \"aria-disabled\": true\n      }, React.createElement(HighlightMatch, {\n        str: filteringTag,\n        highlightText: highlightText\n      }));\n    }\n    return null;\n  }));\n};\nexport var OptionIcon = function OptionIcon(props) {\n  if (!props.name && !props.url && !props.svg) {\n    return null;\n  }\n  return React.createElement(\"span\", {\n    className: clsx(styles.icon, props.size === 'big' && [styles[\"icon-size-big\"]])\n  }, React.createElement(InternalIcon, Object.assign({}, props)));\n};","map":{"version":3,"mappings":"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","names":["styles","clsx","React","InternalIcon","HighlightMatch","Label","label","prefix","highlightText","triggerVariant","className","str","LabelTag","labelTag","Description","description","highlightedOption","selectedOption","highlighted","selected","Tags","tags","map","tag","idx","key","FilteringTags","filteringTags","searchElement","toLowerCase","filteringTag","match","indexOf","OptionIcon","props","name","url","svg","icon","size"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/components/option/lib/default/internal/components/option/option-parts.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { IconProps } from '../../../icon/interfaces';\nimport InternalIcon from '../../../icon/internal';\nimport HighlightMatch from './highlight-match';\n\ninterface LabelProps {\n  label?: string;\n  prefix?: string;\n  highlightText?: string;\n  triggerVariant: boolean;\n}\nexport const Label = ({ label, prefix, highlightText, triggerVariant }: LabelProps) => (\n  <span className={clsx(styles.label, triggerVariant && styles['trigger-variant'])}>\n    {prefix && (\n      <span className={clsx(styles['label-prefix'], triggerVariant && styles['trigger-variant'])}>{prefix} </span>\n    )}\n    <HighlightMatch str={label} highlightText={highlightText} />\n  </span>\n);\n\ninterface LabelTagProps {\n  labelTag?: string;\n  highlightText?: string;\n  triggerVariant: boolean;\n}\nexport const LabelTag = ({ labelTag, highlightText, triggerVariant }: LabelTagProps) =>\n  labelTag ? (\n    <span className={clsx(styles['label-tag'], triggerVariant && styles['trigger-variant'])}>\n      <HighlightMatch str={labelTag} highlightText={highlightText} />\n    </span>\n  ) : null;\n\ninterface DescriptionProps {\n  description?: string;\n  highlightedOption: boolean;\n  highlightText?: string;\n  selectedOption: boolean;\n  triggerVariant: boolean;\n}\nexport const Description = ({\n  description,\n  highlightedOption,\n  highlightText,\n  selectedOption,\n  triggerVariant,\n}: DescriptionProps) =>\n  description ? (\n    <span\n      className={clsx(styles.description, {\n        [styles['trigger-variant']]: triggerVariant,\n        [styles.highlighted]: highlightedOption,\n        [styles.selected]: selectedOption,\n      })}\n    >\n      <HighlightMatch str={description} highlightText={highlightText} />\n    </span>\n  ) : null;\n\ninterface TagsProps {\n  tags?: ReadonlyArray<string>;\n  highlightedOption: boolean;\n  highlightText?: string;\n  selectedOption: boolean;\n  triggerVariant: boolean;\n}\nexport const Tags = ({ tags, highlightedOption, highlightText, selectedOption, triggerVariant }: TagsProps) =>\n  tags ? (\n    <span\n      className={clsx(styles.tags, {\n        [styles.highlighted]: highlightedOption,\n        [styles.selected]: selectedOption,\n      })}\n    >\n      {tags.map((tag, idx) => (\n        <span key={idx} className={clsx(styles.tag, triggerVariant && styles['trigger-variant'])}>\n          <HighlightMatch str={tag} highlightText={highlightText} />\n        </span>\n      ))}\n    </span>\n  ) : null;\n\ninterface FilteringTagProps {\n  filteringTags?: ReadonlyArray<string>;\n  highlightedOption: boolean;\n  highlightText?: string;\n  selectedOption: boolean;\n  triggerVariant: boolean;\n}\nexport const FilteringTags = ({\n  filteringTags,\n  highlightedOption,\n  highlightText,\n  selectedOption,\n  triggerVariant,\n}: FilteringTagProps) => {\n  if (!highlightText || !filteringTags) {\n    return null;\n  }\n\n  const searchElement = highlightText.toLowerCase();\n\n  return (\n    <span\n      className={clsx(styles.tags, {\n        [styles.highlighted]: highlightedOption,\n        [styles.selected]: selectedOption,\n      })}\n    >\n      {filteringTags.map((filteringTag, key) => {\n        const match = filteringTag.toLowerCase().indexOf(searchElement) !== -1;\n        if (match) {\n          return (\n            <span\n              className={clsx(styles.tag, triggerVariant && styles['trigger-variant'])}\n              key={key}\n              aria-disabled={true}\n            >\n              <HighlightMatch str={filteringTag} highlightText={highlightText} />\n            </span>\n          );\n        }\n        return null;\n      })}\n    </span>\n  );\n};\n\nexport const OptionIcon = (props: IconProps) => {\n  if (!props.name && !props.url && !props.svg) {\n    return null;\n  }\n\n  return (\n    <span className={clsx(styles.icon, props.size === 'big' && [styles[`icon-size-big`]])}>\n      <InternalIcon {...props} />\n    </span>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}