{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport VirtualList from './virtual-list';\nimport PlainList from './plain-list';\nimport { useAnnouncement } from '../select/utils/use-announcement';\nconst createMouseEventHandler = handler => itemIndex => {\n  // prevent mouse events to avoid losing focus from the input\n  if (itemIndex > -1) {\n    handler(itemIndex);\n  }\n};\nexport default function AutosuggestOptionsList(_ref) {\n  let {\n    statusType,\n    autosuggestItemsState,\n    autosuggestItemsHandlers,\n    highlightedOptionId,\n    highlightText,\n    listId,\n    controlId,\n    enteredTextLabel,\n    handleLoadMore,\n    hasDropdownStatus,\n    virtualScroll,\n    selectedAriaLabel,\n    renderHighlightedAriaLive,\n    listBottom,\n    ariaDescribedby\n  } = _ref;\n  var _a;\n  const handleMouseUp = createMouseEventHandler(autosuggestItemsHandlers.selectVisibleOptionWithMouse);\n  const handleMouseMove = createMouseEventHandler(autosuggestItemsHandlers.highlightVisibleOptionWithMouse);\n  const ListComponent = virtualScroll ? VirtualList : PlainList;\n  const announcement = useAnnouncement({\n    announceSelected: ((_a = autosuggestItemsState.highlightedOption) === null || _a === void 0 ? void 0 : _a.value) === highlightText,\n    highlightedOption: autosuggestItemsState.highlightedOption,\n    getParent: option => autosuggestItemsState.getItemGroup(option),\n    selectedAriaLabel,\n    renderHighlightedAriaLive\n  });\n  return React.createElement(ListComponent, {\n    listBottom: listBottom,\n    handleLoadMore: handleLoadMore,\n    autosuggestItemsState: autosuggestItemsState,\n    highlightText: highlightText,\n    enteredTextLabel: enteredTextLabel,\n    highlightedA11yProps: highlightedOptionId ? {\n      id: highlightedOptionId\n    } : {},\n    hasDropdownStatus: hasDropdownStatus,\n    menuProps: {\n      id: listId,\n      ariaLabelledby: controlId,\n      onMouseUp: handleMouseUp,\n      onMouseMove: handleMouseMove,\n      ariaDescribedby,\n      statusType\n    },\n    screenReaderContent: announcement\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAIzB,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,SAAS,MAAM,cAAc;AAEpC,SAASC,eAAe,QAAQ,kCAAkC;AAoBlE,MAAMC,uBAAuB,GAAIC,OAAgC,IAAMC,SAAiB,IAAI;EAC1F;EACA,IAAIA,SAAS,GAAG,CAAC,CAAC,EAAE;IAClBD,OAAO,CAACC,SAAS,CAAC;;AAEtB,CAAC;AAED,eAAc,SAAUC,sBAAsB,OAgBhB;EAAA,IAhBiB;IAC7CC,UAAU;IACVC,qBAAqB;IACrBC,wBAAwB;IACxBC,mBAAmB;IACnBC,aAAa;IACbC,MAAM;IACNC,SAAS;IACTC,gBAAgB;IAChBC,cAAc;IACdC,iBAAiB;IACjBC,aAAa;IACbC,iBAAiB;IACjBC,yBAAyB;IACzBC,UAAU;IACVC;EAAe,CACa;;EAC5B,MAAMC,aAAa,GAAGnB,uBAAuB,CAACM,wBAAwB,CAACc,4BAA4B,CAAC;EACpG,MAAMC,eAAe,GAAGrB,uBAAuB,CAACM,wBAAwB,CAACgB,+BAA+B,CAAC;EAEzG,MAAMC,aAAa,GAAGT,aAAa,GAAGjB,WAAW,GAAGC,SAAS;EAE7D,MAAM0B,YAAY,GAAGzB,eAAe,CAAC;IACnC0B,gBAAgB,EAAE,4BAAqB,CAACC,iBAAiB,0CAAEC,KAAK,MAAKnB,aAAa;IAClFkB,iBAAiB,EAAErB,qBAAqB,CAACqB,iBAAiB;IAC1DE,SAAS,EAAEC,MAAM,IAAIxB,qBAAqB,CAACyB,YAAY,CAACD,MAAM,CAAC;IAC/Dd,iBAAiB;IACjBC;GACD,CAAC;EAEF,OACEpB,oBAAC2B,aAAa;IACZN,UAAU,EAAEA,UAAU;IACtBL,cAAc,EAAEA,cAAc;IAC9BP,qBAAqB,EAAEA,qBAAqB;IAC5CG,aAAa,EAAEA,aAAa;IAC5BG,gBAAgB,EAAEA,gBAAgB;IAClCoB,oBAAoB,EAAExB,mBAAmB,GAAG;MAAEyB,EAAE,EAAEzB;IAAmB,CAAE,GAAG,EAAE;IAC5EM,iBAAiB,EAAEA,iBAAiB;IACpCoB,SAAS,EAAE;MACTD,EAAE,EAAEvB,MAAM;MACVyB,cAAc,EAAExB,SAAS;MACzByB,SAAS,EAAEhB,aAAa;MACxBiB,WAAW,EAAEf,eAAe;MAC5BH,eAAe;MACfd;KACD;IACDiC,mBAAmB,EAAEb;EAAY,EACjC;AAEN","names":["React","VirtualList","PlainList","useAnnouncement","createMouseEventHandler","handler","itemIndex","AutosuggestOptionsList","statusType","autosuggestItemsState","autosuggestItemsHandlers","highlightedOptionId","highlightText","listId","controlId","enteredTextLabel","handleLoadMore","hasDropdownStatus","virtualScroll","selectedAriaLabel","renderHighlightedAriaLive","listBottom","ariaDescribedby","handleMouseUp","selectVisibleOptionWithMouse","handleMouseMove","highlightVisibleOptionWithMouse","ListComponent","announcement","announceSelected","highlightedOption","value","getParent","option","getItemGroup","highlightedA11yProps","id","menuProps","ariaLabelledby","onMouseUp","onMouseMove","screenReaderContent"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/autosuggest/lib/default/autosuggest/options-list.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { AutosuggestItemsHandlers, AutosuggestItemsState } from './options-controller';\nimport { AutosuggestProps } from './interfaces';\nimport VirtualList from './virtual-list';\nimport PlainList from './plain-list';\n\nimport { useAnnouncement } from '../select/utils/use-announcement';\n\nexport interface AutosuggestOptionsListProps\n  extends Pick<\n    AutosuggestProps,\n    'enteredTextLabel' | 'virtualScroll' | 'selectedAriaLabel' | 'renderHighlightedAriaLive'\n  > {\n  statusType: AutosuggestProps.StatusType;\n  autosuggestItemsState: AutosuggestItemsState;\n  autosuggestItemsHandlers: AutosuggestItemsHandlers;\n  highlightedOptionId?: string;\n  highlightText: string;\n  listId: string;\n  controlId: string;\n  handleLoadMore: () => void;\n  hasDropdownStatus?: boolean;\n  listBottom?: React.ReactNode;\n  ariaDescribedby?: string;\n}\n\nconst createMouseEventHandler = (handler: (index: number) => void) => (itemIndex: number) => {\n  // prevent mouse events to avoid losing focus from the input\n  if (itemIndex > -1) {\n    handler(itemIndex);\n  }\n};\n\nexport default function AutosuggestOptionsList({\n  statusType,\n  autosuggestItemsState,\n  autosuggestItemsHandlers,\n  highlightedOptionId,\n  highlightText,\n  listId,\n  controlId,\n  enteredTextLabel,\n  handleLoadMore,\n  hasDropdownStatus,\n  virtualScroll,\n  selectedAriaLabel,\n  renderHighlightedAriaLive,\n  listBottom,\n  ariaDescribedby,\n}: AutosuggestOptionsListProps) {\n  const handleMouseUp = createMouseEventHandler(autosuggestItemsHandlers.selectVisibleOptionWithMouse);\n  const handleMouseMove = createMouseEventHandler(autosuggestItemsHandlers.highlightVisibleOptionWithMouse);\n\n  const ListComponent = virtualScroll ? VirtualList : PlainList;\n\n  const announcement = useAnnouncement({\n    announceSelected: autosuggestItemsState.highlightedOption?.value === highlightText,\n    highlightedOption: autosuggestItemsState.highlightedOption,\n    getParent: option => autosuggestItemsState.getItemGroup(option),\n    selectedAriaLabel,\n    renderHighlightedAriaLive,\n  });\n\n  return (\n    <ListComponent\n      listBottom={listBottom}\n      handleLoadMore={handleLoadMore}\n      autosuggestItemsState={autosuggestItemsState}\n      highlightText={highlightText}\n      enteredTextLabel={enteredTextLabel}\n      highlightedA11yProps={highlightedOptionId ? { id: highlightedOptionId } : {}}\n      hasDropdownStatus={hasDropdownStatus}\n      menuProps={{\n        id: listId,\n        ariaLabelledby: controlId,\n        onMouseUp: handleMouseUp,\n        onMouseMove: handleMouseMove,\n        ariaDescribedby,\n        statusType,\n      }}\n      screenReaderContent={announcement}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}