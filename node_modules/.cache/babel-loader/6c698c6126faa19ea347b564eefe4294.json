{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useNavigate } from '../router';\nimport Header from '../header';\nimport { SubmenuItem } from '../menu-item';\nimport { useUniqueId } from '../../../../internal/hooks/use-unique-id';\nimport FocusLock from '../../../../internal/components/focus-lock';\nimport styles from '../../../styles.css.js';\nimport { fireCancelableEvent, isPlainLeftClick } from '../../../../internal/events';\nconst SubmenuView = _ref => {\n  let {\n    onClose,\n    utilityIndex,\n    headerText,\n    headerSecondaryText,\n    dismissIconAriaLabel,\n    backIconAriaLabel,\n    definition\n  } = _ref;\n  const navigate = useNavigate();\n  const headerId = useUniqueId('overflow-menu-header');\n  return React.createElement(FocusLock, {\n    autoFocus: true\n  }, React.createElement(Header, {\n    secondaryText: headerSecondaryText,\n    dismissIconAriaLabel: dismissIconAriaLabel,\n    backIconAriaLabel: backIconAriaLabel,\n    onClose: onClose,\n    onBack: () => navigate('utilities', {\n      utilityIndex\n    })\n  }, React.createElement(\"span\", {\n    id: headerId\n  }, headerText)), React.createElement(\"ul\", {\n    className: clsx(styles['overflow-menu-list'], styles['overflow-menu-list-submenu']),\n    \"aria-labelledby\": headerId\n  }, definition.items.map((item, index) => React.createElement(SubmenuItem, Object.assign({\n    key: index\n  }, item, {\n    onClick: (event, item) => {\n      if (item.href && isPlainLeftClick(event)) {\n        fireCancelableEvent(definition.onItemFollow, {\n          id: item.id,\n          href: item.href,\n          external: item.external\n        }, event);\n      }\n      fireCancelableEvent(definition.onItemClick, {\n        id: item.id,\n        href: item.href,\n        external: item.external\n      }, event);\n      onClose === null || onClose === void 0 ? void 0 : onClose();\n    }\n  })))));\n};\nexport default SubmenuView;","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,WAAW,QAAQ,WAAW;AACvC,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,WAAW,QAAQ,0CAA0C;AACtE,OAAOC,SAAS,MAAM,4CAA4C;AAKlE,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,mBAAmB,EAAEC,gBAAgB,QAAQ,6BAA6B;AAOnF,MAAMC,WAAW,GAAG,QAQG;EAAA,IARF;IACnBC,OAAO;IACPC,YAAY;IACZC,UAAU;IACVC,mBAAmB;IACnBC,oBAAoB;IACpBC,iBAAiB;IACjBC;EAAU,CACO;EACjB,MAAMC,QAAQ,GAAGhB,WAAW,EAAE;EAC9B,MAAMiB,QAAQ,GAAGd,WAAW,CAAC,sBAAsB,CAAC;EAEpD,OACEL,oBAACM,SAAS;IAACc,SAAS,EAAE;EAAI,GACxBpB,oBAACG,MAAM;IACLkB,aAAa,EAAEP,mBAAmB;IAClCC,oBAAoB,EAAEA,oBAAoB;IAC1CC,iBAAiB,EAAEA,iBAAiB;IACpCL,OAAO,EAAEA,OAAO;IAChBW,MAAM,EAAE,MAAMJ,QAAQ,CAAC,WAAW,EAAE;MAAEN;IAAY,CAAE;EAAC,GAErDZ;IAAMuB,EAAE,EAAEJ;EAAQ,GAAGN,UAAU,CAAQ,CAChC,EACTb;IACEwB,SAAS,EAAEvB,IAAI,CAACM,MAAM,CAAC,oBAAoB,CAAC,EAAEA,MAAM,CAAC,4BAA4B,CAAC,CAAC;IAAA,mBAClEY;EAAQ,GAEvBF,UAAqD,CAACQ,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAC5E5B,oBAACI,WAAW;IACVyB,GAAG,EAAED;EAAK,GACND,IAAI;IACRG,OAAO,EAAE,CAACC,KAAK,EAAEJ,IAAI,KAAI;MACvB,IAAIA,IAAI,CAACK,IAAI,IAAIvB,gBAAgB,CAACsB,KAAK,CAAC,EAAE;QACxCvB,mBAAmB,CACjBS,UAAU,CAACgB,YAAY,EACvB;UAAEV,EAAE,EAAEI,IAAI,CAACJ,EAAE;UAAES,IAAI,EAAEL,IAAI,CAACK,IAAI;UAAEE,QAAQ,EAAEP,IAAI,CAACO;QAAQ,CAAE,EACzDH,KAAK,CACN;;MAGHvB,mBAAmB,CACjBS,UAAU,CAACkB,WAAW,EACtB;QAAEZ,EAAE,EAAEI,IAAI,CAACJ,EAAE;QAAES,IAAI,EAAEL,IAAI,CAACK,IAAI;QAAEE,QAAQ,EAAEP,IAAI,CAACO;MAAQ,CAAE,EACzDH,KAAK,CACN;MACDpB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,EAAI;IACb;EAAC,GAEJ,CAAC,CACC,CACK;AAEhB,CAAC;AAED,eAAeD,WAAW","names":["React","clsx","useNavigate","Header","SubmenuItem","useUniqueId","FocusLock","styles","fireCancelableEvent","isPlainLeftClick","SubmenuView","onClose","utilityIndex","headerText","headerSecondaryText","dismissIconAriaLabel","backIconAriaLabel","definition","navigate","headerId","autoFocus","secondaryText","onBack","id","className","items","map","item","index","key","onClick","event","href","onItemFollow","external","onItemClick"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/views/lib/default/top-navigation/parts/overflow-menu/views/submenu.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { useNavigate } from '../router';\nimport Header from '../header';\nimport { SubmenuItem } from '../menu-item';\nimport { useUniqueId } from '../../../../internal/hooks/use-unique-id';\nimport FocusLock from '../../../../internal/components/focus-lock';\n\nimport { TopNavigationProps } from '../../../interfaces';\n\nimport { View } from '..';\nimport styles from '../../../styles.css.js';\nimport { fireCancelableEvent, isPlainLeftClick } from '../../../../internal/events';\n\ninterface SubmenuViewProps extends View {\n  definition: TopNavigationProps.MenuDropdownUtility;\n  utilityIndex?: number;\n}\n\nconst SubmenuView = ({\n  onClose,\n  utilityIndex,\n  headerText,\n  headerSecondaryText,\n  dismissIconAriaLabel,\n  backIconAriaLabel,\n  definition,\n}: SubmenuViewProps) => {\n  const navigate = useNavigate();\n  const headerId = useUniqueId('overflow-menu-header');\n\n  return (\n    <FocusLock autoFocus={true}>\n      <Header\n        secondaryText={headerSecondaryText}\n        dismissIconAriaLabel={dismissIconAriaLabel}\n        backIconAriaLabel={backIconAriaLabel}\n        onClose={onClose}\n        onBack={() => navigate('utilities', { utilityIndex })}\n      >\n        <span id={headerId}>{headerText}</span>\n      </Header>\n      <ul\n        className={clsx(styles['overflow-menu-list'], styles['overflow-menu-list-submenu'])}\n        aria-labelledby={headerId}\n      >\n        {(definition as TopNavigationProps.MenuDropdownUtility).items.map((item, index) => (\n          <SubmenuItem\n            key={index}\n            {...item}\n            onClick={(event, item) => {\n              if (item.href && isPlainLeftClick(event)) {\n                fireCancelableEvent(\n                  definition.onItemFollow,\n                  { id: item.id, href: item.href, external: item.external },\n                  event\n                );\n              }\n\n              fireCancelableEvent(\n                definition.onItemClick,\n                { id: item.id, href: item.href, external: item.external },\n                event\n              );\n              onClose?.();\n            }}\n          />\n        ))}\n      </ul>\n    </FocusLock>\n  );\n};\n\nexport default SubmenuView;\n"]},"metadata":{},"sourceType":"module"}