{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useEffect, useRef } from 'react';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { getBaseProps } from '../internal/base-component';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport styles from './styles.css.js';\nimport CheckboxIcon from '../internal/components/checkbox-icon';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nvar InternalCheckbox = React.forwardRef(function (_a, ref) {\n  var controlId = _a.controlId,\n    name = _a.name,\n    checked = _a.checked,\n    disabled = _a.disabled,\n    ariaRequired = _a.ariaRequired,\n    indeterminate = _a.indeterminate,\n    children = _a.children,\n    description = _a.description,\n    ariaLabel = _a.ariaLabel,\n    _onFocus = _a.onFocus,\n    _onBlur = _a.onBlur,\n    onChange = _a.onChange,\n    tabIndex = _a.tabIndex,\n    showOutline = _a.showOutline,\n    ariaControls = _a.ariaControls,\n    __internalRootRef = _a.__internalRootRef,\n    rest = __rest(_a, [\"controlId\", \"name\", \"checked\", \"disabled\", \"ariaRequired\", \"indeterminate\", \"children\", \"description\", \"ariaLabel\", \"onFocus\", \"onBlur\", \"onChange\", \"tabIndex\", \"showOutline\", \"ariaControls\", \"__internalRootRef\"]);\n  var _useFormFieldContext = useFormFieldContext(rest),\n    ariaDescribedby = _useFormFieldContext.ariaDescribedby,\n    ariaLabelledby = _useFormFieldContext.ariaLabelledby;\n  var baseProps = getBaseProps(rest);\n  var checkboxRef = useRef(null);\n  useForwardFocus(ref, checkboxRef);\n  useEffect(function () {\n    if (checkboxRef.current) {\n      checkboxRef.current.indeterminate = Boolean(indeterminate);\n    }\n  });\n  return React.createElement(AbstractSwitch, Object.assign({}, baseProps, {\n    className: clsx(styles.root, baseProps.className),\n    controlClassName: styles['checkbox-control'],\n    outlineClassName: styles.outline,\n    controlId: controlId,\n    disabled: disabled,\n    label: children,\n    description: description,\n    descriptionBottomPadding: true,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby,\n    ariaControls: ariaControls,\n    showOutline: showOutline,\n    nativeControl: function nativeControl(nativeControlProps) {\n      return React.createElement(\"input\", Object.assign({}, nativeControlProps, {\n        ref: checkboxRef,\n        type: \"checkbox\",\n        checked: checked,\n        name: name,\n        \"aria-required\": ariaRequired ? 'true' : undefined,\n        tabIndex: tabIndex,\n        onFocus: function onFocus() {\n          return fireNonCancelableEvent(_onFocus);\n        },\n        onBlur: function onBlur() {\n          return fireNonCancelableEvent(_onBlur);\n        },\n        // empty handler to suppress React controllability warning\n        onChange: function onChange() {}\n      }));\n    },\n    onClick: function onClick() {\n      var _a;\n      (_a = checkboxRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      fireNonCancelableEvent(onChange,\n      // for deterministic transitions \"indeterminate\" -> \"checked\" -> \"unchecked\"\n      indeterminate ? {\n        checked: true,\n        indeterminate: false\n      } : {\n        checked: !checked,\n        indeterminate: false\n      });\n    },\n    styledControl: React.createElement(CheckboxIcon, {\n      checked: checked,\n      indeterminate: indeterminate,\n      disabled: disabled\n    }),\n    __internalRootRef: __internalRootRef\n  }));\n});\nexport default InternalCheckbox;","map":{"version":3,"mappings":"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","names":["clsx","React","useEffect","useRef","fireNonCancelableEvent","useForwardFocus","getBaseProps","AbstractSwitch","styles","CheckboxIcon","useFormFieldContext","InternalCheckbox","forwardRef","_a","ref","controlId","name","checked","disabled","ariaRequired","indeterminate","children","description","ariaLabel","onFocus","onBlur","onChange","tabIndex","showOutline","ariaControls","__internalRootRef","rest","ariaDescribedby","ariaLabelledby","baseProps","checkboxRef","current","Boolean","className","root","controlClassName","outlineClassName","outline","label","descriptionBottomPadding","nativeControl","nativeControlProps","type","undefined","onClick","focus","styledControl"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/checkbox/lib/default/checkbox/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useEffect, useRef } from 'react';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { getBaseProps } from '../internal/base-component';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { CheckboxProps } from './interfaces';\nimport styles from './styles.css.js';\nimport CheckboxIcon from '../internal/components/checkbox-icon';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\n\ninterface InternalProps extends CheckboxProps, InternalBaseComponentProps {\n  tabIndex?: -1;\n  showOutline?: boolean;\n}\n\nconst InternalCheckbox = React.forwardRef<CheckboxProps.Ref, InternalProps>(\n  (\n    {\n      controlId,\n      name,\n      checked,\n      disabled,\n      ariaRequired,\n      indeterminate,\n      children,\n      description,\n      ariaLabel,\n      onFocus,\n      onBlur,\n      onChange,\n      tabIndex,\n      showOutline,\n      ariaControls,\n      __internalRootRef,\n      ...rest\n    },\n    ref\n  ) => {\n    const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(rest);\n    const baseProps = getBaseProps(rest);\n    const checkboxRef = useRef<HTMLInputElement>(null);\n    useForwardFocus(ref, checkboxRef);\n    useEffect(() => {\n      if (checkboxRef.current) {\n        checkboxRef.current.indeterminate = Boolean(indeterminate);\n      }\n    });\n\n    return (\n      <AbstractSwitch\n        {...baseProps}\n        className={clsx(styles.root, baseProps.className)}\n        controlClassName={styles['checkbox-control']}\n        outlineClassName={styles.outline}\n        controlId={controlId}\n        disabled={disabled}\n        label={children}\n        description={description}\n        descriptionBottomPadding={true}\n        ariaLabel={ariaLabel}\n        ariaLabelledby={ariaLabelledby}\n        ariaDescribedby={ariaDescribedby}\n        ariaControls={ariaControls}\n        showOutline={showOutline}\n        nativeControl={nativeControlProps => (\n          <input\n            {...nativeControlProps}\n            ref={checkboxRef}\n            type=\"checkbox\"\n            checked={checked}\n            name={name}\n            aria-required={ariaRequired ? 'true' : undefined}\n            tabIndex={tabIndex}\n            onFocus={() => fireNonCancelableEvent(onFocus)}\n            onBlur={() => fireNonCancelableEvent(onBlur)}\n            // empty handler to suppress React controllability warning\n            onChange={() => {}}\n          />\n        )}\n        onClick={() => {\n          checkboxRef.current?.focus();\n          fireNonCancelableEvent(\n            onChange,\n            // for deterministic transitions \"indeterminate\" -> \"checked\" -> \"unchecked\"\n            indeterminate ? { checked: true, indeterminate: false } : { checked: !checked, indeterminate: false }\n          );\n        }}\n        styledControl={<CheckboxIcon checked={checked} indeterminate={indeterminate} disabled={disabled} />}\n        __internalRootRef={__internalRootRef}\n      />\n    );\n  }\n);\n\nexport default InternalCheckbox;\n"]},"metadata":{},"sourceType":"module"}