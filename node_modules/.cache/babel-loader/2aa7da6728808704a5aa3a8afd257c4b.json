{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nexport function checkColumnWidths(columnDefinitions) {\n  var _iterator = _createForOfIteratorHelper(columnDefinitions),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var column = _step.value;\n      checkProperty(column, 'minWidth');\n      checkProperty(column, 'width');\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nfunction checkProperty(column, name) {\n  var value = column[name];\n  if (typeof value !== 'number' && typeof value !== 'undefined') {\n    warnOnce('Table', \"resizableColumns feature requires \".concat(name, \" property to be a number, got \").concat(value, \". The component may work incorrectly.\"));\n  }\n}","map":{"version":3,"mappings":";AAAA;AACA;AAEA,SAASA,QAAQ,QAAQ,+CAA+C;AAGxE,OAAM,SAAUC,iBAAiB,CAACC,iBAAkE;EAAA,2CAC7EA,iBAAiB;IAAA;EAAA;IAAtC,oDAAwC;MAAA,IAA7BC,MAAM;MACfC,aAAa,CAACD,MAAM,EAAE,UAAU,CAAC;MACjCC,aAAa,CAACD,MAAM,EAAE,OAAO,CAAC;;EAC/B;IAAA;EAAA;IAAA;EAAA;AACH;AAEA,SAASC,aAAa,CAACD,MAAwC,EAAEE,IAA0B;EACzF,IAAMC,KAAK,GAAGH,MAAM,CAACE,IAAI,CAAC;EAC1B,IAAI,OAAOC,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,WAAW,EAAE;IAC7DN,QAAQ,CACN,OAAO,8CAC8BK,IAAI,2CAAiCC,KAAK,2CAChF;;AAEL","names":["warnOnce","checkColumnWidths","columnDefinitions","column","checkProperty","name","value"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/table/lib/default/table/column-widths-utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { TableProps } from './interfaces';\n\nexport function checkColumnWidths(columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<any>>) {\n  for (const column of columnDefinitions) {\n    checkProperty(column, 'minWidth');\n    checkProperty(column, 'width');\n  }\n}\n\nfunction checkProperty(column: TableProps.ColumnDefinition<any>, name: 'width' | 'minWidth') {\n  const value = column[name];\n  if (typeof value !== 'number' && typeof value !== 'undefined') {\n    warnOnce(\n      'Table',\n      `resizableColumns feature requires ${name} property to be a number, got ${value}. The component may work incorrectly.`\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}