{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { getBaseProps } from '../../base-component';\nimport { applyDisplayName } from '../../utils/apply-display-name';\nimport InternalButtonDropdown from '../../../button-dropdown/internal';\nimport InternalIcon from '../../../icon/internal';\nimport buttonDropdownStyles from '../../../button-dropdown/styles.css.js';\nimport styles from './styles.css.js';\nexport var ButtonTrigger = React.forwardRef(function (_ref, ref) {\n  var testUtilsClass = _ref.testUtilsClass,\n    iconName = _ref.iconName,\n    iconUrl = _ref.iconUrl,\n    iconAlt = _ref.iconAlt,\n    iconSvg = _ref.iconSvg,\n    badge = _ref.badge,\n    ariaLabel = _ref.ariaLabel,\n    offsetRight = _ref.offsetRight,\n    disabled = _ref.disabled,\n    expanded = _ref.expanded,\n    children = _ref.children,\n    _onClick = _ref.onClick;\n  var hasIcon = iconName || iconUrl || iconSvg;\n  return React.createElement(\"button\", {\n    ref: ref,\n    type: \"button\",\n    className: clsx(styles.button, styles[\"offset-right-\".concat(offsetRight)], testUtilsClass, _defineProperty({}, styles.expanded, expanded)),\n    \"aria-label\": ariaLabel,\n    \"aria-expanded\": !!expanded,\n    \"aria-haspopup\": true,\n    disabled: disabled,\n    onClick: function onClick(event) {\n      event.preventDefault();\n      _onClick && _onClick();\n    }\n  }, hasIcon && React.createElement(InternalIcon, {\n    className: styles.icon,\n    name: iconName,\n    url: iconUrl,\n    alt: iconAlt,\n    svg: iconSvg,\n    badge: badge\n  }), children && React.createElement(\"span\", {\n    className: styles.text\n  }, children), children && React.createElement(InternalIcon, {\n    name: \"caret-down-filled\",\n    className: expanded ? buttonDropdownStyles['rotate-up'] : buttonDropdownStyles['rotate-down']\n  }));\n});\nvar MenuDropdown = function MenuDropdown(_a) {\n  var iconName = _a.iconName,\n    iconUrl = _a.iconUrl,\n    iconAlt = _a.iconAlt,\n    iconSvg = _a.iconSvg,\n    badge = _a.badge,\n    offsetRight = _a.offsetRight,\n    children = _a.children,\n    props = __rest(_a, [\"iconName\", \"iconUrl\", \"iconAlt\", \"iconSvg\", \"badge\", \"offsetRight\", \"children\"]);\n  var baseProps = getBaseProps(props);\n  var dropdownTrigger = function dropdownTrigger(_ref2) {\n    var triggerRef = _ref2.triggerRef,\n      ariaLabel = _ref2.ariaLabel,\n      isOpen = _ref2.isOpen,\n      testUtilsClass = _ref2.testUtilsClass,\n      disabled = _ref2.disabled,\n      onClick = _ref2.onClick;\n    return React.createElement(ButtonTrigger, {\n      testUtilsClass: testUtilsClass,\n      ref: triggerRef,\n      disabled: disabled,\n      expanded: isOpen,\n      iconName: iconName,\n      iconUrl: iconUrl,\n      iconAlt: iconAlt,\n      iconSvg: iconSvg,\n      badge: badge,\n      ariaLabel: ariaLabel,\n      offsetRight: offsetRight,\n      onClick: onClick\n    }, children);\n  };\n  return React.createElement(InternalButtonDropdown, Object.assign({}, baseProps, props, {\n    variant: \"navigation\",\n    customTriggerBuilder: dropdownTrigger,\n    preferCenter: true\n  }));\n};\napplyDisplayName(MenuDropdown, 'MenuDropdown');\nexport default MenuDropdown;","map":{"version":3,"mappings":";;AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AAGzB,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,OAAOC,sBAAsB,MAAM,mCAAmC;AACtE,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,oBAAoB,MAAM,wCAAwC;AACzE,OAAOC,MAAM,MAAM,iBAAiB;AAKpC,OAAO,IAAMC,aAAa,GAAGP,KAAK,CAACQ,UAAU,CAC3C,gBAeEC,GAAmB,EACjB;EAAA,IAdAC,cAAc,QAAdA,cAAc;IACdC,QAAQ,QAARA,QAAQ;IACRC,OAAO,QAAPA,OAAO;IACPC,OAAO,QAAPA,OAAO;IACPC,OAAO,QAAPA,OAAO;IACPC,KAAK,QAALA,KAAK;IACLC,SAAS,QAATA,SAAS;IACTC,WAAW,QAAXA,WAAW;IACXC,QAAQ,QAARA,QAAQ;IACRC,QAAQ,QAARA,QAAQ;IACRC,QAAQ,QAARA,QAAQ;IACRC,QAAO,QAAPA,OAAO;EAIT,IAAMC,OAAO,GAAGX,QAAQ,IAAIC,OAAO,IAAIE,OAAO;EAE9C,OACEd;IACES,GAAG,EAAEA,GAAG;IACRc,IAAI,EAAC,QAAQ;IACbC,SAAS,EAAEzB,IAAI,CAACO,MAAM,CAACmB,MAAM,EAAEnB,MAAM,wBAAiBW,WAAW,EAAG,EAAEP,cAAc,sBACjFJ,MAAM,CAACa,QAAQ,EAAGA,QAAQ,EAC3B;IAAA,cACUH,SAAS;IAAA,iBACN,CAAC,CAACG,QAAQ;IAAA,iBACV,IAAI;IACnBD,QAAQ,EAAEA,QAAQ;IAClBG,OAAO,EAAE,sBAAK,EAAG;MACfK,KAAK,CAACC,cAAc,EAAE;MACtBN,QAAO,IAAIA,QAAO,EAAE;IACtB;EAAC,GAEAC,OAAO,IACNtB,oBAACI,YAAY;IACXoB,SAAS,EAAElB,MAAM,CAACsB,IAAI;IACtBC,IAAI,EAAElB,QAAQ;IACdmB,GAAG,EAAElB,OAAO;IACZmB,GAAG,EAAElB,OAAO;IACZmB,GAAG,EAAElB,OAAO;IACZC,KAAK,EAAEA;EAAK,EAEf,EACAK,QAAQ,IAAIpB;IAAMwB,SAAS,EAAElB,MAAM,CAAC2B;EAAI,GAAGb,QAAQ,CAAQ,EAC3DA,QAAQ,IACPpB,oBAACI,YAAY;IACXyB,IAAI,EAAC,mBAAmB;IACxBL,SAAS,EAAEL,QAAQ,GAAGd,oBAAoB,CAAC,WAAW,CAAC,GAAGA,oBAAoB,CAAC,aAAa;EAAC,EAEhG,CACM;AAEb,CAAC,CACF;AAED,IAAM6B,YAAY,GAAG,SAAfA,YAAY,CAAIC,EASF,EAAI;MARtBxB,QAAQ,GAMAwB,EAEU,CARlBxB,QAAQ;IACRC,OAAO,GAKCuB,EAEU,CAPlBvB,OAAO;IACPC,OAAO,GAICsB,EAEU,CANlBtB,OAAO;IACPC,OAAO,GAGCqB,EAEU,CALlBrB,OAAO;IACPC,KAAK,GAEGoB,EAEU,CAJlBpB,KAAK;IACLE,WAAW,GACHkB,EAEU,CAHlBlB,WAAW;IACXG,QAAQ,KAEU,CAFlBA,QAAQ;IACLgB,KAAK,cARY,iFASrB,CADS;EAER,IAAMC,SAAS,GAAGpC,YAAY,CAACmC,KAAK,CAAC;EAErC,IAAME,eAAe,GAAG,SAAlBA,eAAe,QAOI;IAAA,IANvBC,UAAU,SAAVA,UAAU;MACVvB,SAAS,SAATA,SAAS;MACTwB,MAAM,SAANA,MAAM;MACN9B,cAAc,SAAdA,cAAc;MACdQ,QAAQ,SAARA,QAAQ;MACRG,OAAO,SAAPA,OAAO;IAEP,OACErB,oBAACO,aAAa;MACZG,cAAc,EAAEA,cAAc;MAC9BD,GAAG,EAAE8B,UAAU;MACfrB,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEqB,MAAM;MAChB7B,QAAQ,EAAEA,QAAQ;MAClBC,OAAO,EAAEA,OAAO;MAChBC,OAAO,EAAEA,OAAO;MAChBC,OAAO,EAAEA,OAAO;MAChBC,KAAK,EAAEA,KAAK;MACZC,SAAS,EAAEA,SAAS;MACpBC,WAAW,EAAEA,WAAW;MACxBI,OAAO,EAAEA;IAAO,GAEfD,QAAQ,CACK;EAEpB,CAAC;EAED,OACEpB,oBAACG,sBAAsB,oBACjBkC,SAAS,EACTD,KAAK;IACTK,OAAO,EAAC,YAAY;IACpBC,oBAAoB,EAAEJ,eAAe;IACrCK,YAAY,EAAE;EAAI,GAClB;AAEN,CAAC;AAEDzC,gBAAgB,CAACgC,YAAY,EAAE,cAAc,CAAC;AAC9C,eAAeA,YAAY","names":["clsx","React","getBaseProps","applyDisplayName","InternalButtonDropdown","InternalIcon","buttonDropdownStyles","styles","ButtonTrigger","forwardRef","ref","testUtilsClass","iconName","iconUrl","iconAlt","iconSvg","badge","ariaLabel","offsetRight","disabled","expanded","children","onClick","hasIcon","type","className","button","event","preventDefault","icon","name","url","alt","svg","text","MenuDropdown","_a","props","baseProps","dropdownTrigger","triggerRef","isOpen","variant","customTriggerBuilder","preferCenter"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/components/menu-dropdown/lib/default/internal/components/menu-dropdown/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\n\nimport { MenuDropdownProps, ButtonTriggerProps } from './interfaces';\nimport { getBaseProps } from '../../base-component';\nimport { applyDisplayName } from '../../utils/apply-display-name';\nimport InternalButtonDropdown from '../../../button-dropdown/internal';\nimport InternalIcon from '../../../icon/internal';\nimport buttonDropdownStyles from '../../../button-dropdown/styles.css.js';\nimport styles from './styles.css.js';\nimport { CustomTriggerProps } from '../../../button-dropdown/interfaces';\n\nexport { MenuDropdownProps };\n\nexport const ButtonTrigger = React.forwardRef(\n  (\n    {\n      testUtilsClass,\n      iconName,\n      iconUrl,\n      iconAlt,\n      iconSvg,\n      badge,\n      ariaLabel,\n      offsetRight,\n      disabled,\n      expanded,\n      children,\n      onClick,\n    }: ButtonTriggerProps,\n    ref: React.Ref<any>\n  ) => {\n    const hasIcon = iconName || iconUrl || iconSvg;\n\n    return (\n      <button\n        ref={ref}\n        type=\"button\"\n        className={clsx(styles.button, styles[`offset-right-${offsetRight}`], testUtilsClass, {\n          [styles.expanded]: expanded,\n        })}\n        aria-label={ariaLabel}\n        aria-expanded={!!expanded}\n        aria-haspopup={true}\n        disabled={disabled}\n        onClick={event => {\n          event.preventDefault();\n          onClick && onClick();\n        }}\n      >\n        {hasIcon && (\n          <InternalIcon\n            className={styles.icon}\n            name={iconName}\n            url={iconUrl}\n            alt={iconAlt}\n            svg={iconSvg}\n            badge={badge}\n          />\n        )}\n        {children && <span className={styles.text}>{children}</span>}\n        {children && (\n          <InternalIcon\n            name=\"caret-down-filled\"\n            className={expanded ? buttonDropdownStyles['rotate-up'] : buttonDropdownStyles['rotate-down']}\n          />\n        )}\n      </button>\n    );\n  }\n);\n\nconst MenuDropdown = ({\n  iconName,\n  iconUrl,\n  iconAlt,\n  iconSvg,\n  badge,\n  offsetRight,\n  children,\n  ...props\n}: MenuDropdownProps) => {\n  const baseProps = getBaseProps(props);\n\n  const dropdownTrigger = ({\n    triggerRef,\n    ariaLabel,\n    isOpen,\n    testUtilsClass,\n    disabled,\n    onClick,\n  }: CustomTriggerProps) => {\n    return (\n      <ButtonTrigger\n        testUtilsClass={testUtilsClass}\n        ref={triggerRef}\n        disabled={disabled}\n        expanded={isOpen}\n        iconName={iconName}\n        iconUrl={iconUrl}\n        iconAlt={iconAlt}\n        iconSvg={iconSvg}\n        badge={badge}\n        ariaLabel={ariaLabel}\n        offsetRight={offsetRight}\n        onClick={onClick}\n      >\n        {children}\n      </ButtonTrigger>\n    );\n  };\n\n  return (\n    <InternalButtonDropdown\n      {...baseProps}\n      {...props}\n      variant=\"navigation\"\n      customTriggerBuilder={dropdownTrigger}\n      preferCenter={true}\n    />\n  );\n};\n\napplyDisplayName(MenuDropdown, 'MenuDropdown');\nexport default MenuDropdown;\n"]},"metadata":{},"sourceType":"module"}