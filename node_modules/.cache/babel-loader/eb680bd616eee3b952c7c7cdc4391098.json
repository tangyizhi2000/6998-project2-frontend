{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState, useEffect, useCallback } from 'react';\nimport { useStableCallback } from '../internal/stable-callback';\nimport { isDevelopment } from '../internal/is-development';\nimport { warnOnce } from '../internal/logging';\n/**\n * This hook allows you to make a component that can be used both in controlled\n * mode and uncontrolled mode. Pass in your component's props, and then implement\n * your component as if it was only controlled.\n *\n * A component determines its mode (either controlled or uncontrolled) on the\n * first render and keeps it for its lifetime. The mode cannot be switched later.\n *\n * @example\n * Using useControllableState in a custom checkbox component\n * ```\n * const [checked, setChecked] = useControllable(\n *   props.checked,\n *   props.onChange,\n *   props.defaultEnabled ?? false,\n *   {\n *     componentName: 'MyCheckboxComponent',\n *     propertyName: 'checked',\n *     changeHandler: 'onChange'\n *   }\n * );\n *\n * return (\n *   <input\n *     type=\"checkbox\"\n *     checked={checked}\n *     onChange={event => setChecked(event.target.checked)}\n *   />\n * );\n * ```\n *\n * @param controlledValue The value to use for controlled mode\n * @param changeHandler The update handler for controlled mode\n * @param defaultValue The initial value for uncontrolled mode\n * @param propertyDescriptions Property names used when emitting warnings\n * @param fireEvent Callback executed when controllable value changes\n * @returns A tuple of value and value setter\n */\nexport default function useControllable(controlledValue, changeHandler, defaultValue, propertyDescriptions, fireEvent) {\n  if (fireEvent === void 0) {\n    fireEvent = function fireEvent(value, handler) {\n      return handler(value);\n    };\n  }\n  var componentName = propertyDescriptions.componentName,\n    changeHandlerName = propertyDescriptions.changeHandlerName,\n    propertyName = propertyDescriptions.propertyName;\n  // The decision whether a component is controlled or uncontrolled is made on\n  // its first render and cannot be changed afterwards.\n  var isControlled = useState(controlledValue !== undefined)[0];\n  // Most build tools will just strip this block from production builds, so we can\n  // skip the conditional hook lint error.\n  if (isDevelopment) {\n    // Print a warning if a controlled property was passed in without a change handler.\n    // This may fire every render if the change handler isn't memoized, but warnOnce\n    // will dedupe the error messages.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      if (isControlled && changeHandler === undefined) {\n        warnOnce(componentName, \"You provided a `\".concat(propertyName, \"` prop without an `\").concat(changeHandlerName, \"` handler. This will render a non-interactive component.\"));\n      }\n    }, [changeHandler, isControlled, componentName, changeHandlerName, propertyName]);\n    // Print a warning if the component switches between controlled and uncontrolled mode.\n    var isControlledValueProvided_1 = controlledValue !== undefined;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      if (isControlled !== isControlledValueProvided_1) {\n        var initialMode = isControlled ? 'controlled' : 'uncontrolled';\n        var modeNow = isControlledValueProvided_1 ? 'controlled' : 'uncontrolled';\n        warnOnce(componentName, \"A component tried to change \".concat(initialMode, \" '\").concat(propertyName, \"' property to be \").concat(modeNow, \". \") + \"This is not supported. Properties should not switch from \".concat(initialMode, \" to \").concat(modeNow, \" (or vice versa). \") + \"Decide between using a controlled or uncontrolled mode for the lifetime of the component. \" + \"More info: https://fb.me/react-controlled-components\");\n      }\n    }, [isControlled, isControlledValueProvided_1, propertyName, componentName]);\n  }\n  // This is the value that is used if the component is uncontrolled.\n  var _a = useState(defaultValue),\n    valueState = _a[0],\n    setValue = _a[1];\n  var _b = useState(false),\n    isUncontrolledValueSet = _b[0],\n    setIsUncontrolledValueSet = _b[1];\n  var stableFireEvent = useStableCallback(function (value, handler) {\n    return fireEvent(value, handler);\n  });\n  var setControlledValue = useCallback(function (value) {\n    if (changeHandler) {\n      stableFireEvent(value, changeHandler);\n    }\n  }, [changeHandler, stableFireEvent]);\n  // We allow changes to the defaultValue prop to be reflected until the component\n  // starts controlling it internally.\n  var currentUncontrolledValue = isUncontrolledValueSet ? valueState : defaultValue;\n  var setUncontrolledValue = useCallback(function (newValue) {\n    setValue(newValue);\n    setIsUncontrolledValueSet(true);\n  }, []);\n  return isControlled ? [controlledValue, setControlledValue] : [currentUncontrolledValue, setUncontrolledValue];\n}","map":{"version":3,"names":["useState","useEffect","useCallback","useStableCallback","isDevelopment","warnOnce","useControllable","controlledValue","changeHandler","defaultValue","propertyDescriptions","fireEvent","value","handler","componentName","changeHandlerName","propertyName","isControlled","undefined","concat","isControlledValueProvided_1","initialMode","modeNow","_a","valueState","setValue","_b","isUncontrolledValueSet","setIsUncontrolledValueSet","stableFireEvent","setControlledValue","currentUncontrolledValue","setUncontrolledValue","newValue"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/component-toolkit/lib/use-controllable-state/use-controllable-state.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState, useEffect, useCallback } from 'react';\nimport { useStableCallback } from '../internal/stable-callback';\nimport { isDevelopment } from '../internal/is-development';\nimport { warnOnce } from '../internal/logging';\n/**\n * This hook allows you to make a component that can be used both in controlled\n * mode and uncontrolled mode. Pass in your component's props, and then implement\n * your component as if it was only controlled.\n *\n * A component determines its mode (either controlled or uncontrolled) on the\n * first render and keeps it for its lifetime. The mode cannot be switched later.\n *\n * @example\n * Using useControllableState in a custom checkbox component\n * ```\n * const [checked, setChecked] = useControllable(\n *   props.checked,\n *   props.onChange,\n *   props.defaultEnabled ?? false,\n *   {\n *     componentName: 'MyCheckboxComponent',\n *     propertyName: 'checked',\n *     changeHandler: 'onChange'\n *   }\n * );\n *\n * return (\n *   <input\n *     type=\"checkbox\"\n *     checked={checked}\n *     onChange={event => setChecked(event.target.checked)}\n *   />\n * );\n * ```\n *\n * @param controlledValue The value to use for controlled mode\n * @param changeHandler The update handler for controlled mode\n * @param defaultValue The initial value for uncontrolled mode\n * @param propertyDescriptions Property names used when emitting warnings\n * @param fireEvent Callback executed when controllable value changes\n * @returns A tuple of value and value setter\n */\nexport default function useControllable(controlledValue, changeHandler, defaultValue, propertyDescriptions, fireEvent) {\n    if (fireEvent === void 0) { fireEvent = function (value, handler) { return handler(value); }; }\n    var componentName = propertyDescriptions.componentName, changeHandlerName = propertyDescriptions.changeHandlerName, propertyName = propertyDescriptions.propertyName;\n    // The decision whether a component is controlled or uncontrolled is made on\n    // its first render and cannot be changed afterwards.\n    var isControlled = useState(controlledValue !== undefined)[0];\n    // Most build tools will just strip this block from production builds, so we can\n    // skip the conditional hook lint error.\n    if (isDevelopment) {\n        // Print a warning if a controlled property was passed in without a change handler.\n        // This may fire every render if the change handler isn't memoized, but warnOnce\n        // will dedupe the error messages.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useEffect(function () {\n            if (isControlled && changeHandler === undefined) {\n                warnOnce(componentName, \"You provided a `\".concat(propertyName, \"` prop without an `\").concat(changeHandlerName, \"` handler. This will render a non-interactive component.\"));\n            }\n        }, [changeHandler, isControlled, componentName, changeHandlerName, propertyName]);\n        // Print a warning if the component switches between controlled and uncontrolled mode.\n        var isControlledValueProvided_1 = controlledValue !== undefined;\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useEffect(function () {\n            if (isControlled !== isControlledValueProvided_1) {\n                var initialMode = isControlled ? 'controlled' : 'uncontrolled';\n                var modeNow = isControlledValueProvided_1 ? 'controlled' : 'uncontrolled';\n                warnOnce(componentName, \"A component tried to change \".concat(initialMode, \" '\").concat(propertyName, \"' property to be \").concat(modeNow, \". \") +\n                    \"This is not supported. Properties should not switch from \".concat(initialMode, \" to \").concat(modeNow, \" (or vice versa). \") +\n                    \"Decide between using a controlled or uncontrolled mode for the lifetime of the component. \" +\n                    \"More info: https://fb.me/react-controlled-components\");\n            }\n        }, [isControlled, isControlledValueProvided_1, propertyName, componentName]);\n    }\n    // This is the value that is used if the component is uncontrolled.\n    var _a = useState(defaultValue), valueState = _a[0], setValue = _a[1];\n    var _b = useState(false), isUncontrolledValueSet = _b[0], setIsUncontrolledValueSet = _b[1];\n    var stableFireEvent = useStableCallback(function (value, handler) { return fireEvent(value, handler); });\n    var setControlledValue = useCallback(function (value) {\n        if (changeHandler) {\n            stableFireEvent(value, changeHandler);\n        }\n    }, [changeHandler, stableFireEvent]);\n    // We allow changes to the defaultValue prop to be reflected until the component\n    // starts controlling it internally.\n    var currentUncontrolledValue = isUncontrolledValueSet ? valueState : defaultValue;\n    var setUncontrolledValue = useCallback(function (newValue) {\n        setValue(newValue);\n        setIsUncontrolledValueSet(true);\n    }, []);\n    return isControlled ? [controlledValue, setControlledValue] : [currentUncontrolledValue, setUncontrolledValue];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}