{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useEffect, memo, useRef, useMemo } from 'react';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport ChartPlot from '../internal/components/chart-plot';\nimport AxisLabel from '../internal/components/cartesian-chart/axis-label';\nimport LabelsMeasure from '../internal/components/cartesian-chart/labels-measure';\nimport LeftLabels from '../internal/components/cartesian-chart/left-labels';\nimport BottomLabels, { useBottomLabels } from '../internal/components/cartesian-chart/bottom-labels';\nimport EmphasizedBaseline from '../internal/components/cartesian-chart/emphasized-baseline';\nimport AreaDataSeries from './elements/data-series';\nimport AreaChartPopover from './elements/chart-popover';\nimport AreaHighlightedPoint from './elements/highlighted-point';\nimport AreaVerticalMarker from './elements/vertical-marker';\nimport useHighlightDetails from './elements/use-highlight-details';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { useSelector } from './async-store';\nimport { CartesianChartContainer } from '../internal/components/cartesian-chart/chart-container';\nconst DEFAULT_CHART_WIDTH = 500;\nconst LEFT_LABELS_MARGIN = 16;\nconst BOTTOM_LABELS_OFFSET = 12;\nexport default memo(ChartContainer);\nfunction ChartContainer(_ref) {\n  let {\n    model,\n    autoWidth,\n    xTitle,\n    yTitle,\n    detailPopoverSize,\n    detailPopoverFooter,\n    ariaLabel,\n    ariaLabelledby,\n    ariaDescription,\n    i18nStrings: {\n      xTickFormatter: deprecatedXTickFormatter,\n      yTickFormatter: deprecatedYTickFormatter,\n      detailTotalFormatter: deprecatedDetailTotalFormatter,\n      detailTotalLabel,\n      chartAriaRoleDescription,\n      xAxisAriaRoleDescription,\n      yAxisAriaRoleDescription,\n      detailPopoverDismissAriaLabel\n    } = {},\n    fitHeight,\n    minHeight,\n    xTickFormatter = deprecatedXTickFormatter,\n    yTickFormatter = deprecatedYTickFormatter,\n    detailTotalFormatter = deprecatedDetailTotalFormatter\n  } = _ref;\n  const [leftLabelsWidth, setLeftLabelsWidth] = useState(0);\n  const [containerWidth, containerWidthRef] = useContainerWidth(DEFAULT_CHART_WIDTH);\n  const bottomLabelsProps = useBottomLabels({\n    ticks: model.computed.xTicks,\n    scale: model.computed.xScale,\n    tickFormatter: xTickFormatter\n  });\n  // Calculate the width of the plot area and tell it to the parent.\n  const plotWidth = Math.max(0, containerWidth - leftLabelsWidth - LEFT_LABELS_MARGIN);\n  useEffect(() => {\n    autoWidth(plotWidth);\n  }, [autoWidth, plotWidth]);\n  const highlightDetails = useHighlightDetails({\n    model,\n    xTickFormatter,\n    yTickFormatter,\n    detailTotalFormatter,\n    detailTotalLabel\n  });\n  const highlightedPointRef = useRef(null);\n  const mergedRef = useMergeRefs(containerWidthRef, model.refs.container);\n  const isPointHighlighted = model.interactions.get().highlightedPoint !== null;\n  const highlightedX = useSelector(model.interactions, state => state.highlightedX);\n  const detailPopoverFooterContent = useMemo(() => detailPopoverFooter && highlightedX ? detailPopoverFooter(highlightedX[0].x) : null, [detailPopoverFooter, highlightedX]);\n  return React.createElement(CartesianChartContainer, {\n    ref: mergedRef,\n    minHeight: minHeight + bottomLabelsProps.height,\n    fitHeight: !!fitHeight,\n    leftAxisLabel: React.createElement(AxisLabel, {\n      axis: \"y\",\n      position: \"left\",\n      title: yTitle\n    }),\n    leftAxisLabelMeasure: React.createElement(LabelsMeasure, {\n      scale: model.computed.yScale,\n      ticks: model.computed.yTicks,\n      tickFormatter: yTickFormatter,\n      autoWidth: setLeftLabelsWidth\n    }),\n    bottomAxisLabel: React.createElement(AxisLabel, {\n      axis: \"x\",\n      position: \"bottom\",\n      title: xTitle\n    }),\n    chartPlot: React.createElement(ChartPlot, {\n      ref: model.refs.plot,\n      width: \"100%\",\n      height: fitHeight ? `calc(100% - ${bottomLabelsProps.height}px)` : model.height,\n      offsetBottom: bottomLabelsProps.height,\n      ariaLabel: ariaLabel,\n      ariaLabelledby: ariaLabelledby,\n      ariaDescription: ariaDescription,\n      ariaRoleDescription: chartAriaRoleDescription,\n      activeElementKey: !(highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.isPopoverPinned) && (highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.activeLabel),\n      activeElementRef: isPointHighlighted ? highlightedPointRef : model.refs.verticalMarker,\n      activeElementFocusOffset: isPointHighlighted ? 3 : {\n        x: 8,\n        y: 0\n      },\n      isClickable: !(highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.isPopoverPinned),\n      onMouseMove: model.handlers.onSVGMouseMove,\n      onMouseOut: model.handlers.onSVGMouseOut,\n      onMouseDown: model.handlers.onSVGMouseDown,\n      onKeyDown: model.handlers.onSVGKeyDown,\n      onFocus: model.handlers.onSVGFocus,\n      onBlur: model.handlers.onSVGBlur\n    }, React.createElement(\"line\", {\n      ref: model.refs.plotMeasure,\n      x1: \"0\",\n      x2: \"0\",\n      y1: \"0\",\n      y2: \"100%\",\n      stroke: \"transparent\",\n      strokeWidth: 1,\n      style: {\n        pointerEvents: 'none'\n      }\n    }), React.createElement(LeftLabels, {\n      width: model.width,\n      height: model.height,\n      scale: model.computed.yScale,\n      ticks: model.computed.yTicks,\n      tickFormatter: yTickFormatter,\n      title: yTitle,\n      ariaRoleDescription: yAxisAriaRoleDescription\n    }), React.createElement(AreaDataSeries, {\n      model: model\n    }), React.createElement(BottomLabels, Object.assign({}, bottomLabelsProps, {\n      width: model.width,\n      height: model.height,\n      scale: model.computed.xScale,\n      title: xTitle,\n      ariaRoleDescription: xAxisAriaRoleDescription,\n      offsetLeft: leftLabelsWidth + BOTTOM_LABELS_OFFSET,\n      offsetRight: BOTTOM_LABELS_OFFSET\n    })), React.createElement(EmphasizedBaseline, {\n      width: model.width,\n      height: model.height,\n      scale: model.computed.yScale\n    }), React.createElement(AreaVerticalMarker, {\n      model: model\n    }), React.createElement(AreaHighlightedPoint, {\n      ref: highlightedPointRef,\n      model: model,\n      ariaLabel: highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.activeLabel\n    })),\n    popover: React.createElement(AreaChartPopover, {\n      model: model,\n      highlightDetails: highlightDetails,\n      dismissAriaLabel: detailPopoverDismissAriaLabel,\n      size: detailPopoverSize,\n      footer: detailPopoverFooterContent\n    })\n  });\n}","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","memo","useRef","useMemo","useMergeRefs","ChartPlot","AxisLabel","LabelsMeasure","LeftLabels","BottomLabels","useBottomLabels","EmphasizedBaseline","AreaDataSeries","AreaChartPopover","AreaHighlightedPoint","AreaVerticalMarker","useHighlightDetails","useContainerWidth","useSelector","CartesianChartContainer","DEFAULT_CHART_WIDTH","LEFT_LABELS_MARGIN","BOTTOM_LABELS_OFFSET","ChartContainer","model","autoWidth","xTitle","yTitle","detailPopoverSize","detailPopoverFooter","ariaLabel","ariaLabelledby","ariaDescription","i18nStrings","xTickFormatter","deprecatedXTickFormatter","yTickFormatter","deprecatedYTickFormatter","detailTotalFormatter","deprecatedDetailTotalFormatter","detailTotalLabel","chartAriaRoleDescription","xAxisAriaRoleDescription","yAxisAriaRoleDescription","detailPopoverDismissAriaLabel","fitHeight","minHeight","leftLabelsWidth","setLeftLabelsWidth","containerWidth","containerWidthRef","bottomLabelsProps","ticks","computed","xTicks","scale","xScale","tickFormatter","plotWidth","Math","max","highlightDetails","highlightedPointRef","mergedRef","refs","container","isPointHighlighted","interactions","get","highlightedPoint","highlightedX","state","detailPopoverFooterContent","x","ref","height","leftAxisLabel","axis","position","title","leftAxisLabelMeasure","yScale","yTicks","bottomAxisLabel","chartPlot","plot","width","offsetBottom","ariaRoleDescription","activeElementKey","isPopoverPinned","activeLabel","activeElementRef","verticalMarker","activeElementFocusOffset","y","isClickable","onMouseMove","handlers","onSVGMouseMove","onMouseOut","onSVGMouseOut","onMouseDown","onSVGMouseDown","onKeyDown","onSVGKeyDown","onFocus","onSVGFocus","onBlur","onSVGBlur","plotMeasure","x1","x2","y1","y2","stroke","strokeWidth","style","pointerEvents","offsetLeft","offsetRight","popover","dismissAriaLabel","size","footer"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/area-chart/lib/default/area-chart/chart-container.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useEffect, memo, useRef, useMemo } from 'react';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\n\nimport ChartPlot from '../internal/components/chart-plot';\nimport AxisLabel from '../internal/components/cartesian-chart/axis-label';\nimport LabelsMeasure from '../internal/components/cartesian-chart/labels-measure';\nimport LeftLabels from '../internal/components/cartesian-chart/left-labels';\nimport BottomLabels, { useBottomLabels } from '../internal/components/cartesian-chart/bottom-labels';\nimport EmphasizedBaseline from '../internal/components/cartesian-chart/emphasized-baseline';\nimport { AreaChartProps } from './interfaces';\nimport { ChartModel } from './model';\nimport AreaDataSeries from './elements/data-series';\nimport AreaChartPopover from './elements/chart-popover';\nimport AreaHighlightedPoint from './elements/highlighted-point';\nimport AreaVerticalMarker from './elements/vertical-marker';\n\nimport useHighlightDetails from './elements/use-highlight-details';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { useSelector } from './async-store';\nimport { CartesianChartContainer } from '../internal/components/cartesian-chart/chart-container';\n\nconst DEFAULT_CHART_WIDTH = 500;\nconst LEFT_LABELS_MARGIN = 16;\nconst BOTTOM_LABELS_OFFSET = 12;\n\ntype TickFormatter = undefined | ((value: AreaChartProps.DataTypes) => string);\n\ninterface ChartContainerProps<T extends AreaChartProps.DataTypes>\n  extends Pick<\n    AreaChartProps<T>,\n    | 'xTitle'\n    | 'yTitle'\n    | 'xTickFormatter'\n    | 'yTickFormatter'\n    | 'detailTotalFormatter'\n    | 'detailPopoverSize'\n    | 'detailPopoverFooter'\n    | 'ariaLabel'\n    | 'ariaLabelledby'\n    | 'ariaDescription'\n    | 'i18nStrings'\n  > {\n  model: ChartModel<T>;\n  autoWidth: (value: number) => void;\n  fitHeight?: boolean;\n  minHeight: number;\n}\n\nexport default memo(ChartContainer) as typeof ChartContainer;\n\nfunction ChartContainer<T extends AreaChartProps.DataTypes>({\n  model,\n  autoWidth,\n  xTitle,\n  yTitle,\n  detailPopoverSize,\n  detailPopoverFooter,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescription,\n  i18nStrings: {\n    xTickFormatter: deprecatedXTickFormatter,\n    yTickFormatter: deprecatedYTickFormatter,\n    detailTotalFormatter: deprecatedDetailTotalFormatter,\n    detailTotalLabel,\n    chartAriaRoleDescription,\n    xAxisAriaRoleDescription,\n    yAxisAriaRoleDescription,\n    detailPopoverDismissAriaLabel,\n  } = {},\n  fitHeight,\n  minHeight,\n  xTickFormatter = deprecatedXTickFormatter,\n  yTickFormatter = deprecatedYTickFormatter,\n  detailTotalFormatter = deprecatedDetailTotalFormatter,\n}: ChartContainerProps<T>) {\n  const [leftLabelsWidth, setLeftLabelsWidth] = useState(0);\n  const [containerWidth, containerWidthRef] = useContainerWidth(DEFAULT_CHART_WIDTH);\n\n  const bottomLabelsProps = useBottomLabels({\n    ticks: model.computed.xTicks,\n    scale: model.computed.xScale,\n    tickFormatter: xTickFormatter as TickFormatter,\n  });\n\n  // Calculate the width of the plot area and tell it to the parent.\n  const plotWidth = Math.max(0, containerWidth - leftLabelsWidth - LEFT_LABELS_MARGIN);\n  useEffect(() => {\n    autoWidth(plotWidth);\n  }, [autoWidth, plotWidth]);\n\n  const highlightDetails = useHighlightDetails({\n    model,\n    xTickFormatter,\n    yTickFormatter,\n    detailTotalFormatter,\n    detailTotalLabel,\n  });\n\n  const highlightedPointRef = useRef<SVGGElement>(null);\n\n  const mergedRef = useMergeRefs(containerWidthRef, model.refs.container);\n\n  const isPointHighlighted = model.interactions.get().highlightedPoint !== null;\n\n  const highlightedX = useSelector(model.interactions, state => state.highlightedX);\n\n  const detailPopoverFooterContent = useMemo(\n    () => (detailPopoverFooter && highlightedX ? detailPopoverFooter(highlightedX[0].x) : null),\n    [detailPopoverFooter, highlightedX]\n  );\n\n  return (\n    <CartesianChartContainer\n      ref={mergedRef}\n      minHeight={minHeight + bottomLabelsProps.height}\n      fitHeight={!!fitHeight}\n      leftAxisLabel={<AxisLabel axis=\"y\" position=\"left\" title={yTitle} />}\n      leftAxisLabelMeasure={\n        <LabelsMeasure\n          scale={model.computed.yScale}\n          ticks={model.computed.yTicks}\n          tickFormatter={yTickFormatter as TickFormatter}\n          autoWidth={setLeftLabelsWidth}\n        />\n      }\n      bottomAxisLabel={<AxisLabel axis=\"x\" position=\"bottom\" title={xTitle} />}\n      chartPlot={\n        <ChartPlot\n          ref={model.refs.plot}\n          width=\"100%\"\n          height={fitHeight ? `calc(100% - ${bottomLabelsProps.height}px)` : model.height}\n          offsetBottom={bottomLabelsProps.height}\n          ariaLabel={ariaLabel}\n          ariaLabelledby={ariaLabelledby}\n          ariaDescription={ariaDescription}\n          ariaRoleDescription={chartAriaRoleDescription}\n          activeElementKey={!highlightDetails?.isPopoverPinned && highlightDetails?.activeLabel}\n          activeElementRef={isPointHighlighted ? highlightedPointRef : model.refs.verticalMarker}\n          activeElementFocusOffset={isPointHighlighted ? 3 : { x: 8, y: 0 }}\n          isClickable={!highlightDetails?.isPopoverPinned}\n          onMouseMove={model.handlers.onSVGMouseMove}\n          onMouseOut={model.handlers.onSVGMouseOut}\n          onMouseDown={model.handlers.onSVGMouseDown}\n          onKeyDown={model.handlers.onSVGKeyDown}\n          onFocus={model.handlers.onSVGFocus}\n          onBlur={model.handlers.onSVGBlur}\n        >\n          <line\n            ref={model.refs.plotMeasure}\n            x1=\"0\"\n            x2=\"0\"\n            y1=\"0\"\n            y2=\"100%\"\n            stroke=\"transparent\"\n            strokeWidth={1}\n            style={{ pointerEvents: 'none' }}\n          />\n\n          <LeftLabels\n            width={model.width}\n            height={model.height}\n            scale={model.computed.yScale}\n            ticks={model.computed.yTicks}\n            tickFormatter={yTickFormatter}\n            title={yTitle}\n            ariaRoleDescription={yAxisAriaRoleDescription}\n          />\n\n          <AreaDataSeries model={model} />\n\n          <BottomLabels\n            {...bottomLabelsProps}\n            width={model.width}\n            height={model.height}\n            scale={model.computed.xScale}\n            title={xTitle}\n            ariaRoleDescription={xAxisAriaRoleDescription}\n            offsetLeft={leftLabelsWidth + BOTTOM_LABELS_OFFSET}\n            offsetRight={BOTTOM_LABELS_OFFSET}\n          />\n\n          <EmphasizedBaseline width={model.width} height={model.height} scale={model.computed.yScale} />\n\n          <AreaVerticalMarker model={model} />\n\n          <AreaHighlightedPoint ref={highlightedPointRef} model={model} ariaLabel={highlightDetails?.activeLabel} />\n        </ChartPlot>\n      }\n      popover={\n        <AreaChartPopover\n          model={model}\n          highlightDetails={highlightDetails}\n          dismissAriaLabel={detailPopoverDismissAriaLabel}\n          size={detailPopoverSize}\n          footer={detailPopoverFooterContent}\n        />\n      }\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}