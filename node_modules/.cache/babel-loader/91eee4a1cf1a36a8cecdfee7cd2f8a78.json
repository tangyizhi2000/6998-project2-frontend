{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../../base-component';\nimport InternalIcon from '../../../icon/internal';\nimport styles from './styles.css.js';\nimport { fireKeyboardEvent, fireCancelableEvent } from '../../events';\nvar ButtonTrigger = function ButtonTrigger(_a, ref) {\n  var children = _a.children,\n    _a$pressed = _a.pressed,\n    pressed = _a$pressed === void 0 ? false : _a$pressed,\n    _a$hideCaret = _a.hideCaret,\n    hideCaret = _a$hideCaret === void 0 ? false : _a$hideCaret,\n    _a$disabled = _a.disabled,\n    disabled = _a$disabled === void 0 ? false : _a$disabled,\n    _a$readOnly = _a.readOnly,\n    readOnly = _a$readOnly === void 0 ? false : _a$readOnly,\n    _a$invalid = _a.invalid,\n    invalid = _a$invalid === void 0 ? false : _a$invalid,\n    inlineTokens = _a.inlineTokens,\n    inFilteringToken = _a.inFilteringToken,\n    ariaHasPopup = _a.ariaHasPopup,\n    ariaLabel = _a.ariaLabel,\n    ariaLabelledby = _a.ariaLabelledby,\n    ariaDescribedby = _a.ariaDescribedby,\n    ariaControls = _a.ariaControls,\n    onKeyDown = _a.onKeyDown,\n    onKeyUp = _a.onKeyUp,\n    onMouseDown = _a.onMouseDown,\n    onClick = _a.onClick,\n    onFocus = _a.onFocus,\n    onBlur = _a.onBlur,\n    autoFocus = _a.autoFocus,\n    restProps = __rest(_a, [\"children\", \"pressed\", \"hideCaret\", \"disabled\", \"readOnly\", \"invalid\", \"inlineTokens\", \"inFilteringToken\", \"ariaHasPopup\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescribedby\", \"ariaControls\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onClick\", \"onFocus\", \"onBlur\", \"autoFocus\"]);\n  var baseProps = getBaseProps(restProps);\n  var attributes = Object.assign(Object.assign({}, baseProps), {\n    type: 'button',\n    className: clsx(styles['button-trigger'], baseProps.className, pressed && styles.pressed, disabled && styles.disabled, invalid && styles.invalid, !hideCaret && styles['has-caret'], readOnly && styles['read-only'], inFilteringToken && styles['in-filtering-token'], inlineTokens && styles['inline-tokens']),\n    disabled: disabled || readOnly,\n    'aria-expanded': pressed,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby,\n    'aria-haspopup': ariaHasPopup !== null && ariaHasPopup !== void 0 ? ariaHasPopup : 'listbox',\n    'aria-controls': ariaControls,\n    onKeyDown: onKeyDown && function (event) {\n      return fireKeyboardEvent(onKeyDown, event);\n    },\n    onKeyUp: onKeyUp && function (event) {\n      return fireKeyboardEvent(onKeyUp, event);\n    },\n    onMouseDown: onMouseDown && function (event) {\n      return fireCancelableEvent(onMouseDown, {}, event);\n    },\n    onClick: onClick && function (event) {\n      return fireCancelableEvent(onClick, {}, event);\n    },\n    onFocus: onFocus && function (event) {\n      return fireCancelableEvent(onFocus, {}, event);\n    },\n    onBlur: onBlur && function (event) {\n      return fireCancelableEvent(onBlur, {\n        relatedTarget: event.relatedTarget\n      }, event);\n    },\n    autoFocus: autoFocus\n  });\n  if (invalid) {\n    attributes['aria-invalid'] = invalid;\n  }\n  return React.createElement(\"button\", Object.assign({\n    ref: ref\n  }, attributes), children, !hideCaret && React.createElement(\"span\", {\n    className: styles.arrow\n  }, React.createElement(InternalIcon, {\n    name: \"caret-down-filled\",\n    variant: disabled ? 'disabled' : 'normal'\n  })));\n};\nexport default React.forwardRef(ButtonTrigger);","map":{"version":3,"mappings":"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","names":["React","clsx","getBaseProps","InternalIcon","styles","fireKeyboardEvent","fireCancelableEvent","ButtonTrigger","_a","ref","children","pressed","hideCaret","disabled","readOnly","invalid","inlineTokens","inFilteringToken","ariaHasPopup","ariaLabel","ariaLabelledby","ariaDescribedby","ariaControls","onKeyDown","onKeyUp","onMouseDown","onClick","onFocus","onBlur","autoFocus","restProps","baseProps","attributes","type","className","event","relatedTarget","arrow","name","variant","forwardRef"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/components/button-trigger/lib/default/internal/components/button-trigger/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { ButtonHTMLAttributes } from 'react';\nimport clsx from 'clsx';\nimport { BaseComponentProps, getBaseProps } from '../../base-component';\nimport InternalIcon from '../../../icon/internal';\nimport styles from './styles.css.js';\nimport { fireKeyboardEvent, fireCancelableEvent, CancelableEventHandler, BaseKeyDetail } from '../../events';\n\nexport interface ButtonTriggerProps extends BaseComponentProps {\n  children?: React.ReactNode;\n  pressed?: boolean;\n  hideCaret?: boolean;\n  disabled?: boolean;\n  readOnly?: boolean;\n  invalid?: boolean;\n  inFilteringToken?: boolean;\n  inlineTokens?: boolean;\n  ariaHasPopup?: 'true' | 'listbox' | 'dialog';\n  ariaControls?: string;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n  onKeyDown?: CancelableEventHandler<BaseKeyDetail>;\n  onKeyUp?: CancelableEventHandler<BaseKeyDetail>;\n  onMouseDown?: CancelableEventHandler;\n  onClick?: CancelableEventHandler;\n  onFocus?: CancelableEventHandler;\n  onBlur?: CancelableEventHandler<{ relatedTarget: Node | null }>;\n  autoFocus?: boolean;\n}\n\nconst ButtonTrigger = (\n  {\n    children,\n    pressed = false,\n    hideCaret = false,\n    disabled = false,\n    readOnly = false,\n    invalid = false,\n    inlineTokens,\n    inFilteringToken,\n    ariaHasPopup,\n    ariaLabel,\n    ariaLabelledby,\n    ariaDescribedby,\n    ariaControls,\n    onKeyDown,\n    onKeyUp,\n    onMouseDown,\n    onClick,\n    onFocus,\n    onBlur,\n    autoFocus,\n    ...restProps\n  }: ButtonTriggerProps,\n  ref: React.Ref<HTMLButtonElement>\n) => {\n  const baseProps = getBaseProps(restProps);\n  const attributes: ButtonHTMLAttributes<HTMLButtonElement> = {\n    ...baseProps,\n    type: 'button',\n    className: clsx(\n      styles['button-trigger'],\n      baseProps.className,\n      pressed && styles.pressed,\n      disabled && styles.disabled,\n      invalid && styles.invalid,\n      !hideCaret && styles['has-caret'],\n      readOnly && styles['read-only'],\n      inFilteringToken && styles['in-filtering-token'],\n      inlineTokens && styles['inline-tokens']\n    ),\n    disabled: disabled || readOnly,\n    'aria-expanded': pressed,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby,\n    'aria-haspopup': ariaHasPopup ?? 'listbox',\n    'aria-controls': ariaControls,\n    onKeyDown: onKeyDown && (event => fireKeyboardEvent(onKeyDown, event)),\n    onKeyUp: onKeyUp && (event => fireKeyboardEvent(onKeyUp, event)),\n    onMouseDown: onMouseDown && (event => fireCancelableEvent(onMouseDown, {}, event)),\n    onClick: onClick && (event => fireCancelableEvent(onClick, {}, event)),\n    onFocus: onFocus && (event => fireCancelableEvent(onFocus, {}, event)),\n    onBlur: onBlur && (event => fireCancelableEvent(onBlur, { relatedTarget: event.relatedTarget }, event)),\n    autoFocus,\n  };\n\n  if (invalid) {\n    attributes['aria-invalid'] = invalid;\n  }\n\n  return (\n    <button ref={ref} {...attributes}>\n      {children}\n      {!hideCaret && (\n        <span className={styles.arrow}>\n          <InternalIcon name=\"caret-down-filled\" variant={disabled ? 'disabled' : 'normal'} />\n        </span>\n      )}\n    </button>\n  );\n};\n\nexport namespace ButtonTriggerProps {\n  export interface Ref {\n    focus(): void;\n  }\n}\n\nexport default React.forwardRef(ButtonTrigger);\n"]},"metadata":{},"sourceType":"module"}