{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from './styles.css.js';\nimport { normalizeLocale } from '../internal/utils/locale';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { KeyCode } from '../internal/keycode';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport InternalBox from '../box/internal';\nimport { DateRangePickerDropdown } from './dropdown';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport Dropdown from '../internal/components/dropdown';\nimport { useFocusTracker } from '../internal/hooks/use-focus-tracker';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport ButtonTrigger from '../internal/components/button-trigger';\nimport { FormFieldContext, useFormFieldContext } from '../internal/context/form-field-context';\nimport InternalIcon from '../icon/internal';\nimport { normalizeTimeOffset, shiftTimeOffset } from './time-offset';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { isDevelopment } from '../internal/is-development.js';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { joinStrings } from '../internal/utils/strings/join-strings';\nimport { formatDateRange, isIsoDateOnly } from '../internal/utils/date-time';\nimport { useInternalI18n } from '../i18n/context';\nimport { formatValue } from './utils';\nfunction renderDateRange(range, placeholder, formatRelativeRange, timeOffset) {\n  var _a;\n  if (!range) {\n    return React.createElement(\"span\", {\n      className: styles['label-text'],\n      \"aria-disabled\": true\n    }, placeholder);\n  }\n  var formatted = range.type === 'relative' ? (_a = formatRelativeRange === null || formatRelativeRange === void 0 ? void 0 : formatRelativeRange(range)) !== null && _a !== void 0 ? _a : '' : React.createElement(BreakSpaces, {\n    text: formatDateRange(range.startDate, range.endDate, timeOffset)\n  });\n  return React.createElement(InternalBox, {\n    fontWeight: \"normal\",\n    display: \"inline\",\n    color: \"inherit\",\n    variant: \"span\"\n  }, formatted);\n}\nfunction BreakSpaces(_ref) {\n  var text = _ref.text;\n  var tokens = text.split(/( )/);\n  return React.createElement(React.Fragment, null, tokens.map(function (token, index) {\n    return React.createElement(React.Fragment, {\n      key: index\n    }, token.length > 1 ? React.createElement(\"span\", {\n      className: styles['label-token-nowrap']\n    }, token) : token, token === ' ' && React.createElement(\"wbr\", null));\n  }));\n}\nfunction isDateOnly(value) {\n  if (!value || value.type !== 'absolute') {\n    return false;\n  }\n  return isIsoDateOnly(value.startDate) && isIsoDateOnly(value.endDate);\n}\nvar DateRangePicker = React.forwardRef(function (_a, ref) {\n  var _b, _c;\n  var _a$locale = _a.locale,\n    locale = _a$locale === void 0 ? '' : _a$locale,\n    startOfWeek = _a.startOfWeek,\n    _a$isDateEnabled = _a.isDateEnabled,\n    isDateEnabled = _a$isDateEnabled === void 0 ? function () {\n      return true;\n    } : _a$isDateEnabled,\n    value = _a.value,\n    placeholder = _a.placeholder,\n    _a$readOnly = _a.readOnly,\n    readOnly = _a$readOnly === void 0 ? false : _a$readOnly,\n    _a$disabled = _a.disabled,\n    disabled = _a$disabled === void 0 ? false : _a$disabled,\n    onChange = _a.onChange,\n    onBlur = _a.onBlur,\n    onFocus = _a.onFocus,\n    _a$relativeOptions = _a.relativeOptions,\n    relativeOptions = _a$relativeOptions === void 0 ? [] : _a$relativeOptions,\n    i18nStrings = _a.i18nStrings,\n    _a$isValidRange = _a.isValidRange,\n    isValidRange = _a$isValidRange === void 0 ? function () {\n      return {\n        valid: true\n      };\n    } : _a$isValidRange,\n    _a$showClearButton = _a.showClearButton,\n    showClearButton = _a$showClearButton === void 0 ? true : _a$showClearButton,\n    _a$dateOnly = _a.dateOnly,\n    dateOnly = _a$dateOnly === void 0 ? false : _a$dateOnly,\n    timeOffset = _a.timeOffset,\n    getTimeOffset = _a.getTimeOffset,\n    _a$timeInputFormat = _a.timeInputFormat,\n    timeInputFormat = _a$timeInputFormat === void 0 ? 'hh:mm:ss' : _a$timeInputFormat,\n    _a$expandToViewport = _a.expandToViewport,\n    expandToViewport = _a$expandToViewport === void 0 ? false : _a$expandToViewport,\n    _a$rangeSelectorMode = _a.rangeSelectorMode,\n    rangeSelectorMode = _a$rangeSelectorMode === void 0 ? 'default' : _a$rangeSelectorMode,\n    customAbsoluteRangeControl = _a.customAbsoluteRangeControl,\n    rest = __rest(_a, [\"locale\", \"startOfWeek\", \"isDateEnabled\", \"value\", \"placeholder\", \"readOnly\", \"disabled\", \"onChange\", \"onBlur\", \"onFocus\", \"relativeOptions\", \"i18nStrings\", \"isValidRange\", \"showClearButton\", \"dateOnly\", \"timeOffset\", \"getTimeOffset\", \"timeInputFormat\", \"expandToViewport\", \"rangeSelectorMode\", \"customAbsoluteRangeControl\"]);\n  var _useBaseComponent = useBaseComponent('DateRangePicker'),\n    __internalRootRef = _useBaseComponent.__internalRootRef;\n  checkControlled('DateRangePicker', 'value', value, 'onChange', onChange);\n  var normalizedTimeOffset = normalizeTimeOffset(value, getTimeOffset, timeOffset);\n  value = isDateOnly(value) ? value : shiftTimeOffset(value, normalizedTimeOffset);\n  var baseProps = getBaseProps(rest);\n  var _useFormFieldContext = useFormFieldContext(Object.assign({\n      ariaLabelledby: (_b = rest.ariaLabelledby) !== null && _b !== void 0 ? _b : i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabelledby,\n      ariaDescribedby: (_c = rest.ariaDescribedby) !== null && _c !== void 0 ? _c : i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaDescribedby\n    }, rest)),\n    invalid = _useFormFieldContext.invalid,\n    controlId = _useFormFieldContext.controlId,\n    ariaDescribedby = _useFormFieldContext.ariaDescribedby,\n    ariaLabelledby = _useFormFieldContext.ariaLabelledby;\n  var isSingleGrid = useMobile();\n  var triggerRef = useRef(null);\n  useForwardFocus(ref, triggerRef);\n  var rootRef = useRef(null);\n  var dropdownId = useUniqueId('date-range-picker-dropdown');\n  var triggerContentId = useUniqueId('date-range-picker-trigger');\n  useFocusTracker({\n    rootRef: rootRef,\n    onBlur: onBlur,\n    onFocus: onFocus\n  });\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDropDownOpen = _useState2[0],\n    setIsDropDownOpen = _useState2[1];\n  var normalizedLocale = normalizeLocale('DateRangePicker', locale);\n  var closeDropdown = function closeDropdown() {\n    var focusTrigger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var _a;\n    setIsDropDownOpen(false);\n    if (focusTrigger) {\n      (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  };\n  var onWrapperKeyDownHandler = function onWrapperKeyDownHandler(event) {\n    if (event.keyCode === KeyCode.escape) {\n      closeDropdown(true);\n    }\n  };\n  var onClear = function onClear() {\n    fireNonCancelableEvent(onChange, {\n      value: null\n    });\n  };\n  var onApply = function onApply(newValue) {\n    var validationResult = isValidRange(newValue);\n    if ((validationResult === null || validationResult === void 0 ? void 0 : validationResult.valid) === false) {\n      return validationResult;\n    }\n    if (isDevelopment) {\n      if ((newValue === null || newValue === void 0 ? void 0 : newValue.type) === 'absolute') {\n        var _newValue$startDate$s = newValue.startDate.split('T'),\n          _newValue$startDate$s2 = _slicedToArray(_newValue$startDate$s, 1),\n          startDateWithoutTime = _newValue$startDate$s2[0];\n        var _newValue$endDate$spl = newValue.endDate.split('T'),\n          _newValue$endDate$spl2 = _slicedToArray(_newValue$endDate$spl, 1),\n          endDateWithoutTime = _newValue$endDate$spl2[0];\n        if (!startDateWithoutTime || !endDateWithoutTime) {\n          warnOnce('DateRangePicker', 'You have provided an `isValidRange` prop that did not catch a missing start or end date.');\n        }\n      }\n    }\n    fireNonCancelableEvent(onChange, {\n      value: formatValue(newValue, {\n        dateOnly: dateOnly,\n        timeOffset: normalizeTimeOffset(newValue, getTimeOffset, timeOffset)\n      })\n    });\n    return validationResult || {\n      valid: true\n    };\n  };\n  var prevDateOnly = usePrevious(dateOnly);\n  useEffect(function () {\n    if (prevDateOnly !== undefined && prevDateOnly !== dateOnly) {\n      warnOnce('DateRangePicker', \"The provided `dateOnly` flag has been changed from \\\"\".concat(prevDateOnly, \"\\\" to \\\"\").concat(dateOnly, \"\\\" which can lead to unexpected value format. Consider using separate components.\"));\n    }\n  }, [prevDateOnly, dateOnly]);\n  if (value && value.type !== 'absolute' && value.type !== 'relative') {\n    warnOnce('DateRangePicker', 'You provided an invalid value. Reverting back to default.');\n    value = null;\n  }\n  if ((value === null || value === void 0 ? void 0 : value.type) === 'absolute' && rangeSelectorMode === 'relative-only' || (value === null || value === void 0 ? void 0 : value.type) === 'relative' && rangeSelectorMode === 'absolute-only') {\n    warnOnce('DateRangePicker', 'The provided value does not correspond to the current range selector mode. Reverting back to default.');\n    value = null;\n  }\n  var i18n = useInternalI18n('date-range-picker');\n  var formatRelativeRange = i18n('i18nStrings.formatRelativeRange', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.formatRelativeRange, function (format) {\n    return function (_ref2) {\n      var amount = _ref2.amount,\n        unit = _ref2.unit;\n      return format({\n        amount: amount,\n        unit: unit\n      });\n    };\n  });\n  if (isDevelopment) {\n    if (!formatRelativeRange && rangeSelectorMode !== 'absolute-only') {\n      warnOnce('DateRangePicker', 'A function for i18nStrings.formatRelativeRange was not provided. Relative ranges will not be correctly rendered.');\n    }\n  }\n  var trigger = React.createElement(\"div\", {\n    className: styles['trigger-wrapper']\n  }, React.createElement(ButtonTrigger, {\n    ref: triggerRef,\n    id: controlId,\n    invalid: invalid,\n    ariaLabelledby: joinStrings(ariaLabelledby, triggerContentId),\n    ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabel,\n    ariaDescribedby: ariaDescribedby,\n    className: clsx(styles.label, _defineProperty({}, styles['label-enabled'], !readOnly && !disabled)),\n    hideCaret: true,\n    onClick: function onClick() {\n      if (!readOnly && !disabled) {\n        setIsDropDownOpen(true);\n      }\n    },\n    disabled: disabled,\n    readOnly: readOnly,\n    ariaHasPopup: \"dialog\"\n  }, React.createElement(\"span\", {\n    className: styles['trigger-flexbox']\n  }, React.createElement(\"span\", {\n    className: styles['icon-wrapper']\n  }, React.createElement(InternalIcon, {\n    name: \"calendar\",\n    variant: disabled || readOnly ? 'disabled' : 'normal'\n  })), React.createElement(\"span\", {\n    id: triggerContentId\n  }, renderDateRange(value, placeholder !== null && placeholder !== void 0 ? placeholder : '', formatRelativeRange, normalizedTimeOffset)))));\n  var mergedRef = useMergeRefs(rootRef, __internalRootRef);\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    ref: mergedRef,\n    className: clsx(baseProps.className, styles.root),\n    onKeyDown: onWrapperKeyDownHandler\n  }), React.createElement(Dropdown, {\n    stretchWidth: true,\n    stretchHeight: true,\n    open: isDropDownOpen,\n    onDropdownClose: function onDropdownClose() {\n      return closeDropdown();\n    },\n    trigger: trigger,\n    stretchToTriggerWidth: false,\n    expandToViewport: expandToViewport,\n    dropdownId: dropdownId\n  }, React.createElement(FormFieldContext.Provider, {\n    value: {}\n  }, isDropDownOpen && React.createElement(DateRangePickerDropdown, {\n    startOfWeek: startOfWeek,\n    locale: normalizedLocale,\n    isSingleGrid: isSingleGrid,\n    onDropdownClose: function onDropdownClose() {\n      return closeDropdown(true);\n    },\n    value: value,\n    showClearButton: showClearButton,\n    isDateEnabled: isDateEnabled,\n    i18nStrings: i18nStrings,\n    onClear: onClear,\n    onApply: onApply,\n    relativeOptions: relativeOptions,\n    isValidRange: isValidRange,\n    dateOnly: dateOnly,\n    timeInputFormat: timeInputFormat,\n    rangeSelectorMode: rangeSelectorMode,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby,\n    customAbsoluteRangeControl: customAbsoluteRangeControl\n  }))));\n});\napplyDisplayName(DateRangePicker, 'DateRangePicker');\nexport default DateRangePicker;","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","useState","styles","normalizeLocale","useForwardFocus","KeyCode","clsx","getBaseProps","checkControlled","InternalBox","DateRangePickerDropdown","applyDisplayName","Dropdown","useFocusTracker","useMobile","ButtonTrigger","FormFieldContext","useFormFieldContext","InternalIcon","normalizeTimeOffset","shiftTimeOffset","useBaseComponent","useMergeRefs","fireNonCancelableEvent","isDevelopment","warnOnce","usePrevious","useUniqueId","joinStrings","formatDateRange","isIsoDateOnly","useInternalI18n","formatValue","renderDateRange","range","placeholder","formatRelativeRange","timeOffset","className","formatted","type","BreakSpaces","text","startDate","endDate","fontWeight","display","color","variant","tokens","split","map","token","index","Fragment","key","length","isDateOnly","value","DateRangePicker","forwardRef","_a","ref","locale","startOfWeek","isDateEnabled","readOnly","disabled","onChange","onBlur","onFocus","relativeOptions","i18nStrings","isValidRange","valid","showClearButton","dateOnly","getTimeOffset","timeInputFormat","expandToViewport","rangeSelectorMode","customAbsoluteRangeControl","rest","__internalRootRef","normalizedTimeOffset","baseProps","ariaLabelledby","ariaDescribedby","invalid","controlId","isSingleGrid","triggerRef","rootRef","dropdownId","triggerContentId","isDropDownOpen","setIsDropDownOpen","normalizedLocale","closeDropdown","focusTrigger","current","focus","onWrapperKeyDownHandler","event","keyCode","escape","onClear","onApply","newValue","validationResult","startDateWithoutTime","endDateWithoutTime","prevDateOnly","undefined","i18n","amount","unit","format","trigger","id","ariaLabel","label","hideCaret","onClick","ariaHasPopup","name","mergedRef","root","onKeyDown","stretchWidth","stretchHeight","open","onDropdownClose","stretchToTriggerWidth","Provider"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/date-range-picker/lib/default/date-range-picker/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { Ref, useEffect, useRef, useState } from 'react';\nimport styles from './styles.css.js';\nimport { DateRangePickerProps } from './interfaces';\nimport { normalizeLocale } from '../internal/utils/locale';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { KeyCode } from '../internal/keycode';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport InternalBox from '../box/internal';\nimport { DateRangePickerDropdown } from './dropdown';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport Dropdown from '../internal/components/dropdown';\nimport { useFocusTracker } from '../internal/hooks/use-focus-tracker';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport ButtonTrigger from '../internal/components/button-trigger';\nimport { FormFieldContext, useFormFieldContext } from '../internal/context/form-field-context';\nimport InternalIcon from '../icon/internal';\nimport { normalizeTimeOffset, shiftTimeOffset } from './time-offset';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { isDevelopment } from '../internal/is-development.js';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { joinStrings } from '../internal/utils/strings/join-strings';\nimport { formatDateRange, isIsoDateOnly } from '../internal/utils/date-time';\nimport { useInternalI18n } from '../i18n/context';\nimport { formatValue } from './utils';\n\nexport { DateRangePickerProps };\n\nfunction renderDateRange(\n  range: null | DateRangePickerProps.Value,\n  placeholder: string,\n  formatRelativeRange: DateRangePickerProps.I18nStrings['formatRelativeRange'],\n  timeOffset: { startDate?: number; endDate?: number }\n) {\n  if (!range) {\n    return (\n      <span className={styles['label-text']} aria-disabled={true}>\n        {placeholder}\n      </span>\n    );\n  }\n\n  const formatted =\n    range.type === 'relative' ? (\n      formatRelativeRange?.(range) ?? ''\n    ) : (\n      <BreakSpaces text={formatDateRange(range.startDate, range.endDate, timeOffset)} />\n    );\n\n  return (\n    <InternalBox fontWeight=\"normal\" display=\"inline\" color=\"inherit\" variant=\"span\">\n      {formatted}\n    </InternalBox>\n  );\n}\n\nfunction BreakSpaces({ text }: { text: string }) {\n  const tokens = text.split(/( )/);\n  return (\n    <>\n      {tokens.map((token, index) => (\n        <React.Fragment key={index}>\n          {token.length > 1 ? <span className={styles['label-token-nowrap']}>{token}</span> : token}\n          {token === ' ' && <wbr />}\n        </React.Fragment>\n      ))}\n    </>\n  );\n}\n\nfunction isDateOnly(value: null | DateRangePickerProps.Value) {\n  if (!value || value.type !== 'absolute') {\n    return false;\n  }\n  return isIsoDateOnly(value.startDate) && isIsoDateOnly(value.endDate);\n}\n\nconst DateRangePicker = React.forwardRef(\n  (\n    {\n      locale = '',\n      startOfWeek,\n      isDateEnabled = () => true,\n      value,\n      placeholder,\n      readOnly = false,\n      disabled = false,\n      onChange,\n      onBlur,\n      onFocus,\n      relativeOptions = [],\n      i18nStrings,\n      isValidRange = () => ({ valid: true }),\n      showClearButton = true,\n      dateOnly = false,\n      timeOffset,\n      getTimeOffset,\n      timeInputFormat = 'hh:mm:ss',\n      expandToViewport = false,\n      rangeSelectorMode = 'default',\n      customAbsoluteRangeControl,\n      ...rest\n    }: DateRangePickerProps,\n    ref: Ref<DateRangePickerProps.Ref>\n  ) => {\n    const { __internalRootRef } = useBaseComponent('DateRangePicker');\n    checkControlled('DateRangePicker', 'value', value, 'onChange', onChange);\n\n    const normalizedTimeOffset = normalizeTimeOffset(value, getTimeOffset, timeOffset);\n    value = isDateOnly(value) ? value : shiftTimeOffset(value, normalizedTimeOffset);\n\n    const baseProps = getBaseProps(rest);\n    const { invalid, controlId, ariaDescribedby, ariaLabelledby } = useFormFieldContext({\n      ariaLabelledby: rest.ariaLabelledby ?? i18nStrings?.ariaLabelledby,\n      ariaDescribedby: rest.ariaDescribedby ?? i18nStrings?.ariaDescribedby,\n      ...rest,\n    });\n    const isSingleGrid = useMobile();\n\n    const triggerRef = useRef<HTMLButtonElement | null>(null);\n    useForwardFocus(ref, triggerRef);\n\n    const rootRef = useRef<HTMLDivElement>(null);\n    const dropdownId = useUniqueId('date-range-picker-dropdown');\n    const triggerContentId = useUniqueId('date-range-picker-trigger');\n\n    useFocusTracker({ rootRef, onBlur, onFocus });\n\n    const [isDropDownOpen, setIsDropDownOpen] = useState<boolean>(false);\n\n    const normalizedLocale = normalizeLocale('DateRangePicker', locale);\n\n    const closeDropdown = (focusTrigger = false) => {\n      setIsDropDownOpen(false);\n      if (focusTrigger) {\n        triggerRef.current?.focus();\n      }\n    };\n\n    const onWrapperKeyDownHandler = (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.keyCode === KeyCode.escape) {\n        closeDropdown(true);\n      }\n    };\n\n    const onClear = () => {\n      fireNonCancelableEvent(onChange, { value: null });\n    };\n\n    const onApply = (newValue: null | DateRangePickerProps.Value): DateRangePickerProps.ValidationResult => {\n      const validationResult = isValidRange(newValue);\n      if (validationResult?.valid === false) {\n        return validationResult;\n      }\n\n      if (isDevelopment) {\n        if (newValue?.type === 'absolute') {\n          const [startDateWithoutTime] = newValue.startDate.split('T');\n          const [endDateWithoutTime] = newValue.endDate.split('T');\n          if (!startDateWithoutTime || !endDateWithoutTime) {\n            warnOnce(\n              'DateRangePicker',\n              'You have provided an `isValidRange` prop that did not catch a missing start or end date.'\n            );\n          }\n        }\n      }\n      fireNonCancelableEvent(onChange, {\n        value: formatValue(newValue, {\n          dateOnly,\n          timeOffset: normalizeTimeOffset(newValue, getTimeOffset, timeOffset),\n        }),\n      });\n      return validationResult || { valid: true };\n    };\n\n    const prevDateOnly = usePrevious(dateOnly);\n    useEffect(() => {\n      if (prevDateOnly !== undefined && prevDateOnly !== dateOnly) {\n        warnOnce(\n          'DateRangePicker',\n          `The provided \\`dateOnly\\` flag has been changed from \"${prevDateOnly}\" to \"${dateOnly}\" which can lead to unexpected value format. Consider using separate components.`\n        );\n      }\n    }, [prevDateOnly, dateOnly]);\n\n    if (value && value.type !== 'absolute' && value.type !== 'relative') {\n      warnOnce('DateRangePicker', 'You provided an invalid value. Reverting back to default.');\n      value = null;\n    }\n\n    if (\n      (value?.type === 'absolute' && rangeSelectorMode === 'relative-only') ||\n      (value?.type === 'relative' && rangeSelectorMode === 'absolute-only')\n    ) {\n      warnOnce(\n        'DateRangePicker',\n        'The provided value does not correspond to the current range selector mode. Reverting back to default.'\n      );\n      value = null;\n    }\n\n    const i18n = useInternalI18n('date-range-picker');\n    const formatRelativeRange = i18n(\n      'i18nStrings.formatRelativeRange',\n      i18nStrings?.formatRelativeRange,\n      format =>\n        ({ amount, unit }) =>\n          format({ amount, unit })\n    );\n\n    if (isDevelopment) {\n      if (!formatRelativeRange && rangeSelectorMode !== 'absolute-only') {\n        warnOnce(\n          'DateRangePicker',\n          'A function for i18nStrings.formatRelativeRange was not provided. Relative ranges will not be correctly rendered.'\n        );\n      }\n    }\n\n    const trigger = (\n      <div className={styles['trigger-wrapper']}>\n        <ButtonTrigger\n          ref={triggerRef}\n          id={controlId}\n          invalid={invalid}\n          ariaLabelledby={joinStrings(ariaLabelledby, triggerContentId)}\n          ariaLabel={i18nStrings?.ariaLabel}\n          ariaDescribedby={ariaDescribedby}\n          className={clsx(styles.label, {\n            [styles['label-enabled']]: !readOnly && !disabled,\n          })}\n          hideCaret={true}\n          onClick={() => {\n            if (!readOnly && !disabled) {\n              setIsDropDownOpen(true);\n            }\n          }}\n          disabled={disabled}\n          readOnly={readOnly}\n          ariaHasPopup=\"dialog\"\n        >\n          <span className={styles['trigger-flexbox']}>\n            <span className={styles['icon-wrapper']}>\n              <InternalIcon name=\"calendar\" variant={disabled || readOnly ? 'disabled' : 'normal'} />\n            </span>\n            <span id={triggerContentId}>\n              {renderDateRange(value, placeholder ?? '', formatRelativeRange, normalizedTimeOffset)}\n            </span>\n          </span>\n        </ButtonTrigger>\n      </div>\n    );\n\n    const mergedRef = useMergeRefs(rootRef, __internalRootRef);\n\n    return (\n      <div\n        {...baseProps}\n        ref={mergedRef}\n        className={clsx(baseProps.className, styles.root)}\n        onKeyDown={onWrapperKeyDownHandler}\n      >\n        <Dropdown\n          stretchWidth={true}\n          stretchHeight={true}\n          open={isDropDownOpen}\n          onDropdownClose={() => closeDropdown()}\n          trigger={trigger}\n          stretchToTriggerWidth={false}\n          expandToViewport={expandToViewport}\n          dropdownId={dropdownId}\n        >\n          {/* Reset form field context to prevent a wrapper form field from labelling all inputs inside the dropdown. */}\n          <FormFieldContext.Provider value={{}}>\n            {isDropDownOpen && (\n              <DateRangePickerDropdown\n                startOfWeek={startOfWeek}\n                locale={normalizedLocale}\n                isSingleGrid={isSingleGrid}\n                onDropdownClose={() => closeDropdown(true)}\n                value={value}\n                showClearButton={showClearButton}\n                isDateEnabled={isDateEnabled}\n                i18nStrings={i18nStrings}\n                onClear={onClear}\n                onApply={onApply}\n                relativeOptions={relativeOptions}\n                isValidRange={isValidRange}\n                dateOnly={dateOnly}\n                timeInputFormat={timeInputFormat}\n                rangeSelectorMode={rangeSelectorMode}\n                ariaLabelledby={ariaLabelledby}\n                ariaDescribedby={ariaDescribedby}\n                customAbsoluteRangeControl={customAbsoluteRangeControl}\n              />\n            )}\n          </FormFieldContext.Provider>\n        </Dropdown>\n      </div>\n    );\n  }\n);\n\napplyDisplayName(DateRangePicker, 'DateRangePicker');\nexport default DateRangePicker;\n"]},"metadata":{},"sourceType":"module"}