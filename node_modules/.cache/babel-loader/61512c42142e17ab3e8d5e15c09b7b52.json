{"ast":null,"code":"import { supportsKeyboardAccessibility } from './util';\nexport function setupEditor(ace, editor, setAnnotations, setCursorPosition, setHighlightedAnnotation, setPaneStatus) {\n  setEditorDefaults(ace, editor);\n  // To display cursor position in status bar\n  editor.session.selection.on('changeCursor', function () {\n    setCursorPosition(editor.getCursorPosition());\n  });\n  editor.session.on('changeAnnotation', function () {\n    var editorAnnotations = editor.session.getAnnotations();\n    var newAnnotations = editorAnnotations.filter(function (a) {\n      return a.type !== 'info';\n    });\n    if (editorAnnotations.length !== newAnnotations.length) {\n      editor.session.setAnnotations(newAnnotations);\n    }\n    setAnnotations(newAnnotations);\n  });\n  var moveCursorToAnnotation = function moveCursorToAnnotation(a) {\n    if (typeof a.row === 'number') {\n      editor.gotoLine(a.row + 1, a.column || 0, false);\n    }\n  };\n  var openAnnotation = function openAnnotation(row) {\n    var currentAnnotations = editor.session.getAnnotations().filter(function (a) {\n      return a.row === row && a.type !== 'info';\n    });\n    var errors = currentAnnotations.filter(function (a) {\n      return a.type === 'error';\n    });\n    if (errors.length > 0) {\n      setHighlightedAnnotation(errors[0]);\n      setPaneStatus('error');\n      moveCursorToAnnotation(errors[0]);\n    } else if (currentAnnotations.length > 0) {\n      setHighlightedAnnotation(currentAnnotations[0]);\n      setPaneStatus('warning');\n      moveCursorToAnnotation(currentAnnotations[0]);\n    } else {\n      setHighlightedAnnotation(undefined);\n      setPaneStatus('hidden');\n      editor.gotoLine(row + 1, 0, false);\n    }\n  };\n  // open error/warning pane when user clicks on gutter icon\n  editor.on('gutterclick', function (e) {\n    var _e$getDocumentPositio = e.getDocumentPosition(),\n      row = _e$getDocumentPositio.row;\n    openAnnotation(row);\n  });\n  // open error/warning pane when user presses space/enter on gutter icon\n  editor.on('gutterkeydown', function (e) {\n    if (e.isInAnnotationLane() && (e.getKey() === 'space' || e.getKey() === 'return')) {\n      var row = e.getRow();\n      openAnnotation(row);\n    }\n  });\n  // HACK: Annotations aren't cleared when editor is empty.\n  editor.on('change', function () {\n    if (editor.getValue().length === 0) {\n      editor.session.clearAnnotations();\n    }\n  });\n}\nfunction setEditorDefaults(ace, editor) {\n  ace.config.loadModule('ace/ext/language_tools', function () {\n    editor.setOptions({\n      displayIndentGuides: false,\n      enableSnippets: true,\n      enableBasicAutocompletion: true\n    });\n  });\n  editor.setAutoScrollEditorIntoView(true);\n  if (!supportsKeyboardAccessibility(ace)) {\n    editor.commands.addCommand({\n      name: 'exitCodeEditor',\n      bindKey: 'Esc',\n      exec: function exec() {\n        editor.container.focus();\n      }\n    });\n  }\n  editor.on('focus', function () {\n    editor.textInput.getElement().setAttribute('tabindex', 0);\n  });\n  editor.on('blur', function () {\n    editor.textInput.getElement().setAttribute('tabindex', -1);\n  });\n  // prevent users to step into editor directly by keyboard\n  editor.textInput.getElement().setAttribute('tabindex', -1);\n  editor.commands.removeCommand('showSettingsMenu', false);\n  // Prevent default behavior on error/warning icon click\n  editor.on('guttermousedown', function (e) {\n    e.stop();\n  });\n  // HACK: Wrapped lines are highlighted individually. This is seriously the recommended fix.\n  // See: https://github.com/ajaxorg/ace/issues/3067\n  editor.setHighlightActiveLine(false);\n  editor.$updateHighlightActiveLine = function () {\n    var session = this.getSession();\n    var highlight;\n    if (this.$highlightActiveLine) {\n      if (this.$selectionStyle !== 'line' || !this.selection.isMultiLine()) {\n        highlight = this.getCursorPosition();\n      }\n      if (this.renderer.$maxLines && this.session.getLength() === 1 && !(this.renderer.$minLines > 1)) {\n        highlight = false;\n      }\n    }\n    if (session.$highlightLineMarker && !highlight) {\n      session.removeMarker(session.$highlightLineMarker.id);\n      session.$highlightLineMarker = null;\n    } else if (!session.$highlightLineMarker && highlight) {\n      var range = new ace.Range(highlight.row, 0, highlight.row, Infinity);\n      range.id = session.addMarker(range, 'ace_active-line', 'fullLine');\n      session.$highlightLineMarker = range;\n    } else if (highlight) {\n      session.$highlightLineMarker.start.row = highlight.row;\n      session.$highlightLineMarker.end.row = highlight.row;\n      session.$highlightLineMarker.start.column = 0;\n      session._signal('changeBackMarker');\n    }\n  };\n  editor.setHighlightActiveLine(true);\n  // HACK: \"disable\" error tooltips by hiding them as soon as they appear.\n  // See https://github.com/ajaxorg/ace/issues/4004\n  editor.on('showGutterTooltip', function (tooltip) {\n    tooltip.hide();\n  });\n}","map":{"version":3,"mappings":"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","names":["supportsKeyboardAccessibility","setupEditor","ace","editor","setAnnotations","setCursorPosition","setHighlightedAnnotation","setPaneStatus","setEditorDefaults","session","selection","on","getCursorPosition","editorAnnotations","getAnnotations","newAnnotations","filter","a","type","length","moveCursorToAnnotation","row","gotoLine","column","openAnnotation","currentAnnotations","errors","undefined","e","getDocumentPosition","isInAnnotationLane","getKey","getRow","getValue","clearAnnotations","config","loadModule","setOptions","displayIndentGuides","enableSnippets","enableBasicAutocompletion","setAutoScrollEditorIntoView","commands","addCommand","name","bindKey","exec","container","focus","textInput","getElement","setAttribute","removeCommand","stop","setHighlightActiveLine","$updateHighlightActiveLine","getSession","highlight","$highlightActiveLine","$selectionStyle","isMultiLine","renderer","$maxLines","getLength","$minLines","$highlightLineMarker","removeMarker","id","range","Range","Infinity","addMarker","start","end","_signal","tooltip","hide"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/code-editor/lib/default/code-editor/setup-editor.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { Ace } from 'ace-builds';\nimport { PaneStatus, supportsKeyboardAccessibility } from './util';\n\nexport function setupEditor(\n  ace: any,\n  editor: Ace.Editor,\n  setAnnotations: React.Dispatch<React.SetStateAction<Ace.Annotation[]>>,\n  setCursorPosition: React.Dispatch<React.SetStateAction<Ace.Point>>,\n  setHighlightedAnnotation: React.Dispatch<React.SetStateAction<Ace.Annotation | undefined>>,\n  setPaneStatus: React.Dispatch<React.SetStateAction<PaneStatus>>\n) {\n  setEditorDefaults(ace, editor);\n\n  // To display cursor position in status bar\n  editor.session.selection.on('changeCursor', () => {\n    setCursorPosition(editor.getCursorPosition());\n  });\n\n  editor.session.on('changeAnnotation' as any, () => {\n    const editorAnnotations = editor.session.getAnnotations();\n    const newAnnotations = editorAnnotations.filter(a => a.type !== 'info');\n    if (editorAnnotations.length !== newAnnotations.length) {\n      editor.session.setAnnotations(newAnnotations);\n    }\n    setAnnotations(newAnnotations);\n  });\n\n  const moveCursorToAnnotation = (a: Ace.Annotation) => {\n    if (typeof a.row === 'number') {\n      editor.gotoLine(a.row + 1, a.column || 0, false);\n    }\n  };\n\n  const openAnnotation = (row: number) => {\n    const currentAnnotations = editor.session.getAnnotations().filter(a => a.row === row && a.type !== 'info');\n    const errors = currentAnnotations.filter(a => a.type === 'error');\n    if (errors.length > 0) {\n      setHighlightedAnnotation(errors[0]);\n      setPaneStatus('error');\n      moveCursorToAnnotation(errors[0]);\n    } else if (currentAnnotations.length > 0) {\n      setHighlightedAnnotation(currentAnnotations[0]);\n      setPaneStatus('warning');\n      moveCursorToAnnotation(currentAnnotations[0]);\n    } else {\n      setHighlightedAnnotation(undefined);\n      setPaneStatus('hidden');\n      editor.gotoLine(row + 1, 0, false);\n    }\n  };\n\n  // open error/warning pane when user clicks on gutter icon\n  editor.on('gutterclick' as any, (e: any) => {\n    const { row }: Ace.Point = e.getDocumentPosition();\n    openAnnotation(row);\n  });\n\n  // open error/warning pane when user presses space/enter on gutter icon\n  editor.on('gutterkeydown', e => {\n    if (e.isInAnnotationLane() && (e.getKey() === 'space' || e.getKey() === 'return')) {\n      const row: number = e.getRow();\n      openAnnotation(row);\n    }\n  });\n\n  // HACK: Annotations aren't cleared when editor is empty.\n  editor.on('change', () => {\n    if (editor.getValue().length === 0) {\n      editor.session.clearAnnotations();\n    }\n  });\n}\n\nfunction setEditorDefaults(ace: any, editor: Ace.Editor) {\n  ace.config.loadModule('ace/ext/language_tools', function () {\n    editor.setOptions({\n      displayIndentGuides: false,\n      enableSnippets: true,\n      enableBasicAutocompletion: true,\n    });\n  });\n\n  editor.setAutoScrollEditorIntoView(true);\n\n  if (!supportsKeyboardAccessibility(ace)) {\n    editor.commands.addCommand({\n      name: 'exitCodeEditor',\n      bindKey: 'Esc',\n      exec: () => {\n        editor.container.focus();\n      },\n    });\n  }\n\n  editor.on('focus', () => {\n    (editor as any).textInput.getElement().setAttribute('tabindex', 0);\n  });\n\n  editor.on('blur', () => {\n    (editor as any).textInput.getElement().setAttribute('tabindex', -1);\n  });\n\n  // prevent users to step into editor directly by keyboard\n  (editor as any).textInput.getElement().setAttribute('tabindex', -1);\n\n  editor.commands.removeCommand('showSettingsMenu', false);\n\n  // Prevent default behavior on error/warning icon click\n  editor.on('guttermousedown' as any, (e: any) => {\n    e.stop();\n  });\n\n  // HACK: Wrapped lines are highlighted individually. This is seriously the recommended fix.\n  // See: https://github.com/ajaxorg/ace/issues/3067\n  editor.setHighlightActiveLine(false);\n  (editor as any).$updateHighlightActiveLine = function () {\n    const session = this.getSession();\n\n    let highlight;\n    if (this.$highlightActiveLine) {\n      if (this.$selectionStyle !== 'line' || !this.selection.isMultiLine()) {\n        highlight = this.getCursorPosition();\n      }\n      if (this.renderer.$maxLines && this.session.getLength() === 1 && !(this.renderer.$minLines > 1)) {\n        highlight = false;\n      }\n    }\n\n    if (session.$highlightLineMarker && !highlight) {\n      session.removeMarker(session.$highlightLineMarker.id);\n      session.$highlightLineMarker = null;\n    } else if (!session.$highlightLineMarker && highlight) {\n      const range = new ace.Range(highlight.row, 0, highlight.row, Infinity);\n      (range as any).id = session.addMarker(range, 'ace_active-line', 'fullLine');\n      session.$highlightLineMarker = range;\n    } else if (highlight) {\n      session.$highlightLineMarker.start.row = highlight.row;\n      session.$highlightLineMarker.end.row = highlight.row;\n      session.$highlightLineMarker.start.column = 0;\n      session._signal('changeBackMarker');\n    }\n  };\n\n  editor.setHighlightActiveLine(true);\n\n  // HACK: \"disable\" error tooltips by hiding them as soon as they appear.\n  // See https://github.com/ajaxorg/ace/issues/4004\n  editor.on('showGutterTooltip' as any, (tooltip: any) => {\n    tooltip.hide();\n  });\n}\n"]},"metadata":{},"sourceType":"module"}