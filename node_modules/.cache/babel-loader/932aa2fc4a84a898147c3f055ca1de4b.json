{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CLogClient, PanoramaClient } from './log-clients';\nimport { buildMetricDetail, buildMetricHash, buildMetricName } from './formatters';\nvar oneTimeMetrics = {};\n// In case we need to override the theme for VR.\nvar theme = '';\nfunction setTheme(newTheme) {\n  theme = newTheme;\n}\nvar Metrics = /** @class */function () {\n  function Metrics(source, packageVersion) {\n    this.clog = new CLogClient();\n    this.panorama = new PanoramaClient();\n    this.source = source;\n    this.packageVersion = packageVersion;\n  }\n  Metrics.prototype.initMetrics = function (theme) {\n    setTheme(theme);\n  };\n  /**\n   * Calls Console Platform's client logging JS API with provided metric name, value, and detail.\n   * Does nothing if Console Platform client logging JS is not present in page.\n   */\n  Metrics.prototype.sendMetric = function (metricName, value, detail) {\n    if (!theme) {\n      // Metrics need to be initialized first (initMetrics)\n      console.error('Metrics need to be initialized first.');\n      return;\n    }\n    this.clog.sendMetric(metricName, value, detail);\n  };\n  /**\n   * Calls Console Platform's client v2 logging JS API with provided metric name and detail.\n   * Does nothing if Console Platform client logging JS is not present in page.\n   */\n  Metrics.prototype.sendPanoramaMetric = function (metric) {\n    this.panorama.sendMetric(metric);\n  };\n  Metrics.prototype.sendMetricObject = function (metric, value) {\n    this.sendMetric(buildMetricName(metric, theme), value, buildMetricDetail(metric, theme));\n  };\n  Metrics.prototype.sendMetricObjectOnce = function (metric, value) {\n    var metricHash = buildMetricHash(metric);\n    if (!oneTimeMetrics[metricHash]) {\n      this.sendMetricObject(metric, value);\n      oneTimeMetrics[metricHash] = true;\n    }\n  };\n  /*\n   * Calls Console Platform's client logging only the first time the provided metricName is used.\n   * Subsequent calls with the same metricName are ignored.\n   */\n  Metrics.prototype.sendMetricOnce = function (metricName, value, detail) {\n    if (!oneTimeMetrics[metricName]) {\n      this.sendMetric(metricName, value, detail);\n      oneTimeMetrics[metricName] = true;\n    }\n  };\n  /*\n   * Reports a metric value 1 to Console Platform's client logging service to indicate that the\n   * component was loaded. The component load event will only be reported as used to client logging\n   * service once per page view.\n   */\n  Metrics.prototype.logComponentLoaded = function () {\n    this.sendMetricObjectOnce({\n      source: this.source,\n      action: 'loaded',\n      version: this.packageVersion\n    }, 1);\n  };\n  /*\n   * Reports a metric value 1 to Console Platform's client logging service to indicate that the\n   * component was used in the page.  A component will only be reported as used to client logging\n   * service once per page view.\n   */\n  Metrics.prototype.logComponentUsed = function (componentName) {\n    this.sendMetricObjectOnce({\n      source: componentName,\n      action: 'used',\n      version: this.packageVersion\n    }, 1);\n  };\n  return Metrics;\n}();\nexport { Metrics };\nvar MetricsTestHelper = /** @class */function () {\n  function MetricsTestHelper() {}\n  MetricsTestHelper.prototype.resetOneTimeMetricsCache = function () {\n    for (var prop in oneTimeMetrics) {\n      delete oneTimeMetrics[prop];\n    }\n  };\n  return MetricsTestHelper;\n}();\nexport { MetricsTestHelper };","map":{"version":3,"names":["CLogClient","PanoramaClient","buildMetricDetail","buildMetricHash","buildMetricName","oneTimeMetrics","theme","setTheme","newTheme","Metrics","source","packageVersion","clog","panorama","prototype","initMetrics","sendMetric","metricName","value","detail","console","error","sendPanoramaMetric","metric","sendMetricObject","sendMetricObjectOnce","metricHash","sendMetricOnce","logComponentLoaded","action","version","logComponentUsed","componentName","MetricsTestHelper","resetOneTimeMetricsCache","prop"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/component-toolkit/lib/internal/base-component/metrics/metrics.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CLogClient, PanoramaClient } from './log-clients';\nimport { buildMetricDetail, buildMetricHash, buildMetricName } from './formatters';\nvar oneTimeMetrics = {};\n// In case we need to override the theme for VR.\nvar theme = '';\nfunction setTheme(newTheme) {\n    theme = newTheme;\n}\nvar Metrics = /** @class */ (function () {\n    function Metrics(source, packageVersion) {\n        this.clog = new CLogClient();\n        this.panorama = new PanoramaClient();\n        this.source = source;\n        this.packageVersion = packageVersion;\n    }\n    Metrics.prototype.initMetrics = function (theme) {\n        setTheme(theme);\n    };\n    /**\n     * Calls Console Platform's client logging JS API with provided metric name, value, and detail.\n     * Does nothing if Console Platform client logging JS is not present in page.\n     */\n    Metrics.prototype.sendMetric = function (metricName, value, detail) {\n        if (!theme) {\n            // Metrics need to be initialized first (initMetrics)\n            console.error('Metrics need to be initialized first.');\n            return;\n        }\n        this.clog.sendMetric(metricName, value, detail);\n    };\n    /**\n     * Calls Console Platform's client v2 logging JS API with provided metric name and detail.\n     * Does nothing if Console Platform client logging JS is not present in page.\n     */\n    Metrics.prototype.sendPanoramaMetric = function (metric) {\n        this.panorama.sendMetric(metric);\n    };\n    Metrics.prototype.sendMetricObject = function (metric, value) {\n        this.sendMetric(buildMetricName(metric, theme), value, buildMetricDetail(metric, theme));\n    };\n    Metrics.prototype.sendMetricObjectOnce = function (metric, value) {\n        var metricHash = buildMetricHash(metric);\n        if (!oneTimeMetrics[metricHash]) {\n            this.sendMetricObject(metric, value);\n            oneTimeMetrics[metricHash] = true;\n        }\n    };\n    /*\n     * Calls Console Platform's client logging only the first time the provided metricName is used.\n     * Subsequent calls with the same metricName are ignored.\n     */\n    Metrics.prototype.sendMetricOnce = function (metricName, value, detail) {\n        if (!oneTimeMetrics[metricName]) {\n            this.sendMetric(metricName, value, detail);\n            oneTimeMetrics[metricName] = true;\n        }\n    };\n    /*\n     * Reports a metric value 1 to Console Platform's client logging service to indicate that the\n     * component was loaded. The component load event will only be reported as used to client logging\n     * service once per page view.\n     */\n    Metrics.prototype.logComponentLoaded = function () {\n        this.sendMetricObjectOnce({ source: this.source, action: 'loaded', version: this.packageVersion }, 1);\n    };\n    /*\n     * Reports a metric value 1 to Console Platform's client logging service to indicate that the\n     * component was used in the page.  A component will only be reported as used to client logging\n     * service once per page view.\n     */\n    Metrics.prototype.logComponentUsed = function (componentName) {\n        this.sendMetricObjectOnce({\n            source: componentName,\n            action: 'used',\n            version: this.packageVersion\n        }, 1);\n    };\n    return Metrics;\n}());\nexport { Metrics };\nvar MetricsTestHelper = /** @class */ (function () {\n    function MetricsTestHelper() {\n    }\n    MetricsTestHelper.prototype.resetOneTimeMetricsCache = function () {\n        for (var prop in oneTimeMetrics) {\n            delete oneTimeMetrics[prop];\n        }\n    };\n    return MetricsTestHelper;\n}());\nexport { MetricsTestHelper };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}