{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getMinColumnSpan, getMinRowSpan } from \"../../internal/utils/layout\";\n/**\n * Creates an announcement object describing the last user move.\n */\nexport function createOperationAnnouncement(transition, direction) {\n  var _a, _b;\n  const {\n    operation,\n    layoutShift,\n    itemsLayout\n  } = transition;\n  const targetItem = (_a = itemsLayout.items.find(it => it.id === transition.draggableItem.id)) !== null && _a !== void 0 ? _a : null;\n  if (!layoutShift) {\n    return null;\n  }\n  const firstMove = layoutShift.moves[0];\n  const targetId = (_b = firstMove === null || firstMove === void 0 ? void 0 : firstMove.itemId) !== null && _b !== void 0 ? _b : targetItem === null || targetItem === void 0 ? void 0 : targetItem.id;\n  if (!targetId) {\n    return null;\n  }\n  const itemMoves = layoutShift.moves.filter(m => m.itemId === targetId);\n  const lastItemMove = itemMoves[itemMoves.length - 1];\n  const placement = lastItemMove !== null && lastItemMove !== void 0 ? lastItemMove : targetItem;\n  const conflicts = new Set(layoutShift.conflicts);\n  const disturbed = new Set(layoutShift.moves.map(move => move.itemId));\n  disturbed.delete(targetId);\n  return {\n    type: \"dnd-action\",\n    item: transition.draggableItem,\n    operation,\n    placement: {\n      x: placement.x,\n      y: placement.y,\n      width: placement.width,\n      height: placement.height\n    },\n    direction,\n    conflicts,\n    disturbed\n  };\n}\n/**\n * Applies i18nStrings to the announcement object to produce a string for the live region.\n */\nexport function announcementToString(announcement, items, i18nStrings, columns) {\n  if (!announcement) {\n    return \"\";\n  }\n  const item = announcement.item;\n  const toItem = id => items.find(it => (it === null || it === void 0 ? void 0 : it.id) === id);\n  const formatDirection = direction => {\n    if (!direction) {\n      return null;\n    }\n    return direction === \"left\" || direction === \"right\" ? \"horizontal\" : \"vertical\";\n  };\n  function createDndActionAnnouncement(announcement) {\n    const placement = announcement.placement;\n    const direction = formatDirection(announcement.direction);\n    const conflicts = [...announcement.conflicts].map(toItem);\n    const disturbed = [...announcement.disturbed].map(toItem);\n    switch (announcement.operation) {\n      case \"reorder\":\n        return i18nStrings.liveAnnouncementDndItemReordered({\n          item,\n          placement,\n          direction: direction,\n          conflicts,\n          disturbed\n        });\n      case \"resize\":\n        return i18nStrings.liveAnnouncementDndItemResized({\n          item,\n          placement,\n          direction: direction,\n          isMinimalColumnsReached: placement.width === getMinColumnSpan(item, columns),\n          isMinimalRowsReached: placement.height === getMinRowSpan(item),\n          conflicts,\n          disturbed\n        });\n      case \"insert\":\n        return i18nStrings.liveAnnouncementDndItemInserted({\n          item,\n          placement,\n          conflicts,\n          disturbed\n        });\n    }\n  }\n  function createItemRemovedAnnouncement(announcement) {\n    return i18nStrings.liveAnnouncementItemRemoved({\n      item,\n      disturbed: [...announcement.disturbed].map(toItem)\n    });\n  }\n  switch (announcement.type) {\n    case \"dnd-started\":\n      return i18nStrings.liveAnnouncementDndStarted(announcement.operation);\n    case \"dnd-action\":\n      return createDndActionAnnouncement(announcement);\n    case \"dnd-committed\":\n      return i18nStrings.liveAnnouncementDndCommitted(announcement.operation);\n    case \"dnd-discarded\":\n      return i18nStrings.liveAnnouncementDndDiscarded(announcement.operation);\n    case \"item-removed\":\n      return createItemRemovedAnnouncement(announcement);\n  }\n}","map":{"version":3,"names":["getMinColumnSpan","getMinRowSpan","createOperationAnnouncement","transition","direction","_a","_b","operation","layoutShift","itemsLayout","targetItem","items","find","it","id","draggableItem","firstMove","moves","targetId","itemId","itemMoves","filter","m","lastItemMove","length","placement","conflicts","Set","disturbed","map","move","delete","type","item","x","y","width","height","announcementToString","announcement","i18nStrings","columns","toItem","formatDirection","createDndActionAnnouncement","liveAnnouncementDndItemReordered","liveAnnouncementDndItemResized","isMinimalColumnsReached","isMinimalRowsReached","liveAnnouncementDndItemInserted","createItemRemovedAnnouncement","liveAnnouncementItemRemoved","liveAnnouncementDndStarted","liveAnnouncementDndCommitted","liveAnnouncementDndDiscarded"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/board-components/board/utils/announcements.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getMinColumnSpan, getMinRowSpan } from \"../../internal/utils/layout\";\n/**\n * Creates an announcement object describing the last user move.\n */\nexport function createOperationAnnouncement(transition, direction) {\n    var _a, _b;\n    const { operation, layoutShift, itemsLayout } = transition;\n    const targetItem = (_a = itemsLayout.items.find((it) => it.id === transition.draggableItem.id)) !== null && _a !== void 0 ? _a : null;\n    if (!layoutShift) {\n        return null;\n    }\n    const firstMove = layoutShift.moves[0];\n    const targetId = (_b = firstMove === null || firstMove === void 0 ? void 0 : firstMove.itemId) !== null && _b !== void 0 ? _b : targetItem === null || targetItem === void 0 ? void 0 : targetItem.id;\n    if (!targetId) {\n        return null;\n    }\n    const itemMoves = layoutShift.moves.filter((m) => m.itemId === targetId);\n    const lastItemMove = itemMoves[itemMoves.length - 1];\n    const placement = lastItemMove !== null && lastItemMove !== void 0 ? lastItemMove : targetItem;\n    const conflicts = new Set(layoutShift.conflicts);\n    const disturbed = new Set(layoutShift.moves.map((move) => move.itemId));\n    disturbed.delete(targetId);\n    return {\n        type: \"dnd-action\",\n        item: transition.draggableItem,\n        operation,\n        placement: {\n            x: placement.x,\n            y: placement.y,\n            width: placement.width,\n            height: placement.height,\n        },\n        direction,\n        conflicts,\n        disturbed,\n    };\n}\n/**\n * Applies i18nStrings to the announcement object to produce a string for the live region.\n */\nexport function announcementToString(announcement, items, i18nStrings, columns) {\n    if (!announcement) {\n        return \"\";\n    }\n    const item = announcement.item;\n    const toItem = (id) => items.find((it) => (it === null || it === void 0 ? void 0 : it.id) === id);\n    const formatDirection = (direction) => {\n        if (!direction) {\n            return null;\n        }\n        return direction === \"left\" || direction === \"right\" ? \"horizontal\" : \"vertical\";\n    };\n    function createDndActionAnnouncement(announcement) {\n        const placement = announcement.placement;\n        const direction = formatDirection(announcement.direction);\n        const conflicts = [...announcement.conflicts].map(toItem);\n        const disturbed = [...announcement.disturbed].map(toItem);\n        switch (announcement.operation) {\n            case \"reorder\":\n                return i18nStrings.liveAnnouncementDndItemReordered({\n                    item,\n                    placement,\n                    direction: direction,\n                    conflicts,\n                    disturbed,\n                });\n            case \"resize\":\n                return i18nStrings.liveAnnouncementDndItemResized({\n                    item,\n                    placement,\n                    direction: direction,\n                    isMinimalColumnsReached: placement.width === getMinColumnSpan(item, columns),\n                    isMinimalRowsReached: placement.height === getMinRowSpan(item),\n                    conflicts,\n                    disturbed,\n                });\n            case \"insert\":\n                return i18nStrings.liveAnnouncementDndItemInserted({ item, placement, conflicts, disturbed });\n        }\n    }\n    function createItemRemovedAnnouncement(announcement) {\n        return i18nStrings.liveAnnouncementItemRemoved({ item, disturbed: [...announcement.disturbed].map(toItem) });\n    }\n    switch (announcement.type) {\n        case \"dnd-started\":\n            return i18nStrings.liveAnnouncementDndStarted(announcement.operation);\n        case \"dnd-action\":\n            return createDndActionAnnouncement(announcement);\n        case \"dnd-committed\":\n            return i18nStrings.liveAnnouncementDndCommitted(announcement.operation);\n        case \"dnd-discarded\":\n            return i18nStrings.liveAnnouncementDndDiscarded(announcement.operation);\n        case \"item-removed\":\n            return createItemRemovedAnnouncement(announcement);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}