{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { nodeBelongs } from './utils/node-belongs';\nexport default class FocusTracker {\n  constructor(node, _ref) {\n    let {\n      onFocusEnter,\n      onFocusLeave\n    } = _ref;\n    this.node = node;\n    this.currentlyFocused = false;\n    this.focusInListener = event => {\n      const focusIsInside = nodeBelongs(this.node, event.target);\n      if (!this.currentlyFocused && focusIsInside) {\n        this.triggerFocus();\n      }\n    };\n    this.focusOutListener = event => {\n      const nextFocused = event.relatedTarget;\n      const isNextFocusedInParent = !nodeBelongs(this.node, nextFocused);\n      if (this.currentlyFocused && (nextFocused === null || isNextFocusedInParent)) {\n        this.triggerBlur();\n      }\n    };\n    this.onFocusEnter = onFocusEnter;\n    this.onFocusLeave = onFocusLeave;\n  }\n  initialize() {\n    this.currentlyFocused = nodeBelongs(this.node, document.activeElement);\n    document.addEventListener('focusin', this.focusInListener);\n    document.addEventListener('focusout', this.focusOutListener);\n  }\n  destroy() {\n    document.removeEventListener('focusin', this.focusInListener);\n    document.removeEventListener('focusout', this.focusOutListener);\n  }\n  triggerBlur() {\n    this.currentlyFocused = false;\n    this.onFocusLeave();\n  }\n  triggerFocus() {\n    this.currentlyFocused = true;\n    this.onFocusEnter();\n  }\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,WAAW,QAAQ,sBAAsB;AAOlD,eAAc,MAAOC,YAAY;EAM/BC,YAAoBC,IAAiB,QAAqD;IAAA,IAAnD;MAAEC,YAAY;MAAEC;IAAY,CAAuB;IAAtE,SAAI,GAAJF,IAAI;IAFhB,qBAAgB,GAAG,KAAK;IAkBxB,oBAAe,GAAIG,KAAiB,IAAI;MAC9C,MAAMC,aAAa,GAAGP,WAAW,CAAC,IAAI,CAACG,IAAI,EAAEG,KAAK,CAACE,MAAM,CAAC;MAC1D,IAAI,CAAC,IAAI,CAACC,gBAAgB,IAAIF,aAAa,EAAE;QAC3C,IAAI,CAACG,YAAY,EAAE;;IAEvB,CAAC;IAEO,qBAAgB,GAAIJ,KAAiB,IAAI;MAC/C,MAAMK,WAAW,GAAGL,KAAK,CAACM,aAAa;MACvC,MAAMC,qBAAqB,GAAG,CAACb,WAAW,CAAC,IAAI,CAACG,IAAI,EAAEQ,WAAW,CAAC;MAClE,IAAI,IAAI,CAACF,gBAAgB,KAAKE,WAAW,KAAK,IAAI,IAAIE,qBAAqB,CAAC,EAAE;QAC5E,IAAI,CAACC,WAAW,EAAE;;IAEtB,CAAC;IA5BC,IAAI,CAACV,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,YAAY,GAAGA,YAAY;EAClC;EAEAU,UAAU;IACR,IAAI,CAACN,gBAAgB,GAAGT,WAAW,CAAC,IAAI,CAACG,IAAI,EAAEa,QAAQ,CAACC,aAAa,CAAC;IACtED,QAAQ,CAACE,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACC,eAAe,CAAC;IAC1DH,QAAQ,CAACE,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACE,gBAAgB,CAAC;EAC9D;EAEAC,OAAO;IACLL,QAAQ,CAACM,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACH,eAAe,CAAC;IAC7DH,QAAQ,CAACM,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAACF,gBAAgB,CAAC;EACjE;EAiBQN,WAAW;IACjB,IAAI,CAACL,gBAAgB,GAAG,KAAK;IAC7B,IAAI,CAACJ,YAAY,EAAE;EACrB;EAEQK,YAAY;IAClB,IAAI,CAACD,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACL,YAAY,EAAE;EACrB","names":["nodeBelongs","FocusTracker","constructor","node","onFocusEnter","onFocusLeave","event","focusIsInside","target","currentlyFocused","triggerFocus","nextFocused","relatedTarget","isNextFocusedInParent","triggerBlur","initialize","document","activeElement","addEventListener","focusInListener","focusOutListener","destroy","removeEventListener"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/lib/default/internal/focus-tracker.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { nodeBelongs } from './utils/node-belongs';\n\ninterface FocusTrackerOptions {\n  onFocusEnter: () => void;\n  onFocusLeave: () => void;\n}\n\nexport default class FocusTracker {\n  private readonly onFocusLeave: () => void;\n  private readonly onFocusEnter: () => void;\n\n  private currentlyFocused = false;\n\n  constructor(private node: HTMLElement, { onFocusEnter, onFocusLeave }: FocusTrackerOptions) {\n    this.onFocusEnter = onFocusEnter;\n    this.onFocusLeave = onFocusLeave;\n  }\n\n  initialize() {\n    this.currentlyFocused = nodeBelongs(this.node, document.activeElement);\n    document.addEventListener('focusin', this.focusInListener);\n    document.addEventListener('focusout', this.focusOutListener);\n  }\n\n  destroy() {\n    document.removeEventListener('focusin', this.focusInListener);\n    document.removeEventListener('focusout', this.focusOutListener);\n  }\n\n  private focusInListener = (event: FocusEvent) => {\n    const focusIsInside = nodeBelongs(this.node, event.target);\n    if (!this.currentlyFocused && focusIsInside) {\n      this.triggerFocus();\n    }\n  };\n\n  private focusOutListener = (event: FocusEvent) => {\n    const nextFocused = event.relatedTarget;\n    const isNextFocusedInParent = !nodeBelongs(this.node, nextFocused);\n    if (this.currentlyFocused && (nextFocused === null || isNextFocusedInParent)) {\n      this.triggerBlur();\n    }\n  };\n\n  private triggerBlur() {\n    this.currentlyFocused = false;\n    this.onFocusLeave();\n  }\n\n  private triggerFocus() {\n    this.currentlyFocused = true;\n    this.onFocusEnter();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}