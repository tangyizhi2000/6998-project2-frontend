{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalMultiselect from './internal';\nvar Multiselect = React.forwardRef(function (_a, ref) {\n  var _a$options = _a.options,\n    options = _a$options === void 0 ? [] : _a$options,\n    _a$filteringType = _a.filteringType,\n    filteringType = _a$filteringType === void 0 ? 'none' : _a$filteringType,\n    _a$statusType = _a.statusType,\n    statusType = _a$statusType === void 0 ? 'finished' : _a$statusType,\n    _a$selectedOptions = _a.selectedOptions,\n    selectedOptions = _a$selectedOptions === void 0 ? [] : _a$selectedOptions,\n    _a$keepOpen = _a.keepOpen,\n    keepOpen = _a$keepOpen === void 0 ? true : _a$keepOpen,\n    _a$hideTokens = _a.hideTokens,\n    hideTokens = _a$hideTokens === void 0 ? false : _a$hideTokens,\n    restProps = __rest(_a, [\"options\", \"filteringType\", \"statusType\", \"selectedOptions\", \"keepOpen\", \"hideTokens\"]);\n  var baseComponentProps = useBaseComponent('Multiselect');\n  // Private API for inline tokens\n  var inlineTokens = Boolean(restProps.inlineTokens);\n  return React.createElement(InternalMultiselect, Object.assign({\n    options: options,\n    filteringType: filteringType,\n    statusType: statusType,\n    selectedOptions: selectedOptions,\n    keepOpen: keepOpen,\n    hideTokens: hideTokens,\n    inlineTokens: inlineTokens\n  }, restProps, baseComponentProps, {\n    ref: ref\n  }));\n});\napplyDisplayName(Multiselect, 'Multiselect');\nexport default Multiselect;","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AAEvE,OAAOC,mBAAmB,MAAM,YAAY;AAI5C,IAAMC,WAAW,GAAGJ,KAAK,CAACK,UAAU,CAClC,UACEC,EAQmB,EACnBC,GAAoC,EAClC;mBAJkBD,EAED,CAPjBE,OAAO;IAAPA,OAAO,2BAAG,EAAE;IAAA,mBAKMF,EAED,CANjBG,aAAa;IAAbA,aAAa,iCAAG,MAAM;IAAA,gBAIJH,EAED,CALjBI,UAAU;IAAVA,UAAU,8BAAG,UAAU;IAAA,qBAGLJ,EAED,CAJjBK,eAAe;IAAfA,eAAe,mCAAG,EAAE;IAAA,cAEFL,EAED,CAHjBM,QAAQ;IAARA,QAAQ,4BAAG,IAAI;IAAA,gBACGN,EAED,CAFjBO,UAAU;IAAVA,UAAU,8BAAG,KAAK;IACfC,SAAS,cAPd,uFAQC,CADa;EAId,IAAMC,kBAAkB,GAAGd,gBAAgB,CAAC,aAAa,CAAC;EAE1D;EACA,IAAMe,YAAY,GAAGC,OAAO,CAAEH,SAAiB,CAACE,YAAY,CAAC;EAE7D,OACEhB,oBAACG,mBAAmB;IAClBK,OAAO,EAAEA,OAAO;IAChBC,aAAa,EAAEA,aAAa;IAC5BC,UAAU,EAAEA,UAAU;IACtBC,eAAe,EAAEA,eAAe;IAChCC,QAAQ,EAAEA,QAAQ;IAClBC,UAAU,EAAEA,UAAU;IACtBG,YAAY,EAAEA;EAAY,GACtBF,SAAS,EACTC,kBAAkB;IACtBR,GAAG,EAAEA;EAAG,GACR;AAEN,CAAC,CACF;AAEDL,gBAAgB,CAACE,WAAW,EAAE,aAAa,CAAC;AAC5C,eAAeA,WAAW","names":["React","useBaseComponent","applyDisplayName","InternalMultiselect","Multiselect","forwardRef","_a","ref","options","filteringType","statusType","selectedOptions","keepOpen","hideTokens","restProps","baseComponentProps","inlineTokens","Boolean"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/multiselect/lib/default/multiselect/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { MultiselectProps } from './interfaces';\nimport InternalMultiselect from './internal';\n\nexport { MultiselectProps };\n\nconst Multiselect = React.forwardRef(\n  (\n    {\n      options = [],\n      filteringType = 'none',\n      statusType = 'finished',\n      selectedOptions = [],\n      keepOpen = true,\n      hideTokens = false,\n      ...restProps\n    }: MultiselectProps,\n    ref: React.Ref<MultiselectProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Multiselect');\n\n    // Private API for inline tokens\n    const inlineTokens = Boolean((restProps as any).inlineTokens);\n\n    return (\n      <InternalMultiselect\n        options={options}\n        filteringType={filteringType}\n        statusType={statusType}\n        selectedOptions={selectedOptions}\n        keepOpen={keepOpen}\n        hideTokens={hideTokens}\n        inlineTokens={inlineTokens}\n        {...restProps}\n        {...baseComponentProps}\n        ref={ref}\n      />\n    );\n  }\n);\n\napplyDisplayName(Multiselect, 'Multiselect');\nexport default Multiselect;\n"]},"metadata":{},"sourceType":"module"}