{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nexport var applyTrackBy = function applyTrackBy(trackBy, item) {\n  if (typeof trackBy === 'function') {\n    return trackBy(item);\n  }\n  return item[trackBy];\n};\nexport var getItemKey = function getItemKey(trackBy, item, index) {\n  if (!trackBy) {\n    return index;\n  }\n  return applyTrackBy(trackBy, item);\n};\nexport var getTrackableValue = function getTrackableValue(trackBy, item) {\n  if (!trackBy) {\n    return item;\n  }\n  return applyTrackBy(trackBy, item);\n};\nexport var getColumnKey = function getColumnKey(column, index) {\n  return column.id || index;\n};\nexport var toContainerVariant = function toContainerVariant(variant) {\n  var isDefaultVariant = !variant || variant === 'container';\n  return isDefaultVariant ? 'default' : variant === 'borderless' ? 'embedded' : variant;\n};\nexport function checkSortingState(columnDefinitions, sortingComparator) {\n  var matchedColumn = columnDefinitions.filter(function (column) {\n    return column.sortingComparator === sortingComparator;\n  })[0];\n  if (!matchedColumn) {\n    warnOnce('Table', 'Currently active sorting comparator was not found in any columns. Make sure to provide the same comparator function instance on each render.');\n  }\n}\nexport function getVisibleColumnDefinitions(_ref) {\n  var columnDisplay = _ref.columnDisplay,\n    visibleColumns = _ref.visibleColumns,\n    columnDefinitions = _ref.columnDefinitions;\n  // columnsDisplay has a precedence over visibleColumns.\n  if (columnDisplay) {\n    return getVisibleColumnDefinitionsFromColumnDisplay({\n      columnDisplay: columnDisplay,\n      columnDefinitions: columnDefinitions\n    });\n  } else if (visibleColumns) {\n    return getVisibleColumnDefinitionsFromVisibleColumns({\n      visibleColumns: visibleColumns,\n      columnDefinitions: columnDefinitions\n    });\n  } else {\n    return columnDefinitions;\n  }\n}\nfunction getVisibleColumnDefinitionsFromColumnDisplay(_ref2) {\n  var columnDisplay = _ref2.columnDisplay,\n    columnDefinitions = _ref2.columnDefinitions;\n  var columnDefinitionsById = columnDefinitions.reduce(function (accumulator, item) {\n    return item.id === undefined ? accumulator : Object.assign(Object.assign({}, accumulator), _defineProperty({}, item.id, item));\n  }, {});\n  return columnDisplay.filter(function (item) {\n    return item.visible;\n  }).map(function (item) {\n    return columnDefinitionsById[item.id];\n  }).filter(Boolean);\n}\nfunction getVisibleColumnDefinitionsFromVisibleColumns(_ref3) {\n  var visibleColumns = _ref3.visibleColumns,\n    columnDefinitions = _ref3.columnDefinitions;\n  var ids = new Set(visibleColumns);\n  return columnDefinitions.filter(function (_ref4) {\n    var id = _ref4.id;\n    return id !== undefined && ids.has(id);\n  });\n}\nexport function getStickyClassNames(styles, props) {\n  var _ref5;\n  return _ref5 = {}, _defineProperty(_ref5, styles['sticky-cell'], !!props), _defineProperty(_ref5, styles['sticky-cell-pad-left'], !!(props === null || props === void 0 ? void 0 : props.padLeft)), _defineProperty(_ref5, styles['sticky-cell-last-left'], !!(props === null || props === void 0 ? void 0 : props.lastLeft)), _defineProperty(_ref5, styles['sticky-cell-last-right'], !!(props === null || props === void 0 ? void 0 : props.lastRight)), _ref5;\n}","map":{"version":3,"mappings":"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","names":["warnOnce","applyTrackBy","trackBy","item","getItemKey","index","getTrackableValue","getColumnKey","column","id","toContainerVariant","variant","isDefaultVariant","checkSortingState","columnDefinitions","sortingComparator","matchedColumn","filter","getVisibleColumnDefinitions","columnDisplay","visibleColumns","getVisibleColumnDefinitionsFromColumnDisplay","getVisibleColumnDefinitionsFromVisibleColumns","columnDefinitionsById","reduce","accumulator","undefined","Object","visible","map","Boolean","ids","Set","has","getStickyClassNames","styles","props","padLeft","lastLeft","lastRight"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/table/lib/default/table/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { InternalContainerProps } from '../container/internal';\nimport { StickyColumnsCellState } from './sticky-columns';\nimport { TableProps } from './interfaces';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nexport const applyTrackBy = <T>(trackBy: TableProps.TrackBy<T>, item: T) => {\n  if (typeof trackBy === 'function') {\n    return trackBy(item);\n  }\n  return (item as any)[trackBy];\n};\n\nexport const getItemKey = <T>(trackBy: TableProps.TrackBy<T> | undefined, item: T, index: number) => {\n  if (!trackBy) {\n    return index;\n  }\n  return applyTrackBy(trackBy, item);\n};\n\nexport const getTrackableValue = <T>(trackBy: TableProps.TrackBy<T> | undefined, item: T) => {\n  if (!trackBy) {\n    return item;\n  }\n  return applyTrackBy(trackBy, item);\n};\n\nexport const getColumnKey = <T>(column: TableProps.ColumnDefinition<T>, index: number) => {\n  return column.id || index;\n};\n\nexport const toContainerVariant = (variant: TableProps.Variant | undefined): InternalContainerProps['variant'] => {\n  const isDefaultVariant = !variant || variant === 'container';\n  return isDefaultVariant ? 'default' : variant === 'borderless' ? 'embedded' : variant;\n};\n\nexport function checkSortingState<T>(\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>,\n  sortingComparator: TableProps.SortingColumn<T>['sortingComparator']\n) {\n  const matchedColumn = columnDefinitions.filter(column => column.sortingComparator === sortingComparator)[0];\n  if (!matchedColumn) {\n    warnOnce(\n      'Table',\n      'Currently active sorting comparator was not found in any columns. Make sure to provide the same comparator function instance on each render.'\n    );\n  }\n}\n\nexport function getVisibleColumnDefinitions<T>({\n  columnDisplay,\n  visibleColumns,\n  columnDefinitions,\n}: {\n  columnDisplay?: ReadonlyArray<TableProps.ColumnDisplayProperties>;\n  visibleColumns?: ReadonlyArray<string>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  // columnsDisplay has a precedence over visibleColumns.\n  if (columnDisplay) {\n    return getVisibleColumnDefinitionsFromColumnDisplay({ columnDisplay, columnDefinitions });\n  } else if (visibleColumns) {\n    return getVisibleColumnDefinitionsFromVisibleColumns({ visibleColumns, columnDefinitions });\n  } else {\n    return columnDefinitions;\n  }\n}\n\nfunction getVisibleColumnDefinitionsFromColumnDisplay<T>({\n  columnDisplay,\n  columnDefinitions,\n}: {\n  columnDisplay: ReadonlyArray<TableProps.ColumnDisplayProperties>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  const columnDefinitionsById: Record<string, TableProps.ColumnDefinition<T>> = columnDefinitions.reduce(\n    (accumulator, item) => (item.id === undefined ? accumulator : { ...accumulator, [item.id]: item }),\n    {}\n  );\n  return columnDisplay\n    .filter(item => item.visible)\n    .map(item => columnDefinitionsById[item.id])\n    .filter(Boolean);\n}\n\nfunction getVisibleColumnDefinitionsFromVisibleColumns<T>({\n  visibleColumns,\n  columnDefinitions,\n}: {\n  visibleColumns: ReadonlyArray<string>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  const ids = new Set(visibleColumns);\n  return columnDefinitions.filter(({ id }) => id !== undefined && ids.has(id));\n}\n\nexport function getStickyClassNames(styles: Record<string, string>, props: StickyColumnsCellState | null) {\n  return {\n    [styles['sticky-cell']]: !!props,\n    [styles['sticky-cell-pad-left']]: !!props?.padLeft,\n    [styles['sticky-cell-last-left']]: !!props?.lastLeft,\n    [styles['sticky-cell-last-right']]: !!props?.lastRight,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}