{"ast":null,"code":"import _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useState } from 'react';\nimport { getLimitedValue } from '../../split-panel/utils/size-utils';\nimport { SplitPanelContextProvider } from '../../internal/context/split-panel-context';\nvar MIN_HEIGHT = 160;\nvar MIN_WIDTH = 280;\nexport function SplitPanelProvider(_a) {\n  var children = _a.children,\n    size = _a.size,\n    getMaxHeight = _a.getMaxHeight,\n    getMaxWidth = _a.getMaxWidth,\n    onResize = _a.onResize,\n    rest = __rest(_a, [\"children\", \"size\", \"getMaxHeight\", \"getMaxWidth\", \"onResize\"]);\n  var position = rest.position,\n    reportSize = rest.reportSize,\n    isOpen = rest.isOpen;\n  var minSize = position === 'bottom' ? MIN_HEIGHT : MIN_WIDTH;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    relativeSize = _useState2[0],\n    setRelativeSize = _useState2[1];\n  var _useState3 = useState(size),\n    _useState4 = _slicedToArray(_useState3, 2),\n    maxSize = _useState4[0],\n    setMaxSize = _useState4[1];\n  var cappedSize = getLimitedValue(minSize, size, maxSize);\n  var onResizeWithValidation = function onResizeWithValidation(newSize) {\n    var maxSize = position === 'side' ? getMaxWidth() : getMaxHeight();\n    var isResizeValid = position === 'side' ? maxSize >= MIN_WIDTH : maxSize >= MIN_HEIGHT;\n    if (isOpen && isResizeValid) {\n      onResize(getLimitedValue(minSize, newSize, maxSize));\n    }\n  };\n  useEffect(function () {\n    // effects are called inside out in the components tree\n    // wait one frame to allow app-layout to complete its calculations\n    var handle = requestAnimationFrame(function () {\n      var maxSize = position === 'bottom' ? getMaxHeight() : getMaxWidth();\n      setRelativeSize((size - minSize) / (maxSize - minSize) * 100);\n      setMaxSize(maxSize);\n    });\n    return function () {\n      return cancelAnimationFrame(handle);\n    };\n  }, [size, minSize, position, getMaxHeight, getMaxWidth]);\n  useEffect(function () {\n    reportSize(cappedSize);\n  }, [reportSize, cappedSize]);\n  useEffect(function () {\n    var handler = function handler() {\n      return setMaxSize(position === 'bottom' ? getMaxHeight() : getMaxWidth());\n    };\n    window.addEventListener('resize', handler);\n    return function () {\n      return window.removeEventListener('resize', handler);\n    };\n  }, [position, getMaxWidth, getMaxHeight]);\n  return React.createElement(SplitPanelContextProvider, {\n    value: Object.assign(Object.assign({}, rest), {\n      size: cappedSize,\n      relativeSize: relativeSize,\n      onResize: onResizeWithValidation\n    })\n  }, children);\n}","map":{"version":3,"mappings":"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","names":["React","useEffect","useState","getLimitedValue","SplitPanelContextProvider","MIN_HEIGHT","MIN_WIDTH","SplitPanelProvider","_a","children","size","getMaxHeight","getMaxWidth","onResize","rest","position","reportSize","isOpen","minSize","relativeSize","setRelativeSize","maxSize","setMaxSize","cappedSize","onResizeWithValidation","newSize","isResizeValid","handle","requestAnimationFrame","cancelAnimationFrame","handler","window","addEventListener","removeEventListener","value"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/app-layout/split-panel/lib/default/app-layout/split-panel/provider.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useState } from 'react';\nimport { getLimitedValue } from '../../split-panel/utils/size-utils';\nimport { SplitPanelContextBaseProps, SplitPanelContextProvider } from '../../internal/context/split-panel-context';\n\nexport interface SplitPanelProviderProps extends SplitPanelContextBaseProps {\n  getMaxWidth: () => number;\n  getMaxHeight: () => number;\n  children?: React.ReactNode;\n}\n\nconst MIN_HEIGHT = 160;\nconst MIN_WIDTH = 280;\n\nexport function SplitPanelProvider({\n  children,\n  size,\n  getMaxHeight,\n  getMaxWidth,\n  onResize,\n  ...rest\n}: SplitPanelProviderProps) {\n  const { position, reportSize, isOpen } = rest;\n  const minSize = position === 'bottom' ? MIN_HEIGHT : MIN_WIDTH;\n  const [relativeSize, setRelativeSize] = useState(0);\n  const [maxSize, setMaxSize] = useState(size);\n  const cappedSize = getLimitedValue(minSize, size, maxSize);\n\n  const onResizeWithValidation = (newSize: number) => {\n    const maxSize = position === 'side' ? getMaxWidth() : getMaxHeight();\n    const isResizeValid = position === 'side' ? maxSize >= MIN_WIDTH : maxSize >= MIN_HEIGHT;\n    if (isOpen && isResizeValid) {\n      onResize(getLimitedValue(minSize, newSize, maxSize));\n    }\n  };\n\n  useEffect(() => {\n    // effects are called inside out in the components tree\n    // wait one frame to allow app-layout to complete its calculations\n    const handle = requestAnimationFrame(() => {\n      const maxSize = position === 'bottom' ? getMaxHeight() : getMaxWidth();\n      setRelativeSize(((size - minSize) / (maxSize - minSize)) * 100);\n      setMaxSize(maxSize);\n    });\n    return () => cancelAnimationFrame(handle);\n  }, [size, minSize, position, getMaxHeight, getMaxWidth]);\n\n  useEffect(() => {\n    reportSize(cappedSize);\n  }, [reportSize, cappedSize]);\n\n  useEffect(() => {\n    const handler = () => setMaxSize(position === 'bottom' ? getMaxHeight() : getMaxWidth());\n    window.addEventListener('resize', handler);\n    return () => window.removeEventListener('resize', handler);\n  }, [position, getMaxWidth, getMaxHeight]);\n\n  return (\n    <SplitPanelContextProvider value={{ ...rest, size: cappedSize, relativeSize, onResize: onResizeWithValidation }}>\n      {children}\n    </SplitPanelContextProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}