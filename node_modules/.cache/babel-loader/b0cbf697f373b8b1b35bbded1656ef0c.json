{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nimport { useCallback, useEffect, useState } from 'react';\nexport default function useAppLayoutOffsets(element) {\n  const [offsets, setOffsets] = useState({\n    left: 0,\n    right: 0\n  });\n  const updatePosition = useCallback(() => {\n    if (!element) {\n      return;\n    }\n    const {\n      left,\n      right\n    } = element.getBoundingClientRect();\n    const bodyWidth = document.body.clientWidth;\n    setOffsets({\n      left,\n      right: bodyWidth - right\n    });\n  }, [element]);\n  useEffect(() => {\n    window.addEventListener('resize', updatePosition);\n    return () => window.removeEventListener('resize', updatePosition);\n  }, [updatePosition]);\n  const getElement = useCallback(() => element, [element]);\n  useResizeObserver(getElement, updatePosition);\n  return offsets;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,iBAAiB,QAAQ,+CAA+C;AACjF,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAExD,eAAc,SAAUC,mBAAmB,CAACC,OAA8B;EACxE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC;IAAEK,IAAI,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAC,CAAE,CAAC;EAE7D,MAAMC,cAAc,GAAGT,WAAW,CAAC,MAAK;IACtC,IAAI,CAACI,OAAO,EAAE;MACZ;;IAEF,MAAM;MAAEG,IAAI;MAAEC;IAAK,CAAE,GAAGJ,OAAO,CAACM,qBAAqB,EAAE;IACvD,MAAMC,SAAS,GAAGC,QAAQ,CAACC,IAAI,CAACC,WAAW;IAE3CR,UAAU,CAAC;MAAEC,IAAI;MAAEC,KAAK,EAAEG,SAAS,GAAGH;IAAK,CAAE,CAAC;EAChD,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEbH,SAAS,CAAC,MAAK;IACbc,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEP,cAAc,CAAC;IACjD,OAAO,MAAMM,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAER,cAAc,CAAC;EACnE,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,MAAMS,UAAU,GAAGlB,WAAW,CAAC,MAAMI,OAAO,EAAE,CAACA,OAAO,CAAC,CAAC;EACxDL,iBAAiB,CAACmB,UAAU,EAAET,cAAc,CAAC;EAE7C,OAAOJ,OAAO;AAChB","names":["useResizeObserver","useCallback","useEffect","useState","useAppLayoutOffsets","element","offsets","setOffsets","left","right","updatePosition","getBoundingClientRect","bodyWidth","document","body","clientWidth","window","addEventListener","removeEventListener","getElement"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/app-layout/utils/lib/default/app-layout/utils/use-content-width.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nimport { useCallback, useEffect, useState } from 'react';\n\nexport default function useAppLayoutOffsets(element: HTMLDivElement | null): { left: number; right: number } {\n  const [offsets, setOffsets] = useState({ left: 0, right: 0 });\n\n  const updatePosition = useCallback(() => {\n    if (!element) {\n      return;\n    }\n    const { left, right } = element.getBoundingClientRect();\n    const bodyWidth = document.body.clientWidth;\n\n    setOffsets({ left, right: bodyWidth - right });\n  }, [element]);\n\n  useEffect(() => {\n    window.addEventListener('resize', updatePosition);\n    return () => window.removeEventListener('resize', updatePosition);\n  }, [updatePosition]);\n\n  const getElement = useCallback(() => element, [element]);\n  useResizeObserver(getElement, updatePosition);\n\n  return offsets;\n}\n"]},"metadata":{},"sourceType":"module"}