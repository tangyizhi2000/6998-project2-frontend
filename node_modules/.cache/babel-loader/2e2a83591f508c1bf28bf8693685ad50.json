{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useImperativeHandle, useRef } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport InternalInput from './internal';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nvar Input = React.forwardRef(function (_a, ref) {\n  var value = _a.value,\n    _a$type = _a.type,\n    type = _a$type === void 0 ? 'text' : _a$type,\n    step = _a.step,\n    inputMode = _a.inputMode,\n    _a$autoComplete = _a.autoComplete,\n    autoComplete = _a$autoComplete === void 0 ? true : _a$autoComplete,\n    spellcheck = _a.spellcheck,\n    disabled = _a.disabled,\n    readOnly = _a.readOnly,\n    disableBrowserAutocorrect = _a.disableBrowserAutocorrect,\n    onKeyDown = _a.onKeyDown,\n    onKeyUp = _a.onKeyUp,\n    onChange = _a.onChange,\n    onBlur = _a.onBlur,\n    onFocus = _a.onFocus,\n    ariaRequired = _a.ariaRequired,\n    name = _a.name,\n    placeholder = _a.placeholder,\n    autoFocus = _a.autoFocus,\n    ariaLabel = _a.ariaLabel,\n    ariaLabelledby = _a.ariaLabelledby,\n    ariaDescribedby = _a.ariaDescribedby,\n    invalid = _a.invalid,\n    controlId = _a.controlId,\n    clearAriaLabel = _a.clearAriaLabel,\n    rest = __rest(_a, [\"value\", \"type\", \"step\", \"inputMode\", \"autoComplete\", \"spellcheck\", \"disabled\", \"readOnly\", \"disableBrowserAutocorrect\", \"onKeyDown\", \"onKeyUp\", \"onChange\", \"onBlur\", \"onFocus\", \"ariaRequired\", \"name\", \"placeholder\", \"autoFocus\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescribedby\", \"invalid\", \"controlId\", \"clearAriaLabel\"]);\n  var baseComponentProps = useBaseComponent('Input');\n  var baseProps = getBaseProps(rest);\n  var inputRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        var _a2;\n        var _a;\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : (_a2 = _a).focus.apply(_a2, arguments);\n      },\n      select: function select() {\n        var _a;\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.select();\n      }\n    };\n  }, [inputRef]);\n  return React.createElement(InternalInput, Object.assign({\n    ref: inputRef\n  }, Object.assign(Object.assign(Object.assign({}, baseProps), baseComponentProps), {\n    autoComplete: autoComplete,\n    ariaLabel: ariaLabel,\n    ariaRequired: ariaRequired,\n    autoFocus: autoFocus,\n    disabled: disabled,\n    disableBrowserAutocorrect: disableBrowserAutocorrect,\n    name: name,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onChange: onChange,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    type: type,\n    step: step,\n    inputMode: inputMode,\n    spellcheck: spellcheck,\n    value: value,\n    ariaDescribedby: ariaDescribedby,\n    ariaLabelledby: ariaLabelledby,\n    invalid: invalid,\n    controlId: controlId,\n    clearAriaLabel: clearAriaLabel\n  }), {\n    className: clsx(styles.root, baseProps.className),\n    __inheritFormFieldProps: true\n  }));\n});\napplyDisplayName(Input, 'Input');\nexport default Input;","map":{"version":3,"mappings":"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","names":["clsx","React","useImperativeHandle","useRef","getBaseProps","InternalInput","styles","applyDisplayName","useBaseComponent","Input","forwardRef","_a","ref","value","type","step","inputMode","autoComplete","spellcheck","disabled","readOnly","disableBrowserAutocorrect","onKeyDown","onKeyUp","onChange","onBlur","onFocus","ariaRequired","name","placeholder","autoFocus","ariaLabel","ariaLabelledby","ariaDescribedby","invalid","controlId","clearAriaLabel","rest","baseComponentProps","baseProps","inputRef","focus","current","select","className","root","__inheritFormFieldProps"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/input/lib/default/input/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { Ref, useImperativeHandle, useRef } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport InternalInput from './internal';\nimport { InputProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { InputProps };\n\nconst Input = React.forwardRef(\n  (\n    {\n      value,\n      type = 'text',\n      step,\n      inputMode,\n      autoComplete = true,\n      spellcheck,\n      disabled,\n      readOnly,\n      disableBrowserAutocorrect,\n      onKeyDown,\n      onKeyUp,\n      onChange,\n      onBlur,\n      onFocus,\n      ariaRequired,\n      name,\n      placeholder,\n      autoFocus,\n      ariaLabel,\n      ariaLabelledby,\n      ariaDescribedby,\n      invalid,\n      controlId,\n      clearAriaLabel,\n      ...rest\n    }: InputProps,\n    ref: Ref<InputProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Input');\n    const baseProps = getBaseProps(rest);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        focus(...args: Parameters<HTMLElement['focus']>) {\n          inputRef.current?.focus(...args);\n        },\n        select() {\n          inputRef.current?.select();\n        },\n      }),\n      [inputRef]\n    );\n\n    return (\n      <InternalInput\n        ref={inputRef}\n        {...{\n          ...baseProps,\n          ...baseComponentProps,\n          autoComplete,\n          ariaLabel,\n          ariaRequired,\n          autoFocus,\n          disabled,\n          disableBrowserAutocorrect,\n          name,\n          onKeyDown,\n          onKeyUp,\n          onChange,\n          onBlur,\n          onFocus,\n          placeholder,\n          readOnly,\n          type,\n          step,\n          inputMode,\n          spellcheck,\n          value,\n          ariaDescribedby,\n          ariaLabelledby,\n          invalid,\n          controlId,\n          clearAriaLabel,\n        }}\n        className={clsx(styles.root, baseProps.className)}\n        __inheritFormFieldProps={true}\n      />\n    );\n  }\n);\n\napplyDisplayName(Input, 'Input');\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}