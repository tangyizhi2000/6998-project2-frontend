{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { InternalButton } from './internal';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nconst Button = React.forwardRef((_a, ref) => {\n  var {\n      children,\n      iconName,\n      iconAlign = 'left',\n      iconUrl,\n      iconSvg,\n      iconAlt,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      wrapText = true,\n      href,\n      target,\n      rel,\n      download,\n      formAction = 'submit',\n      ariaLabel,\n      ariaDescribedby,\n      onClick,\n      onFollow,\n      ariaExpanded,\n      fullWidth,\n      form\n    } = _a,\n    props = __rest(_a, [\"children\", \"iconName\", \"iconAlign\", \"iconUrl\", \"iconSvg\", \"iconAlt\", \"variant\", \"loading\", \"loadingText\", \"disabled\", \"wrapText\", \"href\", \"target\", \"rel\", \"download\", \"formAction\", \"ariaLabel\", \"ariaDescribedby\", \"onClick\", \"onFollow\", \"ariaExpanded\", \"fullWidth\", \"form\"]);\n  const baseComponentProps = useBaseComponent('Button', {\n    variant,\n    disabled,\n    loading\n  });\n  const baseProps = getBaseProps(props);\n  return React.createElement(InternalButton, Object.assign({}, baseProps, baseComponentProps, {\n    ref: ref,\n    iconName: iconName,\n    iconAlign: iconAlign,\n    iconUrl: iconUrl,\n    iconSvg: iconSvg,\n    iconAlt: iconAlt,\n    variant: variant,\n    loading: loading,\n    loadingText: loadingText,\n    disabled: disabled,\n    wrapText: wrapText,\n    href: href,\n    target: target,\n    rel: rel,\n    download: download,\n    formAction: formAction,\n    ariaLabel: ariaLabel,\n    ariaDescribedby: ariaDescribedby,\n    onClick: onClick,\n    onFollow: onFollow,\n    ariaExpanded: ariaExpanded,\n    fullWidth: fullWidth,\n    form: form\n  }), children);\n});\napplyDisplayName(Button, 'Button');\nexport default Button;","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,4BAA4B;AAEzD,SAASC,cAAc,QAAQ,YAAY;AAC3C,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,OAAOC,gBAAgB,MAAM,sCAAsC;AAInE,MAAMC,MAAM,GAAGL,KAAK,CAACM,UAAU,CAC7B,CACEC,EAyBc,EACdC,GAA+B,KAC7B;MA3BF;MACEC,QAAQ;MACRC,QAAQ;MACRC,SAAS,GAAG,MAAM;MAClBC,OAAO;MACPC,OAAO;MACPC,OAAO;MACPC,OAAO,GAAG,QAAQ;MAClBC,OAAO,GAAG,KAAK;MACfC,WAAW;MACXC,QAAQ,GAAG,KAAK;MAChBC,QAAQ,GAAG,IAAI;MACfC,IAAI;MACJC,MAAM;MACNC,GAAG;MACHC,QAAQ;MACRC,UAAU,GAAG,QAAQ;MACrBC,SAAS;MACTC,eAAe;MACfC,OAAO;MACPC,QAAQ;MACRC,YAAY;MACZC,SAAS;MACTC;IAAI,MAEQ;IADTC,KAAK,cAxBV,kRAyBC,CADS;EAIV,MAAMC,kBAAkB,GAAG7B,gBAAgB,CAAC,QAAQ,EAAE;IAAEW,OAAO;IAAEG,QAAQ;IAAEF;EAAO,CAAE,CAAC;EACrF,MAAMkB,SAAS,GAAGjC,YAAY,CAAC+B,KAAK,CAAC;EACrC,OACEhC,oBAACE,cAAc,oBACTgC,SAAS,EACTD,kBAAkB;IACtBzB,GAAG,EAAEA,GAAG;IACRE,QAAQ,EAAEA,QAAQ;IAClBC,SAAS,EAAEA,SAAS;IACpBC,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA,OAAO;IAChBC,WAAW,EAAEA,WAAW;IACxBC,QAAQ,EAAEA,QAAQ;IAClBC,QAAQ,EAAEA,QAAQ;IAClBC,IAAI,EAAEA,IAAI;IACVC,MAAM,EAAEA,MAAM;IACdC,GAAG,EAAEA,GAAG;IACRC,QAAQ,EAAEA,QAAQ;IAClBC,UAAU,EAAEA,UAAU;IACtBC,SAAS,EAAEA,SAAS;IACpBC,eAAe,EAAEA,eAAe;IAChCC,OAAO,EAAEA,OAAO;IAChBC,QAAQ,EAAEA,QAAQ;IAClBC,YAAY,EAAEA,YAAY;IAC1BC,SAAS,EAAEA,SAAS;IACpBC,IAAI,EAAEA;EAAI,IAETtB,QAAQ,CACM;AAErB,CAAC,CACF;AAEDN,gBAAgB,CAACE,MAAM,EAAE,QAAQ,CAAC;AAClC,eAAeA,MAAM","names":["React","getBaseProps","InternalButton","applyDisplayName","useBaseComponent","Button","forwardRef","_a","ref","children","iconName","iconAlign","iconUrl","iconSvg","iconAlt","variant","loading","loadingText","disabled","wrapText","href","target","rel","download","formAction","ariaLabel","ariaDescribedby","onClick","onFollow","ariaExpanded","fullWidth","form","props","baseComponentProps","baseProps"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/button/lib/default/button/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { ButtonProps } from './interfaces';\nimport { InternalButton } from './internal';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { ButtonProps };\n\nconst Button = React.forwardRef(\n  (\n    {\n      children,\n      iconName,\n      iconAlign = 'left',\n      iconUrl,\n      iconSvg,\n      iconAlt,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      wrapText = true,\n      href,\n      target,\n      rel,\n      download,\n      formAction = 'submit',\n      ariaLabel,\n      ariaDescribedby,\n      onClick,\n      onFollow,\n      ariaExpanded,\n      fullWidth,\n      form,\n      ...props\n    }: ButtonProps,\n    ref: React.Ref<ButtonProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Button', { variant, disabled, loading });\n    const baseProps = getBaseProps(props);\n    return (\n      <InternalButton\n        {...baseProps}\n        {...baseComponentProps}\n        ref={ref}\n        iconName={iconName}\n        iconAlign={iconAlign}\n        iconUrl={iconUrl}\n        iconSvg={iconSvg}\n        iconAlt={iconAlt}\n        variant={variant}\n        loading={loading}\n        loadingText={loadingText}\n        disabled={disabled}\n        wrapText={wrapText}\n        href={href}\n        target={target}\n        rel={rel}\n        download={download}\n        formAction={formAction}\n        ariaLabel={ariaLabel}\n        ariaDescribedby={ariaDescribedby}\n        onClick={onClick}\n        onFollow={onFollow}\n        ariaExpanded={ariaExpanded}\n        fullWidth={fullWidth}\n        form={form}\n      >\n        {children}\n      </InternalButton>\n    );\n  }\n);\n\napplyDisplayName(Button, 'Button');\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}