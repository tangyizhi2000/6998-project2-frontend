{"ast":null,"code":"import _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { getXTickCount, getYTickCount, createXTicks, createYTicks } from '../internal/components/cartesian-chart/ticks';\nimport ChartPlot from '../internal/components/chart-plot';\nimport AxisLabel from '../internal/components/cartesian-chart/axis-label';\nimport LabelsMeasure from '../internal/components/cartesian-chart/labels-measure';\nimport LeftLabels from '../internal/components/cartesian-chart/left-labels';\nimport BottomLabels, { useBottomLabels } from '../internal/components/cartesian-chart/bottom-labels';\nimport VerticalGridLines from '../internal/components/cartesian-chart/vertical-grid-lines';\nimport EmphasizedBaseline from '../internal/components/cartesian-chart/emphasized-baseline';\nimport HighlightedPoint from '../internal/components/cartesian-chart/highlighted-point';\nimport VerticalMarker from '../internal/components/cartesian-chart/vertical-marker';\nimport { ChartScale, NumericChartScale } from '../internal/components/cartesian-chart/scales';\nimport ChartPopover from './chart-popover';\nimport { computeDomainX, computeDomainY } from './domain';\nimport { isXThreshold } from './utils';\nimport makeScaledSeries from './make-scaled-series';\nimport makeScaledBarGroups from './make-scaled-bar-groups';\nimport formatHighlighted from './format-highlighted';\nimport DataSeries from './data-series';\nimport BarGroups from './bar-groups';\nimport { useMouseHover } from './hooks/use-mouse-hover';\nimport { useNavigation } from './hooks/use-navigation';\nimport { usePopover } from './hooks/use-popover';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { nodeBelongs } from '../internal/utils/node-belongs';\nimport { CartesianChartContainer } from '../internal/components/cartesian-chart/chart-container';\nimport { useHeightMeasure } from '../internal/hooks/container-queries/use-height-measure';\nvar LEFT_LABELS_MARGIN = 16;\nvar BOTTOM_LABELS_OFFSET = 12;\nexport default function ChartContainer(_a) {\n  var _b, _c;\n  var fitHeight = _a.fitHeight,\n    explicitPlotHeight = _a.height,\n    series = _a.series,\n    visibleSeries = _a.visibleSeries,\n    highlightedSeries = _a.highlightedSeries,\n    onHighlightChange = _a.onHighlightChange,\n    highlightedPoint = _a.highlightedPoint,\n    setHighlightedPoint = _a.setHighlightedPoint,\n    highlightedGroupIndex = _a.highlightedGroupIndex,\n    setHighlightedGroupIndex = _a.setHighlightedGroupIndex,\n    detailPopoverFooter = _a.detailPopoverFooter,\n    _a$detailPopoverSize = _a.detailPopoverSize,\n    detailPopoverSize = _a$detailPopoverSize === void 0 ? 'medium' : _a$detailPopoverSize,\n    _a$stackedBars = _a.stackedBars,\n    stackedBars = _a$stackedBars === void 0 ? false : _a$stackedBars,\n    _a$horizontalBars = _a.horizontalBars,\n    horizontalBars = _a$horizontalBars === void 0 ? false : _a$horizontalBars,\n    xScaleType = _a.xScaleType,\n    yScaleType = _a.yScaleType,\n    xTickFormatter = _a.xTickFormatter,\n    yTickFormatter = _a.yTickFormatter,\n    emphasizeBaselineAxis = _a.emphasizeBaselineAxis,\n    xTitle = _a.xTitle,\n    yTitle = _a.yTitle,\n    ariaLabel = _a.ariaLabel,\n    ariaLabelledby = _a.ariaLabelledby,\n    ariaDescription = _a.ariaDescription,\n    _a$i18nStrings = _a.i18nStrings,\n    i18nStrings = _a$i18nStrings === void 0 ? {} : _a$i18nStrings,\n    plotContainerRef = _a.plotContainerRef,\n    props = __rest(_a, [\"fitHeight\", \"height\", \"series\", \"visibleSeries\", \"highlightedSeries\", \"onHighlightChange\", \"highlightedPoint\", \"setHighlightedPoint\", \"highlightedGroupIndex\", \"setHighlightedGroupIndex\", \"detailPopoverFooter\", \"detailPopoverSize\", \"stackedBars\", \"horizontalBars\", \"xScaleType\", \"yScaleType\", \"xTickFormatter\", \"yTickFormatter\", \"emphasizeBaselineAxis\", \"xTitle\", \"yTitle\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescription\", \"i18nStrings\", \"plotContainerRef\"]);\n  var plotRef = useRef(null);\n  var verticalMarkerRef = useRef(null);\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    leftLabelsWidth = _useState2[0],\n    setLeftLabelsWidth = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    verticalMarkerX = _useState4[0],\n    setVerticalMarkerX = _useState4[1];\n  var _useContainerWidth = useContainerWidth(500),\n    _useContainerWidth2 = _slicedToArray(_useContainerWidth, 2),\n    containerWidth = _useContainerWidth2[0],\n    containerMeasureRef = _useContainerWidth2[1];\n  var plotWidth = containerWidth ? containerWidth - leftLabelsWidth - LEFT_LABELS_MARGIN : 500;\n  var containerRefObject = useRef(null);\n  var containerRef = useMergeRefs(containerMeasureRef, containerRefObject);\n  var popoverRef = useRef(null);\n  var xDomain = props.xDomain || computeDomainX(series, xScaleType);\n  var yDomain = props.yDomain || computeDomainY(series, yScaleType, stackedBars);\n  var linesOnly = series.every(function (_ref) {\n    var series = _ref.series;\n    return series.type === 'line' || series.type === 'threshold';\n  });\n  function getXAxisProps(size, range) {\n    var tickCount = getXTickCount(size);\n    var scale = new ChartScale(xScaleType, xDomain, range, linesOnly);\n    var ticks = createXTicks(scale, tickCount);\n    return {\n      axis: 'x',\n      tickCount: tickCount,\n      scale: scale,\n      ticks: ticks,\n      tickFormatter: xTickFormatter,\n      title: xTitle,\n      ariaRoleDescription: i18nStrings.xAxisAriaRoleDescription\n    };\n  }\n  function getYAxisProps(size, range) {\n    var tickCount = getYTickCount(size);\n    var scale = new NumericChartScale(yScaleType, yDomain, range, props.yDomain ? null : tickCount);\n    var ticks = createYTicks(scale, tickCount);\n    return {\n      axis: 'y',\n      tickCount: tickCount,\n      scale: scale,\n      ticks: ticks,\n      tickFormatter: yTickFormatter,\n      title: yTitle,\n      ariaRoleDescription: i18nStrings.yAxisAriaRoleDescription\n    };\n  }\n  var bottomAxisProps = !horizontalBars ? getXAxisProps(plotWidth, [0, plotWidth]) : getYAxisProps(plotWidth, [0, plotWidth]);\n  var bottomLabelsProps = useBottomLabels(Object.assign({}, bottomAxisProps));\n  var plotMeasureRef = useRef(null);\n  var measuredHeight = useHeightMeasure(function () {\n    return plotMeasureRef.current;\n  }, !fitHeight);\n  var plotHeight = fitHeight ? measuredHeight !== null && measuredHeight !== void 0 ? measuredHeight : 0 : explicitPlotHeight;\n  var leftAxisProps = !horizontalBars ? getYAxisProps(plotHeight, [plotHeight, 0]) : getXAxisProps(plotHeight, [0, plotHeight]);\n  var xAxisProps = bottomAxisProps.axis === 'x' ? bottomAxisProps : leftAxisProps.axis === 'x' ? leftAxisProps : null;\n  var yAxisProps = bottomAxisProps.axis === 'y' ? bottomAxisProps : leftAxisProps.axis === 'y' ? leftAxisProps : null;\n  if (!xAxisProps || !yAxisProps) {\n    throw new Error('Invariant violation: invalid axis props.');\n  }\n  /**\n   * Interactions\n   */\n  var highlightedPointRef = useRef(null);\n  var highlightedGroupRef = useRef(null);\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isPlotFocused = _useState6[0],\n    setPlotFocused = _useState6[1];\n  // Some chart components are rendered against \"x\" or \"y\" axes,\n  // When \"horizontalBars\" is enabled, the axes are inverted.\n  var x = !horizontalBars ? 'x' : 'y';\n  var y = !horizontalBars ? 'y' : 'x';\n  var scaledSeries = makeScaledSeries(visibleSeries, xAxisProps.scale, yAxisProps.scale);\n  var barGroups = makeScaledBarGroups(visibleSeries, xAxisProps.scale, plotWidth, plotHeight, y);\n  var _usePopover = usePopover(),\n    isPopoverOpen = _usePopover.isPopoverOpen,\n    isPopoverPinned = _usePopover.isPopoverPinned,\n    showPopover = _usePopover.showPopover,\n    pinPopover = _usePopover.pinPopover,\n    dismissPopover = _usePopover.dismissPopover;\n  // Allows to add a delay between popover is dismissed and handlers are enabled to prevent immediate popover reopening.\n  var _useState7 = useState(!isPopoverPinned),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isHandlersDisabled = _useState8[0],\n    setHandlersDisabled = _useState8[1];\n  useEffect(function () {\n    if (isPopoverPinned) {\n      setHandlersDisabled(true);\n    } else {\n      var timeoutId = setTimeout(function () {\n        return setHandlersDisabled(false);\n      }, 25);\n      return function () {\n        return clearTimeout(timeoutId);\n      };\n    }\n  }, [isPopoverPinned]);\n  var highlightSeries = useCallback(function (series) {\n    if (series !== highlightedSeries) {\n      onHighlightChange(series);\n    }\n  }, [highlightedSeries, onHighlightChange]);\n  var highlightPoint = useCallback(function (point) {\n    var _a, _b;\n    setHighlightedGroupIndex(null);\n    setHighlightedPoint(point);\n    if (point) {\n      highlightSeries(point.series);\n      setVerticalMarkerX({\n        scaledX: point.x,\n        label: (_b = (_a = point.datum) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : null\n      });\n    }\n  }, [setHighlightedGroupIndex, setHighlightedPoint, highlightSeries]);\n  var clearAllHighlights = useCallback(function () {\n    setHighlightedPoint(null);\n    highlightSeries(null);\n    setHighlightedGroupIndex(null);\n  }, [highlightSeries, setHighlightedGroupIndex, setHighlightedPoint]);\n  // Highlight all points at a given X in a line chart\n  var highlightX = useCallback(function (marker) {\n    if (marker) {\n      clearAllHighlights();\n    }\n    setVerticalMarkerX(marker);\n  }, [clearAllHighlights]);\n  // Highlight all points and bars at a given X index in a mixed line and bar chart\n  var highlightGroup = useCallback(function (groupIndex) {\n    highlightSeries(null);\n    setHighlightedPoint(null);\n    setHighlightedGroupIndex(groupIndex);\n  }, [highlightSeries, setHighlightedPoint, setHighlightedGroupIndex]);\n  var clearHighlightedSeries = useCallback(function () {\n    clearAllHighlights();\n    dismissPopover();\n  }, [dismissPopover, clearAllHighlights]);\n  var _d = useNavigation({\n      series: series,\n      visibleSeries: visibleSeries,\n      scaledSeries: scaledSeries,\n      barGroups: barGroups,\n      xScale: xAxisProps.scale,\n      yScale: yAxisProps.scale,\n      highlightedPoint: highlightedPoint,\n      highlightedGroupIndex: highlightedGroupIndex,\n      highlightedSeries: highlightedSeries,\n      isHandlersDisabled: isHandlersDisabled,\n      pinPopover: pinPopover,\n      highlightSeries: highlightSeries,\n      highlightGroup: highlightGroup,\n      highlightPoint: highlightPoint,\n      highlightX: highlightX,\n      clearHighlightedSeries: clearHighlightedSeries,\n      verticalMarkerX: verticalMarkerX\n    }),\n    isGroupNavigation = _d.isGroupNavigation,\n    handlers = __rest(_d, [\"isGroupNavigation\"]);\n  var _useMouseHover = useMouseHover({\n      scaledSeries: scaledSeries,\n      barGroups: barGroups,\n      plotRef: plotRef,\n      popoverRef: popoverRef,\n      highlightPoint: highlightPoint,\n      highlightGroup: highlightGroup,\n      clearHighlightedSeries: clearHighlightedSeries,\n      isGroupNavigation: isGroupNavigation,\n      isHandlersDisabled: isHandlersDisabled,\n      highlightX: highlightX\n    }),\n    onSVGMouseMove = _useMouseHover.onSVGMouseMove,\n    onSVGMouseOut = _useMouseHover.onSVGMouseOut,\n    onPopoverLeave = _useMouseHover.onPopoverLeave;\n  // There are multiple ways to indicate what X is selected.\n  // TODO: make a uniform verticalMarkerX state to fit all use-cases.\n  var highlightedX = useMemo(function () {\n    var _a, _b;\n    if (highlightedGroupIndex !== null) {\n      return barGroups[highlightedGroupIndex].x;\n    }\n    if (verticalMarkerX !== null) {\n      return verticalMarkerX.label;\n    }\n    return (_b = (_a = highlightedPoint === null || highlightedPoint === void 0 ? void 0 : highlightedPoint.datum) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : null;\n  }, [highlightedPoint, verticalMarkerX, highlightedGroupIndex, barGroups]);\n  useEffect(function () {\n    var onKeyDown = function onKeyDown(event) {\n      if (event.key === 'Escape') {\n        dismissPopover();\n      }\n    };\n    document.addEventListener('keydown', onKeyDown);\n    return function () {\n      return document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [dismissPopover]);\n  useLayoutEffect(function () {\n    if (highlightedX !== null || highlightedPoint !== null) {\n      showPopover();\n    }\n  }, [highlightedX, highlightedPoint, showPopover]);\n  var onPopoverDismiss = function onPopoverDismiss(outsideClick) {\n    dismissPopover();\n    if (!outsideClick) {\n      // The delay is needed to bypass focus events caused by click or keypress needed to unpin the popover.\n      setTimeout(function () {\n        var _a, _b;\n        var isSomeInnerElementFocused = highlightedPoint || highlightedGroupIndex !== null || verticalMarkerX;\n        if (isSomeInnerElementFocused) {\n          (_a = plotRef.current) === null || _a === void 0 ? void 0 : _a.focusApplication();\n        } else {\n          (_b = plotRef.current) === null || _b === void 0 ? void 0 : _b.focusPlot();\n        }\n      }, 0);\n    } else {\n      clearAllHighlights();\n      setVerticalMarkerX(null);\n    }\n  };\n  var onSVGMouseDown = function onSVGMouseDown(e) {\n    if (isPopoverOpen) {\n      if (isPopoverPinned) {\n        dismissPopover();\n      } else {\n        pinPopover();\n        e.preventDefault();\n      }\n    } else {\n      showPopover();\n    }\n  };\n  var onSVGFocus = function onSVGFocus(event, trigger) {\n    setPlotFocused(true);\n    if (trigger === 'keyboard') {\n      handlers.onFocus();\n    } else {\n      // noop: clicks are handled separately\n    }\n  };\n  var onSVGBlur = function onSVGBlur(event) {\n    var _a;\n    setPlotFocused(false);\n    var blurTarget = event.relatedTarget || event.target;\n    if (blurTarget === null || !(blurTarget instanceof Element) || !nodeBelongs(containerRefObject.current, blurTarget)) {\n      setHighlightedPoint(null);\n      setVerticalMarkerX(null);\n      if (!((_a = plotContainerRef === null || plotContainerRef === void 0 ? void 0 : plotContainerRef.current) === null || _a === void 0 ? void 0 : _a.contains(blurTarget))) {\n        clearHighlightedSeries();\n      }\n      if (isPopoverOpen && !isPopoverPinned) {\n        dismissPopover();\n      }\n    }\n  };\n  var onSVGKeyDown = handlers.onKeyDown;\n  var xOffset = xAxisProps.scale.isCategorical() ? Math.max(0, xAxisProps.scale.d3Scale.bandwidth() - 1) / 2 : 0;\n  var verticalLineX = null;\n  if (verticalMarkerX !== null) {\n    verticalLineX = verticalMarkerX.scaledX;\n  } else if (isGroupNavigation && highlightedGroupIndex !== null) {\n    var _x = (_b = xAxisProps.scale.d3Scale(barGroups[highlightedGroupIndex].x)) !== null && _b !== void 0 ? _b : null;\n    if (_x !== null) {\n      verticalLineX = xOffset + _x;\n    }\n  }\n  var point = useMemo(function () {\n    return highlightedPoint ? {\n      key: \"\".concat(highlightedPoint.x, \"-\").concat(highlightedPoint.y),\n      x: highlightedPoint.x,\n      y: highlightedPoint.y,\n      color: highlightedPoint.color\n    } : null;\n  }, [highlightedPoint]);\n  var verticalMarkers = useMemo(function () {\n    return verticalLineX !== null ? scaledSeries.filter(function (_ref2) {\n      var x = _ref2.x,\n        y = _ref2.y;\n      return (x === verticalLineX || isNaN(x)) && !isNaN(y);\n    }).map(function (_ref3, index) {\n      var x = _ref3.x,\n        y = _ref3.y,\n        color = _ref3.color;\n      return {\n        key: \"\".concat(index, \"-\").concat(x, \"-\").concat(y),\n        x: !horizontalBars ? verticalLineX || 0 : y,\n        y: !horizontalBars ? y : verticalLineX || 0,\n        color: color\n      };\n    }) : [];\n  }, [scaledSeries, verticalLineX, horizontalBars]);\n  var highlightedElementRef = isGroupNavigation ? highlightedGroupRef : highlightedPoint ? highlightedPointRef : verticalMarkerRef;\n  var highlightDetails = useMemo(function () {\n    if (highlightedX === null) {\n      return null;\n    }\n    // When series point is highlighted show the corresponding series and matching x-thresholds.\n    if (highlightedPoint) {\n      var seriesToShow = visibleSeries.filter(function (series) {\n        return series.series === (highlightedPoint === null || highlightedPoint === void 0 ? void 0 : highlightedPoint.series) || isXThreshold(series.series);\n      });\n      return formatHighlighted(highlightedX, seriesToShow, xTickFormatter);\n    }\n    // Otherwise - show all visible series details.\n    return formatHighlighted(highlightedX, visibleSeries, xTickFormatter);\n  }, [highlightedX, highlightedPoint, visibleSeries, xTickFormatter]);\n  var detailPopoverFooterContent = useMemo(function () {\n    return detailPopoverFooter && highlightedX ? detailPopoverFooter(highlightedX) : null;\n  }, [detailPopoverFooter, highlightedX]);\n  var activeAriaLabel = useMemo(function () {\n    return highlightDetails ? \"\".concat(highlightDetails.position, \", \").concat(highlightDetails.details.map(function (d) {\n      return d.key + ' ' + d.value;\n    }).join(',')) : '';\n  }, [highlightDetails]);\n  // Live region is used when nothing is focused e.g. when hovering.\n  var activeLiveRegion = activeAriaLabel && !highlightedPoint && highlightedGroupIndex === null ? activeAriaLabel : '';\n  var isLineXKeyboardFocused = isPlotFocused && !highlightedPoint && verticalMarkerX;\n  var isRefresh = useVisualRefresh();\n  return React.createElement(CartesianChartContainer, {\n    ref: containerRef,\n    minHeight: explicitPlotHeight + bottomLabelsProps.height,\n    fitHeight: !!fitHeight,\n    leftAxisLabel: React.createElement(AxisLabel, {\n      axis: y,\n      position: \"left\",\n      title: leftAxisProps.title\n    }),\n    leftAxisLabelMeasure: React.createElement(LabelsMeasure, {\n      ticks: leftAxisProps.ticks,\n      scale: leftAxisProps.scale,\n      tickFormatter: leftAxisProps.tickFormatter,\n      autoWidth: setLeftLabelsWidth\n    }),\n    bottomAxisLabel: React.createElement(AxisLabel, {\n      axis: x,\n      position: \"bottom\",\n      title: bottomAxisProps.title\n    }),\n    chartPlot: React.createElement(ChartPlot, {\n      ref: plotRef,\n      width: \"100%\",\n      height: fitHeight ? \"calc(100% - \".concat(bottomLabelsProps.height, \"px)\") : plotHeight,\n      offsetBottom: bottomLabelsProps.height,\n      isClickable: isPopoverOpen && !isPopoverPinned,\n      ariaLabel: ariaLabel,\n      ariaLabelledby: ariaLabelledby,\n      ariaDescription: ariaDescription,\n      ariaRoleDescription: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.chartAriaRoleDescription,\n      ariaLiveRegion: activeLiveRegion,\n      activeElementRef: highlightedElementRef,\n      activeElementKey: isPlotFocused && ((_c = highlightedGroupIndex === null || highlightedGroupIndex === void 0 ? void 0 : highlightedGroupIndex.toString()) !== null && _c !== void 0 ? _c : isLineXKeyboardFocused ? \"point-index-\".concat(handlers.xIndex) : point === null || point === void 0 ? void 0 : point.key),\n      activeElementFocusOffset: isGroupNavigation ? 0 : isLineXKeyboardFocused ? {\n        x: 8,\n        y: 0\n      } : 3,\n      onMouseMove: onSVGMouseMove,\n      onMouseOut: onSVGMouseOut,\n      onMouseDown: onSVGMouseDown,\n      onFocus: onSVGFocus,\n      onBlur: onSVGBlur,\n      onKeyDown: onSVGKeyDown\n    }, React.createElement(\"line\", {\n      ref: plotMeasureRef,\n      x1: \"0\",\n      x2: \"0\",\n      y1: \"0\",\n      y2: \"100%\",\n      stroke: \"transparent\",\n      strokeWidth: 1,\n      style: {\n        pointerEvents: 'none'\n      }\n    }), React.createElement(LeftLabels, {\n      axis: y,\n      ticks: leftAxisProps.ticks,\n      scale: leftAxisProps.scale,\n      tickFormatter: leftAxisProps.tickFormatter,\n      title: leftAxisProps.title,\n      ariaRoleDescription: leftAxisProps.ariaRoleDescription,\n      width: plotWidth,\n      height: plotHeight\n    }), horizontalBars && React.createElement(VerticalGridLines, {\n      scale: yAxisProps.scale,\n      ticks: yAxisProps.ticks,\n      height: plotHeight\n    }), emphasizeBaselineAxis && linesOnly && React.createElement(EmphasizedBaseline, {\n      axis: x,\n      scale: yAxisProps.scale,\n      width: plotWidth,\n      height: plotHeight\n    }), React.createElement(DataSeries, {\n      axis: x,\n      plotWidth: plotWidth,\n      plotHeight: plotHeight,\n      highlightedSeries: highlightedSeries !== null && highlightedSeries !== void 0 ? highlightedSeries : null,\n      highlightedGroupIndex: highlightedGroupIndex,\n      stackedBars: stackedBars,\n      isGroupNavigation: isGroupNavigation,\n      visibleSeries: visibleSeries,\n      xScale: xAxisProps.scale,\n      yScale: yAxisProps.scale\n    }), emphasizeBaselineAxis && !linesOnly && React.createElement(EmphasizedBaseline, {\n      axis: x,\n      scale: yAxisProps.scale,\n      width: plotWidth,\n      height: plotHeight\n    }), React.createElement(VerticalMarker, {\n      key: verticalLineX || '',\n      height: plotHeight,\n      showPoints: highlightedPoint === null,\n      showLine: !isGroupNavigation,\n      points: verticalMarkers,\n      ref: verticalMarkerRef\n    }), highlightedPoint && React.createElement(HighlightedPoint, {\n      ref: highlightedPointRef,\n      point: point,\n      role: \"button\",\n      ariaLabel: activeAriaLabel,\n      ariaHasPopup: true,\n      ariaExpanded: isPopoverPinned\n    }), isGroupNavigation && xAxisProps.scale.isCategorical() && React.createElement(BarGroups, {\n      ariaLabel: activeAriaLabel,\n      isRefresh: isRefresh,\n      isPopoverPinned: isPopoverPinned,\n      barGroups: barGroups,\n      highlightedGroupIndex: highlightedGroupIndex,\n      highlightedGroupRef: highlightedGroupRef\n    }), React.createElement(BottomLabels, Object.assign({}, bottomLabelsProps, {\n      axis: x,\n      scale: bottomAxisProps.scale,\n      title: bottomAxisProps.title,\n      ariaRoleDescription: bottomAxisProps.ariaRoleDescription,\n      height: plotHeight,\n      width: plotWidth,\n      offsetLeft: leftLabelsWidth + BOTTOM_LABELS_OFFSET,\n      offsetRight: BOTTOM_LABELS_OFFSET\n    }))),\n    popover: React.createElement(ChartPopover, {\n      ref: popoverRef,\n      containerRef: containerRefObject,\n      trackRef: highlightedElementRef,\n      isOpen: isPopoverOpen,\n      isPinned: isPopoverPinned,\n      highlightDetails: highlightDetails,\n      onDismiss: onPopoverDismiss,\n      size: detailPopoverSize,\n      footer: detailPopoverFooterContent,\n      dismissAriaLabel: i18nStrings.detailPopoverDismissAriaLabel,\n      onMouseLeave: onPopoverLeave\n    })\n  });\n}","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useLayoutEffect","useMemo","useRef","useState","useVisualRefresh","getXTickCount","getYTickCount","createXTicks","createYTicks","ChartPlot","AxisLabel","LabelsMeasure","LeftLabels","BottomLabels","useBottomLabels","VerticalGridLines","EmphasizedBaseline","HighlightedPoint","VerticalMarker","ChartScale","NumericChartScale","ChartPopover","computeDomainX","computeDomainY","isXThreshold","makeScaledSeries","makeScaledBarGroups","formatHighlighted","DataSeries","BarGroups","useMouseHover","useNavigation","usePopover","useContainerWidth","useMergeRefs","nodeBelongs","CartesianChartContainer","useHeightMeasure","LEFT_LABELS_MARGIN","BOTTOM_LABELS_OFFSET","ChartContainer","_a","fitHeight","explicitPlotHeight","height","series","visibleSeries","highlightedSeries","onHighlightChange","highlightedPoint","setHighlightedPoint","highlightedGroupIndex","setHighlightedGroupIndex","detailPopoverFooter","detailPopoverSize","stackedBars","horizontalBars","xScaleType","yScaleType","xTickFormatter","yTickFormatter","emphasizeBaselineAxis","xTitle","yTitle","ariaLabel","ariaLabelledby","ariaDescription","i18nStrings","plotContainerRef","props","plotRef","verticalMarkerRef","leftLabelsWidth","setLeftLabelsWidth","verticalMarkerX","setVerticalMarkerX","containerWidth","containerMeasureRef","plotWidth","containerRefObject","containerRef","popoverRef","xDomain","yDomain","linesOnly","every","type","getXAxisProps","size","range","tickCount","scale","ticks","axis","tickFormatter","title","ariaRoleDescription","xAxisAriaRoleDescription","getYAxisProps","yAxisAriaRoleDescription","bottomAxisProps","bottomLabelsProps","plotMeasureRef","measuredHeight","current","plotHeight","leftAxisProps","xAxisProps","yAxisProps","Error","highlightedPointRef","highlightedGroupRef","isPlotFocused","setPlotFocused","x","y","scaledSeries","barGroups","isPopoverOpen","isPopoverPinned","showPopover","pinPopover","dismissPopover","isHandlersDisabled","setHandlersDisabled","timeoutId","setTimeout","clearTimeout","highlightSeries","highlightPoint","point","scaledX","label","datum","clearAllHighlights","highlightX","marker","highlightGroup","groupIndex","clearHighlightedSeries","xScale","yScale","isGroupNavigation","handlers","onSVGMouseMove","onSVGMouseOut","onPopoverLeave","highlightedX","onKeyDown","event","key","document","addEventListener","removeEventListener","onPopoverDismiss","outsideClick","isSomeInnerElementFocused","focusApplication","focusPlot","onSVGMouseDown","e","preventDefault","onSVGFocus","trigger","onFocus","onSVGBlur","blurTarget","relatedTarget","target","Element","contains","onSVGKeyDown","xOffset","isCategorical","Math","max","d3Scale","bandwidth","verticalLineX","color","verticalMarkers","filter","isNaN","map","index","highlightedElementRef","highlightDetails","seriesToShow","detailPopoverFooterContent","activeAriaLabel","position","details","d","value","join","activeLiveRegion","isLineXKeyboardFocused","isRefresh","ref","minHeight","leftAxisLabel","leftAxisLabelMeasure","autoWidth","bottomAxisLabel","chartPlot","width","offsetBottom","isClickable","chartAriaRoleDescription","ariaLiveRegion","activeElementRef","activeElementKey","toString","xIndex","activeElementFocusOffset","onMouseMove","onMouseOut","onMouseDown","onBlur","x1","x2","y1","y2","stroke","strokeWidth","style","pointerEvents","showPoints","showLine","points","role","ariaHasPopup","ariaExpanded","offsetLeft","offsetRight","popover","trackRef","isOpen","isPinned","onDismiss","footer","dismissAriaLabel","detailPopoverDismissAriaLabel","onMouseLeave"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/mixed-line-bar-chart/lib/default/mixed-line-bar-chart/chart-container.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\n\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\n\nimport { getXTickCount, getYTickCount, createXTicks, createYTicks } from '../internal/components/cartesian-chart/ticks';\nimport ChartPlot, { ChartPlotRef } from '../internal/components/chart-plot';\nimport AxisLabel from '../internal/components/cartesian-chart/axis-label';\nimport LabelsMeasure from '../internal/components/cartesian-chart/labels-measure';\nimport LeftLabels from '../internal/components/cartesian-chart/left-labels';\nimport BottomLabels, { useBottomLabels } from '../internal/components/cartesian-chart/bottom-labels';\nimport VerticalGridLines from '../internal/components/cartesian-chart/vertical-grid-lines';\nimport EmphasizedBaseline from '../internal/components/cartesian-chart/emphasized-baseline';\nimport HighlightedPoint from '../internal/components/cartesian-chart/highlighted-point';\nimport VerticalMarker from '../internal/components/cartesian-chart/vertical-marker';\nimport { ChartScale, NumericChartScale } from '../internal/components/cartesian-chart/scales';\nimport ChartPopover from './chart-popover';\nimport { ChartDataTypes, InternalChartSeries, MixedLineBarChartProps, ScaleType, VerticalMarkerX } from './interfaces';\nimport { computeDomainX, computeDomainY } from './domain';\nimport { isXThreshold } from './utils';\nimport makeScaledSeries, { ScaledPoint } from './make-scaled-series';\nimport makeScaledBarGroups, { ScaledBarGroup } from './make-scaled-bar-groups';\nimport formatHighlighted from './format-highlighted';\nimport DataSeries from './data-series';\nimport BarGroups from './bar-groups';\nimport { useMouseHover } from './hooks/use-mouse-hover';\nimport { useNavigation } from './hooks/use-navigation';\nimport { usePopover } from './hooks/use-popover';\n\nimport { CartesianChartProps } from '../internal/components/cartesian-chart/interfaces';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { nodeBelongs } from '../internal/utils/node-belongs';\nimport { CartesianChartContainer } from '../internal/components/cartesian-chart/chart-container';\nimport { useHeightMeasure } from '../internal/hooks/container-queries/use-height-measure';\n\nconst LEFT_LABELS_MARGIN = 16;\nconst BOTTOM_LABELS_OFFSET = 12;\n\ntype TickFormatter = undefined | ((value: ChartDataTypes) => string);\n\nexport interface ChartContainerProps<T extends ChartDataTypes> {\n  series: ReadonlyArray<InternalChartSeries<T>>;\n  visibleSeries: ReadonlyArray<InternalChartSeries<T>>;\n\n  fitHeight?: boolean;\n  height: number;\n  detailPopoverSize: MixedLineBarChartProps<T>['detailPopoverSize'];\n  detailPopoverFooter: MixedLineBarChartProps<T>['detailPopoverFooter'];\n\n  xScaleType: ScaleType;\n  yScaleType: 'linear' | 'log';\n\n  xDomain: MixedLineBarChartProps<T>['xDomain'];\n  yDomain: MixedLineBarChartProps<T>['yDomain'];\n\n  xTickFormatter?: CartesianChartProps.TickFormatter<T>;\n  yTickFormatter?: CartesianChartProps.TickFormatter<number>;\n\n  xTitle?: string;\n  yTitle?: string;\n\n  stackedBars?: boolean;\n  emphasizeBaselineAxis: boolean;\n  horizontalBars?: boolean;\n\n  highlightedSeries?: MixedLineBarChartProps<T>['highlightedSeries'];\n  onHighlightChange: (series: InternalChartSeries<T>['series'] | null) => void;\n  highlightedPoint: ScaledPoint<T> | null;\n  setHighlightedPoint: (point: ScaledPoint<T> | null) => void;\n  highlightedGroupIndex: number | null;\n  setHighlightedGroupIndex: (groupIndex: number | null) => void;\n\n  ariaLabel: MixedLineBarChartProps<T>['ariaLabel'];\n  ariaLabelledby: MixedLineBarChartProps<T>['ariaLabelledby'];\n  ariaDescription: MixedLineBarChartProps<T>['ariaDescription'];\n  i18nStrings: MixedLineBarChartProps<T>['i18nStrings'];\n\n  plotContainerRef: React.RefObject<HTMLDivElement>;\n}\n\ninterface BaseAxisProps {\n  tickCount: number;\n  tickFormatter: TickFormatter;\n  title?: string;\n  ariaRoleDescription?: string;\n}\n\ninterface XAxisProps extends BaseAxisProps {\n  axis: 'x';\n  scale: ChartScale;\n  ticks: ChartDataTypes[];\n}\n\ninterface YAxisProps extends BaseAxisProps {\n  axis: 'y';\n  scale: NumericChartScale;\n  ticks: number[];\n}\n\nexport default function ChartContainer<T extends ChartDataTypes>({\n  fitHeight,\n  height: explicitPlotHeight,\n  series,\n  visibleSeries,\n  highlightedSeries,\n  onHighlightChange,\n  highlightedPoint,\n  setHighlightedPoint,\n  highlightedGroupIndex,\n  setHighlightedGroupIndex,\n  detailPopoverFooter,\n  detailPopoverSize = 'medium',\n  stackedBars = false,\n  horizontalBars = false,\n  xScaleType,\n  yScaleType,\n  xTickFormatter,\n  yTickFormatter,\n  emphasizeBaselineAxis,\n  xTitle,\n  yTitle,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescription,\n  i18nStrings = {},\n  plotContainerRef,\n  ...props\n}: ChartContainerProps<T>) {\n  const plotRef = useRef<ChartPlotRef>(null);\n  const verticalMarkerRef = useRef<SVGLineElement>(null);\n\n  const [leftLabelsWidth, setLeftLabelsWidth] = useState(0);\n  const [verticalMarkerX, setVerticalMarkerX] = useState<VerticalMarkerX<T> | null>(null);\n  const [containerWidth, containerMeasureRef] = useContainerWidth(500);\n  const plotWidth = containerWidth ? containerWidth - leftLabelsWidth - LEFT_LABELS_MARGIN : 500;\n  const containerRefObject = useRef(null);\n  const containerRef = useMergeRefs(containerMeasureRef, containerRefObject);\n  const popoverRef = useRef<HTMLElement | null>(null);\n\n  const xDomain = (props.xDomain || computeDomainX(series, xScaleType)) as\n    | readonly number[]\n    | readonly string[]\n    | readonly Date[];\n  const yDomain = (props.yDomain || computeDomainY(series, yScaleType, stackedBars)) as readonly number[];\n\n  const linesOnly = series.every(({ series }) => series.type === 'line' || series.type === 'threshold');\n\n  function getXAxisProps(size: number, range: [from: number, until: number]): XAxisProps {\n    const tickCount = getXTickCount(size);\n    const scale = new ChartScale(xScaleType, xDomain, range, linesOnly);\n    const ticks = createXTicks(scale, tickCount);\n    return {\n      axis: 'x',\n      tickCount,\n      scale,\n      ticks,\n      tickFormatter: xTickFormatter as TickFormatter,\n      title: xTitle,\n      ariaRoleDescription: i18nStrings.xAxisAriaRoleDescription,\n    };\n  }\n\n  function getYAxisProps(size: number, range: [from: number, until: number]): YAxisProps {\n    const tickCount = getYTickCount(size);\n    const scale = new NumericChartScale(yScaleType, yDomain, range, props.yDomain ? null : tickCount);\n    const ticks = createYTicks(scale, tickCount);\n    return {\n      axis: 'y',\n      tickCount,\n      scale,\n      ticks,\n      tickFormatter: yTickFormatter as TickFormatter,\n      title: yTitle,\n      ariaRoleDescription: i18nStrings.yAxisAriaRoleDescription,\n    };\n  }\n\n  const bottomAxisProps = !horizontalBars\n    ? getXAxisProps(plotWidth, [0, plotWidth])\n    : getYAxisProps(plotWidth, [0, plotWidth]);\n\n  const bottomLabelsProps = useBottomLabels({ ...bottomAxisProps });\n\n  const plotMeasureRef = useRef<SVGLineElement>(null);\n  const measuredHeight = useHeightMeasure(() => plotMeasureRef.current, !fitHeight);\n  const plotHeight = fitHeight ? measuredHeight ?? 0 : explicitPlotHeight;\n\n  const leftAxisProps = !horizontalBars\n    ? getYAxisProps(plotHeight, [plotHeight, 0])\n    : getXAxisProps(plotHeight, [0, plotHeight]);\n\n  const xAxisProps = bottomAxisProps.axis === 'x' ? bottomAxisProps : leftAxisProps.axis === 'x' ? leftAxisProps : null;\n  const yAxisProps = bottomAxisProps.axis === 'y' ? bottomAxisProps : leftAxisProps.axis === 'y' ? leftAxisProps : null;\n  if (!xAxisProps || !yAxisProps) {\n    throw new Error('Invariant violation: invalid axis props.');\n  }\n\n  /**\n   * Interactions\n   */\n  const highlightedPointRef = useRef<SVGGElement>(null);\n  const highlightedGroupRef = useRef<SVGRectElement>(null);\n  const [isPlotFocused, setPlotFocused] = useState(false);\n\n  // Some chart components are rendered against \"x\" or \"y\" axes,\n  // When \"horizontalBars\" is enabled, the axes are inverted.\n  const x = !horizontalBars ? 'x' : 'y';\n  const y = !horizontalBars ? 'y' : 'x';\n\n  const scaledSeries = makeScaledSeries(visibleSeries, xAxisProps.scale, yAxisProps.scale);\n  const barGroups: ScaledBarGroup<T>[] = makeScaledBarGroups(visibleSeries, xAxisProps.scale, plotWidth, plotHeight, y);\n\n  const { isPopoverOpen, isPopoverPinned, showPopover, pinPopover, dismissPopover } = usePopover();\n\n  // Allows to add a delay between popover is dismissed and handlers are enabled to prevent immediate popover reopening.\n  const [isHandlersDisabled, setHandlersDisabled] = useState(!isPopoverPinned);\n  useEffect(() => {\n    if (isPopoverPinned) {\n      setHandlersDisabled(true);\n    } else {\n      const timeoutId = setTimeout(() => setHandlersDisabled(false), 25);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [isPopoverPinned]);\n\n  const highlightSeries = useCallback(\n    (series: MixedLineBarChartProps.ChartSeries<T> | null) => {\n      if (series !== highlightedSeries) {\n        onHighlightChange(series);\n      }\n    },\n    [highlightedSeries, onHighlightChange]\n  );\n\n  const highlightPoint = useCallback(\n    (point: ScaledPoint<T> | null) => {\n      setHighlightedGroupIndex(null);\n      setHighlightedPoint(point);\n      if (point) {\n        highlightSeries(point.series);\n        setVerticalMarkerX({\n          scaledX: point.x,\n          label: point.datum?.x ?? null,\n        });\n      }\n    },\n    [setHighlightedGroupIndex, setHighlightedPoint, highlightSeries]\n  );\n\n  const clearAllHighlights = useCallback(() => {\n    setHighlightedPoint(null);\n    highlightSeries(null);\n    setHighlightedGroupIndex(null);\n  }, [highlightSeries, setHighlightedGroupIndex, setHighlightedPoint]);\n\n  // Highlight all points at a given X in a line chart\n  const highlightX = useCallback(\n    (marker: VerticalMarkerX<T> | null) => {\n      if (marker) {\n        clearAllHighlights();\n      }\n      setVerticalMarkerX(marker);\n    },\n    [clearAllHighlights]\n  );\n\n  // Highlight all points and bars at a given X index in a mixed line and bar chart\n  const highlightGroup = useCallback(\n    (groupIndex: number) => {\n      highlightSeries(null);\n      setHighlightedPoint(null);\n      setHighlightedGroupIndex(groupIndex);\n    },\n    [highlightSeries, setHighlightedPoint, setHighlightedGroupIndex]\n  );\n\n  const clearHighlightedSeries = useCallback(() => {\n    clearAllHighlights();\n    dismissPopover();\n  }, [dismissPopover, clearAllHighlights]);\n\n  const { isGroupNavigation, ...handlers } = useNavigation({\n    series,\n    visibleSeries,\n    scaledSeries,\n    barGroups,\n    xScale: xAxisProps.scale,\n    yScale: yAxisProps.scale,\n    highlightedPoint,\n    highlightedGroupIndex,\n    highlightedSeries,\n    isHandlersDisabled,\n    pinPopover,\n    highlightSeries,\n    highlightGroup,\n    highlightPoint,\n    highlightX,\n    clearHighlightedSeries,\n    verticalMarkerX,\n  });\n\n  const { onSVGMouseMove, onSVGMouseOut, onPopoverLeave } = useMouseHover<T>({\n    scaledSeries,\n    barGroups,\n    plotRef,\n    popoverRef,\n    highlightPoint,\n    highlightGroup,\n    clearHighlightedSeries,\n    isGroupNavigation,\n    isHandlersDisabled,\n    highlightX,\n  });\n\n  // There are multiple ways to indicate what X is selected.\n  // TODO: make a uniform verticalMarkerX state to fit all use-cases.\n  const highlightedX = useMemo(() => {\n    if (highlightedGroupIndex !== null) {\n      return barGroups[highlightedGroupIndex].x;\n    }\n    if (verticalMarkerX !== null) {\n      return verticalMarkerX.label;\n    }\n    return highlightedPoint?.datum?.x ?? null;\n  }, [highlightedPoint, verticalMarkerX, highlightedGroupIndex, barGroups]);\n\n  useEffect(() => {\n    const onKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        dismissPopover();\n      }\n    };\n    document.addEventListener('keydown', onKeyDown);\n    return () => document.removeEventListener('keydown', onKeyDown);\n  }, [dismissPopover]);\n\n  useLayoutEffect(() => {\n    if (highlightedX !== null || highlightedPoint !== null) {\n      showPopover();\n    }\n  }, [highlightedX, highlightedPoint, showPopover]);\n\n  const onPopoverDismiss = (outsideClick?: boolean) => {\n    dismissPopover();\n\n    if (!outsideClick) {\n      // The delay is needed to bypass focus events caused by click or keypress needed to unpin the popover.\n      setTimeout(() => {\n        const isSomeInnerElementFocused = highlightedPoint || highlightedGroupIndex !== null || verticalMarkerX;\n        if (isSomeInnerElementFocused) {\n          plotRef.current?.focusApplication();\n        } else {\n          plotRef.current?.focusPlot();\n        }\n      }, 0);\n    } else {\n      clearAllHighlights();\n      setVerticalMarkerX(null);\n    }\n  };\n\n  const onSVGMouseDown = (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => {\n    if (isPopoverOpen) {\n      if (isPopoverPinned) {\n        dismissPopover();\n      } else {\n        pinPopover();\n        e.preventDefault();\n      }\n    } else {\n      showPopover();\n    }\n  };\n\n  const onSVGFocus = (event: React.FocusEvent, trigger: 'mouse' | 'keyboard') => {\n    setPlotFocused(true);\n    if (trigger === 'keyboard') {\n      handlers.onFocus();\n    } else {\n      // noop: clicks are handled separately\n    }\n  };\n\n  const onSVGBlur = (event: React.FocusEvent<Element>) => {\n    setPlotFocused(false);\n    const blurTarget = event.relatedTarget || event.target;\n    if (\n      blurTarget === null ||\n      !(blurTarget instanceof Element) ||\n      !nodeBelongs(containerRefObject.current, blurTarget)\n    ) {\n      setHighlightedPoint(null);\n      setVerticalMarkerX(null);\n      if (!plotContainerRef?.current?.contains(blurTarget)) {\n        clearHighlightedSeries();\n      }\n\n      if (isPopoverOpen && !isPopoverPinned) {\n        dismissPopover();\n      }\n    }\n  };\n\n  const onSVGKeyDown = handlers.onKeyDown;\n\n  const xOffset = xAxisProps.scale.isCategorical() ? Math.max(0, xAxisProps.scale.d3Scale.bandwidth() - 1) / 2 : 0;\n\n  let verticalLineX: number | null = null;\n  if (verticalMarkerX !== null) {\n    verticalLineX = verticalMarkerX.scaledX;\n  } else if (isGroupNavigation && highlightedGroupIndex !== null) {\n    const x = xAxisProps.scale.d3Scale(barGroups[highlightedGroupIndex].x as any) ?? null;\n    if (x !== null) {\n      verticalLineX = xOffset + x;\n    }\n  }\n\n  const point = useMemo(\n    () =>\n      highlightedPoint\n        ? {\n            key: `${highlightedPoint.x}-${highlightedPoint.y}`,\n            x: highlightedPoint.x,\n            y: highlightedPoint.y,\n            color: highlightedPoint.color,\n          }\n        : null,\n    [highlightedPoint]\n  );\n\n  const verticalMarkers = useMemo(\n    () =>\n      verticalLineX !== null\n        ? scaledSeries\n            .filter(({ x, y }) => (x === verticalLineX || isNaN(x)) && !isNaN(y))\n            .map(({ x, y, color }, index) => ({\n              key: `${index}-${x}-${y}`,\n              x: !horizontalBars ? verticalLineX || 0 : y,\n              y: !horizontalBars ? y : verticalLineX || 0,\n              color: color,\n            }))\n        : [],\n    [scaledSeries, verticalLineX, horizontalBars]\n  );\n\n  const highlightedElementRef = isGroupNavigation\n    ? highlightedGroupRef\n    : highlightedPoint\n    ? highlightedPointRef\n    : verticalMarkerRef;\n\n  const highlightDetails = useMemo(() => {\n    if (highlightedX === null) {\n      return null;\n    }\n\n    // When series point is highlighted show the corresponding series and matching x-thresholds.\n    if (highlightedPoint) {\n      const seriesToShow = visibleSeries.filter(\n        series => series.series === highlightedPoint?.series || isXThreshold(series.series)\n      );\n      return formatHighlighted(highlightedX, seriesToShow, xTickFormatter);\n    }\n\n    // Otherwise - show all visible series details.\n    return formatHighlighted(highlightedX, visibleSeries, xTickFormatter);\n  }, [highlightedX, highlightedPoint, visibleSeries, xTickFormatter]);\n\n  const detailPopoverFooterContent = useMemo(\n    () => (detailPopoverFooter && highlightedX ? detailPopoverFooter(highlightedX) : null),\n    [detailPopoverFooter, highlightedX]\n  );\n\n  const activeAriaLabel = useMemo(\n    () =>\n      highlightDetails\n        ? `${highlightDetails.position}, ${highlightDetails.details.map(d => d.key + ' ' + d.value).join(',')}`\n        : '',\n    [highlightDetails]\n  );\n\n  // Live region is used when nothing is focused e.g. when hovering.\n  const activeLiveRegion =\n    activeAriaLabel && !highlightedPoint && highlightedGroupIndex === null ? activeAriaLabel : '';\n\n  const isLineXKeyboardFocused = isPlotFocused && !highlightedPoint && verticalMarkerX;\n\n  const isRefresh = useVisualRefresh();\n\n  return (\n    <CartesianChartContainer\n      ref={containerRef}\n      minHeight={explicitPlotHeight + bottomLabelsProps.height}\n      fitHeight={!!fitHeight}\n      leftAxisLabel={<AxisLabel axis={y} position=\"left\" title={leftAxisProps.title} />}\n      leftAxisLabelMeasure={\n        <LabelsMeasure\n          ticks={leftAxisProps.ticks}\n          scale={leftAxisProps.scale}\n          tickFormatter={leftAxisProps.tickFormatter as TickFormatter}\n          autoWidth={setLeftLabelsWidth}\n        />\n      }\n      bottomAxisLabel={<AxisLabel axis={x} position=\"bottom\" title={bottomAxisProps.title} />}\n      chartPlot={\n        <ChartPlot\n          ref={plotRef}\n          width=\"100%\"\n          height={fitHeight ? `calc(100% - ${bottomLabelsProps.height}px)` : plotHeight}\n          offsetBottom={bottomLabelsProps.height}\n          isClickable={isPopoverOpen && !isPopoverPinned}\n          ariaLabel={ariaLabel}\n          ariaLabelledby={ariaLabelledby}\n          ariaDescription={ariaDescription}\n          ariaRoleDescription={i18nStrings?.chartAriaRoleDescription}\n          ariaLiveRegion={activeLiveRegion}\n          activeElementRef={highlightedElementRef}\n          activeElementKey={\n            isPlotFocused &&\n            (highlightedGroupIndex?.toString() ??\n              (isLineXKeyboardFocused ? `point-index-${handlers.xIndex}` : point?.key))\n          }\n          activeElementFocusOffset={isGroupNavigation ? 0 : isLineXKeyboardFocused ? { x: 8, y: 0 } : 3}\n          onMouseMove={onSVGMouseMove}\n          onMouseOut={onSVGMouseOut}\n          onMouseDown={onSVGMouseDown}\n          onFocus={onSVGFocus}\n          onBlur={onSVGBlur}\n          onKeyDown={onSVGKeyDown}\n        >\n          <line\n            ref={plotMeasureRef}\n            x1=\"0\"\n            x2=\"0\"\n            y1=\"0\"\n            y2=\"100%\"\n            stroke=\"transparent\"\n            strokeWidth={1}\n            style={{ pointerEvents: 'none' }}\n          />\n\n          <LeftLabels\n            axis={y}\n            ticks={leftAxisProps.ticks}\n            scale={leftAxisProps.scale}\n            tickFormatter={leftAxisProps.tickFormatter as TickFormatter}\n            title={leftAxisProps.title}\n            ariaRoleDescription={leftAxisProps.ariaRoleDescription}\n            width={plotWidth}\n            height={plotHeight}\n          />\n\n          {horizontalBars && (\n            <VerticalGridLines scale={yAxisProps.scale} ticks={yAxisProps.ticks} height={plotHeight} />\n          )}\n\n          {emphasizeBaselineAxis && linesOnly && (\n            <EmphasizedBaseline axis={x} scale={yAxisProps.scale} width={plotWidth} height={plotHeight} />\n          )}\n\n          <DataSeries\n            axis={x}\n            plotWidth={plotWidth}\n            plotHeight={plotHeight}\n            highlightedSeries={highlightedSeries ?? null}\n            highlightedGroupIndex={highlightedGroupIndex}\n            stackedBars={stackedBars}\n            isGroupNavigation={isGroupNavigation}\n            visibleSeries={visibleSeries}\n            xScale={xAxisProps.scale}\n            yScale={yAxisProps.scale}\n          />\n\n          {emphasizeBaselineAxis && !linesOnly && (\n            <EmphasizedBaseline axis={x} scale={yAxisProps.scale} width={plotWidth} height={plotHeight} />\n          )}\n\n          <VerticalMarker\n            key={verticalLineX || ''}\n            height={plotHeight}\n            showPoints={highlightedPoint === null}\n            showLine={!isGroupNavigation}\n            points={verticalMarkers}\n            ref={verticalMarkerRef}\n          />\n\n          {highlightedPoint && (\n            <HighlightedPoint\n              ref={highlightedPointRef}\n              point={point}\n              role=\"button\"\n              ariaLabel={activeAriaLabel}\n              ariaHasPopup={true}\n              ariaExpanded={isPopoverPinned}\n            />\n          )}\n\n          {isGroupNavigation && xAxisProps.scale.isCategorical() && (\n            <BarGroups\n              ariaLabel={activeAriaLabel}\n              isRefresh={isRefresh}\n              isPopoverPinned={isPopoverPinned}\n              barGroups={barGroups}\n              highlightedGroupIndex={highlightedGroupIndex}\n              highlightedGroupRef={highlightedGroupRef}\n            />\n          )}\n\n          <BottomLabels\n            {...bottomLabelsProps}\n            axis={x}\n            scale={bottomAxisProps.scale}\n            title={bottomAxisProps.title}\n            ariaRoleDescription={bottomAxisProps.ariaRoleDescription}\n            height={plotHeight}\n            width={plotWidth}\n            offsetLeft={leftLabelsWidth + BOTTOM_LABELS_OFFSET}\n            offsetRight={BOTTOM_LABELS_OFFSET}\n          />\n        </ChartPlot>\n      }\n      popover={\n        <ChartPopover\n          ref={popoverRef}\n          containerRef={containerRefObject}\n          trackRef={highlightedElementRef}\n          isOpen={isPopoverOpen}\n          isPinned={isPopoverPinned}\n          highlightDetails={highlightDetails}\n          onDismiss={onPopoverDismiss}\n          size={detailPopoverSize}\n          footer={detailPopoverFooterContent}\n          dismissAriaLabel={i18nStrings.detailPopoverDismissAriaLabel}\n          onMouseLeave={onPopoverLeave}\n        />\n      }\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}