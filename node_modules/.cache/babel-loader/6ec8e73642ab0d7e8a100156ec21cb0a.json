{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport InternalContainer from '../container/internal';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { getTabElementId, TabHeaderBar } from './tab-header-bar';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nlet lastGeneratedId = 0;\nexport const nextGeneratedId = () => `awsui-tabs-${lastGeneratedId++}-${Math.round(Math.random() * 10000)}`;\nfunction firstEnabledTab(tabs) {\n  const enabledTabs = tabs.filter(tab => !tab.disabled);\n  if (enabledTabs.length > 0) {\n    return enabledTabs[0];\n  }\n  return null;\n}\nexport default function Tabs(_a) {\n  var _b, _c;\n  var {\n      tabs,\n      variant = 'default',\n      onChange,\n      activeTabId: controlledTabId,\n      ariaLabel,\n      ariaLabelledby,\n      disableContentPaddings = false,\n      i18nStrings\n    } = _a,\n    rest = __rest(_a, [\"tabs\", \"variant\", \"onChange\", \"activeTabId\", \"ariaLabel\", \"ariaLabelledby\", \"disableContentPaddings\", \"i18nStrings\"]);\n  for (const tab of tabs) {\n    checkSafeUrl('Tabs', tab.href);\n  }\n  const {\n    __internalRootRef\n  } = useBaseComponent('Tabs');\n  const [idNamespace] = useState(() => nextGeneratedId());\n  const [activeTabId, setActiveTabId] = useControllable(controlledTabId, onChange, (_c = (_b = firstEnabledTab(tabs)) === null || _b === void 0 ? void 0 : _b.id) !== null && _c !== void 0 ? _c : '', {\n    componentName: 'Tabs',\n    controlledProp: 'activeTabId',\n    changeHandler: 'onChange'\n  });\n  const baseProps = getBaseProps(rest);\n  const content = () => {\n    const selectedTab = tabs.filter(tab => tab.id === activeTabId)[0];\n    const renderContent = tab => {\n      const isTabSelected = tab === selectedTab;\n      const classes = clsx({\n        [styles['tabs-content']]: true,\n        [styles['tabs-content-active']]: isTabSelected\n      });\n      const contentAttributes = {\n        className: classes,\n        role: 'tabpanel',\n        id: `${idNamespace}-${tab.id}-panel`,\n        key: `${idNamespace}-${tab.id}-panel`,\n        tabIndex: 0,\n        'aria-labelledby': getTabElementId({\n          namespace: idNamespace,\n          tabId: tab.id\n        })\n      };\n      const isContentShown = isTabSelected && !selectedTab.disabled;\n      return React.createElement(\"div\", Object.assign({}, contentAttributes), isContentShown && selectedTab.content);\n    };\n    return React.createElement(\"div\", {\n      className: clsx(variant === 'container' || variant === 'stacked' ? styles['tabs-container-content-wrapper'] : styles['tabs-content-wrapper'], {\n        [styles['with-paddings']]: !disableContentPaddings\n      })\n    }, tabs.map(renderContent));\n  };\n  const header = React.createElement(TabHeaderBar, {\n    activeTabId: activeTabId,\n    variant: variant,\n    idNamespace: idNamespace,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    tabs: tabs,\n    onChange: changeDetail => {\n      setActiveTabId(changeDetail.activeTabId);\n      fireNonCancelableEvent(onChange, changeDetail);\n    },\n    i18nStrings: i18nStrings\n  });\n  if (variant === 'container' || variant === 'stacked') {\n    return React.createElement(InternalContainer, Object.assign({\n      header: header,\n      disableHeaderPaddings: true\n    }, baseProps, {\n      className: clsx(baseProps.className, styles.root),\n      __internalRootRef: __internalRootRef,\n      disableContentPaddings: true,\n      variant: variant === 'stacked' ? 'stacked' : 'default'\n    }), content());\n  }\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root, styles.tabs),\n    ref: __internalRootRef\n  }), header, content());\n}\napplyDisplayName(Tabs, 'Tabs');","map":{"version":3,"mappings":"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","names":["React","useState","getBaseProps","fireNonCancelableEvent","InternalContainer","clsx","styles","getTabElementId","TabHeaderBar","useControllable","applyDisplayName","useBaseComponent","checkSafeUrl","lastGeneratedId","nextGeneratedId","Math","round","random","firstEnabledTab","tabs","enabledTabs","filter","tab","disabled","length","Tabs","_a","variant","onChange","activeTabId","controlledTabId","ariaLabel","ariaLabelledby","disableContentPaddings","i18nStrings","rest","href","__internalRootRef","idNamespace","setActiveTabId","id","componentName","controlledProp","changeHandler","baseProps","content","selectedTab","renderContent","isTabSelected","classes","contentAttributes","className","role","key","tabIndex","namespace","tabId","isContentShown","map","header","changeDetail","disableHeaderPaddings","root","ref"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/tabs/lib/default/tabs/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport InternalContainer from '../container/internal';\nimport { TabsProps } from './interfaces';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { getTabElementId, TabHeaderBar } from './tab-header-bar';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\n\nexport { TabsProps };\n\nlet lastGeneratedId = 0;\nexport const nextGeneratedId = () => `awsui-tabs-${lastGeneratedId++}-${Math.round(Math.random() * 10000)}`;\n\nfunction firstEnabledTab(tabs: ReadonlyArray<TabsProps.Tab>) {\n  const enabledTabs = tabs.filter(tab => !tab.disabled);\n  if (enabledTabs.length > 0) {\n    return enabledTabs[0];\n  }\n  return null;\n}\n\nexport default function Tabs({\n  tabs,\n  variant = 'default',\n  onChange,\n  activeTabId: controlledTabId,\n  ariaLabel,\n  ariaLabelledby,\n  disableContentPaddings = false,\n  i18nStrings,\n  ...rest\n}: TabsProps) {\n  for (const tab of tabs) {\n    checkSafeUrl('Tabs', tab.href);\n  }\n  const { __internalRootRef } = useBaseComponent('Tabs');\n  const [idNamespace] = useState(() => nextGeneratedId());\n\n  const [activeTabId, setActiveTabId] = useControllable(controlledTabId, onChange, firstEnabledTab(tabs)?.id ?? '', {\n    componentName: 'Tabs',\n    controlledProp: 'activeTabId',\n    changeHandler: 'onChange',\n  });\n\n  const baseProps = getBaseProps(rest);\n\n  const content = () => {\n    const selectedTab = tabs.filter(tab => tab.id === activeTabId)[0];\n    const renderContent = (tab: TabsProps.Tab) => {\n      const isTabSelected = tab === selectedTab;\n\n      const classes = clsx({\n        [styles['tabs-content']]: true,\n        [styles['tabs-content-active']]: isTabSelected,\n      });\n\n      const contentAttributes: JSX.IntrinsicElements['div'] = {\n        className: classes,\n        role: 'tabpanel',\n        id: `${idNamespace}-${tab.id}-panel`,\n        key: `${idNamespace}-${tab.id}-panel`,\n        tabIndex: 0,\n        'aria-labelledby': getTabElementId({ namespace: idNamespace, tabId: tab.id }),\n      };\n\n      const isContentShown = isTabSelected && !selectedTab.disabled;\n      return <div {...contentAttributes}>{isContentShown && selectedTab.content}</div>;\n    };\n\n    return (\n      <div\n        className={clsx(\n          variant === 'container' || variant === 'stacked'\n            ? styles['tabs-container-content-wrapper']\n            : styles['tabs-content-wrapper'],\n          {\n            [styles['with-paddings']]: !disableContentPaddings,\n          }\n        )}\n      >\n        {tabs.map(renderContent)}\n      </div>\n    );\n  };\n\n  const header = (\n    <TabHeaderBar\n      activeTabId={activeTabId}\n      variant={variant}\n      idNamespace={idNamespace}\n      ariaLabel={ariaLabel}\n      ariaLabelledby={ariaLabelledby}\n      tabs={tabs}\n      onChange={changeDetail => {\n        setActiveTabId(changeDetail.activeTabId);\n        fireNonCancelableEvent(onChange, changeDetail);\n      }}\n      i18nStrings={i18nStrings}\n    />\n  );\n\n  if (variant === 'container' || variant === 'stacked') {\n    return (\n      <InternalContainer\n        header={header}\n        disableHeaderPaddings={true}\n        {...baseProps}\n        className={clsx(baseProps.className, styles.root)}\n        __internalRootRef={__internalRootRef}\n        disableContentPaddings={true}\n        variant={variant === 'stacked' ? 'stacked' : 'default'}\n      >\n        {content()}\n      </InternalContainer>\n    );\n  }\n\n  return (\n    <div {...baseProps} className={clsx(baseProps.className, styles.root, styles.tabs)} ref={__internalRootRef}>\n      {header}\n      {content()}\n    </div>\n  );\n}\n\napplyDisplayName(Tabs, 'Tabs');\n"]},"metadata":{},"sourceType":"module"}