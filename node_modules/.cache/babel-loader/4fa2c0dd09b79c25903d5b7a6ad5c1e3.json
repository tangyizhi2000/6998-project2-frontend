{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport ChartPopover from '../internal/components/chart-popover';\nimport ChartSeriesDetails from '../internal/components/chart-series-details';\nimport InternalBox from '../box/internal';\nimport styles from './styles.css.js';\nimport { Transition } from '../internal/components/transition';\nexport default React.forwardRef(MixedChartPopover);\nfunction MixedChartPopover(_ref, popoverRef) {\n  let {\n    containerRef,\n    trackRef,\n    isOpen,\n    isPinned,\n    highlightDetails,\n    footer,\n    onDismiss,\n    size = 'medium',\n    dismissAriaLabel,\n    onMouseEnter,\n    onMouseLeave\n  } = _ref;\n  return React.createElement(Transition, {\n    in: isOpen\n  }, (state, ref) => React.createElement(\"div\", {\n    ref: ref,\n    className: clsx(state === 'exiting' && styles.exiting)\n  }, (isOpen || state !== 'exited') && highlightDetails && React.createElement(ChartPopover, {\n    ref: popoverRef,\n    title: highlightDetails.position,\n    trackRef: trackRef,\n    trackKey: highlightDetails.position,\n    dismissButton: isPinned,\n    dismissAriaLabel: dismissAriaLabel,\n    onDismiss: onDismiss,\n    container: containerRef.current,\n    size: size,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave\n  }, React.createElement(ChartSeriesDetails, {\n    details: highlightDetails.details\n  }), footer && React.createElement(InternalBox, {\n    margin: {\n      top: 's'\n    }\n  }, footer))));\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,kBAAkB,MAAM,6CAA6C;AAC5E,OAAOC,WAAW,MAAM,iBAAiB;AAGzC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,UAAU,QAAQ,mCAAmC;AAiB9D,eAAeN,KAAK,CAACO,UAAU,CAACC,iBAAiB,CAAC;AAElD,SAASA,iBAAiB,OAcxBC,UAAkC;EAAA,IAblC;IACEC,YAAY;IACZC,QAAQ;IACRC,MAAM;IACNC,QAAQ;IACRC,gBAAgB;IAChBC,MAAM;IACNC,SAAS;IACTC,IAAI,GAAG,QAAQ;IACfC,gBAAgB;IAChBC,YAAY;IACZC;EAAY,CACc;EAG5B,OACEpB,oBAACM,UAAU;IAACe,EAAE,EAAET;EAAM,GACnB,CAACU,KAAK,EAAEC,GAAG,KACVvB;IAAKuB,GAAG,EAAEA,GAAG;IAAEC,SAAS,EAAEvB,IAAI,CAACqB,KAAK,KAAK,SAAS,IAAIjB,MAAM,CAACoB,OAAO;EAAC,GAClE,CAACb,MAAM,IAAIU,KAAK,KAAK,QAAQ,KAAKR,gBAAgB,IACjDd,oBAACE,YAAY;IACXqB,GAAG,EAAEd,UAAU;IACfiB,KAAK,EAAEZ,gBAAgB,CAACa,QAAQ;IAChChB,QAAQ,EAAEA,QAAQ;IAClBiB,QAAQ,EAAEd,gBAAgB,CAACa,QAAQ;IACnCE,aAAa,EAAEhB,QAAQ;IACvBK,gBAAgB,EAAEA,gBAAgB;IAClCF,SAAS,EAAEA,SAAS;IACpBc,SAAS,EAAEpB,YAAY,CAACqB,OAAO;IAC/Bd,IAAI,EAAEA,IAAI;IACVE,YAAY,EAAEA,YAAY;IAC1BC,YAAY,EAAEA;EAAY,GAE1BpB,oBAACG,kBAAkB;IAAC6B,OAAO,EAAElB,gBAAgB,CAACkB;EAAO,EAAI,EACxDjB,MAAM,IAAIf,oBAACI,WAAW;IAAC6B,MAAM,EAAE;MAAEC,GAAG,EAAE;IAAG;EAAE,GAAGnB,MAAM,CAAe,CAEvE,CAEJ,CACU;AAEjB","names":["React","clsx","ChartPopover","ChartSeriesDetails","InternalBox","styles","Transition","forwardRef","MixedChartPopover","popoverRef","containerRef","trackRef","isOpen","isPinned","highlightDetails","footer","onDismiss","size","dismissAriaLabel","onMouseEnter","onMouseLeave","in","state","ref","className","exiting","title","position","trackKey","dismissButton","container","current","details","margin","top"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/mixed-line-bar-chart/lib/default/mixed-line-bar-chart/chart-popover.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport ChartPopover from '../internal/components/chart-popover';\nimport ChartSeriesDetails from '../internal/components/chart-series-details';\nimport InternalBox from '../box/internal';\nimport { ChartDataTypes, MixedLineBarChartProps } from './interfaces';\n\nimport styles from './styles.css.js';\nimport { Transition } from '../internal/components/transition';\nimport { HighlightDetails } from './format-highlighted';\n\nexport interface MixedChartPopoverProps<T extends ChartDataTypes> {\n  containerRef: React.RefObject<HTMLDivElement>;\n  trackRef: React.RefObject<SVGElement>;\n  isOpen: boolean;\n  isPinned: boolean;\n  highlightDetails: null | HighlightDetails;\n  onDismiss(): void;\n  size: MixedLineBarChartProps<T>['detailPopoverSize'];\n  footer?: React.ReactNode;\n  dismissAriaLabel?: string;\n  onMouseEnter?: (event: React.MouseEvent) => void;\n  onMouseLeave?: (event: React.MouseEvent) => void;\n}\n\nexport default React.forwardRef(MixedChartPopover);\n\nfunction MixedChartPopover<T extends ChartDataTypes>(\n  {\n    containerRef,\n    trackRef,\n    isOpen,\n    isPinned,\n    highlightDetails,\n    footer,\n    onDismiss,\n    size = 'medium',\n    dismissAriaLabel,\n    onMouseEnter,\n    onMouseLeave,\n  }: MixedChartPopoverProps<T>,\n  popoverRef: React.Ref<HTMLElement>\n) {\n  return (\n    <Transition in={isOpen}>\n      {(state, ref) => (\n        <div ref={ref} className={clsx(state === 'exiting' && styles.exiting)}>\n          {(isOpen || state !== 'exited') && highlightDetails && (\n            <ChartPopover\n              ref={popoverRef}\n              title={highlightDetails.position}\n              trackRef={trackRef}\n              trackKey={highlightDetails.position}\n              dismissButton={isPinned}\n              dismissAriaLabel={dismissAriaLabel}\n              onDismiss={onDismiss}\n              container={containerRef.current}\n              size={size}\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n            >\n              <ChartSeriesDetails details={highlightDetails.details} />\n              {footer && <InternalBox margin={{ top: 's' }}>{footer}</InternalBox>}\n            </ChartPopover>\n          )}\n        </div>\n      )}\n    </Transition>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}