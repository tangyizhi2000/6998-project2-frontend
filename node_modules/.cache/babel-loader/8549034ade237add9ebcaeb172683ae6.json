{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { InternalButton } from '../button/internal';\nimport { KeyCode } from '../internal/keycode';\nimport { onPaginationClick, hasHorizontalOverflow, hasLeftOverflow, hasRightOverflow, scrollIntoView } from './scroll-utils';\nimport { hasModifierKeys, isPlainLeftClick } from '../internal/events';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useInternalI18n } from '../i18n/context';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nexport function TabHeaderBar(_ref) {\n  let {\n    onChange,\n    activeTabId,\n    tabs,\n    variant,\n    idNamespace,\n    ariaLabel,\n    ariaLabelledby,\n    i18nStrings\n  } = _ref;\n  const headerBarRef = useRef(null);\n  const activeTabHeaderRef = useRef(null);\n  const leftOverflowButton = useRef(null);\n  const i18n = useInternalI18n('tabs');\n  const isVisualRefresh = useVisualRefresh();\n  const [widthChange, containerRef] = useContainerQuery(rect => rect.contentBoxWidth);\n  const tabRefs = useRef(new Map());\n  const [horizontalOverflow, setHorizontalOverflow] = useState(false);\n  const [leftOverflow, setLeftOverflow] = useState(false);\n  const [rightOverflow, setRightOverflow] = useState(false);\n  useEffect(() => {\n    if (headerBarRef.current) {\n      setHorizontalOverflow(hasHorizontalOverflow(headerBarRef.current, leftOverflowButton));\n      setLeftOverflow(hasLeftOverflow(headerBarRef.current));\n      setRightOverflow(hasRightOverflow(headerBarRef.current));\n    }\n  }, [widthChange, tabs]);\n  const scrollIntoViewIfPossible = smooth => {\n    if (!activeTabId) {\n      return;\n    }\n    const activeTabRef = tabRefs.current.get(activeTabId);\n    if (activeTabRef && headerBarRef.current) {\n      scrollIntoView(activeTabRef, headerBarRef.current, smooth);\n    }\n  };\n  useEffect(() => {\n    // Delay scrollIntoView as the position is depending on parent elements\n    // (effects are called inside-out in the component tree).\n    // Wait one frame to allow parents to complete it's calculation.\n    requestAnimationFrame(() => {\n      scrollIntoViewIfPossible(false);\n    });\n    // Non-smooth scrolling should not be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [horizontalOverflow, widthChange, tabs.length]);\n  useEffect(() => {\n    scrollIntoViewIfPossible(true);\n    // Smooth scrolling should only be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeTabId]);\n  useEffect(() => {\n    var _a, _b;\n    /*\n     When the selected tab changes and we are currently already focused on a tab,\n     move the focus to the newly selected tab.\n    */\n    if ((_a = headerBarRef.current) === null || _a === void 0 ? void 0 : _a.contains(document.activeElement)) {\n      if (document.activeElement !== activeTabHeaderRef.current) {\n        (_b = activeTabHeaderRef.current) === null || _b === void 0 ? void 0 : _b.focus({\n          preventScroll: true\n        });\n      }\n    }\n  }, [activeTabId]);\n  const onScroll = () => {\n    if (headerBarRef.current) {\n      setLeftOverflow(hasLeftOverflow(headerBarRef.current));\n      setRightOverflow(hasRightOverflow(headerBarRef.current));\n    }\n  };\n  const classes = clsx({\n    [styles['tabs-header']]: true,\n    [styles['tabs-header-with-divider']]: variant === 'default' || isVisualRefresh\n  });\n  const leftButtonClasses = clsx({\n    [styles['pagination-button']]: true,\n    [styles['pagination-button-left']]: true,\n    [styles['pagination-button-left-scrollable']]: leftOverflow\n  });\n  const rightButtonClasses = clsx({\n    [styles['pagination-button']]: true,\n    [styles['pagination-button-right']]: true,\n    [styles['pagination-button-right-scrollable']]: rightOverflow\n  });\n  return (\n    //converted span to div as list should not be a child of span for HTML validation\n    React.createElement(\"div\", {\n      className: classes,\n      ref: containerRef\n    }, horizontalOverflow && React.createElement(\"span\", {\n      ref: leftOverflowButton,\n      className: leftButtonClasses\n    }, React.createElement(InternalButton, {\n      formAction: \"none\",\n      variant: \"icon\",\n      iconName: \"angle-left\",\n      disabled: !leftOverflow,\n      onClick: () => onPaginationClick(headerBarRef, -1),\n      ariaLabel: i18n('i18nStrings.scrollLeftAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.scrollLeftAriaLabel)\n    })), React.createElement(\"ul\", {\n      role: \"tablist\",\n      className: styles['tabs-header-list'],\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledby,\n      ref: headerBarRef,\n      onScroll: onScroll\n    }, tabs.map(renderTabHeader)), horizontalOverflow && React.createElement(\"span\", {\n      className: rightButtonClasses\n    }, React.createElement(InternalButton, {\n      formAction: \"none\",\n      variant: \"icon\",\n      iconName: \"angle-right\",\n      disabled: !rightOverflow,\n      onClick: () => onPaginationClick(headerBarRef, 1),\n      ariaLabel: i18n('i18nStrings.scrollRightAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.scrollRightAriaLabel)\n    })))\n  );\n  function renderTabHeader(tab) {\n    const enabledTabsWithCurrentTab = tabs.filter(tab => !tab.disabled || tab.id === activeTabId);\n    const highlightTab = function (enabledTabIndex) {\n      const tab = enabledTabsWithCurrentTab[enabledTabIndex];\n      if (tab.id === activeTabId) {\n        return;\n      }\n      onChange({\n        activeTabId: tab.id,\n        activeTabHref: tab.href\n      });\n    };\n    const handleKeyDown = function (event) {\n      const {\n        keyCode\n      } = event;\n      const specialKeys = [KeyCode.right, KeyCode.left, KeyCode.end, KeyCode.home, KeyCode.pageUp, KeyCode.pageDown];\n      if (hasModifierKeys(event) || specialKeys.indexOf(keyCode) === -1) {\n        return;\n      }\n      event.preventDefault();\n      const activeIndex = enabledTabsWithCurrentTab.indexOf(tab);\n      switch (keyCode) {\n        case KeyCode.right:\n          if (activeIndex + 1 === enabledTabsWithCurrentTab.length) {\n            highlightTab(0);\n          } else {\n            highlightTab(activeIndex + 1);\n          }\n          return;\n        case KeyCode.left:\n          if (activeIndex === 0) {\n            highlightTab(enabledTabsWithCurrentTab.length - 1);\n          } else {\n            highlightTab(activeIndex - 1);\n          }\n          return;\n        case KeyCode.end:\n          highlightTab(enabledTabsWithCurrentTab.length - 1);\n          return;\n        case KeyCode.home:\n          highlightTab(0);\n          return;\n        case KeyCode.pageDown:\n          if (rightOverflow) {\n            onPaginationClick(headerBarRef, 1);\n          }\n          return;\n        case KeyCode.pageUp:\n          if (leftOverflow) {\n            onPaginationClick(headerBarRef, -1);\n          }\n          return;\n      }\n    };\n    const clickTab = event => {\n      if (tab.disabled) {\n        event.preventDefault();\n        return;\n      }\n      // if the primary mouse button is clicked with a modifier key, the browser will handle opening a new tab\n      const specialKey = !isPlainLeftClick(event);\n      if (specialKey && tab.href) {\n        return;\n      }\n      event.preventDefault();\n      // for browsers that do not focus buttons on button click\n      if (!tab.href) {\n        const clickedTabRef = tabRefs.current.get(tab.id);\n        if (clickedTabRef) {\n          const childElement = clickedTabRef.firstChild;\n          if (childElement && childElement !== document.activeElement) {\n            childElement.focus({\n              preventScroll: true\n            });\n          }\n        }\n      }\n      if (tab.id === activeTabId) {\n        return;\n      }\n      onChange({\n        activeTabId: tab.id,\n        activeTabHref: tab.href\n      });\n    };\n    const classes = clsx({\n      [styles['tabs-tab-link']]: true,\n      [styles.refresh]: isVisualRefresh,\n      [styles['tabs-tab-active']]: activeTabId === tab.id && !tab.disabled,\n      [styles['tabs-tab-disabled']]: tab.disabled\n    });\n    const commonProps = {\n      className: classes,\n      role: 'tab',\n      'aria-selected': tab.id === activeTabId,\n      'aria-controls': `${idNamespace}-${tab.id}-panel`,\n      'data-testid': tab.id,\n      id: getTabElementId({\n        namespace: idNamespace,\n        tabId: tab.id\n      }),\n      children: React.createElement(\"span\", {\n        className: styles['tabs-tab-label']\n      }, tab.label)\n    };\n    if (tab.disabled) {\n      commonProps['aria-disabled'] = 'true';\n    } else {\n      commonProps.onClick = clickTab;\n    }\n    if (tab.id === activeTabId) {\n      commonProps.ref = activeTabHeaderRef;\n      commonProps.tabIndex = 0;\n      commonProps.onKeyDown = event => handleKeyDown(event);\n    } else {\n      commonProps.tabIndex = -1;\n    }\n    let trigger = null;\n    if (tab.href) {\n      const anchorProps = commonProps;\n      anchorProps.href = tab.href;\n      trigger = React.createElement(\"a\", Object.assign({}, anchorProps));\n    } else {\n      const buttonProps = commonProps;\n      buttonProps.type = 'button';\n      if (tab.disabled) {\n        buttonProps.disabled = true;\n      }\n      trigger = React.createElement(\"button\", Object.assign({}, buttonProps));\n    }\n    return React.createElement(\"li\", {\n      ref: element => tabRefs.current.set(tab.id, element),\n      className: styles['tabs-tab'],\n      role: \"presentation\",\n      key: tab.id\n    }, trigger);\n  }\n}\nexport function getTabElementId(_ref2) {\n  let {\n    namespace,\n    tabId\n  } = _ref2;\n  return namespace + '-' + tabId;\n}","map":{"version":3,"mappings":"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","names":["React","useRef","useState","useEffect","clsx","styles","InternalButton","KeyCode","onPaginationClick","hasHorizontalOverflow","hasLeftOverflow","hasRightOverflow","scrollIntoView","hasModifierKeys","isPlainLeftClick","useVisualRefresh","useInternalI18n","useContainerQuery","TabHeaderBar","onChange","activeTabId","tabs","variant","idNamespace","ariaLabel","ariaLabelledby","i18nStrings","headerBarRef","activeTabHeaderRef","leftOverflowButton","i18n","isVisualRefresh","widthChange","containerRef","rect","contentBoxWidth","tabRefs","Map","horizontalOverflow","setHorizontalOverflow","leftOverflow","setLeftOverflow","rightOverflow","setRightOverflow","current","scrollIntoViewIfPossible","smooth","activeTabRef","get","requestAnimationFrame","length","contains","document","activeElement","focus","preventScroll","onScroll","classes","leftButtonClasses","rightButtonClasses","className","ref","formAction","iconName","disabled","onClick","scrollLeftAriaLabel","role","map","renderTabHeader","scrollRightAriaLabel","tab","enabledTabsWithCurrentTab","filter","id","highlightTab","enabledTabIndex","activeTabHref","href","handleKeyDown","event","keyCode","specialKeys","right","left","end","home","pageUp","pageDown","indexOf","preventDefault","activeIndex","clickTab","specialKey","clickedTabRef","childElement","firstChild","refresh","commonProps","getTabElementId","namespace","tabId","children","label","tabIndex","onKeyDown","trigger","anchorProps","buttonProps","type","element","set","key"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/tabs/lib/default/tabs/tab-header-bar.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState, useEffect } from 'react';\nimport { TabsProps } from './interfaces';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { InternalButton } from '../button/internal';\nimport { KeyCode } from '../internal/keycode';\nimport {\n  onPaginationClick,\n  hasHorizontalOverflow,\n  hasLeftOverflow,\n  hasRightOverflow,\n  scrollIntoView,\n} from './scroll-utils';\nimport { hasModifierKeys, isPlainLeftClick } from '../internal/events';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { useInternalI18n } from '../i18n/context';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\n\nexport interface TabHeaderBarProps {\n  onChange: (changeDetail: TabsProps.ChangeDetail) => void;\n  activeTabId: TabsProps['activeTabId'];\n  tabs: TabsProps['tabs'];\n  variant: TabsProps['variant'];\n  idNamespace: string;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  i18nStrings?: TabsProps.I18nStrings;\n}\n\nexport function TabHeaderBar({\n  onChange,\n  activeTabId,\n  tabs,\n  variant,\n  idNamespace,\n  ariaLabel,\n  ariaLabelledby,\n  i18nStrings,\n}: TabHeaderBarProps) {\n  const headerBarRef = useRef<HTMLUListElement>(null);\n  const activeTabHeaderRef = useRef<HTMLAnchorElement>(null);\n  const leftOverflowButton = useRef<HTMLElement>(null);\n  const i18n = useInternalI18n('tabs');\n\n  const isVisualRefresh = useVisualRefresh();\n\n  const [widthChange, containerRef] = useContainerQuery<number>(rect => rect.contentBoxWidth);\n  const tabRefs = useRef<Map<string, HTMLElement>>(new Map());\n  const [horizontalOverflow, setHorizontalOverflow] = useState(false);\n  const [leftOverflow, setLeftOverflow] = useState(false);\n  const [rightOverflow, setRightOverflow] = useState(false);\n\n  useEffect(() => {\n    if (headerBarRef.current) {\n      setHorizontalOverflow(hasHorizontalOverflow(headerBarRef.current, leftOverflowButton));\n      setLeftOverflow(hasLeftOverflow(headerBarRef.current));\n      setRightOverflow(hasRightOverflow(headerBarRef.current));\n    }\n  }, [widthChange, tabs]);\n\n  const scrollIntoViewIfPossible = (smooth: boolean) => {\n    if (!activeTabId) {\n      return;\n    }\n    const activeTabRef = tabRefs.current.get(activeTabId);\n    if (activeTabRef && headerBarRef.current) {\n      scrollIntoView(activeTabRef, headerBarRef.current, smooth);\n    }\n  };\n\n  useEffect(() => {\n    // Delay scrollIntoView as the position is depending on parent elements\n    // (effects are called inside-out in the component tree).\n    // Wait one frame to allow parents to complete it's calculation.\n    requestAnimationFrame(() => {\n      scrollIntoViewIfPossible(false);\n    });\n    // Non-smooth scrolling should not be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [horizontalOverflow, widthChange, tabs.length]);\n\n  useEffect(() => {\n    scrollIntoViewIfPossible(true);\n    // Smooth scrolling should only be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeTabId]);\n\n  useEffect(() => {\n    /*\n     When the selected tab changes and we are currently already focused on a tab,\n     move the focus to the newly selected tab.\n    */\n    if (headerBarRef.current?.contains(document.activeElement)) {\n      if (document.activeElement !== activeTabHeaderRef.current) {\n        activeTabHeaderRef.current?.focus({ preventScroll: true });\n      }\n    }\n  }, [activeTabId]);\n\n  const onScroll = () => {\n    if (headerBarRef.current) {\n      setLeftOverflow(hasLeftOverflow(headerBarRef.current));\n      setRightOverflow(hasRightOverflow(headerBarRef.current));\n    }\n  };\n\n  const classes = clsx({\n    [styles['tabs-header']]: true,\n    [styles['tabs-header-with-divider']]: variant === 'default' || isVisualRefresh,\n  });\n\n  const leftButtonClasses = clsx({\n    [styles['pagination-button']]: true,\n    [styles['pagination-button-left']]: true,\n    [styles['pagination-button-left-scrollable']]: leftOverflow,\n  });\n\n  const rightButtonClasses = clsx({\n    [styles['pagination-button']]: true,\n    [styles['pagination-button-right']]: true,\n    [styles['pagination-button-right-scrollable']]: rightOverflow,\n  });\n\n  return (\n    //converted span to div as list should not be a child of span for HTML validation\n    <div className={classes} ref={containerRef}>\n      {horizontalOverflow && (\n        <span ref={leftOverflowButton} className={leftButtonClasses}>\n          <InternalButton\n            formAction=\"none\"\n            variant=\"icon\"\n            iconName=\"angle-left\"\n            disabled={!leftOverflow}\n            onClick={() => onPaginationClick(headerBarRef, -1)}\n            ariaLabel={i18n('i18nStrings.scrollLeftAriaLabel', i18nStrings?.scrollLeftAriaLabel)}\n          />\n        </span>\n      )}\n      <ul\n        role=\"tablist\"\n        className={styles['tabs-header-list']}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledby}\n        ref={headerBarRef}\n        onScroll={onScroll}\n      >\n        {tabs.map(renderTabHeader)}\n      </ul>\n      {horizontalOverflow && (\n        <span className={rightButtonClasses}>\n          <InternalButton\n            formAction=\"none\"\n            variant=\"icon\"\n            iconName=\"angle-right\"\n            disabled={!rightOverflow}\n            onClick={() => onPaginationClick(headerBarRef, 1)}\n            ariaLabel={i18n('i18nStrings.scrollRightAriaLabel', i18nStrings?.scrollRightAriaLabel)}\n          />\n        </span>\n      )}\n    </div>\n  );\n\n  function renderTabHeader(tab: TabsProps.Tab) {\n    const enabledTabsWithCurrentTab = tabs.filter(tab => !tab.disabled || tab.id === activeTabId);\n\n    const highlightTab = function (enabledTabIndex: number) {\n      const tab = enabledTabsWithCurrentTab[enabledTabIndex];\n      if (tab.id === activeTabId) {\n        return;\n      }\n\n      onChange({ activeTabId: tab.id, activeTabHref: tab.href });\n    };\n\n    const handleKeyDown = function (\n      event: React.KeyboardEvent<HTMLAnchorElement> | React.KeyboardEvent<HTMLButtonElement>\n    ) {\n      const { keyCode } = event;\n      const specialKeys = [KeyCode.right, KeyCode.left, KeyCode.end, KeyCode.home, KeyCode.pageUp, KeyCode.pageDown];\n      if (hasModifierKeys(event) || specialKeys.indexOf(keyCode) === -1) {\n        return;\n      }\n      event.preventDefault();\n      const activeIndex = enabledTabsWithCurrentTab.indexOf(tab);\n      switch (keyCode) {\n        case KeyCode.right:\n          if (activeIndex + 1 === enabledTabsWithCurrentTab.length) {\n            highlightTab(0);\n          } else {\n            highlightTab(activeIndex + 1);\n          }\n          return;\n        case KeyCode.left:\n          if (activeIndex === 0) {\n            highlightTab(enabledTabsWithCurrentTab.length - 1);\n          } else {\n            highlightTab(activeIndex - 1);\n          }\n          return;\n        case KeyCode.end:\n          highlightTab(enabledTabsWithCurrentTab.length - 1);\n          return;\n        case KeyCode.home:\n          highlightTab(0);\n          return;\n        case KeyCode.pageDown:\n          if (rightOverflow) {\n            onPaginationClick(headerBarRef, 1);\n          }\n          return;\n        case KeyCode.pageUp:\n          if (leftOverflow) {\n            onPaginationClick(headerBarRef, -1);\n          }\n          return;\n      }\n    };\n\n    const clickTab = (event: React.MouseEvent) => {\n      if (tab.disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      // if the primary mouse button is clicked with a modifier key, the browser will handle opening a new tab\n      const specialKey = !isPlainLeftClick(event);\n      if (specialKey && tab.href) {\n        return;\n      }\n\n      event.preventDefault();\n      // for browsers that do not focus buttons on button click\n      if (!tab.href) {\n        const clickedTabRef = tabRefs.current.get(tab.id);\n        if (clickedTabRef) {\n          const childElement = clickedTabRef.firstChild as HTMLButtonElement;\n          if (childElement && childElement !== document.activeElement) {\n            childElement.focus({ preventScroll: true });\n          }\n        }\n      }\n\n      if (tab.id === activeTabId) {\n        return;\n      }\n\n      onChange({ activeTabId: tab.id, activeTabHref: tab.href });\n    };\n\n    const classes = clsx({\n      [styles['tabs-tab-link']]: true,\n      [styles.refresh]: isVisualRefresh,\n      [styles['tabs-tab-active']]: activeTabId === tab.id && !tab.disabled,\n      [styles['tabs-tab-disabled']]: tab.disabled,\n    });\n\n    const commonProps: (JSX.IntrinsicElements['a'] | JSX.IntrinsicElements['button']) & { 'data-testid': string } = {\n      className: classes,\n      role: 'tab',\n      'aria-selected': tab.id === activeTabId,\n      'aria-controls': `${idNamespace}-${tab.id}-panel`,\n      'data-testid': tab.id,\n      id: getTabElementId({ namespace: idNamespace, tabId: tab.id }),\n      children: <span className={styles['tabs-tab-label']}>{tab.label}</span>,\n    };\n\n    if (tab.disabled) {\n      commonProps['aria-disabled'] = 'true';\n    } else {\n      commonProps.onClick = clickTab;\n    }\n\n    if (tab.id === activeTabId) {\n      commonProps.ref = activeTabHeaderRef;\n      commonProps.tabIndex = 0;\n      commonProps.onKeyDown = (\n        event: React.KeyboardEvent<HTMLAnchorElement> | React.KeyboardEvent<HTMLButtonElement>\n      ) => handleKeyDown(event);\n    } else {\n      commonProps.tabIndex = -1;\n    }\n\n    let trigger = null;\n    if (tab.href) {\n      const anchorProps = commonProps as JSX.IntrinsicElements['a'];\n      anchorProps.href = tab.href;\n      trigger = <a {...anchorProps} />;\n    } else {\n      const buttonProps = commonProps as JSX.IntrinsicElements['button'];\n      buttonProps.type = 'button';\n      if (tab.disabled) {\n        buttonProps.disabled = true;\n      }\n      trigger = <button {...buttonProps} />;\n    }\n\n    return (\n      <li\n        ref={element => tabRefs.current.set(tab.id, element as HTMLElement)}\n        className={styles['tabs-tab']}\n        role=\"presentation\"\n        key={tab.id}\n      >\n        {trigger}\n      </li>\n    );\n  }\n}\n\nexport function getTabElementId({ namespace, tabId }: { namespace: string; tabId: string }) {\n  return namespace + '-' + tabId;\n}\n"]},"metadata":{},"sourceType":"module"}