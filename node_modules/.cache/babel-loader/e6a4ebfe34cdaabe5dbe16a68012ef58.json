{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport InternalLink from '../../link/internal';\nimport { compareDates, getColumnAriaLabel, includes } from './table-utils';\nimport { formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { useInternalI18n } from '../../i18n/context';\nexport function BucketsTable(_ref) {\n  let {\n    forwardFocusRef,\n    i18nStrings,\n    isVisualRefresh,\n    isItemDisabled,\n    selectableItemsTypes,\n    fetchData,\n    visibleColumns,\n    onDrilldown,\n    onSelect\n  } = _ref;\n  var _a, _b, _c, _d;\n  const i18n = useInternalI18n('s3-resource-selector');\n  return React.createElement(BasicS3Table, {\n    forwardFocusRef: forwardFocusRef,\n    trackBy: \"Name\",\n    fetchData: fetchData,\n    visibleColumns: visibleColumns,\n    isItemDisabled: isItemDisabled || (() => !includes(selectableItemsTypes, 'buckets')),\n    i18nStrings: Object.assign(Object.assign({}, getSharedI18Strings(i18n, i18nStrings)), {\n      header: i18n('i18nStrings.selectionBuckets', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBuckets),\n      loadingText: i18n('i18nStrings.selectionBucketsLoading', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBucketsLoading),\n      filteringAriaLabel: (_a = i18n('i18nStrings.labelFiltering', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering, format => itemsType => format({\n        itemsType\n      }))) === null || _a === void 0 ? void 0 : _a((_b = i18n('i18nStrings.selectionBuckets', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBuckets)) !== null && _b !== void 0 ? _b : ''),\n      filteringPlaceholder: i18n('i18nStrings.selectionBucketsSearchPlaceholder', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBucketsSearchPlaceholder),\n      emptyText: i18n('i18nStrings.selectionBucketsNoItems', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBucketsNoItems),\n      selectionLabels: Object.assign(Object.assign({}, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsBucketsSelection), {\n        selectionGroupLabel: i18n('i18nStrings.labelsBucketsSelection.selectionGroupLabel', (_c = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsBucketsSelection) === null || _c === void 0 ? void 0 : _c.selectionGroupLabel),\n        itemSelectionLabel: i18n('i18nStrings.labelsBucketsSelection.itemSelectionLabel', (_d = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsBucketsSelection) === null || _d === void 0 ? void 0 : _d.itemSelectionLabel, format => (data, item) => {\n          var _a;\n          return format({\n            item__Name: (_a = item.Name) !== null && _a !== void 0 ? _a : ''\n          });\n        })\n      })\n    }),\n    isVisualRefresh: isVisualRefresh,\n    columnDefinitions: [{\n      id: 'Name',\n      header: i18n('i18nStrings.columnBucketName', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketName),\n      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n('i18nStrings.columnBucketName', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketName)),\n      sortingField: 'Name',\n      cell: item => {\n        const isClickable = includes(selectableItemsTypes, 'objects') || includes(selectableItemsTypes, 'versions');\n        return isClickable ? React.createElement(InternalLink, {\n          onFollow: () => item.Name && onDrilldown(item.Name),\n          variant: \"link\"\n        }, item.Name) : item.Name;\n      },\n      minWidth: '250px'\n    }, {\n      id: 'CreationDate',\n      header: i18n('i18nStrings.columnBucketCreationDate', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketCreationDate),\n      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n('i18nStrings.columnBucketCreationDate', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketCreationDate)),\n      sortingComparator: (a, b) => compareDates(a.CreationDate, b.CreationDate),\n      cell: item => formatDefault(item.CreationDate)\n    }, {\n      id: 'Region',\n      header: i18n('i18nStrings.columnBucketRegion', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketRegion),\n      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n('i18nStrings.columnBucketRegion', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketRegion)),\n      sortingField: 'Region',\n      cell: item => formatDefault(item.Region),\n      minWidth: '150px'\n    }],\n    onSelect: item => {\n      var _a;\n      return onSelect((_a = item === null || item === void 0 ? void 0 : item.Name) !== null && _a !== void 0 ? _a : '');\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["React","InternalLink","compareDates","getColumnAriaLabel","includes","formatDefault","BasicS3Table","getSharedI18Strings","useInternalI18n","BucketsTable","forwardFocusRef","i18nStrings","isVisualRefresh","isItemDisabled","selectableItemsTypes","fetchData","visibleColumns","onDrilldown","onSelect","i18n","trackBy","header","selectionBuckets","loadingText","selectionBucketsLoading","filteringAriaLabel","labelFiltering","format","itemsType","filteringPlaceholder","selectionBucketsSearchPlaceholder","emptyText","selectionBucketsNoItems","selectionLabels","labelsBucketsSelection","selectionGroupLabel","itemSelectionLabel","data","item","item__Name","Name","columnDefinitions","id","columnBucketName","ariaLabel","sortingField","cell","isClickable","onFollow","variant","minWidth","columnBucketCreationDate","sortingComparator","a","b","CreationDate","columnBucketRegion","Region"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/lib/default/s3-resource-selector/s3-modal/buckets-table.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport InternalLink from '../../link/internal';\nimport { TableProps } from '../../table/interfaces';\nimport { ForwardFocusRef } from '../../internal/hooks/forward-focus';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { compareDates, getColumnAriaLabel, includes } from './table-utils';\nimport { formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { useInternalI18n } from '../../i18n/context';\n\ninterface BucketsTableProps {\n  forwardFocusRef: React.Ref<ForwardFocusRef>;\n  visibleColumns: ReadonlyArray<string>;\n  isItemDisabled: TableProps.IsItemDisabled<S3ResourceSelectorProps.Bucket> | undefined;\n  selectableItemsTypes: S3ResourceSelectorProps['selectableItemsTypes'];\n  fetchData: S3ResourceSelectorProps['fetchBuckets'];\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  isVisualRefresh?: boolean;\n  onDrilldown: (path: string) => void;\n  onSelect: (uri: string) => void;\n}\n\nexport function BucketsTable({\n  forwardFocusRef,\n  i18nStrings,\n  isVisualRefresh,\n  isItemDisabled,\n  selectableItemsTypes,\n  fetchData,\n  visibleColumns,\n  onDrilldown,\n  onSelect,\n}: BucketsTableProps) {\n  const i18n = useInternalI18n('s3-resource-selector');\n\n  return (\n    <BasicS3Table<S3ResourceSelectorProps.Bucket>\n      forwardFocusRef={forwardFocusRef}\n      trackBy=\"Name\"\n      fetchData={fetchData}\n      visibleColumns={visibleColumns}\n      isItemDisabled={isItemDisabled || (() => !includes(selectableItemsTypes, 'buckets'))}\n      i18nStrings={{\n        ...getSharedI18Strings(i18n, i18nStrings),\n        header: i18n('i18nStrings.selectionBuckets', i18nStrings?.selectionBuckets),\n        loadingText: i18n('i18nStrings.selectionBucketsLoading', i18nStrings?.selectionBucketsLoading),\n        filteringAriaLabel: i18n(\n          'i18nStrings.labelFiltering',\n          i18nStrings?.labelFiltering,\n          format => itemsType => format({ itemsType })\n        )?.(i18n('i18nStrings.selectionBuckets', i18nStrings?.selectionBuckets) ?? ''),\n        filteringPlaceholder: i18n(\n          'i18nStrings.selectionBucketsSearchPlaceholder',\n          i18nStrings?.selectionBucketsSearchPlaceholder\n        ),\n        emptyText: i18n('i18nStrings.selectionBucketsNoItems', i18nStrings?.selectionBucketsNoItems),\n        selectionLabels: {\n          ...i18nStrings?.labelsBucketsSelection,\n          selectionGroupLabel: i18n(\n            'i18nStrings.labelsBucketsSelection.selectionGroupLabel',\n            i18nStrings?.labelsBucketsSelection?.selectionGroupLabel\n          ),\n          itemSelectionLabel: i18n(\n            'i18nStrings.labelsBucketsSelection.itemSelectionLabel',\n            i18nStrings?.labelsBucketsSelection?.itemSelectionLabel,\n            format => (data, item) => format({ item__Name: item.Name ?? '' })\n          ),\n        },\n      }}\n      isVisualRefresh={isVisualRefresh}\n      columnDefinitions={[\n        {\n          id: 'Name',\n          header: i18n('i18nStrings.columnBucketName', i18nStrings?.columnBucketName),\n          ariaLabel: getColumnAriaLabel(\n            i18n,\n            i18nStrings,\n            i18n('i18nStrings.columnBucketName', i18nStrings?.columnBucketName)\n          ),\n          sortingField: 'Name',\n          cell: item => {\n            const isClickable = includes(selectableItemsTypes, 'objects') || includes(selectableItemsTypes, 'versions');\n            return isClickable ? (\n              <InternalLink onFollow={() => item.Name && onDrilldown(item.Name)} variant=\"link\">\n                {item.Name}\n              </InternalLink>\n            ) : (\n              item.Name\n            );\n          },\n          minWidth: '250px',\n        },\n        {\n          id: 'CreationDate',\n          header: i18n('i18nStrings.columnBucketCreationDate', i18nStrings?.columnBucketCreationDate),\n          ariaLabel: getColumnAriaLabel(\n            i18n,\n            i18nStrings,\n            i18n('i18nStrings.columnBucketCreationDate', i18nStrings?.columnBucketCreationDate)\n          ),\n          sortingComparator: (a, b) => compareDates(a.CreationDate, b.CreationDate),\n          cell: item => formatDefault(item.CreationDate),\n        },\n        {\n          id: 'Region',\n          header: i18n('i18nStrings.columnBucketRegion', i18nStrings?.columnBucketRegion),\n          ariaLabel: getColumnAriaLabel(\n            i18n,\n            i18nStrings,\n            i18n('i18nStrings.columnBucketRegion', i18nStrings?.columnBucketRegion)\n          ),\n          sortingField: 'Region',\n          cell: item => formatDefault(item.Region),\n          minWidth: '150px',\n        },\n      ]}\n      onSelect={item => onSelect(item?.Name ?? '')}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}