{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useId, useMemo, useState } from \"react\";\nimport ScreenreaderOnly from \"../screenreader-only\";\nimport styles from \"./styles.css.js\";\n/**\n * The component provides a native screen-reader grid navigation for board items.\n * A separate navigation component is used because the navigation requires a table or table-like\n * DOM structure while the board uses CSS grid.\n *\n * The screen-reader navigation component is hidden and don't have a tab stop, however, it can be focused\n * programmatically or with a screen-reader. When focused with a screen-reader the component becomes visible\n * so that it can be clicked (e.g. the VO can imitate clicks on the elements under VO cursor with VO+Space).\n */\nexport function ScreenReaderGridNavigation(_ref) {\n  let {\n    items,\n    itemsLayout,\n    ariaLabel,\n    ariaDescription,\n    itemAriaLabel,\n    onActivateItem\n  } = _ref;\n  const [isNavigationFocused, setIsNavigationFocused] = useState(false);\n  const className = isNavigationFocused ? styles[\"screen-reader-navigation-visible\"] : styles[\"screen-reader-navigation-hidden\"];\n  const tableId = useId();\n  const navigationDescriptionId = useId();\n  const getItem = useMemo(() => {\n    const itemById = new Map(items.map(it => [it.id, it]));\n    return id => {\n      var _a;\n      return id ? (_a = itemById.get(id)) !== null && _a !== void 0 ? _a : null : null;\n    };\n  }, [items]);\n  const layout = [];\n  function makeNewRow() {\n    layout.push([...Array(itemsLayout.columns)].map(() => null));\n  }\n  for (const item of itemsLayout.items) {\n    for (let y = item.y; y < item.y + item.height; y++) {\n      while (layout.length <= y) {\n        makeNewRow();\n      }\n      for (let x = item.x; x < item.x + item.width; x++) {\n        layout[y][x] = item.id;\n      }\n    }\n  }\n  return _jsxs(\"div\", {\n    role: \"navigation\",\n    \"aria-labelledby\": tableId,\n    \"aria-describedby\": ariaDescription ? navigationDescriptionId : undefined,\n    className: className,\n    children: [_jsx(\"table\", {\n      id: tableId,\n      role: \"grid\",\n      \"aria-label\": ariaLabel,\n      \"aria-describedby\": ariaDescription ? navigationDescriptionId : undefined,\n      children: _jsx(\"tbody\", {\n        children: layout.map((row, rowIndex) => _jsx(\"tr\", {\n          role: \"row\",\n          children: row.map((itemId, cellIndex) => _jsx(\"td\", {\n            role: \"gridcell\",\n            children: itemId ? _jsx(\"button\", {\n              tabIndex: -1,\n              onClick: () => itemId && onActivateItem(itemId),\n              onFocus: () => setIsNavigationFocused(true),\n              onBlur: () => setIsNavigationFocused(false),\n              children: itemAriaLabel(getItem(itemId))\n            }) : itemAriaLabel(getItem(itemId))\n          }, cellIndex))\n        }, rowIndex))\n      })\n    }), ariaDescription && _jsx(ScreenreaderOnly, {\n      id: navigationDescriptionId,\n      children: ariaDescription\n    })]\n  });\n}","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","useId","useMemo","useState","ScreenreaderOnly","styles","ScreenReaderGridNavigation","items","itemsLayout","ariaLabel","ariaDescription","itemAriaLabel","onActivateItem","isNavigationFocused","setIsNavigationFocused","className","tableId","navigationDescriptionId","getItem","itemById","Map","map","it","id","_a","get","layout","makeNewRow","push","Array","columns","item","y","height","length","x","width","role","undefined","children","row","rowIndex","itemId","cellIndex","tabIndex","onClick","onFocus","onBlur"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/board-components/internal/screenreader-grid-navigation/index.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useId, useMemo, useState } from \"react\";\nimport ScreenreaderOnly from \"../screenreader-only\";\nimport styles from \"./styles.css.js\";\n/**\n * The component provides a native screen-reader grid navigation for board items.\n * A separate navigation component is used because the navigation requires a table or table-like\n * DOM structure while the board uses CSS grid.\n *\n * The screen-reader navigation component is hidden and don't have a tab stop, however, it can be focused\n * programmatically or with a screen-reader. When focused with a screen-reader the component becomes visible\n * so that it can be clicked (e.g. the VO can imitate clicks on the elements under VO cursor with VO+Space).\n */\nexport function ScreenReaderGridNavigation({ items, itemsLayout, ariaLabel, ariaDescription, itemAriaLabel, onActivateItem, }) {\n    const [isNavigationFocused, setIsNavigationFocused] = useState(false);\n    const className = isNavigationFocused\n        ? styles[\"screen-reader-navigation-visible\"]\n        : styles[\"screen-reader-navigation-hidden\"];\n    const tableId = useId();\n    const navigationDescriptionId = useId();\n    const getItem = useMemo(() => {\n        const itemById = new Map(items.map((it) => [it.id, it]));\n        return (id) => { var _a; return (id ? (_a = itemById.get(id)) !== null && _a !== void 0 ? _a : null : null); };\n    }, [items]);\n    const layout = [];\n    function makeNewRow() {\n        layout.push([...Array(itemsLayout.columns)].map(() => null));\n    }\n    for (const item of itemsLayout.items) {\n        for (let y = item.y; y < item.y + item.height; y++) {\n            while (layout.length <= y) {\n                makeNewRow();\n            }\n            for (let x = item.x; x < item.x + item.width; x++) {\n                layout[y][x] = item.id;\n            }\n        }\n    }\n    return (_jsxs(\"div\", { role: \"navigation\", \"aria-labelledby\": tableId, \"aria-describedby\": ariaDescription ? navigationDescriptionId : undefined, className: className, children: [_jsx(\"table\", { id: tableId, role: \"grid\", \"aria-label\": ariaLabel, \"aria-describedby\": ariaDescription ? navigationDescriptionId : undefined, children: _jsx(\"tbody\", { children: layout.map((row, rowIndex) => (_jsx(\"tr\", { role: \"row\", children: row.map((itemId, cellIndex) => (_jsx(\"td\", { role: \"gridcell\", children: itemId ? (_jsx(\"button\", { tabIndex: -1, onClick: () => itemId && onActivateItem(itemId), onFocus: () => setIsNavigationFocused(true), onBlur: () => setIsNavigationFocused(false), children: itemAriaLabel(getItem(itemId)) })) : (itemAriaLabel(getItem(itemId))) }, cellIndex))) }, rowIndex))) }) }), ariaDescription && _jsx(ScreenreaderOnly, { id: navigationDescriptionId, children: ariaDescription })] }));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}