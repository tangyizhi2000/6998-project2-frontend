{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useCallback, useImperativeHandle, useRef } from 'react';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport InternalContainer from '../container/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport ToolsHeader from './tools-header';\nimport Thead from './thead';\nimport { TableBodyCell } from './body-cell';\nimport { supportsStickyPosition } from '../internal/utils/dom';\nimport { checkSortingState, getColumnKey, getItemKey, getVisibleColumnDefinitions, toContainerVariant } from './utils';\nimport { useRowEvents } from './use-row-events';\nimport { SelectionControl, focusMarkers, useSelectionFocusMove, useSelection } from './selection';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { isDevelopment } from '../internal/is-development';\nimport { ColumnWidthsProvider, DEFAULT_COLUMN_WIDTH } from './use-column-widths';\nimport { useScrollSync } from '../internal/hooks/use-scroll-sync';\nimport { ResizeTracker } from './resizer';\nimport styles from './styles.css.js';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport StickyHeader from './sticky-header';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { useDynamicOverlap } from '../internal/hooks/use-dynamic-overlap';\nimport LiveRegion from '../internal/components/live-region';\nimport useTableFocusNavigation from './use-table-focus-navigation';\nimport { TableTdElement } from './body-cell/td-element';\nimport { useStickyColumns } from './sticky-columns';\nimport { StickyScrollbar } from './sticky-scrollbar';\nimport { checkColumnWidths } from './column-widths-utils';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { getTableRoleProps, getTableRowRoleProps, getTableWrapperRoleProps } from './table-role';\nimport { useCellEditing } from './use-cell-editing';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { NoDataCell } from './node-data-cell';\nvar SELECTION_COLUMN_WIDTH = 54;\nvar selectionColumnId = Symbol('selection-column-id');\nexport var InternalTableAsSubstep = React.forwardRef(function (props, ref) {\n  var _useFunnelSubStep = useFunnelSubStep(),\n    funnelSubStepProps = _useFunnelSubStep.funnelSubStepProps;\n  var tableProps = Object.assign(Object.assign({}, props), {\n    __funnelSubStepProps: funnelSubStepProps\n  });\n  return React.createElement(InternalTable, Object.assign({}, tableProps, {\n    ref: ref\n  }));\n});\nvar InternalTable = React.forwardRef(function (_a, ref) {\n  var _clsx;\n  var _b, _c, _d, _e, _f;\n  var header = _a.header,\n    footer = _a.footer,\n    empty = _a.empty,\n    filter = _a.filter,\n    pagination = _a.pagination,\n    preferences = _a.preferences,\n    items = _a.items,\n    columnDefinitions = _a.columnDefinitions,\n    trackBy = _a.trackBy,\n    loading = _a.loading,\n    loadingText = _a.loadingText,\n    selectionType = _a.selectionType,\n    selectedItems = _a.selectedItems,\n    isItemDisabled = _a.isItemDisabled,\n    ariaLabels = _a.ariaLabels,\n    onSelectionChange = _a.onSelectionChange,\n    onSortingChange = _a.onSortingChange,\n    sortingColumn = _a.sortingColumn,\n    sortingDescending = _a.sortingDescending,\n    sortingDisabled = _a.sortingDisabled,\n    visibleColumns = _a.visibleColumns,\n    stickyHeader = _a.stickyHeader,\n    stickyHeaderVerticalOffset = _a.stickyHeaderVerticalOffset,\n    onRowClick = _a.onRowClick,\n    onRowContextMenu = _a.onRowContextMenu,\n    wrapLines = _a.wrapLines,\n    stripedRows = _a.stripedRows,\n    contentDensity = _a.contentDensity,\n    submitEdit = _a.submitEdit,\n    onEditCancel = _a.onEditCancel,\n    resizableColumns = _a.resizableColumns,\n    onColumnWidthsChange = _a.onColumnWidthsChange,\n    variant = _a.variant,\n    __internalRootRef = _a.__internalRootRef,\n    totalItemsCount = _a.totalItemsCount,\n    firstIndex = _a.firstIndex,\n    renderAriaLive = _a.renderAriaLive,\n    stickyColumns = _a.stickyColumns,\n    columnDisplay = _a.columnDisplay,\n    __funnelSubStepProps = _a.__funnelSubStepProps,\n    rest = __rest(_a, [\"header\", \"footer\", \"empty\", \"filter\", \"pagination\", \"preferences\", \"items\", \"columnDefinitions\", \"trackBy\", \"loading\", \"loadingText\", \"selectionType\", \"selectedItems\", \"isItemDisabled\", \"ariaLabels\", \"onSelectionChange\", \"onSortingChange\", \"sortingColumn\", \"sortingDescending\", \"sortingDisabled\", \"visibleColumns\", \"stickyHeader\", \"stickyHeaderVerticalOffset\", \"onRowClick\", \"onRowContextMenu\", \"wrapLines\", \"stripedRows\", \"contentDensity\", \"submitEdit\", \"onEditCancel\", \"resizableColumns\", \"onColumnWidthsChange\", \"variant\", \"__internalRootRef\", \"totalItemsCount\", \"firstIndex\", \"renderAriaLive\", \"stickyColumns\", \"columnDisplay\", \"__funnelSubStepProps\"]);\n  var baseProps = getBaseProps(rest);\n  stickyHeader = stickyHeader && supportsStickyPosition();\n  var isMobile = useMobile();\n  var _useContainerQuery = useContainerQuery(function (rect) {\n      return rect.contentBoxWidth;\n    }),\n    _useContainerQuery2 = _slicedToArray(_useContainerQuery, 2),\n    containerWidth = _useContainerQuery2[0],\n    wrapperMeasureRef = _useContainerQuery2[1];\n  var wrapperRefObject = useRef(null);\n  var _useContainerQuery3 = useContainerQuery(function (rect) {\n      return rect.contentBoxWidth;\n    }),\n    _useContainerQuery4 = _slicedToArray(_useContainerQuery3, 2),\n    tableWidth = _useContainerQuery4[0],\n    tableMeasureRef = _useContainerQuery4[1];\n  var tableRefObject = useRef(null);\n  var secondaryWrapperRef = React.useRef(null);\n  var theadRef = useRef(null);\n  var stickyHeaderRef = React.useRef(null);\n  var scrollbarRef = React.useRef(null);\n  var _g = useCellEditing({\n      onCancel: onEditCancel,\n      onSubmit: submitEdit\n    }),\n    cancelEdit = _g.cancelEdit,\n    cellEditing = __rest(_g, [\"cancelEdit\"]);\n  useImperativeHandle(ref, function () {\n    var _a;\n    return {\n      scrollToTop: ((_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.scrollToTop) || function () {\n        return undefined;\n      },\n      cancelEdit: cancelEdit\n    };\n  }, [cancelEdit]);\n  var handleScroll = useScrollSync([wrapperRefObject, scrollbarRef, secondaryWrapperRef]);\n  var _useSelectionFocusMov = useSelectionFocusMove(selectionType, items.length),\n    moveFocusDown = _useSelectionFocusMov.moveFocusDown,\n    moveFocusUp = _useSelectionFocusMov.moveFocusUp,\n    moveFocus = _useSelectionFocusMov.moveFocus;\n  var _useRowEvents = useRowEvents({\n      onRowClick: onRowClick,\n      onRowContextMenu: onRowContextMenu\n    }),\n    onRowClickHandler = _useRowEvents.onRowClickHandler,\n    onRowContextMenuHandler = _useRowEvents.onRowContextMenuHandler;\n  var visibleColumnDefinitions = getVisibleColumnDefinitions({\n    columnDefinitions: columnDefinitions,\n    columnDisplay: columnDisplay,\n    visibleColumns: visibleColumns\n  });\n  var _useSelection = useSelection({\n      items: items,\n      trackBy: trackBy,\n      selectedItems: selectedItems,\n      selectionType: selectionType,\n      isItemDisabled: isItemDisabled,\n      onSelectionChange: onSelectionChange,\n      ariaLabels: ariaLabels,\n      loading: loading\n    }),\n    isItemSelected = _useSelection.isItemSelected,\n    getSelectAllProps = _useSelection.getSelectAllProps,\n    getItemSelectionProps = _useSelection.getItemSelectionProps,\n    updateShiftToggle = _useSelection.updateShiftToggle;\n  if (isDevelopment) {\n    if (resizableColumns) {\n      checkColumnWidths(columnDefinitions);\n    }\n    if (sortingColumn === null || sortingColumn === void 0 ? void 0 : sortingColumn.sortingComparator) {\n      checkSortingState(columnDefinitions, sortingColumn.sortingComparator);\n    }\n  }\n  var isVisualRefresh = useVisualRefresh();\n  var computedVariant = isVisualRefresh ? variant : ['embedded', 'full-page'].indexOf(variant) > -1 ? 'container' : variant;\n  var hasHeader = !!(header || filter || pagination || preferences);\n  var hasSelection = !!selectionType;\n  var hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n  var hasFooter = !!footer || hasFooterPagination;\n  var headerIdRef = useRef(undefined);\n  var isLabelledByHeader = !(ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tableLabel) && !!header;\n  var setHeaderRef = useCallback(function (id) {\n    headerIdRef.current = id;\n  }, []);\n  var visibleColumnWidthsWithSelection = [];\n  var visibleColumnIdsWithSelection = [];\n  if (hasSelection) {\n    visibleColumnWidthsWithSelection.push({\n      id: selectionColumnId,\n      width: SELECTION_COLUMN_WIDTH\n    });\n    visibleColumnIdsWithSelection.push(selectionColumnId);\n  }\n  for (var columnIndex = 0; columnIndex < visibleColumnDefinitions.length; columnIndex++) {\n    var columnId = getColumnKey(visibleColumnDefinitions[columnIndex], columnIndex);\n    visibleColumnWidthsWithSelection.push(Object.assign(Object.assign({}, visibleColumnDefinitions[columnIndex]), {\n      id: columnId\n    }));\n    visibleColumnIdsWithSelection.push(columnId);\n  }\n  var stickyState = useStickyColumns({\n    visibleColumns: visibleColumnIdsWithSelection,\n    stickyColumnsFirst: ((_b = stickyColumns === null || stickyColumns === void 0 ? void 0 : stickyColumns.first) !== null && _b !== void 0 ? _b : 0) + ((stickyColumns === null || stickyColumns === void 0 ? void 0 : stickyColumns.first) && hasSelection ? 1 : 0),\n    stickyColumnsLast: (stickyColumns === null || stickyColumns === void 0 ? void 0 : stickyColumns.last) || 0\n  });\n  var hasStickyColumns = !!(((_c = stickyColumns === null || stickyColumns === void 0 ? void 0 : stickyColumns.first) !== null && _c !== void 0 ? _c : 0) + ((_d = stickyColumns === null || stickyColumns === void 0 ? void 0 : stickyColumns.last) !== null && _d !== void 0 ? _d : 0) > 0);\n  var hasEditableCells = !!columnDefinitions.find(function (col) {\n    return col.editConfig;\n  });\n  var tableRole = hasEditableCells ? 'grid-default' : 'table';\n  var theadProps = {\n    containerWidth: containerWidth,\n    selectionType: selectionType,\n    getSelectAllProps: getSelectAllProps,\n    columnDefinitions: visibleColumnDefinitions,\n    variant: computedVariant,\n    wrapLines: wrapLines,\n    resizableColumns: resizableColumns,\n    sortingColumn: sortingColumn,\n    sortingDisabled: sortingDisabled,\n    sortingDescending: sortingDescending,\n    onSortingChange: onSortingChange,\n    onFocusMove: moveFocus,\n    onResizeFinish: function onResizeFinish(newWidth) {\n      var widthsDetail = columnDefinitions.map(function (column, index) {\n        return newWidth[getColumnKey(column, index)] || column.width || DEFAULT_COLUMN_WIDTH;\n      });\n      var widthsChanged = widthsDetail.some(function (width, index) {\n        return columnDefinitions[index].width !== width;\n      });\n      if (widthsChanged) {\n        fireNonCancelableEvent(onColumnWidthsChange, {\n          widths: widthsDetail\n        });\n      }\n    },\n    singleSelectionHeaderAriaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.selectionGroupLabel,\n    stripedRows: stripedRows,\n    stickyState: stickyState,\n    selectionColumnId: selectionColumnId,\n    tableRole: tableRole\n  };\n  var wrapperRef = useMergeRefs(wrapperRefObject, stickyState.refs.wrapper);\n  var tableRef = useMergeRefs(tableMeasureRef, tableRefObject, stickyState.refs.table);\n  var wrapperProps = getTableWrapperRoleProps({\n    tableRole: tableRole,\n    isScrollable: !!(tableWidth && containerWidth && tableWidth > containerWidth),\n    ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tableLabel\n  });\n  var getMouseDownTarget = useMouseDownTarget();\n  var hasDynamicHeight = computedVariant === 'full-page';\n  var overlapElement = useDynamicOverlap({\n    disabled: !hasDynamicHeight\n  });\n  useTableFocusNavigation(selectionType, tableRefObject, visibleColumnDefinitions, items === null || items === void 0 ? void 0 : items.length);\n  var toolsHeaderWrapper = useRef(null);\n  // If is mobile, we take into consideration the AppLayout's mobile bar and we subtract the tools wrapper height so only the table header is sticky\n  var toolsHeaderHeight = (_f = (_e = toolsHeaderWrapper === null || toolsHeaderWrapper === void 0 ? void 0 : toolsHeaderWrapper.current) === null || _e === void 0 ? void 0 : _e.getBoundingClientRect().height) !== null && _f !== void 0 ? _f : 0;\n  var totalColumnsCount = selectionType ? visibleColumnDefinitions.length + 1 : visibleColumnDefinitions.length;\n  return React.createElement(LinkDefaultVariantContext.Provider, {\n    value: {\n      defaultVariant: 'primary'\n    }\n  }, React.createElement(ColumnWidthsProvider, {\n    visibleColumns: visibleColumnWidthsWithSelection,\n    resizableColumns: resizableColumns\n  }, React.createElement(InternalContainer, Object.assign({}, baseProps, {\n    __internalRootRef: __internalRootRef,\n    className: clsx(baseProps.className, styles.root),\n    __funnelSubStepProps: __funnelSubStepProps,\n    header: React.createElement(React.Fragment, null, hasHeader && React.createElement(\"div\", {\n      ref: overlapElement,\n      className: clsx(hasDynamicHeight && [styles['dark-header'], 'awsui-context-content-header'])\n    }, React.createElement(\"div\", {\n      ref: toolsHeaderWrapper,\n      className: clsx(styles['header-controls'], styles[\"variant-\".concat(computedVariant)])\n    }, React.createElement(CollectionLabelContext.Provider, {\n      value: {\n        assignId: setHeaderRef\n      }\n    }, React.createElement(ToolsHeader, {\n      header: header,\n      filter: filter,\n      pagination: pagination,\n      preferences: preferences\n    })))), stickyHeader && React.createElement(StickyHeader, {\n      ref: stickyHeaderRef,\n      variant: computedVariant,\n      theadProps: theadProps,\n      wrapperRef: wrapperRefObject,\n      theadRef: theadRef,\n      secondaryWrapperRef: secondaryWrapperRef,\n      tableRef: tableRefObject,\n      onScroll: handleScroll,\n      tableHasHeader: hasHeader,\n      contentDensity: contentDensity,\n      tableRole: tableRole\n    })),\n    disableHeaderPaddings: true,\n    disableContentPaddings: true,\n    variant: toContainerVariant(computedVariant),\n    __disableFooterPaddings: true,\n    __disableFooterDivider: true,\n    __disableStickyMobile: false,\n    footer: hasFooter ? React.createElement(\"div\", {\n      className: clsx(styles['footer-wrapper'], styles[\"variant-\".concat(computedVariant)])\n    }, React.createElement(\"div\", {\n      className: clsx(styles.footer, hasFooterPagination && styles['footer-with-pagination'])\n    }, footer && React.createElement(\"span\", null, footer), hasFooterPagination && React.createElement(\"div\", {\n      className: styles['footer-pagination']\n    }, pagination))) : null,\n    __stickyHeader: stickyHeader,\n    __mobileStickyOffset: toolsHeaderHeight,\n    __stickyOffset: stickyHeaderVerticalOffset\n  }, focusMarkers.root), React.createElement(\"div\", Object.assign({\n    ref: wrapperRef,\n    className: clsx(styles.wrapper, styles[\"variant-\".concat(computedVariant)], (_clsx = {}, _defineProperty(_clsx, styles['has-footer'], hasFooter), _defineProperty(_clsx, styles['has-header'], hasHeader), _clsx)),\n    style: stickyState.style.wrapper,\n    onScroll: handleScroll\n  }, wrapperProps), React.createElement(\"div\", {\n    className: styles['wrapper-content-measure'],\n    ref: wrapperMeasureRef\n  }), !!renderAriaLive && !!firstIndex && React.createElement(LiveRegion, null, React.createElement(\"span\", null, renderAriaLive({\n    totalItemsCount: totalItemsCount,\n    firstIndex: firstIndex,\n    lastIndex: firstIndex + items.length - 1\n  }))), React.createElement(\"table\", Object.assign({\n    ref: tableRef,\n    className: clsx(styles.table, resizableColumns && styles['table-layout-fixed'], contentDensity === 'compact' && getVisualContextClassname('compact-table'))\n  }, getTableRoleProps({\n    tableRole: tableRole,\n    totalItemsCount: totalItemsCount,\n    totalColumnsCount: totalColumnsCount,\n    ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tableLabel,\n    ariaLabelledBy: isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined\n  })), React.createElement(Thead, Object.assign({\n    ref: theadRef,\n    hidden: stickyHeader,\n    onFocusedComponentChange: function onFocusedComponentChange(focusId) {\n      var _a;\n      return (_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.setFocus(focusId);\n    }\n  }, theadProps)), React.createElement(\"tbody\", null, loading || items.length === 0 ? React.createElement(\"tr\", null, React.createElement(NoDataCell, {\n    variant: variant,\n    containerWidth: containerWidth !== null && containerWidth !== void 0 ? containerWidth : 0,\n    totalColumnsCount: totalColumnsCount,\n    hasFooter: hasFooter,\n    loading: loading,\n    loadingText: loadingText,\n    empty: empty,\n    tableRef: tableRefObject\n  })) : items.map(function (item, rowIndex) {\n    var firstVisible = rowIndex === 0;\n    var lastVisible = rowIndex === items.length - 1;\n    var isEven = rowIndex % 2 === 0;\n    var isSelected = !!selectionType && isItemSelected(item);\n    var isPrevSelected = !!selectionType && !firstVisible && isItemSelected(items[rowIndex - 1]);\n    var isNextSelected = !!selectionType && !lastVisible && isItemSelected(items[rowIndex + 1]);\n    return React.createElement(\"tr\", Object.assign({\n      key: getItemKey(trackBy, item, rowIndex),\n      className: clsx(styles.row, isSelected && styles['row-selected']),\n      onFocus: function onFocus(_ref) {\n        var currentTarget = _ref.currentTarget;\n        var _a;\n        // When an element inside table row receives focus we want to adjust the scroll.\n        // However, that behaviour is unwanted when the focus is received as result of a click\n        // as it causes the click to never reach the target element.\n        if (!currentTarget.contains(getMouseDownTarget())) {\n          (_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.scrollToRow(currentTarget);\n        }\n      }\n    }, focusMarkers.item, {\n      onClick: onRowClickHandler && onRowClickHandler.bind(null, rowIndex, item),\n      onContextMenu: onRowContextMenuHandler && onRowContextMenuHandler.bind(null, rowIndex, item)\n    }, getTableRowRoleProps({\n      tableRole: tableRole,\n      firstIndex: firstIndex,\n      rowIndex: rowIndex\n    })), selectionType !== undefined && React.createElement(TableTdElement, {\n      className: clsx(styles['selection-control']),\n      isVisualRefresh: isVisualRefresh,\n      isFirstRow: firstVisible,\n      isLastRow: lastVisible,\n      isSelected: isSelected,\n      isNextSelected: isNextSelected,\n      isPrevSelected: isPrevSelected,\n      wrapLines: false,\n      isEvenRow: isEven,\n      stripedRows: stripedRows,\n      hasSelection: hasSelection,\n      hasFooter: hasFooter,\n      stickyState: stickyState,\n      columnId: selectionColumnId,\n      colIndex: 0,\n      tableRole: tableRole\n    }, React.createElement(SelectionControl, Object.assign({\n      onFocusDown: moveFocusDown,\n      onFocusUp: moveFocusUp,\n      onShiftToggle: updateShiftToggle\n    }, getItemSelectionProps(item)))), visibleColumnDefinitions.map(function (column, colIndex) {\n      var _a;\n      var isEditing = cellEditing.checkEditing({\n        rowIndex: rowIndex,\n        colIndex: colIndex\n      });\n      var successfulEdit = cellEditing.checkLastSuccessfulEdit({\n        rowIndex: rowIndex,\n        colIndex: colIndex\n      });\n      var isEditable = !!column.editConfig && !cellEditing.isLoading;\n      return React.createElement(TableBodyCell, {\n        key: getColumnKey(column, colIndex),\n        style: resizableColumns ? {} : {\n          width: column.width,\n          minWidth: column.minWidth,\n          maxWidth: column.maxWidth\n        },\n        ariaLabels: ariaLabels,\n        column: column,\n        item: item,\n        wrapLines: wrapLines,\n        isEditable: isEditable,\n        isEditing: isEditing,\n        isRowHeader: column.isRowHeader,\n        isFirstRow: firstVisible,\n        isLastRow: lastVisible,\n        isSelected: isSelected,\n        isNextSelected: isNextSelected,\n        isPrevSelected: isPrevSelected,\n        successfulEdit: successfulEdit,\n        onEditStart: function onEditStart() {\n          return cellEditing.startEdit({\n            rowIndex: rowIndex,\n            colIndex: colIndex\n          });\n        },\n        onEditEnd: function onEditEnd(editCancelled) {\n          return cellEditing.completeEdit({\n            rowIndex: rowIndex,\n            colIndex: colIndex\n          }, editCancelled);\n        },\n        submitEdit: cellEditing.submitEdit,\n        hasFooter: hasFooter,\n        stripedRows: stripedRows,\n        isEvenRow: isEven,\n        columnId: (_a = column.id) !== null && _a !== void 0 ? _a : colIndex,\n        colIndex: selectionType !== undefined ? colIndex + 1 : colIndex,\n        stickyState: stickyState,\n        isVisualRefresh: isVisualRefresh,\n        tableRole: tableRole\n      });\n    }));\n  }))), resizableColumns && React.createElement(ResizeTracker, null)), React.createElement(StickyScrollbar, {\n    ref: scrollbarRef,\n    wrapperRef: wrapperRefObject,\n    tableRef: tableRefObject,\n    onScroll: handleScroll,\n    hasStickyColumns: hasStickyColumns\n  }))));\n});\nexport default InternalTable;","map":{"version":3,"mappings":"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","names":["clsx","React","useCallback","useImperativeHandle","useRef","getVisualContextClassname","InternalContainer","getBaseProps","ToolsHeader","Thead","TableBodyCell","supportsStickyPosition","checkSortingState","getColumnKey","getItemKey","getVisibleColumnDefinitions","toContainerVariant","useRowEvents","SelectionControl","focusMarkers","useSelectionFocusMove","useSelection","fireNonCancelableEvent","isDevelopment","ColumnWidthsProvider","DEFAULT_COLUMN_WIDTH","useScrollSync","ResizeTracker","styles","useVisualRefresh","StickyHeader","useMergeRefs","useMouseDownTarget","useDynamicOverlap","LiveRegion","useTableFocusNavigation","TableTdElement","useStickyColumns","StickyScrollbar","checkColumnWidths","useMobile","useContainerQuery","getTableRoleProps","getTableRowRoleProps","getTableWrapperRoleProps","useCellEditing","LinkDefaultVariantContext","CollectionLabelContext","useFunnelSubStep","NoDataCell","SELECTION_COLUMN_WIDTH","selectionColumnId","Symbol","InternalTableAsSubstep","forwardRef","props","ref","funnelSubStepProps","tableProps","__funnelSubStepProps","InternalTable","_a","header","footer","empty","filter","pagination","preferences","items","columnDefinitions","trackBy","loading","loadingText","selectionType","selectedItems","isItemDisabled","ariaLabels","onSelectionChange","onSortingChange","sortingColumn","sortingDescending","sortingDisabled","visibleColumns","stickyHeader","stickyHeaderVerticalOffset","onRowClick","onRowContextMenu","wrapLines","stripedRows","contentDensity","submitEdit","onEditCancel","resizableColumns","onColumnWidthsChange","variant","__internalRootRef","totalItemsCount","firstIndex","renderAriaLive","stickyColumns","columnDisplay","rest","baseProps","isMobile","rect","contentBoxWidth","containerWidth","wrapperMeasureRef","wrapperRefObject","tableWidth","tableMeasureRef","tableRefObject","secondaryWrapperRef","theadRef","stickyHeaderRef","scrollbarRef","onCancel","onSubmit","cancelEdit","cellEditing","scrollToTop","current","undefined","handleScroll","length","moveFocusDown","moveFocusUp","moveFocus","onRowClickHandler","onRowContextMenuHandler","visibleColumnDefinitions","isItemSelected","getSelectAllProps","getItemSelectionProps","updateShiftToggle","sortingComparator","isVisualRefresh","computedVariant","indexOf","hasHeader","hasSelection","hasFooterPagination","hasFooter","headerIdRef","isLabelledByHeader","tableLabel","setHeaderRef","id","visibleColumnWidthsWithSelection","visibleColumnIdsWithSelection","push","width","columnIndex","columnId","stickyState","stickyColumnsFirst","first","stickyColumnsLast","last","hasStickyColumns","hasEditableCells","find","col","editConfig","tableRole","theadProps","onFocusMove","onResizeFinish","newWidth","widthsDetail","map","column","index","widthsChanged","some","widths","singleSelectionHeaderAriaLabel","selectionGroupLabel","wrapperRef","refs","wrapper","tableRef","table","wrapperProps","isScrollable","ariaLabel","getMouseDownTarget","hasDynamicHeight","overlapElement","disabled","toolsHeaderWrapper","toolsHeaderHeight","getBoundingClientRect","height","totalColumnsCount","Provider","value","defaultVariant","className","root","assignId","onScroll","tableHasHeader","disableHeaderPaddings","disableContentPaddings","__disableFooterPaddings","__disableFooterDivider","__disableStickyMobile","__stickyHeader","__mobileStickyOffset","__stickyOffset","style","lastIndex","ariaLabelledBy","hidden","onFocusedComponentChange","setFocus","focusId","item","rowIndex","firstVisible","lastVisible","isEven","isSelected","isPrevSelected","isNextSelected","key","row","onFocus","currentTarget","contains","scrollToRow","onClick","bind","onContextMenu","isFirstRow","isLastRow","isEvenRow","colIndex","onFocusDown","onFocusUp","onShiftToggle","isEditing","checkEditing","successfulEdit","checkLastSuccessfulEdit","isEditable","isLoading","minWidth","maxWidth","isRowHeader","onEditStart","startEdit","onEditEnd","completeEdit","editCancelled"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/table/lib/default/table/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useCallback, useImperativeHandle, useRef } from 'react';\nimport { TableForwardRefType, TableProps } from './interfaces';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport InternalContainer, { InternalContainerProps } from '../container/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport ToolsHeader from './tools-header';\nimport Thead, { TheadProps } from './thead';\nimport { TableBodyCell } from './body-cell';\nimport { supportsStickyPosition } from '../internal/utils/dom';\nimport { checkSortingState, getColumnKey, getItemKey, getVisibleColumnDefinitions, toContainerVariant } from './utils';\nimport { useRowEvents } from './use-row-events';\nimport { SelectionControl, focusMarkers, useSelectionFocusMove, useSelection } from './selection';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { isDevelopment } from '../internal/is-development';\nimport { ColumnWidthDefinition, ColumnWidthsProvider, DEFAULT_COLUMN_WIDTH } from './use-column-widths';\nimport { useScrollSync } from '../internal/hooks/use-scroll-sync';\nimport { ResizeTracker } from './resizer';\nimport styles from './styles.css.js';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport StickyHeader, { StickyHeaderRef } from './sticky-header';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { useDynamicOverlap } from '../internal/hooks/use-dynamic-overlap';\nimport LiveRegion from '../internal/components/live-region';\nimport useTableFocusNavigation from './use-table-focus-navigation';\nimport { SomeRequired } from '../internal/types';\nimport { TableTdElement } from './body-cell/td-element';\nimport { useStickyColumns } from './sticky-columns';\nimport { StickyScrollbar } from './sticky-scrollbar';\nimport { checkColumnWidths } from './column-widths-utils';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { getTableRoleProps, getTableRowRoleProps, getTableWrapperRoleProps } from './table-role';\nimport { useCellEditing } from './use-cell-editing';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { NoDataCell } from './node-data-cell';\n\nconst SELECTION_COLUMN_WIDTH = 54;\nconst selectionColumnId = Symbol('selection-column-id');\n\ntype InternalTableProps<T> = SomeRequired<TableProps<T>, 'items' | 'selectedItems' | 'variant'> &\n  InternalBaseComponentProps & {\n    __funnelSubStepProps?: InternalContainerProps['__funnelSubStepProps'];\n  };\n\nexport const InternalTableAsSubstep = React.forwardRef(\n  <T,>(props: InternalTableProps<T>, ref: React.Ref<TableProps.Ref>) => {\n    const { funnelSubStepProps } = useFunnelSubStep();\n\n    const tableProps: InternalTableProps<T> = {\n      ...props,\n      __funnelSubStepProps: funnelSubStepProps,\n    };\n\n    return <InternalTable {...tableProps} ref={ref} />;\n  }\n) as TableForwardRefType;\n\nconst InternalTable = React.forwardRef(\n  <T,>(\n    {\n      header,\n      footer,\n      empty,\n      filter,\n      pagination,\n      preferences,\n      items,\n      columnDefinitions,\n      trackBy,\n      loading,\n      loadingText,\n      selectionType,\n      selectedItems,\n      isItemDisabled,\n      ariaLabels,\n      onSelectionChange,\n      onSortingChange,\n      sortingColumn,\n      sortingDescending,\n      sortingDisabled,\n      visibleColumns,\n      stickyHeader,\n      stickyHeaderVerticalOffset,\n      onRowClick,\n      onRowContextMenu,\n      wrapLines,\n      stripedRows,\n      contentDensity,\n      submitEdit,\n      onEditCancel,\n      resizableColumns,\n      onColumnWidthsChange,\n      variant,\n      __internalRootRef,\n      totalItemsCount,\n      firstIndex,\n      renderAriaLive,\n      stickyColumns,\n      columnDisplay,\n      __funnelSubStepProps,\n      ...rest\n    }: InternalTableProps<T>,\n    ref: React.Ref<TableProps.Ref>\n  ) => {\n    const baseProps = getBaseProps(rest);\n    stickyHeader = stickyHeader && supportsStickyPosition();\n    const isMobile = useMobile();\n\n    const [containerWidth, wrapperMeasureRef] = useContainerQuery<number>(rect => rect.contentBoxWidth);\n    const wrapperRefObject = useRef(null);\n\n    const [tableWidth, tableMeasureRef] = useContainerQuery<number>(rect => rect.contentBoxWidth);\n    const tableRefObject = useRef(null);\n\n    const secondaryWrapperRef = React.useRef<HTMLDivElement>(null);\n    const theadRef = useRef<HTMLTableRowElement>(null);\n    const stickyHeaderRef = React.useRef<StickyHeaderRef>(null);\n    const scrollbarRef = React.useRef<HTMLDivElement>(null);\n    const { cancelEdit, ...cellEditing } = useCellEditing({ onCancel: onEditCancel, onSubmit: submitEdit });\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        scrollToTop: stickyHeaderRef.current?.scrollToTop || (() => undefined),\n        cancelEdit,\n      }),\n      [cancelEdit]\n    );\n\n    const handleScroll = useScrollSync([wrapperRefObject, scrollbarRef, secondaryWrapperRef]);\n\n    const { moveFocusDown, moveFocusUp, moveFocus } = useSelectionFocusMove(selectionType, items.length);\n    const { onRowClickHandler, onRowContextMenuHandler } = useRowEvents({ onRowClick, onRowContextMenu });\n\n    const visibleColumnDefinitions = getVisibleColumnDefinitions({\n      columnDefinitions,\n      columnDisplay,\n      visibleColumns,\n    });\n\n    const { isItemSelected, getSelectAllProps, getItemSelectionProps, updateShiftToggle } = useSelection({\n      items,\n      trackBy,\n      selectedItems,\n      selectionType,\n      isItemDisabled,\n      onSelectionChange,\n      ariaLabels,\n      loading,\n    });\n\n    if (isDevelopment) {\n      if (resizableColumns) {\n        checkColumnWidths(columnDefinitions);\n      }\n      if (sortingColumn?.sortingComparator) {\n        checkSortingState(columnDefinitions, sortingColumn.sortingComparator);\n      }\n    }\n\n    const isVisualRefresh = useVisualRefresh();\n    const computedVariant = isVisualRefresh\n      ? variant\n      : ['embedded', 'full-page'].indexOf(variant) > -1\n      ? 'container'\n      : variant;\n    const hasHeader = !!(header || filter || pagination || preferences);\n    const hasSelection = !!selectionType;\n    const hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n    const hasFooter = !!footer || hasFooterPagination;\n\n    const headerIdRef = useRef<string | undefined>(undefined);\n    const isLabelledByHeader = !ariaLabels?.tableLabel && !!header;\n    const setHeaderRef = useCallback((id: string) => {\n      headerIdRef.current = id;\n    }, []);\n\n    const visibleColumnWidthsWithSelection: ColumnWidthDefinition[] = [];\n    const visibleColumnIdsWithSelection: PropertyKey[] = [];\n    if (hasSelection) {\n      visibleColumnWidthsWithSelection.push({ id: selectionColumnId, width: SELECTION_COLUMN_WIDTH });\n      visibleColumnIdsWithSelection.push(selectionColumnId);\n    }\n    for (let columnIndex = 0; columnIndex < visibleColumnDefinitions.length; columnIndex++) {\n      const columnId = getColumnKey(visibleColumnDefinitions[columnIndex], columnIndex);\n      visibleColumnWidthsWithSelection.push({ ...visibleColumnDefinitions[columnIndex], id: columnId });\n      visibleColumnIdsWithSelection.push(columnId);\n    }\n\n    const stickyState = useStickyColumns({\n      visibleColumns: visibleColumnIdsWithSelection,\n      stickyColumnsFirst: (stickyColumns?.first ?? 0) + (stickyColumns?.first && hasSelection ? 1 : 0),\n      stickyColumnsLast: stickyColumns?.last || 0,\n    });\n\n    const hasStickyColumns = !!((stickyColumns?.first ?? 0) + (stickyColumns?.last ?? 0) > 0);\n    const hasEditableCells = !!columnDefinitions.find(col => col.editConfig);\n    const tableRole = hasEditableCells ? 'grid-default' : 'table';\n\n    const theadProps: TheadProps = {\n      containerWidth,\n      selectionType,\n      getSelectAllProps,\n      columnDefinitions: visibleColumnDefinitions,\n      variant: computedVariant,\n      wrapLines,\n      resizableColumns,\n      sortingColumn,\n      sortingDisabled,\n      sortingDescending,\n      onSortingChange,\n      onFocusMove: moveFocus,\n      onResizeFinish(newWidth) {\n        const widthsDetail = columnDefinitions.map(\n          (column, index) => newWidth[getColumnKey(column, index)] || (column.width as number) || DEFAULT_COLUMN_WIDTH\n        );\n        const widthsChanged = widthsDetail.some((width, index) => columnDefinitions[index].width !== width);\n        if (widthsChanged) {\n          fireNonCancelableEvent(onColumnWidthsChange, { widths: widthsDetail });\n        }\n      },\n      singleSelectionHeaderAriaLabel: ariaLabels?.selectionGroupLabel,\n      stripedRows,\n      stickyState,\n      selectionColumnId,\n      tableRole,\n    };\n\n    const wrapperRef = useMergeRefs(wrapperRefObject, stickyState.refs.wrapper);\n    const tableRef = useMergeRefs(tableMeasureRef, tableRefObject, stickyState.refs.table);\n\n    const wrapperProps = getTableWrapperRoleProps({\n      tableRole,\n      isScrollable: !!(tableWidth && containerWidth && tableWidth > containerWidth),\n      ariaLabel: ariaLabels?.tableLabel,\n    });\n\n    const getMouseDownTarget = useMouseDownTarget();\n\n    const hasDynamicHeight = computedVariant === 'full-page';\n    const overlapElement = useDynamicOverlap({ disabled: !hasDynamicHeight });\n    useTableFocusNavigation(selectionType, tableRefObject, visibleColumnDefinitions, items?.length);\n    const toolsHeaderWrapper = useRef(null);\n    // If is mobile, we take into consideration the AppLayout's mobile bar and we subtract the tools wrapper height so only the table header is sticky\n    const toolsHeaderHeight =\n      (toolsHeaderWrapper?.current as HTMLDivElement | null)?.getBoundingClientRect().height ?? 0;\n\n    const totalColumnsCount = selectionType ? visibleColumnDefinitions.length + 1 : visibleColumnDefinitions.length;\n\n    return (\n      <LinkDefaultVariantContext.Provider value={{ defaultVariant: 'primary' }}>\n        <ColumnWidthsProvider visibleColumns={visibleColumnWidthsWithSelection} resizableColumns={resizableColumns}>\n          <InternalContainer\n            {...baseProps}\n            __internalRootRef={__internalRootRef}\n            className={clsx(baseProps.className, styles.root)}\n            __funnelSubStepProps={__funnelSubStepProps}\n            header={\n              <>\n                {hasHeader && (\n                  <div\n                    ref={overlapElement}\n                    className={clsx(hasDynamicHeight && [styles['dark-header'], 'awsui-context-content-header'])}\n                  >\n                    <div\n                      ref={toolsHeaderWrapper}\n                      className={clsx(styles['header-controls'], styles[`variant-${computedVariant}`])}\n                    >\n                      <CollectionLabelContext.Provider value={{ assignId: setHeaderRef }}>\n                        <ToolsHeader\n                          header={header}\n                          filter={filter}\n                          pagination={pagination}\n                          preferences={preferences}\n                        />\n                      </CollectionLabelContext.Provider>\n                    </div>\n                  </div>\n                )}\n                {stickyHeader && (\n                  <StickyHeader\n                    ref={stickyHeaderRef}\n                    variant={computedVariant}\n                    theadProps={theadProps}\n                    wrapperRef={wrapperRefObject}\n                    theadRef={theadRef}\n                    secondaryWrapperRef={secondaryWrapperRef}\n                    tableRef={tableRefObject}\n                    onScroll={handleScroll}\n                    tableHasHeader={hasHeader}\n                    contentDensity={contentDensity}\n                    tableRole={tableRole}\n                  />\n                )}\n              </>\n            }\n            disableHeaderPaddings={true}\n            disableContentPaddings={true}\n            variant={toContainerVariant(computedVariant)}\n            __disableFooterPaddings={true}\n            __disableFooterDivider={true}\n            __disableStickyMobile={false}\n            footer={\n              hasFooter ? (\n                <div className={clsx(styles['footer-wrapper'], styles[`variant-${computedVariant}`])}>\n                  <div className={clsx(styles.footer, hasFooterPagination && styles['footer-with-pagination'])}>\n                    {footer && <span>{footer}</span>}\n                    {hasFooterPagination && <div className={styles['footer-pagination']}>{pagination}</div>}\n                  </div>\n                </div>\n              ) : null\n            }\n            __stickyHeader={stickyHeader}\n            __mobileStickyOffset={toolsHeaderHeight}\n            __stickyOffset={stickyHeaderVerticalOffset}\n            {...focusMarkers.root}\n          >\n            <div\n              ref={wrapperRef}\n              className={clsx(styles.wrapper, styles[`variant-${computedVariant}`], {\n                [styles['has-footer']]: hasFooter,\n                [styles['has-header']]: hasHeader,\n              })}\n              style={stickyState.style.wrapper}\n              onScroll={handleScroll}\n              {...wrapperProps}\n            >\n              <div className={styles['wrapper-content-measure']} ref={wrapperMeasureRef}></div>\n              {!!renderAriaLive && !!firstIndex && (\n                <LiveRegion>\n                  <span>\n                    {renderAriaLive({ totalItemsCount, firstIndex, lastIndex: firstIndex + items.length - 1 })}\n                  </span>\n                </LiveRegion>\n              )}\n              <table\n                ref={tableRef}\n                className={clsx(\n                  styles.table,\n                  resizableColumns && styles['table-layout-fixed'],\n                  contentDensity === 'compact' && getVisualContextClassname('compact-table')\n                )}\n                {...getTableRoleProps({\n                  tableRole,\n                  totalItemsCount,\n                  totalColumnsCount: totalColumnsCount,\n                  ariaLabel: ariaLabels?.tableLabel,\n                  ariaLabelledBy: isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined,\n                })}\n              >\n                <Thead\n                  ref={theadRef}\n                  hidden={stickyHeader}\n                  onFocusedComponentChange={focusId => stickyHeaderRef.current?.setFocus(focusId)}\n                  {...theadProps}\n                />\n                <tbody>\n                  {loading || items.length === 0 ? (\n                    <tr>\n                      <NoDataCell\n                        variant={variant}\n                        containerWidth={containerWidth ?? 0}\n                        totalColumnsCount={totalColumnsCount}\n                        hasFooter={hasFooter}\n                        loading={loading}\n                        loadingText={loadingText}\n                        empty={empty}\n                        tableRef={tableRefObject}\n                      />\n                    </tr>\n                  ) : (\n                    items.map((item, rowIndex) => {\n                      const firstVisible = rowIndex === 0;\n                      const lastVisible = rowIndex === items.length - 1;\n                      const isEven = rowIndex % 2 === 0;\n                      const isSelected = !!selectionType && isItemSelected(item);\n                      const isPrevSelected = !!selectionType && !firstVisible && isItemSelected(items[rowIndex - 1]);\n                      const isNextSelected = !!selectionType && !lastVisible && isItemSelected(items[rowIndex + 1]);\n                      return (\n                        <tr\n                          key={getItemKey(trackBy, item, rowIndex)}\n                          className={clsx(styles.row, isSelected && styles['row-selected'])}\n                          onFocus={({ currentTarget }) => {\n                            // When an element inside table row receives focus we want to adjust the scroll.\n                            // However, that behaviour is unwanted when the focus is received as result of a click\n                            // as it causes the click to never reach the target element.\n                            if (!currentTarget.contains(getMouseDownTarget())) {\n                              stickyHeaderRef.current?.scrollToRow(currentTarget);\n                            }\n                          }}\n                          {...focusMarkers.item}\n                          onClick={onRowClickHandler && onRowClickHandler.bind(null, rowIndex, item)}\n                          onContextMenu={onRowContextMenuHandler && onRowContextMenuHandler.bind(null, rowIndex, item)}\n                          {...getTableRowRoleProps({ tableRole, firstIndex, rowIndex })}\n                        >\n                          {selectionType !== undefined && (\n                            <TableTdElement\n                              className={clsx(styles['selection-control'])}\n                              isVisualRefresh={isVisualRefresh}\n                              isFirstRow={firstVisible}\n                              isLastRow={lastVisible}\n                              isSelected={isSelected}\n                              isNextSelected={isNextSelected}\n                              isPrevSelected={isPrevSelected}\n                              wrapLines={false}\n                              isEvenRow={isEven}\n                              stripedRows={stripedRows}\n                              hasSelection={hasSelection}\n                              hasFooter={hasFooter}\n                              stickyState={stickyState}\n                              columnId={selectionColumnId}\n                              colIndex={0}\n                              tableRole={tableRole}\n                            >\n                              <SelectionControl\n                                onFocusDown={moveFocusDown}\n                                onFocusUp={moveFocusUp}\n                                onShiftToggle={updateShiftToggle}\n                                {...getItemSelectionProps(item)}\n                              />\n                            </TableTdElement>\n                          )}\n                          {visibleColumnDefinitions.map((column, colIndex) => {\n                            const isEditing = cellEditing.checkEditing({ rowIndex, colIndex });\n                            const successfulEdit = cellEditing.checkLastSuccessfulEdit({ rowIndex, colIndex });\n                            const isEditable = !!column.editConfig && !cellEditing.isLoading;\n                            return (\n                              <TableBodyCell\n                                key={getColumnKey(column, colIndex)}\n                                style={\n                                  resizableColumns\n                                    ? {}\n                                    : {\n                                        width: column.width,\n                                        minWidth: column.minWidth,\n                                        maxWidth: column.maxWidth,\n                                      }\n                                }\n                                ariaLabels={ariaLabels}\n                                column={column}\n                                item={item}\n                                wrapLines={wrapLines}\n                                isEditable={isEditable}\n                                isEditing={isEditing}\n                                isRowHeader={column.isRowHeader}\n                                isFirstRow={firstVisible}\n                                isLastRow={lastVisible}\n                                isSelected={isSelected}\n                                isNextSelected={isNextSelected}\n                                isPrevSelected={isPrevSelected}\n                                successfulEdit={successfulEdit}\n                                onEditStart={() => cellEditing.startEdit({ rowIndex, colIndex })}\n                                onEditEnd={editCancelled =>\n                                  cellEditing.completeEdit({ rowIndex, colIndex }, editCancelled)\n                                }\n                                submitEdit={cellEditing.submitEdit}\n                                hasFooter={hasFooter}\n                                stripedRows={stripedRows}\n                                isEvenRow={isEven}\n                                columnId={column.id ?? colIndex}\n                                colIndex={selectionType !== undefined ? colIndex + 1 : colIndex}\n                                stickyState={stickyState}\n                                isVisualRefresh={isVisualRefresh}\n                                tableRole={tableRole}\n                              />\n                            );\n                          })}\n                        </tr>\n                      );\n                    })\n                  )}\n                </tbody>\n              </table>\n              {resizableColumns && <ResizeTracker />}\n            </div>\n\n            <StickyScrollbar\n              ref={scrollbarRef}\n              wrapperRef={wrapperRefObject}\n              tableRef={tableRefObject}\n              onScroll={handleScroll}\n              hasStickyColumns={hasStickyColumns}\n            />\n          </InternalContainer>\n        </ColumnWidthsProvider>\n      </LinkDefaultVariantContext.Provider>\n    );\n  }\n) as TableForwardRefType;\n\nexport default InternalTable;\n"]},"metadata":{},"sourceType":"module"}