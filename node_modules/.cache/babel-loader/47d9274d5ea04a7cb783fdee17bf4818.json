{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createContext } from 'react';\nimport { getFunnelNameSelector } from '../selectors';\n/* istanbul ignore next */\nexport const FunnelContext = createContext({\n  funnelInteractionId: undefined,\n  funnelNameSelector: getFunnelNameSelector(),\n  setFunnelInteractionId: () => {},\n  funnelType: 'single-page',\n  optionalStepNumbers: [],\n  totalFunnelSteps: 0,\n  funnelSubmit: () => {},\n  funnelCancel: () => {},\n  submissionAttempt: 0,\n  funnelNextOrSubmitAttempt: () => {},\n  funnelState: {\n    current: 'default'\n  },\n  errorCount: {\n    current: 0\n  },\n  loadingButtonCount: {\n    current: 0\n  },\n  latestFocusCleanupFunction: {\n    current: undefined\n  },\n  isInFunnel: false,\n  wizardCount: {\n    current: 0\n  }\n});\nexport const FunnelStepContext = createContext({\n  stepNameSelector: '',\n  stepNumber: 0,\n  subStepCount: {\n    current: 0\n  },\n  isInStep: false,\n  funnelInteractionId: undefined,\n  onStepChange: () => {}\n});\nexport const FunnelSubStepContext = createContext({\n  subStepId: '',\n  subStepSelector: '',\n  subStepNameSelector: '',\n  subStepRef: {\n    current: null\n  },\n  isNestedSubStep: false,\n  mousePressed: {\n    current: false\n  },\n  isFocusedSubStep: {\n    current: false\n  },\n  focusCleanupFunction: {\n    current: undefined\n  }\n});\nexport const FunnelNameSelectorContext = createContext(undefined);","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAsCA,aAAa,QAAQ,OAAO;AAElE,SAASC,qBAAqB,QAAQ,cAAc;AAwDpD;AACA,OAAO,MAAMC,aAAa,GAAGF,aAAa,CAAqB;EAC7DG,mBAAmB,EAAEC,SAAS;EAC9BC,kBAAkB,EAAEJ,qBAAqB,EAAE;EAC3CK,sBAAsB,EAAE,MAAK,CAAE,CAAC;EAChCC,UAAU,EAAE,aAAa;EACzBC,mBAAmB,EAAE,EAAE;EACvBC,gBAAgB,EAAE,CAAC;EACnBC,YAAY,EAAE,MAAK,CAAE,CAAC;EACtBC,YAAY,EAAE,MAAK,CAAE,CAAC;EACtBC,iBAAiB,EAAE,CAAC;EACpBC,yBAAyB,EAAE,MAAK,CAAE,CAAC;EACnCC,WAAW,EAAE;IAAEC,OAAO,EAAE;EAAS,CAAE;EACnCC,UAAU,EAAE;IAAED,OAAO,EAAE;EAAC,CAAE;EAC1BE,kBAAkB,EAAE;IAAEF,OAAO,EAAE;EAAC,CAAE;EAClCG,0BAA0B,EAAE;IAAEH,OAAO,EAAEX;EAAS,CAAE;EAClDe,UAAU,EAAE,KAAK;EACjBC,WAAW,EAAE;IAAEL,OAAO,EAAE;EAAC;CAC1B,CAAC;AAEF,OAAO,MAAMM,iBAAiB,GAAGrB,aAAa,CAAyB;EACrEsB,gBAAgB,EAAE,EAAE;EACpBC,UAAU,EAAE,CAAC;EACbC,YAAY,EAAE;IAAET,OAAO,EAAE;EAAC,CAAE;EAC5BU,QAAQ,EAAE,KAAK;EACftB,mBAAmB,EAAEC,SAAS;EAC9BsB,YAAY,EAAE,MAAK,CAAE;CACtB,CAAC;AAEF,OAAO,MAAMC,oBAAoB,GAAG3B,aAAa,CAA4B;EAC3E4B,SAAS,EAAE,EAAE;EACbC,eAAe,EAAE,EAAE;EACnBC,mBAAmB,EAAE,EAAE;EACvBC,UAAU,EAAE;IAAEhB,OAAO,EAAE;EAAI,CAAE;EAC7BiB,eAAe,EAAE,KAAK;EACtBC,YAAY,EAAE;IAAElB,OAAO,EAAE;EAAK,CAAE;EAChCmB,gBAAgB,EAAE;IAAEnB,OAAO,EAAE;EAAK,CAAE;EACpCoB,oBAAoB,EAAE;IAAEpB,OAAO,EAAEX;EAAS;CAC3C,CAAC;AAEF,OAAO,MAAMgC,yBAAyB,GAAGpC,aAAa,CAAqBI,SAAS,CAAC","names":["createContext","getFunnelNameSelector","FunnelContext","funnelInteractionId","undefined","funnelNameSelector","setFunnelInteractionId","funnelType","optionalStepNumbers","totalFunnelSteps","funnelSubmit","funnelCancel","submissionAttempt","funnelNextOrSubmitAttempt","funnelState","current","errorCount","loadingButtonCount","latestFocusCleanupFunction","isInFunnel","wizardCount","FunnelStepContext","stepNameSelector","stepNumber","subStepCount","isInStep","onStepChange","FunnelSubStepContext","subStepId","subStepSelector","subStepNameSelector","subStepRef","isNestedSubStep","mousePressed","isFocusedSubStep","focusCleanupFunction","FunnelNameSelectorContext"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/internal/analytics/context/lib/default/internal/analytics/context/analytics-context.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { MutableRefObject, RefObject, createContext } from 'react';\nimport { FunnelType } from '../interfaces';\nimport { getFunnelNameSelector } from '../selectors';\n\nexport type FunnelState = 'default' | 'validating' | 'complete' | 'cancelled';\n\nexport interface FunnelContextValue {\n  funnelInteractionId: string | undefined;\n  funnelType: FunnelType;\n  funnelNameSelector: string;\n  optionalStepNumbers: number[];\n  totalFunnelSteps: number;\n  funnelSubmit: () => void;\n  funnelCancel: () => void;\n  setFunnelInteractionId: (funnelInteractionId: string) => void;\n  submissionAttempt: number;\n  funnelNextOrSubmitAttempt: () => void;\n  funnelState: RefObject<FunnelState>;\n  errorCount: MutableRefObject<number>;\n  loadingButtonCount: MutableRefObject<number>;\n  latestFocusCleanupFunction: MutableRefObject<undefined | (() => void)>;\n  isInFunnel: boolean;\n  wizardCount: MutableRefObject<number>;\n}\n\nexport interface FunnelStepContextValue {\n  stepNameSelector: string;\n  stepNumber: number;\n  funnelStepProps?: Record<string, string | number | boolean | undefined>;\n  subStepCount: MutableRefObject<number>;\n  isInStep: boolean;\n  funnelInteractionId: string | undefined;\n  /** This function is called when the list of substeps in this step changes.  */\n  onStepChange: () => void;\n}\n\nexport interface FunnelSubStepContextValue {\n  subStepId: string;\n  subStepSelector: string;\n  subStepNameSelector: string;\n  subStepRef: MutableRefObject<HTMLDivElement | null>;\n  mousePressed: MutableRefObject<boolean>;\n  /**\n   * `isFocusedSubStep` is almost the same as checking if document.activeElement\n   * is a child of the curren substep. However, `isFocusedSubStep` stays true\n   * while the mouse button is pressed down, even though some browsers move the focus\n   * to the body element during that time.\n   */\n  isFocusedSubStep: MutableRefObject<boolean>;\n\n  /**\n   * The focus cleanup function should be run when the user leaves the substep.\n   */\n  focusCleanupFunction: MutableRefObject<undefined | (() => void)>;\n  isNestedSubStep: boolean;\n  funnelSubStepProps?: Record<string, string | number | boolean | undefined>;\n}\n\n/* istanbul ignore next */\nexport const FunnelContext = createContext<FunnelContextValue>({\n  funnelInteractionId: undefined,\n  funnelNameSelector: getFunnelNameSelector(),\n  setFunnelInteractionId: () => {},\n  funnelType: 'single-page',\n  optionalStepNumbers: [],\n  totalFunnelSteps: 0,\n  funnelSubmit: () => {},\n  funnelCancel: () => {},\n  submissionAttempt: 0,\n  funnelNextOrSubmitAttempt: () => {},\n  funnelState: { current: 'default' },\n  errorCount: { current: 0 },\n  loadingButtonCount: { current: 0 },\n  latestFocusCleanupFunction: { current: undefined },\n  isInFunnel: false,\n  wizardCount: { current: 0 },\n});\n\nexport const FunnelStepContext = createContext<FunnelStepContextValue>({\n  stepNameSelector: '',\n  stepNumber: 0,\n  subStepCount: { current: 0 },\n  isInStep: false,\n  funnelInteractionId: undefined,\n  onStepChange: () => {},\n});\n\nexport const FunnelSubStepContext = createContext<FunnelSubStepContextValue>({\n  subStepId: '',\n  subStepSelector: '',\n  subStepNameSelector: '',\n  subStepRef: { current: null },\n  isNestedSubStep: false,\n  mousePressed: { current: false },\n  isFocusedSubStep: { current: false },\n  focusCleanupFunction: { current: undefined },\n});\n\nexport const FunnelNameSelectorContext = createContext<string | undefined>(undefined);\n"]},"metadata":{},"sourceType":"module"}