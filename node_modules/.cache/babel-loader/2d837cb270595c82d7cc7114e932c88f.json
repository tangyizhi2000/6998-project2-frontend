{"ast":null,"code":"import _toConsumableArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { isGroup } from '../internal/components/option/utils/filter-options';\nimport DropdownFooter from '../internal/components/dropdown-footer/index.js';\nimport { prepareOptions } from '../internal/components/option/utils/prepare-options';\nimport Dropdown from '../internal/components/dropdown';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport { useSelect } from '../select/utils/use-select';\nimport { useNativeSearch } from '../select/utils/use-native-search';\nimport { useLoadItems } from '../select/utils/use-load-items';\nimport { useAnnouncement } from '../select/utils/use-announcement';\nimport { findOptionIndex } from '../select/utils/connect-options';\nimport PlainList from '../select/parts/plain-list';\nimport VirtualList from '../select/parts/virtual-list';\nimport { checkOptionValueField } from '../select/utils/check-option-value-field.js';\nimport Filter from '../select/parts/filter';\nimport Trigger from '../select/parts/trigger';\nimport InternalTokenGroup from '../token-group/internal';\nimport styles from './styles.css.js';\nimport ScreenreaderOnly from '../internal/components/screenreader-only';\nimport { joinStrings } from '../internal/utils/strings';\nimport { useInternalI18n } from '../i18n/context';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nvar InternalMultiselect = React.forwardRef(function (_a, externalRef) {\n  var _b;\n  var _a$options = _a.options,\n    options = _a$options === void 0 ? [] : _a$options,\n    _a$filteringType = _a.filteringType,\n    filteringType = _a$filteringType === void 0 ? 'none' : _a$filteringType,\n    filteringPlaceholder = _a.filteringPlaceholder,\n    filteringAriaLabel = _a.filteringAriaLabel,\n    filteringClearAriaLabel = _a.filteringClearAriaLabel,\n    filteringResultsText = _a.filteringResultsText,\n    ariaRequired = _a.ariaRequired,\n    placeholder = _a.placeholder,\n    disabled = _a.disabled,\n    ariaLabel = _a.ariaLabel,\n    _a$statusType = _a.statusType,\n    statusType = _a$statusType === void 0 ? 'finished' : _a$statusType,\n    empty = _a.empty,\n    loadingText = _a.loadingText,\n    finishedText = _a.finishedText,\n    errorText = _a.errorText,\n    noMatch = _a.noMatch,\n    renderHighlightedAriaLive = _a.renderHighlightedAriaLive,\n    _a$selectedOptions = _a.selectedOptions,\n    selectedOptions = _a$selectedOptions === void 0 ? [] : _a$selectedOptions,\n    deselectAriaLabel = _a.deselectAriaLabel,\n    _a$keepOpen = _a.keepOpen,\n    keepOpen = _a$keepOpen === void 0 ? true : _a$keepOpen,\n    tokenLimit = _a.tokenLimit,\n    i18nStrings = _a.i18nStrings,\n    onBlur = _a.onBlur,\n    onFocus = _a.onFocus,\n    onLoadItems = _a.onLoadItems,\n    onChange = _a.onChange,\n    virtualScroll = _a.virtualScroll,\n    _a$inlineTokens = _a.inlineTokens,\n    inlineTokens = _a$inlineTokens === void 0 ? false : _a$inlineTokens,\n    _a$hideTokens = _a.hideTokens,\n    hideTokens = _a$hideTokens === void 0 ? false : _a$hideTokens,\n    expandToViewport = _a.expandToViewport,\n    _a$__internalRootRef = _a.__internalRootRef,\n    __internalRootRef = _a$__internalRootRef === void 0 ? null : _a$__internalRootRef,\n    autoFocus = _a.autoFocus,\n    restProps = __rest(_a, [\"options\", \"filteringType\", \"filteringPlaceholder\", \"filteringAriaLabel\", \"filteringClearAriaLabel\", \"filteringResultsText\", \"ariaRequired\", \"placeholder\", \"disabled\", \"ariaLabel\", \"statusType\", \"empty\", \"loadingText\", \"finishedText\", \"errorText\", \"noMatch\", \"renderHighlightedAriaLive\", \"selectedOptions\", \"deselectAriaLabel\", \"keepOpen\", \"tokenLimit\", \"i18nStrings\", \"onBlur\", \"onFocus\", \"onLoadItems\", \"onChange\", \"virtualScroll\", \"inlineTokens\", \"hideTokens\", \"expandToViewport\", \"__internalRootRef\", \"autoFocus\"]);\n  checkOptionValueField('Multiselect', 'options', options);\n  var baseProps = getBaseProps(restProps);\n  var formFieldContext = useFormFieldContext(restProps);\n  var i18n = useInternalI18n('multiselect');\n  var i18nCommon = useInternalI18n('select');\n  var recoveryText = i18nCommon('recoveryText', restProps.recoveryText);\n  var errorIconAriaLabel = i18nCommon('errorIconAriaLabel', restProps.errorIconAriaLabel);\n  var selectedAriaLabel = i18nCommon('selectedAriaLabel', restProps.selectedAriaLabel);\n  if (restProps.recoveryText && !onLoadItems) {\n    warnOnce('Multiselect', '`onLoadItems` must be provided for `recoveryText` to be displayed.');\n  }\n  var _useLoadItems = useLoadItems({\n      onLoadItems: onLoadItems,\n      options: options,\n      statusType: statusType\n    }),\n    handleLoadMore = _useLoadItems.handleLoadMore,\n    handleRecoveryClick = _useLoadItems.handleRecoveryClick,\n    fireLoadItems = _useLoadItems.fireLoadItems;\n  var useInteractiveGroups = true;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    filteringValue = _useState2[0],\n    setFilteringValue = _useState2[1];\n  var _prepareOptions = prepareOptions(options, filteringType, filteringValue),\n    filteredOptions = _prepareOptions.filteredOptions,\n    parentMap = _prepareOptions.parentMap,\n    totalCount = _prepareOptions.totalCount,\n    matchesCount = _prepareOptions.matchesCount;\n  var updateSelectedOption = useCallback(function (option) {\n    var filtered = filteredOptions.filter(function (item) {\n      return item.type !== 'parent';\n    }).map(function (item) {\n      return item.option;\n    });\n    // switch between selection and deselection behavior, ignores disabled options to prevent\n    // getting stuck on one behavior when an option is disabled and its state cannot be changed\n    var isAllChildrenSelected = function isAllChildrenSelected(optionsArray) {\n      return optionsArray.every(function (item) {\n        return findOptionIndex(selectedOptions, item) > -1 || item.disabled;\n      });\n    };\n    var intersection = function intersection(visibleOptions, options) {\n      return visibleOptions.filter(function (item) {\n        return findOptionIndex(options, item) > -1 && !item.disabled;\n      });\n    };\n    var union = function union(visibleOptions, options) {\n      return visibleOptions.filter(function (item) {\n        return findOptionIndex(options, item) === -1;\n      }).concat(options);\n    };\n    var select = function select(options, selectedOptions) {\n      return union(selectedOptions, options);\n    };\n    var unselect = function unselect(options, selectedOptions) {\n      return selectedOptions.filter(function (option) {\n        return findOptionIndex(options, option) === -1;\n      });\n    };\n    var newSelectedOptions = _toConsumableArray(selectedOptions);\n    if (isGroup(option)) {\n      var visibleOptions = intersection(_toConsumableArray(option.options), filtered);\n      newSelectedOptions = isAllChildrenSelected(visibleOptions) ? unselect(visibleOptions, newSelectedOptions) : select(visibleOptions, newSelectedOptions);\n    } else {\n      newSelectedOptions = isAllChildrenSelected([option]) ? unselect([option], newSelectedOptions) : select([option], newSelectedOptions);\n    }\n    fireNonCancelableEvent(onChange, {\n      selectedOptions: newSelectedOptions\n    });\n  }, [onChange, selectedOptions, filteredOptions]);\n  var rootRef = useRef(null);\n  var selfControlId = useUniqueId('trigger');\n  var controlId = (_b = formFieldContext.controlId) !== null && _b !== void 0 ? _b : selfControlId;\n  var multiSelectAriaLabelId = useUniqueId('multiselect-arialabel-');\n  var footerId = useUniqueId('footer');\n  var scrollToIndex = useRef(null);\n  var _useSelect = useSelect({\n      selectedOptions: selectedOptions,\n      updateSelectedOption: updateSelectedOption,\n      options: filteredOptions,\n      filteringType: filteringType,\n      onFocus: onFocus,\n      onBlur: onBlur,\n      externalRef: externalRef,\n      keepOpen: keepOpen,\n      fireLoadItems: fireLoadItems,\n      setFilteringValue: setFilteringValue,\n      useInteractiveGroups: useInteractiveGroups,\n      statusType: statusType\n    }),\n    isOpen = _useSelect.isOpen,\n    highlightType = _useSelect.highlightType,\n    highlightedOption = _useSelect.highlightedOption,\n    highlightedIndex = _useSelect.highlightedIndex,\n    getTriggerProps = _useSelect.getTriggerProps,\n    getDropdownProps = _useSelect.getDropdownProps,\n    getFilterProps = _useSelect.getFilterProps,\n    getMenuProps = _useSelect.getMenuProps,\n    getOptionProps = _useSelect.getOptionProps,\n    highlightOption = _useSelect.highlightOption,\n    announceSelected = _useSelect.announceSelected;\n  var handleNativeSearch = useNativeSearch({\n    isEnabled: filteringType === 'none' && isOpen,\n    options: filteredOptions,\n    highlightOption: highlightOption,\n    highlightedOption: highlightedOption === null || highlightedOption === void 0 ? void 0 : highlightedOption.option,\n    useInteractiveGroups: useInteractiveGroups\n  });\n  var isEmpty = !options || options.length === 0;\n  var isNoMatch = filteredOptions && filteredOptions.length === 0;\n  var isFiltered = filteringType !== 'none' && filteringValue.length > 0 && filteredOptions && filteredOptions.length > 0;\n  var filteredText = isFiltered ? filteringResultsText === null || filteringResultsText === void 0 ? void 0 : filteringResultsText(matchesCount, totalCount) : undefined;\n  var dropdownStatus = useDropdownStatus({\n    statusType: statusType,\n    empty: empty,\n    loadingText: loadingText,\n    finishedText: finishedText,\n    errorText: errorText,\n    recoveryText: recoveryText,\n    isEmpty: isEmpty,\n    isNoMatch: isNoMatch,\n    noMatch: noMatch,\n    isFiltered: isFiltered,\n    filteringResultsText: filteredText,\n    onRecoveryClick: handleRecoveryClick,\n    errorIconAriaLabel: errorIconAriaLabel,\n    hasRecoveryCallback: !!onLoadItems\n  });\n  var filter = React.createElement(Filter, Object.assign({\n    clearAriaLabel: filteringClearAriaLabel,\n    filteringType: filteringType,\n    placeholder: filteringPlaceholder,\n    ariaLabel: filteringAriaLabel,\n    ariaRequired: ariaRequired,\n    value: filteringValue\n  }, getFilterProps()));\n  var trigger = React.createElement(Trigger, Object.assign({\n    placeholder: placeholder,\n    disabled: disabled,\n    triggerProps: getTriggerProps(disabled, autoFocus),\n    selectedOption: null,\n    selectedOptions: selectedOptions,\n    triggerVariant: inlineTokens ? 'tokens' : 'placeholder',\n    isOpen: isOpen\n  }, formFieldContext, {\n    controlId: controlId,\n    ariaLabelledby: joinStrings(formFieldContext.ariaLabelledby, multiSelectAriaLabelId)\n  }));\n  var menuProps = Object.assign(Object.assign({}, getMenuProps()), {\n    onLoadMore: handleLoadMore,\n    ariaLabelledby: joinStrings(multiSelectAriaLabelId, controlId),\n    ariaDescribedby: dropdownStatus.content ? footerId : undefined\n  });\n  var announcement = useAnnouncement({\n    announceSelected: announceSelected,\n    highlightedOption: highlightedOption,\n    getParent: function getParent(option) {\n      var _a;\n      return (_a = parentMap.get(option)) === null || _a === void 0 ? void 0 : _a.option;\n    },\n    selectedAriaLabel: selectedAriaLabel,\n    renderHighlightedAriaLive: renderHighlightedAriaLive\n  });\n  var tokens = selectedOptions.map(function (option) {\n    return {\n      label: option.label,\n      disabled: disabled || option.disabled,\n      labelTag: option.labelTag,\n      description: option.description,\n      iconAlt: option.iconAlt,\n      iconName: option.iconName,\n      iconUrl: option.iconUrl,\n      iconSvg: option.iconSvg,\n      tags: option.tags,\n      dismissLabel: i18n('deselectAriaLabel', deselectAriaLabel === null || deselectAriaLabel === void 0 ? void 0 : deselectAriaLabel(option), function (format) {\n        var _a;\n        return format({\n          option__label: (_a = option.label) !== null && _a !== void 0 ? _a : ''\n        });\n      })\n    };\n  });\n  useEffect(function () {\n    var _a;\n    (_a = scrollToIndex.current) === null || _a === void 0 ? void 0 : _a.call(scrollToIndex, highlightedIndex);\n  }, [highlightedIndex]);\n  var ListComponent = virtualScroll ? VirtualList : PlainList;\n  var handleMouseDown = function handleMouseDown(event) {\n    var target = event.target;\n    if (target !== document.activeElement) {\n      // prevent currently focused element from losing it\n      event.preventDefault();\n    }\n  };\n  var showTokens = !hideTokens && !inlineTokens && tokens.length > 0;\n  var handleTokenDismiss = function handleTokenDismiss(_ref) {\n    var detail = _ref.detail;\n    var optionToDeselect = selectedOptions[detail.itemIndex];\n    updateSelectedOption(optionToDeselect);\n    var targetRef = getTriggerProps().ref;\n    if (targetRef.current) {\n      targetRef.current.focus();\n    }\n  };\n  var tokenGroupI18nStrings = {\n    limitShowFewer: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.tokenLimitShowFewer,\n    limitShowMore: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.tokenLimitShowMore\n  };\n  var mergedRef = useMergeRefs(rootRef, __internalRootRef);\n  var dropdownProps = getDropdownProps();\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    ref: mergedRef,\n    className: clsx(styles.root, baseProps.className),\n    onKeyPress: handleNativeSearch\n  }), React.createElement(Dropdown, Object.assign({}, dropdownProps, {\n    ariaLabelledby: dropdownProps.dropdownContentRole ? joinStrings(multiSelectAriaLabelId, controlId) : undefined,\n    ariaDescribedby: dropdownProps.dropdownContentRole ? dropdownStatus.content ? footerId : undefined : undefined,\n    open: isOpen,\n    trigger: trigger,\n    header: filter,\n    onMouseDown: handleMouseDown,\n    footer: dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n      content: isOpen ? dropdownStatus.content : null,\n      id: footerId\n    }) : null,\n    expandToViewport: expandToViewport,\n    stretchBeyondTriggerWidth: true\n  }), React.createElement(ListComponent, {\n    listBottom: !dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n      content: isOpen ? dropdownStatus.content : null,\n      id: footerId\n    }) : null,\n    menuProps: menuProps,\n    getOptionProps: getOptionProps,\n    filteredOptions: filteredOptions,\n    filteringValue: filteringValue,\n    ref: scrollToIndex,\n    hasDropdownStatus: dropdownStatus.content !== null,\n    checkboxes: true,\n    useInteractiveGroups: useInteractiveGroups,\n    screenReaderContent: announcement,\n    highlightType: highlightType\n  })), showTokens && React.createElement(InternalTokenGroup, {\n    alignment: \"horizontal\",\n    limit: tokenLimit,\n    items: tokens,\n    onDismiss: handleTokenDismiss,\n    i18nStrings: tokenGroupI18nStrings\n  }), React.createElement(ScreenreaderOnly, {\n    id: multiSelectAriaLabelId\n  }, ariaLabel));\n});\nexport default InternalMultiselect;","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useRef","useState","clsx","useMergeRefs","useFormFieldContext","getBaseProps","fireNonCancelableEvent","useUniqueId","isGroup","DropdownFooter","prepareOptions","Dropdown","useDropdownStatus","useSelect","useNativeSearch","useLoadItems","useAnnouncement","findOptionIndex","PlainList","VirtualList","checkOptionValueField","Filter","Trigger","InternalTokenGroup","styles","ScreenreaderOnly","joinStrings","useInternalI18n","warnOnce","InternalMultiselect","forwardRef","_a","externalRef","options","filteringType","filteringPlaceholder","filteringAriaLabel","filteringClearAriaLabel","filteringResultsText","ariaRequired","placeholder","disabled","ariaLabel","statusType","empty","loadingText","finishedText","errorText","noMatch","renderHighlightedAriaLive","selectedOptions","deselectAriaLabel","keepOpen","tokenLimit","i18nStrings","onBlur","onFocus","onLoadItems","onChange","virtualScroll","inlineTokens","hideTokens","expandToViewport","__internalRootRef","autoFocus","restProps","baseProps","formFieldContext","i18n","i18nCommon","recoveryText","errorIconAriaLabel","selectedAriaLabel","handleLoadMore","handleRecoveryClick","fireLoadItems","useInteractiveGroups","filteringValue","setFilteringValue","filteredOptions","parentMap","totalCount","matchesCount","updateSelectedOption","option","filtered","filter","item","type","map","isAllChildrenSelected","optionsArray","every","intersection","visibleOptions","union","concat","select","unselect","newSelectedOptions","rootRef","selfControlId","controlId","multiSelectAriaLabelId","footerId","scrollToIndex","isOpen","highlightType","highlightedOption","highlightedIndex","getTriggerProps","getDropdownProps","getFilterProps","getMenuProps","getOptionProps","highlightOption","announceSelected","handleNativeSearch","isEnabled","isEmpty","length","isNoMatch","isFiltered","filteredText","undefined","dropdownStatus","onRecoveryClick","hasRecoveryCallback","clearAriaLabel","value","trigger","triggerProps","selectedOption","triggerVariant","ariaLabelledby","menuProps","onLoadMore","ariaDescribedby","content","announcement","getParent","get","tokens","label","labelTag","description","iconAlt","iconName","iconUrl","iconSvg","tags","dismissLabel","option__label","current","ListComponent","handleMouseDown","event","target","document","activeElement","preventDefault","showTokens","handleTokenDismiss","detail","optionToDeselect","itemIndex","targetRef","ref","focus","tokenGroupI18nStrings","limitShowFewer","tokenLimitShowFewer","limitShowMore","tokenLimitShowMore","mergedRef","dropdownProps","className","root","onKeyPress","dropdownContentRole","open","header","onMouseDown","footer","isSticky","id","stretchBeyondTriggerWidth","listBottom","hasDropdownStatus","checkboxes","screenReaderContent","alignment","limit","items","onDismiss"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/multiselect/lib/default/multiselect/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\n\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component/index.js';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { isGroup } from '../internal/components/option/utils/filter-options';\n\nimport DropdownFooter from '../internal/components/dropdown-footer/index.js';\nimport { prepareOptions } from '../internal/components/option/utils/prepare-options';\nimport { OptionDefinition, OptionGroup } from '../internal/components/option/interfaces';\nimport Dropdown from '../internal/components/dropdown';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\n\nimport { useSelect, MenuProps } from '../select/utils/use-select';\nimport { useNativeSearch } from '../select/utils/use-native-search';\nimport { useLoadItems } from '../select/utils/use-load-items';\nimport { useAnnouncement } from '../select/utils/use-announcement';\nimport { findOptionIndex } from '../select/utils/connect-options';\nimport PlainList, { SelectListProps } from '../select/parts/plain-list';\nimport VirtualList from '../select/parts/virtual-list';\nimport { checkOptionValueField } from '../select/utils/check-option-value-field.js';\nimport Filter from '../select/parts/filter';\nimport Trigger from '../select/parts/trigger';\n\nimport InternalTokenGroup from '../token-group/internal';\nimport { TokenGroupProps } from '../token-group/interfaces';\n\nimport { MultiselectProps } from './interfaces';\nimport styles from './styles.css.js';\nimport ScreenreaderOnly from '../internal/components/screenreader-only';\nimport { joinStrings } from '../internal/utils/strings';\nimport { useInternalI18n } from '../i18n/context';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\ntype InternalMultiselectProps = MultiselectProps & InternalBaseComponentProps & { inlineTokens?: boolean };\n\nconst InternalMultiselect = React.forwardRef(\n  (\n    {\n      options = [],\n      filteringType = 'none',\n      filteringPlaceholder,\n      filteringAriaLabel,\n      filteringClearAriaLabel,\n      filteringResultsText,\n      ariaRequired,\n      placeholder,\n      disabled,\n      ariaLabel,\n      statusType = 'finished',\n      empty,\n      loadingText,\n      finishedText,\n      errorText,\n      noMatch,\n      renderHighlightedAriaLive,\n      selectedOptions = [],\n      deselectAriaLabel,\n      keepOpen = true,\n      tokenLimit,\n      i18nStrings,\n      onBlur,\n      onFocus,\n      onLoadItems,\n      onChange,\n      virtualScroll,\n      inlineTokens = false,\n      hideTokens = false,\n      expandToViewport,\n      __internalRootRef = null,\n      autoFocus,\n      ...restProps\n    }: InternalMultiselectProps,\n    externalRef: React.Ref<MultiselectProps.Ref>\n  ) => {\n    checkOptionValueField('Multiselect', 'options', options);\n\n    const baseProps = getBaseProps(restProps);\n    const formFieldContext = useFormFieldContext(restProps);\n    const i18n = useInternalI18n('multiselect');\n\n    const i18nCommon = useInternalI18n('select');\n    const recoveryText = i18nCommon('recoveryText', restProps.recoveryText);\n    const errorIconAriaLabel = i18nCommon('errorIconAriaLabel', restProps.errorIconAriaLabel);\n    const selectedAriaLabel = i18nCommon('selectedAriaLabel', restProps.selectedAriaLabel);\n\n    if (restProps.recoveryText && !onLoadItems) {\n      warnOnce('Multiselect', '`onLoadItems` must be provided for `recoveryText` to be displayed.');\n    }\n\n    const { handleLoadMore, handleRecoveryClick, fireLoadItems } = useLoadItems({\n      onLoadItems,\n      options,\n      statusType,\n    });\n    const useInteractiveGroups = true;\n    const [filteringValue, setFilteringValue] = useState('');\n    const { filteredOptions, parentMap, totalCount, matchesCount } = prepareOptions(\n      options,\n      filteringType,\n      filteringValue\n    );\n\n    const updateSelectedOption = useCallback(\n      (option: OptionDefinition | OptionGroup) => {\n        const filtered = filteredOptions.filter(item => item.type !== 'parent').map(item => item.option);\n\n        // switch between selection and deselection behavior, ignores disabled options to prevent\n        // getting stuck on one behavior when an option is disabled and its state cannot be changed\n        const isAllChildrenSelected = (optionsArray: OptionDefinition[]) =>\n          optionsArray.every(item => findOptionIndex(selectedOptions, item) > -1 || item.disabled);\n        const intersection = (visibleOptions: OptionDefinition[], options: OptionDefinition[]) =>\n          visibleOptions.filter(item => findOptionIndex(options, item) > -1 && !item.disabled);\n        const union = (visibleOptions: OptionDefinition[], options: OptionDefinition[]) =>\n          visibleOptions.filter(item => findOptionIndex(options, item) === -1).concat(options);\n        const select = (options: OptionDefinition[], selectedOptions: OptionDefinition[]) => {\n          return union(selectedOptions, options);\n        };\n        const unselect = (options: OptionDefinition[], selectedOptions: OptionDefinition[]) => {\n          return selectedOptions.filter(option => findOptionIndex(options, option) === -1);\n        };\n        let newSelectedOptions = [...selectedOptions];\n\n        if (isGroup(option)) {\n          const visibleOptions = intersection([...option.options], filtered);\n          newSelectedOptions = isAllChildrenSelected(visibleOptions)\n            ? unselect(visibleOptions, newSelectedOptions)\n            : select(visibleOptions, newSelectedOptions);\n        } else {\n          newSelectedOptions = isAllChildrenSelected([option])\n            ? unselect([option], newSelectedOptions)\n            : select([option], newSelectedOptions);\n        }\n\n        fireNonCancelableEvent(onChange, {\n          selectedOptions: newSelectedOptions,\n        });\n      },\n      [onChange, selectedOptions, filteredOptions]\n    );\n\n    const rootRef = useRef<HTMLDivElement>(null);\n\n    const selfControlId = useUniqueId('trigger');\n    const controlId = formFieldContext.controlId ?? selfControlId;\n\n    const multiSelectAriaLabelId = useUniqueId('multiselect-arialabel-');\n\n    const footerId = useUniqueId('footer');\n\n    const scrollToIndex = useRef<SelectListProps.SelectListRef>(null);\n    const {\n      isOpen,\n      highlightType,\n      highlightedOption,\n      highlightedIndex,\n      getTriggerProps,\n      getDropdownProps,\n      getFilterProps,\n      getMenuProps,\n      getOptionProps,\n      highlightOption,\n      announceSelected,\n    } = useSelect({\n      selectedOptions,\n      updateSelectedOption,\n      options: filteredOptions,\n      filteringType,\n      onFocus,\n      onBlur,\n      externalRef,\n      keepOpen,\n      fireLoadItems,\n      setFilteringValue,\n      useInteractiveGroups,\n      statusType,\n    });\n\n    const handleNativeSearch = useNativeSearch({\n      isEnabled: filteringType === 'none' && isOpen,\n      options: filteredOptions,\n      highlightOption: highlightOption,\n      highlightedOption: highlightedOption?.option,\n      useInteractiveGroups,\n    });\n\n    const isEmpty = !options || options.length === 0;\n    const isNoMatch = filteredOptions && filteredOptions.length === 0;\n    const isFiltered =\n      filteringType !== 'none' && filteringValue.length > 0 && filteredOptions && filteredOptions.length > 0;\n    const filteredText = isFiltered ? filteringResultsText?.(matchesCount, totalCount) : undefined;\n    const dropdownStatus = useDropdownStatus({\n      statusType,\n      empty,\n      loadingText,\n      finishedText,\n      errorText,\n      recoveryText,\n      isEmpty,\n      isNoMatch,\n      noMatch,\n      isFiltered,\n      filteringResultsText: filteredText,\n      onRecoveryClick: handleRecoveryClick,\n      errorIconAriaLabel: errorIconAriaLabel,\n      hasRecoveryCallback: !!onLoadItems,\n    });\n\n    const filter = (\n      <Filter\n        clearAriaLabel={filteringClearAriaLabel}\n        filteringType={filteringType}\n        placeholder={filteringPlaceholder}\n        ariaLabel={filteringAriaLabel}\n        ariaRequired={ariaRequired}\n        value={filteringValue}\n        {...getFilterProps()}\n      />\n    );\n\n    const trigger = (\n      <Trigger\n        placeholder={placeholder}\n        disabled={disabled}\n        triggerProps={getTriggerProps(disabled, autoFocus)}\n        selectedOption={null}\n        selectedOptions={selectedOptions}\n        triggerVariant={inlineTokens ? 'tokens' : 'placeholder'}\n        isOpen={isOpen}\n        {...formFieldContext}\n        controlId={controlId}\n        ariaLabelledby={joinStrings(formFieldContext.ariaLabelledby, multiSelectAriaLabelId)}\n      />\n    );\n\n    const menuProps: MenuProps = {\n      ...getMenuProps(),\n      onLoadMore: handleLoadMore,\n      ariaLabelledby: joinStrings(multiSelectAriaLabelId, controlId),\n      ariaDescribedby: dropdownStatus.content ? footerId : undefined,\n    };\n\n    const announcement = useAnnouncement({\n      announceSelected,\n      highlightedOption,\n      getParent: option => parentMap.get(option)?.option as undefined | OptionGroup,\n      selectedAriaLabel,\n      renderHighlightedAriaLive,\n    });\n\n    const tokens: TokenGroupProps['items'] = selectedOptions.map(option => ({\n      label: option.label,\n      disabled: disabled || option.disabled,\n      labelTag: option.labelTag,\n      description: option.description,\n      iconAlt: option.iconAlt,\n      iconName: option.iconName,\n      iconUrl: option.iconUrl,\n      iconSvg: option.iconSvg,\n      tags: option.tags,\n      dismissLabel: i18n('deselectAriaLabel', deselectAriaLabel?.(option), format =>\n        format({ option__label: option.label ?? '' })\n      ),\n    }));\n\n    useEffect(() => {\n      scrollToIndex.current?.(highlightedIndex);\n    }, [highlightedIndex]);\n\n    const ListComponent = virtualScroll ? VirtualList : PlainList;\n\n    const handleMouseDown = (event: React.MouseEvent) => {\n      const target = event.target as HTMLElement;\n\n      if (target !== document.activeElement) {\n        // prevent currently focused element from losing it\n        event.preventDefault();\n      }\n    };\n\n    const showTokens = !hideTokens && !inlineTokens && tokens.length > 0;\n    const handleTokenDismiss: TokenGroupProps['onDismiss'] = ({ detail }) => {\n      const optionToDeselect = selectedOptions[detail.itemIndex];\n      updateSelectedOption(optionToDeselect);\n      const targetRef = getTriggerProps().ref;\n      if (targetRef.current) {\n        targetRef.current.focus();\n      }\n    };\n\n    const tokenGroupI18nStrings: TokenGroupProps.I18nStrings = {\n      limitShowFewer: i18nStrings?.tokenLimitShowFewer,\n      limitShowMore: i18nStrings?.tokenLimitShowMore,\n    };\n\n    const mergedRef = useMergeRefs(rootRef, __internalRootRef);\n\n    const dropdownProps = getDropdownProps();\n\n    return (\n      <div\n        {...baseProps}\n        ref={mergedRef}\n        className={clsx(styles.root, baseProps.className)}\n        onKeyPress={handleNativeSearch}\n      >\n        <Dropdown\n          {...dropdownProps}\n          ariaLabelledby={\n            dropdownProps.dropdownContentRole ? joinStrings(multiSelectAriaLabelId, controlId) : undefined\n          }\n          ariaDescribedby={\n            dropdownProps.dropdownContentRole ? (dropdownStatus.content ? footerId : undefined) : undefined\n          }\n          open={isOpen}\n          trigger={trigger}\n          header={filter}\n          onMouseDown={handleMouseDown}\n          footer={\n            dropdownStatus.isSticky ? (\n              <DropdownFooter content={isOpen ? dropdownStatus.content : null} id={footerId} />\n            ) : null\n          }\n          expandToViewport={expandToViewport}\n          stretchBeyondTriggerWidth={true}\n        >\n          <ListComponent\n            listBottom={\n              !dropdownStatus.isSticky ? (\n                <DropdownFooter content={isOpen ? dropdownStatus.content : null} id={footerId} />\n              ) : null\n            }\n            menuProps={menuProps}\n            getOptionProps={getOptionProps}\n            filteredOptions={filteredOptions}\n            filteringValue={filteringValue}\n            ref={scrollToIndex}\n            hasDropdownStatus={dropdownStatus.content !== null}\n            checkboxes={true}\n            useInteractiveGroups={useInteractiveGroups}\n            screenReaderContent={announcement}\n            highlightType={highlightType}\n          />\n        </Dropdown>\n        {showTokens && (\n          <InternalTokenGroup\n            alignment=\"horizontal\"\n            limit={tokenLimit}\n            items={tokens}\n            onDismiss={handleTokenDismiss}\n            i18nStrings={tokenGroupI18nStrings}\n          />\n        )}\n        <ScreenreaderOnly id={multiSelectAriaLabelId}>{ariaLabel}</ScreenreaderOnly>\n      </div>\n    );\n  }\n);\n\nexport default InternalMultiselect;\n"]},"metadata":{},"sourceType":"module"}