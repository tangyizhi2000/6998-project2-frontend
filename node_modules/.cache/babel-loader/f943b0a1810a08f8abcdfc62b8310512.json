{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback } from 'react';\nimport InternalIcon from '../../../icon/internal';\nimport { fireNonCancelableEvent } from '../../events';\nimport styles from './styles.css.js';\nimport { useInternalI18n } from '../../../i18n/context';\nexport default function TokenLimitToggle(_ref) {\n  let {\n    controlId,\n    allHidden,\n    expanded,\n    numberOfHiddenOptions,\n    onClick,\n    i18nStrings = {}\n  } = _ref;\n  const i18n = useInternalI18n('token-group');\n  const numberOfHiddenOptionLabel = allHidden ? numberOfHiddenOptions : `+${numberOfHiddenOptions}`;\n  const description = expanded ? i18n('i18nStrings.limitShowFewer', i18nStrings.limitShowFewer) : `${i18n('i18nStrings.limitShowMore', i18nStrings.limitShowMore) || ''} (${numberOfHiddenOptionLabel})`;\n  const handleClick = useCallback(() => {\n    fireNonCancelableEvent(onClick, null);\n  }, [onClick]);\n  return React.createElement(\"button\", {\n    type: \"button\",\n    className: styles.toggle,\n    onClick: handleClick,\n    \"aria-controls\": controlId,\n    \"aria-expanded\": expanded\n  }, React.createElement(InternalIcon, {\n    name: expanded ? 'treeview-collapse' : 'treeview-expand'\n  }), React.createElement(\"span\", {\n    className: styles.description\n  }, description));\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,YAAY,MAAM,wBAAwB;AACjD,SAASC,sBAAsB,QAAmC,cAAc;AAGhF,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,eAAe,QAAQ,uBAAuB;AAUvD,eAAc,SAAUC,gBAAgB,OAOhB;EAAA,IAPiB;IACvCC,SAAS;IACTC,SAAS;IACTC,QAAQ;IACRC,qBAAqB;IACrBC,OAAO;IACPC,WAAW,GAAG;EAAE,CACM;EACtB,MAAMC,IAAI,GAAGR,eAAe,CAAC,aAAa,CAAC;EAE3C,MAAMS,yBAAyB,GAAGN,SAAS,GAAGE,qBAAqB,GAAG,IAAIA,qBAAqB,EAAE;EACjG,MAAMK,WAAW,GAAGN,QAAQ,GACxBI,IAAI,CAAC,4BAA4B,EAAED,WAAW,CAACI,cAAc,CAAC,GAC9D,GAAGH,IAAI,CAAC,2BAA2B,EAAED,WAAW,CAACK,aAAa,CAAC,IAAI,EAAE,KAAKH,yBAAyB,GAAG;EAE1G,MAAMI,WAAW,GAAGjB,WAAW,CAAC,MAAK;IACnCE,sBAAsB,CAACQ,OAAO,EAAE,IAAI,CAAC;EACvC,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,OACEX;IACEmB,IAAI,EAAC,QAAQ;IACbC,SAAS,EAAEhB,MAAM,CAACiB,MAAM;IACxBV,OAAO,EAAEO,WAAW;IAAA,iBACLX,SAAS;IAAA,iBACTE;EAAQ,GAEvBT,oBAACE,YAAY;IAACoB,IAAI,EAAEb,QAAQ,GAAG,mBAAmB,GAAG;EAAiB,EAAI,EAC1ET;IAAMoB,SAAS,EAAEhB,MAAM,CAACW;EAAW,GAAGA,WAAW,CAAQ,CAClD;AAEb","names":["React","useCallback","InternalIcon","fireNonCancelableEvent","styles","useInternalI18n","TokenLimitToggle","controlId","allHidden","expanded","numberOfHiddenOptions","onClick","i18nStrings","i18n","numberOfHiddenOptionLabel","description","limitShowFewer","limitShowMore","handleClick","type","className","toggle","name"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/internal/components/token-list/lib/default/internal/components/token-list/token-limit-toggle.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback } from 'react';\nimport InternalIcon from '../../../icon/internal';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../../events';\nimport { I18nStrings } from './interfaces';\n\nimport styles from './styles.css.js';\nimport { useInternalI18n } from '../../../i18n/context';\ninterface TokenLimitToggleProps {\n  controlId?: string;\n  allHidden: boolean;\n  expanded: boolean;\n  numberOfHiddenOptions: number;\n  onClick?: NonCancelableEventHandler<null>;\n  i18nStrings?: I18nStrings;\n}\n\nexport default function TokenLimitToggle({\n  controlId,\n  allHidden,\n  expanded,\n  numberOfHiddenOptions,\n  onClick,\n  i18nStrings = {},\n}: TokenLimitToggleProps) {\n  const i18n = useInternalI18n('token-group');\n\n  const numberOfHiddenOptionLabel = allHidden ? numberOfHiddenOptions : `+${numberOfHiddenOptions}`;\n  const description = expanded\n    ? i18n('i18nStrings.limitShowFewer', i18nStrings.limitShowFewer)\n    : `${i18n('i18nStrings.limitShowMore', i18nStrings.limitShowMore) || ''} (${numberOfHiddenOptionLabel})`;\n\n  const handleClick = useCallback(() => {\n    fireNonCancelableEvent(onClick, null);\n  }, [onClick]);\n\n  return (\n    <button\n      type=\"button\"\n      className={styles.toggle}\n      onClick={handleClick}\n      aria-controls={controlId}\n      aria-expanded={expanded}\n    >\n      <InternalIcon name={expanded ? 'treeview-collapse' : 'treeview-expand'} />\n      <span className={styles.description}>{description}</span>\n    </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}