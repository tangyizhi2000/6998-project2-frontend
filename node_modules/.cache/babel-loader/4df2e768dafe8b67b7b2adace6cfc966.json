{"ast":null,"code":"import _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Extracts timezone offset from ISO8601 date string.\n */\nexport function parseTimezoneOffset(isoDate) {\n  var _isoDate$split = isoDate.split('T'),\n    _isoDate$split2 = _slicedToArray(_isoDate$split, 2),\n    _isoDate$split2$ = _isoDate$split2[1],\n    time = _isoDate$split2$ === void 0 ? '' : _isoDate$split2$;\n  var _time$split = time.split(/(-|\\+)/),\n    _time$split2 = _slicedToArray(_time$split, 3),\n    signCharacter = _time$split2[1],\n    offsetPart = _time$split2[2];\n  if (signCharacter && offsetPart) {\n    var _offsetPart$split = offsetPart.split(':'),\n      _offsetPart$split2 = _slicedToArray(_offsetPart$split, 2),\n      offsetHours = _offsetPart$split2[0],\n      offsetMinutes = _offsetPart$split2[1];\n    return Number(signCharacter + '1') * (Number(offsetHours) * 60 + Number(offsetMinutes));\n  }\n  var utcTimezoneIndicator = isoDate.indexOf('Z');\n  if (utcTimezoneIndicator !== -1) {\n    return 0;\n  }\n  var date = new Date(isoDate);\n  return 0 - date.getTimezoneOffset();\n}","map":{"version":3,"mappings":";AAAA;AACA;AAEA;;;AAGA,OAAM,SAAUA,mBAAmB,CAACC,OAAe;EACjD,qBAAsBA,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC;IAAA;IAAA;IAA/BC,IAAI,iCAAG,EAAE;EAClB,kBAAsCA,IAAI,CAACD,KAAK,CAAC,QAAQ,CAAC;IAAA;IAAjDE,aAAa;IAAEC,UAAU;EAElC,IAAID,aAAa,IAAIC,UAAU,EAAE;IAC/B,wBAAqCA,UAAU,CAACH,KAAK,CAAC,GAAG,CAAC;MAAA;MAAnDI,WAAW;MAAEC,aAAa;IACjC,OAAOC,MAAM,CAACJ,aAAa,GAAG,GAAG,CAAC,IAAII,MAAM,CAACF,WAAW,CAAC,GAAG,EAAE,GAAGE,MAAM,CAACD,aAAa,CAAC,CAAC;;EAGzF,IAAME,oBAAoB,GAAGR,OAAO,CAACS,OAAO,CAAC,GAAG,CAAC;EACjD,IAAID,oBAAoB,KAAK,CAAC,CAAC,EAAE;IAC/B,OAAO,CAAC;;EAGV,IAAME,IAAI,GAAG,IAAIC,IAAI,CAACX,OAAO,CAAC;EAC9B,OAAO,CAAC,GAAGU,IAAI,CAACE,iBAAiB,EAAE;AACrC","names":["parseTimezoneOffset","isoDate","split","time","signCharacter","offsetPart","offsetHours","offsetMinutes","Number","utcTimezoneIndicator","indexOf","date","Date","getTimezoneOffset"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/utils/date-time/lib/default/internal/utils/date-time/parse-timezone-offset.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Extracts timezone offset from ISO8601 date string.\n */\nexport function parseTimezoneOffset(isoDate: string): number {\n  const [, time = ''] = isoDate.split('T');\n  const [, signCharacter, offsetPart] = time.split(/(-|\\+)/);\n\n  if (signCharacter && offsetPart) {\n    const [offsetHours, offsetMinutes] = offsetPart.split(':');\n    return Number(signCharacter + '1') * (Number(offsetHours) * 60 + Number(offsetMinutes));\n  }\n\n  const utcTimezoneIndicator = isoDate.indexOf('Z');\n  if (utcTimezoneIndicator !== -1) {\n    return 0;\n  }\n\n  const date = new Date(isoDate);\n  return 0 - date.getTimezoneOffset();\n}\n"]},"metadata":{},"sourceType":"module"}