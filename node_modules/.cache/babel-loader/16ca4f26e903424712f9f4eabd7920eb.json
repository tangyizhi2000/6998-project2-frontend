{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport InternalIcon from '../icon/internal';\nimport InternalButtonDropdown from '../button-dropdown/internal';\nimport { InternalButton } from '../button/internal';\nimport { BreadcrumbItem } from './item/item';\nimport { fireCancelableEvent } from '../internal/events';\nimport { getBaseProps } from '../internal/base-component';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { useInternalI18n } from '../i18n/context';\n/**\n * Provided for backwards compatibility\n */\nconst DEFAULT_EXPAND_ARIA_LABEL = 'Show path';\nconst getDropdownTrigger = _ref => {\n  let {\n    ariaLabel,\n    triggerRef,\n    disabled,\n    testUtilsClass,\n    isOpen,\n    onClick\n  } = _ref;\n  return React.createElement(InternalButton, {\n    ref: triggerRef,\n    className: testUtilsClass,\n    disabled: disabled,\n    onClick: event => {\n      event.preventDefault();\n      onClick();\n    },\n    ariaExpanded: isOpen,\n    \"aria-haspopup\": true,\n    ariaLabel: ariaLabel,\n    variant: \"breadcrumb-group\",\n    formAction: \"none\"\n  }, \"...\");\n};\nconst EllipsisDropdown = _ref2 => {\n  let {\n    ariaLabel,\n    dropdownItems,\n    onDropdownItemClick,\n    onDropdownItemFollow\n  } = _ref2;\n  var _a;\n  const i18n = useInternalI18n('breadcrumb-group');\n  return React.createElement(\"li\", {\n    className: styles.ellipsis\n  }, React.createElement(InternalButtonDropdown, {\n    ariaLabel: (_a = i18n('expandAriaLabel', ariaLabel)) !== null && _a !== void 0 ? _a : DEFAULT_EXPAND_ARIA_LABEL,\n    items: dropdownItems,\n    onItemClick: onDropdownItemClick,\n    onItemFollow: onDropdownItemFollow,\n    customTriggerBuilder: getDropdownTrigger\n  }), React.createElement(\"span\", {\n    className: styles.icon\n  }, React.createElement(InternalIcon, {\n    name: \"angle-right\"\n  })));\n};\nexport const getEventDetail = item => ({\n  item,\n  text: item.text,\n  href: item.href\n});\nexport default function InternalBreadcrumbGroup(_a) {\n  var {\n      items = [],\n      ariaLabel,\n      expandAriaLabel,\n      onClick,\n      onFollow,\n      __internalRootRef\n    } = _a,\n    props = __rest(_a, [\"items\", \"ariaLabel\", \"expandAriaLabel\", \"onClick\", \"onFollow\", \"__internalRootRef\"]);\n  for (const item of items) {\n    checkSafeUrl('BreadcrumbGroup', item.href);\n  }\n  const baseProps = getBaseProps(props);\n  const isMobile = useMobile();\n  let breadcrumbItems = items.map((item, index) => {\n    const isLast = index === items.length - 1;\n    return React.createElement(\"li\", {\n      className: styles.item,\n      key: index\n    }, React.createElement(BreadcrumbItem, {\n      item: item,\n      onClick: onClick,\n      onFollow: onFollow,\n      isCompressed: isMobile,\n      isLast: isLast,\n      isDisplayed: !isMobile || isLast || index === 0\n    }));\n  });\n  const getEventItem = e => {\n    const {\n      id\n    } = e.detail;\n    return items[parseInt(id)];\n  };\n  // Add ellipsis\n  if (breadcrumbItems.length >= 2) {\n    const dropdownItems = items.slice(1, items.length - 1).map((item, index) => ({\n      id: (index + 1).toString(),\n      text: item.text,\n      href: item.href || '#'\n    }));\n    breadcrumbItems = [breadcrumbItems[0], React.createElement(EllipsisDropdown, {\n      key: 'ellipsis',\n      ariaLabel: expandAriaLabel,\n      dropdownItems: dropdownItems,\n      onDropdownItemClick: e => fireCancelableEvent(onClick, getEventDetail(getEventItem(e)), e),\n      onDropdownItemFollow: e => fireCancelableEvent(onFollow, getEventDetail(getEventItem(e)), e)\n    }), ...breadcrumbItems.slice(1)];\n  }\n  return React.createElement(\"nav\", Object.assign({}, baseProps, {\n    className: clsx(styles['breadcrumb-group'], isMobile && styles.mobile, items.length <= 2 && styles['mobile-short'], baseProps.className),\n    \"aria-label\": ariaLabel || undefined,\n    ref: __internalRootRef\n  }), React.createElement(\"ol\", {\n    className: styles['breadcrumb-group-list']\n  }, breadcrumbItems));\n}","map":{"version":3,"mappings":"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","names":["React","styles","clsx","InternalIcon","InternalButtonDropdown","InternalButton","BreadcrumbItem","fireCancelableEvent","getBaseProps","useMobile","checkSafeUrl","useInternalI18n","DEFAULT_EXPAND_ARIA_LABEL","getDropdownTrigger","ariaLabel","triggerRef","disabled","testUtilsClass","isOpen","onClick","ref","className","event","preventDefault","ariaExpanded","variant","formAction","EllipsisDropdown","dropdownItems","onDropdownItemClick","onDropdownItemFollow","i18n","ellipsis","items","onItemClick","onItemFollow","customTriggerBuilder","icon","name","getEventDetail","item","text","href","InternalBreadcrumbGroup","_a","expandAriaLabel","onFollow","__internalRootRef","props","baseProps","isMobile","breadcrumbItems","map","index","isLast","length","key","isCompressed","isDisplayed","getEventItem","e","id","detail","parseInt","slice","toString","mobile","undefined"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/breadcrumb-group/lib/default/breadcrumb-group/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport InternalIcon from '../icon/internal';\nimport InternalButtonDropdown from '../button-dropdown/internal';\nimport { CustomTriggerProps, LinkItem } from '../button-dropdown/interfaces';\nimport { InternalButton } from '../button/internal';\nimport { BreadcrumbItem } from './item/item';\nimport { BreadcrumbGroupProps, EllipsisDropdownProps } from './interfaces';\nimport { fireCancelableEvent } from '../internal/events';\nimport { getBaseProps } from '../internal/base-component';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { useInternalI18n } from '../i18n/context';\n\n/**\n * Provided for backwards compatibility\n */\nconst DEFAULT_EXPAND_ARIA_LABEL = 'Show path';\n\nconst getDropdownTrigger = ({\n  ariaLabel,\n  triggerRef,\n  disabled,\n  testUtilsClass,\n  isOpen,\n  onClick,\n}: CustomTriggerProps) => {\n  return (\n    <InternalButton\n      ref={triggerRef}\n      className={testUtilsClass}\n      disabled={disabled}\n      onClick={event => {\n        event.preventDefault();\n        onClick();\n      }}\n      ariaExpanded={isOpen}\n      aria-haspopup={true}\n      ariaLabel={ariaLabel}\n      variant=\"breadcrumb-group\"\n      formAction=\"none\"\n    >\n      ...\n    </InternalButton>\n  );\n};\n\nconst EllipsisDropdown = ({\n  ariaLabel,\n  dropdownItems,\n  onDropdownItemClick,\n  onDropdownItemFollow,\n}: EllipsisDropdownProps) => {\n  const i18n = useInternalI18n('breadcrumb-group');\n\n  return (\n    <li className={styles.ellipsis}>\n      <InternalButtonDropdown\n        ariaLabel={i18n('expandAriaLabel', ariaLabel) ?? DEFAULT_EXPAND_ARIA_LABEL}\n        items={dropdownItems}\n        onItemClick={onDropdownItemClick}\n        onItemFollow={onDropdownItemFollow}\n        customTriggerBuilder={getDropdownTrigger}\n      />\n      <span className={styles.icon}>\n        <InternalIcon name=\"angle-right\" />\n      </span>\n    </li>\n  );\n};\n\nexport const getEventDetail = <T extends BreadcrumbGroupProps.Item>(item: T) => ({\n  item,\n  text: item.text,\n  href: item.href,\n});\n\ntype InternalBreadcrumbGroupProps<T extends BreadcrumbGroupProps.Item = BreadcrumbGroupProps.Item> =\n  BreadcrumbGroupProps<T> & InternalBaseComponentProps;\n\nexport default function InternalBreadcrumbGroup<T extends BreadcrumbGroupProps.Item = BreadcrumbGroupProps.Item>({\n  items = [],\n  ariaLabel,\n  expandAriaLabel,\n  onClick,\n  onFollow,\n  __internalRootRef,\n  ...props\n}: InternalBreadcrumbGroupProps<T>) {\n  for (const item of items) {\n    checkSafeUrl('BreadcrumbGroup', item.href);\n  }\n  const baseProps = getBaseProps(props);\n  const isMobile = useMobile();\n\n  let breadcrumbItems = items.map((item, index) => {\n    const isLast = index === items.length - 1;\n\n    return (\n      <li className={styles.item} key={index}>\n        <BreadcrumbItem\n          item={item}\n          onClick={onClick}\n          onFollow={onFollow}\n          isCompressed={isMobile}\n          isLast={isLast}\n          isDisplayed={!isMobile || isLast || index === 0}\n        />\n      </li>\n    );\n  });\n\n  const getEventItem = (e: CustomEvent<{ id: string }>) => {\n    const { id } = e.detail;\n    return items[parseInt(id)];\n  };\n\n  // Add ellipsis\n  if (breadcrumbItems.length >= 2) {\n    const dropdownItems: Array<LinkItem> = items\n      .slice(1, items.length - 1)\n      .map((item: BreadcrumbGroupProps.Item, index: number) => ({\n        id: (index + 1).toString(), // the first item doesn't get inside dropdown\n        text: item.text,\n        href: item.href || '#',\n      }));\n\n    breadcrumbItems = [\n      breadcrumbItems[0],\n      <EllipsisDropdown\n        key={'ellipsis'}\n        ariaLabel={expandAriaLabel}\n        dropdownItems={dropdownItems}\n        onDropdownItemClick={e => fireCancelableEvent(onClick, getEventDetail(getEventItem(e)), e)}\n        onDropdownItemFollow={e => fireCancelableEvent(onFollow, getEventDetail(getEventItem(e)), e)}\n      />,\n      ...breadcrumbItems.slice(1),\n    ];\n  }\n\n  return (\n    <nav\n      {...baseProps}\n      className={clsx(\n        styles['breadcrumb-group'],\n        isMobile && styles.mobile,\n        items.length <= 2 && styles['mobile-short'],\n        baseProps.className\n      )}\n      aria-label={ariaLabel || undefined}\n      ref={__internalRootRef}\n    >\n      <ol className={styles['breadcrumb-group-list']}>{breadcrumbItems}</ol>\n    </nav>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}