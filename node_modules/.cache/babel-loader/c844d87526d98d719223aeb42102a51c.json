{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { forwardRef, useContext, useImperativeHandle, useRef, useState } from 'react';\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport Thead from './thead';\nimport { useStickyHeader } from './use-sticky-header';\nimport styles from './styles.css.js';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport { getTableRoleProps } from './table-role';\nexport default forwardRef(StickyHeader);\nfunction StickyHeader(_ref, ref) {\n  let {\n    variant,\n    theadProps,\n    wrapperRef,\n    theadRef,\n    secondaryWrapperRef,\n    onScroll,\n    tableRef,\n    tableHasHeader,\n    contentDensity,\n    tableRole\n  } = _ref;\n  const secondaryTheadRef = useRef(null);\n  const secondaryTableRef = useRef(null);\n  const {\n    isStuck\n  } = useContext(StickyHeaderContext);\n  const [focusedComponent, setFocusedComponent] = useState(null);\n  const {\n    scrollToRow,\n    scrollToTop\n  } = useStickyHeader(tableRef, theadRef, secondaryTheadRef, secondaryTableRef, wrapperRef);\n  useImperativeHandle(ref, () => ({\n    scrollToTop,\n    scrollToRow,\n    setFocus: setFocusedComponent\n  }));\n  return React.createElement(\"div\", {\n    className: clsx(styles['header-secondary'], styles[`variant-${variant}`], {\n      [styles.stuck]: isStuck,\n      [styles['table-has-header']]: tableHasHeader\n    }),\n    \"aria-hidden\": true,\n    // Prevents receiving focus in Firefox. Focus on the overflowing table is sufficient\n    // to scroll the table horizontally\n    tabIndex: -1,\n    ref: secondaryWrapperRef,\n    onScroll: onScroll\n  }, React.createElement(\"table\", Object.assign({\n    className: clsx(styles.table, styles['table-layout-fixed'], contentDensity === 'compact' && getVisualContextClassname('compact-table')),\n    ref: secondaryTableRef\n  }, getTableRoleProps({\n    tableRole\n  })), React.createElement(Thead, Object.assign({\n    ref: secondaryTheadRef,\n    sticky: true,\n    stuck: isStuck,\n    focusedComponent: focusedComponent\n  }, theadProps))));\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,IAAIC,UAAU,EAAEC,UAAU,EAAEC,mBAAmB,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC5F,SAASC,mBAAmB,QAAQ,gCAAgC;AAEpE,OAAOC,KAAqB,MAAM,SAAS;AAC3C,SAASC,eAAe,QAAQ,qBAAqB;AACrD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,yBAAyB,QAAQ,uCAAuC;AACjF,SAAoBC,iBAAiB,QAAQ,cAAc;AAqB3D,eAAeV,UAAU,CAACW,YAAY,CAAC;AAEvC,SAASA,YAAY,OAanBC,GAA+B;EAAA,IAZ/B;IACEC,OAAO;IACPC,UAAU;IACVC,UAAU;IACVC,QAAQ;IACRC,mBAAmB;IACnBC,QAAQ;IACRC,QAAQ;IACRC,cAAc;IACdC,cAAc;IACdC;EAAS,CACS;EAGpB,MAAMC,iBAAiB,GAAGpB,MAAM,CAAsB,IAAI,CAAC;EAC3D,MAAMqB,iBAAiB,GAAGrB,MAAM,CAAmB,IAAI,CAAC;EACxD,MAAM;IAAEsB;EAAO,CAAE,GAAGxB,UAAU,CAACI,mBAAmB,CAAC;EAEnD,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvB,QAAQ,CAAgB,IAAI,CAAC;EAC7E,MAAM;IAAEwB,WAAW;IAAEC;EAAW,CAAE,GAAGtB,eAAe,CAClDY,QAAQ,EACRH,QAAQ,EACRO,iBAAiB,EACjBC,iBAAiB,EACjBT,UAAU,CACX;EAEDb,mBAAmB,CAACU,GAAG,EAAE,OAAO;IAC9BiB,WAAW;IACXD,WAAW;IACXE,QAAQ,EAAEH;GACX,CAAC,CAAC;EAEH,OACE5B;IACEgC,SAAS,EAAEjC,IAAI,CAACU,MAAM,CAAC,kBAAkB,CAAC,EAAEA,MAAM,CAAC,WAAWK,OAAO,EAAE,CAAC,EAAE;MACxE,CAACL,MAAM,CAACwB,KAAK,GAAGP,OAAO;MACvB,CAACjB,MAAM,CAAC,kBAAkB,CAAC,GAAGY;KAC/B,CAAC;IAAA,eACW,IAAI;IACjB;IACA;IACAa,QAAQ,EAAE,CAAC,CAAC;IACZrB,GAAG,EAAEK,mBAAmB;IACxBC,QAAQ,EAAEA;EAAQ,GAElBnB;IACEgC,SAAS,EAAEjC,IAAI,CACbU,MAAM,CAAC0B,KAAK,EACZ1B,MAAM,CAAC,oBAAoB,CAAC,EAC5Ba,cAAc,KAAK,SAAS,IAAIZ,yBAAyB,CAAC,eAAe,CAAC,CAC3E;IACDG,GAAG,EAAEY;EAAiB,GAClBd,iBAAiB,CAAC;IAAEY;EAAS,CAAE,CAAC,GAEpCvB,oBAACO,KAAK;IACJM,GAAG,EAAEW,iBAAiB;IACtBY,MAAM,EAAE,IAAI;IACZH,KAAK,EAAEP,OAAO;IACdC,gBAAgB,EAAEA;EAAgB,GAC9BZ,UAAU,EACd,CACI,CACJ;AAEV","names":["clsx","React","forwardRef","useContext","useImperativeHandle","useRef","useState","StickyHeaderContext","Thead","useStickyHeader","styles","getVisualContextClassname","getTableRoleProps","StickyHeader","ref","variant","theadProps","wrapperRef","theadRef","secondaryWrapperRef","onScroll","tableRef","tableHasHeader","contentDensity","tableRole","secondaryTheadRef","secondaryTableRef","isStuck","focusedComponent","setFocusedComponent","scrollToRow","scrollToTop","setFocus","className","stuck","tabIndex","table","sticky"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/table/lib/default/table/sticky-header.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { forwardRef, useContext, useImperativeHandle, useRef, useState } from 'react';\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport { TableProps } from './interfaces';\nimport Thead, { TheadProps } from './thead';\nimport { useStickyHeader } from './use-sticky-header';\nimport styles from './styles.css.js';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport { TableRole, getTableRoleProps } from './table-role';\n\nexport interface StickyHeaderRef {\n  scrollToTop(): void;\n  scrollToRow(node: null | HTMLElement): void;\n  setFocus(focusId: null | string): void;\n}\n\ninterface StickyHeaderProps {\n  variant: TableProps.Variant;\n  theadProps: TheadProps;\n  wrapperRef: React.RefObject<HTMLDivElement>;\n  theadRef: React.RefObject<HTMLTableRowElement>;\n  secondaryWrapperRef: React.RefObject<HTMLDivElement>;\n  tableRef: React.RefObject<HTMLTableElement>;\n  onScroll?: React.UIEventHandler<HTMLDivElement>;\n  contentDensity?: 'comfortable' | 'compact';\n  tableHasHeader?: boolean;\n  tableRole: TableRole;\n}\n\nexport default forwardRef(StickyHeader);\n\nfunction StickyHeader(\n  {\n    variant,\n    theadProps,\n    wrapperRef,\n    theadRef,\n    secondaryWrapperRef,\n    onScroll,\n    tableRef,\n    tableHasHeader,\n    contentDensity,\n    tableRole,\n  }: StickyHeaderProps,\n  ref: React.Ref<StickyHeaderRef>\n) {\n  const secondaryTheadRef = useRef<HTMLTableRowElement>(null);\n  const secondaryTableRef = useRef<HTMLTableElement>(null);\n  const { isStuck } = useContext(StickyHeaderContext);\n\n  const [focusedComponent, setFocusedComponent] = useState<null | string>(null);\n  const { scrollToRow, scrollToTop } = useStickyHeader(\n    tableRef,\n    theadRef,\n    secondaryTheadRef,\n    secondaryTableRef,\n    wrapperRef\n  );\n\n  useImperativeHandle(ref, () => ({\n    scrollToTop,\n    scrollToRow,\n    setFocus: setFocusedComponent,\n  }));\n\n  return (\n    <div\n      className={clsx(styles['header-secondary'], styles[`variant-${variant}`], {\n        [styles.stuck]: isStuck,\n        [styles['table-has-header']]: tableHasHeader,\n      })}\n      aria-hidden={true}\n      // Prevents receiving focus in Firefox. Focus on the overflowing table is sufficient\n      // to scroll the table horizontally\n      tabIndex={-1}\n      ref={secondaryWrapperRef}\n      onScroll={onScroll}\n    >\n      <table\n        className={clsx(\n          styles.table,\n          styles['table-layout-fixed'],\n          contentDensity === 'compact' && getVisualContextClassname('compact-table')\n        )}\n        ref={secondaryTableRef}\n        {...getTableRoleProps({ tableRole })}\n      >\n        <Thead\n          ref={secondaryTheadRef}\n          sticky={true}\n          stuck={isStuck}\n          focusedComponent={focusedComponent}\n          {...theadProps}\n        />\n      </table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}