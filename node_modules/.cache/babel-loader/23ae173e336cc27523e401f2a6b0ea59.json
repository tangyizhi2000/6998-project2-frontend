{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useImperativeHandle, useRef } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport InternalInput from './internal';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nconst Input = React.forwardRef((_a, ref) => {\n  var {\n      value,\n      type = 'text',\n      step,\n      inputMode,\n      autoComplete = true,\n      spellcheck,\n      disabled,\n      readOnly,\n      disableBrowserAutocorrect,\n      onKeyDown,\n      onKeyUp,\n      onChange,\n      onBlur,\n      onFocus,\n      ariaRequired,\n      name,\n      placeholder,\n      autoFocus,\n      ariaLabel,\n      ariaLabelledby,\n      ariaDescribedby,\n      invalid,\n      controlId,\n      clearAriaLabel\n    } = _a,\n    rest = __rest(_a, [\"value\", \"type\", \"step\", \"inputMode\", \"autoComplete\", \"spellcheck\", \"disabled\", \"readOnly\", \"disableBrowserAutocorrect\", \"onKeyDown\", \"onKeyUp\", \"onChange\", \"onBlur\", \"onFocus\", \"ariaRequired\", \"name\", \"placeholder\", \"autoFocus\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescribedby\", \"invalid\", \"controlId\", \"clearAriaLabel\"]);\n  const baseComponentProps = useBaseComponent('Input');\n  const baseProps = getBaseProps(rest);\n  const inputRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    focus() {\n      var _a;\n      (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus(...arguments);\n    },\n    select() {\n      var _a;\n      (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.select();\n    }\n  }), [inputRef]);\n  return React.createElement(InternalInput, Object.assign({\n    ref: inputRef\n  }, Object.assign(Object.assign(Object.assign({}, baseProps), baseComponentProps), {\n    autoComplete,\n    ariaLabel,\n    ariaRequired,\n    autoFocus,\n    disabled,\n    disableBrowserAutocorrect,\n    name,\n    onKeyDown,\n    onKeyUp,\n    onChange,\n    onBlur,\n    onFocus,\n    placeholder,\n    readOnly,\n    type,\n    step,\n    inputMode,\n    spellcheck,\n    value,\n    ariaDescribedby,\n    ariaLabelledby,\n    invalid,\n    controlId,\n    clearAriaLabel\n  }), {\n    className: clsx(styles.root, baseProps.className),\n    __inheritFormFieldProps: true\n  }));\n});\napplyDisplayName(Input, 'Input');\nexport default Input;","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,IAASC,mBAAmB,EAAEC,MAAM,QAAQ,OAAO;AAC/D,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,aAAa,MAAM,YAAY;AAEtC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,OAAOC,gBAAgB,MAAM,sCAAsC;AAInE,MAAMC,KAAK,GAAGR,KAAK,CAACS,UAAU,CAC5B,CACEC,EA0Ba,EACbC,GAAwB,KACtB;MA5BF;MACEC,KAAK;MACLC,IAAI,GAAG,MAAM;MACbC,IAAI;MACJC,SAAS;MACTC,YAAY,GAAG,IAAI;MACnBC,UAAU;MACVC,QAAQ;MACRC,QAAQ;MACRC,yBAAyB;MACzBC,SAAS;MACTC,OAAO;MACPC,QAAQ;MACRC,MAAM;MACNC,OAAO;MACPC,YAAY;MACZC,IAAI;MACJC,WAAW;MACXC,SAAS;MACTC,SAAS;MACTC,cAAc;MACdC,eAAe;MACfC,OAAO;MACPC,SAAS;MACTC;IAAc,MAEH;IADRC,IAAI,cAzBT,kUA0BC,CADQ;EAIT,MAAMC,kBAAkB,GAAG9B,gBAAgB,CAAC,OAAO,CAAC;EACpD,MAAM+B,SAAS,GAAGnC,YAAY,CAACiC,IAAI,CAAC;EAEpC,MAAMG,QAAQ,GAAGrC,MAAM,CAAmB,IAAI,CAAC;EAE/CD,mBAAmB,CACjBU,GAAG,EACH,OAAO;IACL6B,KAAK,GAA0C;;MAC7C,cAAQ,CAACC,OAAO,0CAAED,KAAK,CAAC,YAAO,CAAC;IAClC,CAAC;IACDE,MAAM;;MACJ,cAAQ,CAACD,OAAO,0CAAEC,MAAM,EAAE;IAC5B;GACD,CAAC,EACF,CAACH,QAAQ,CAAC,CACX;EAED,OACEvC,oBAACI,aAAa;IACZO,GAAG,EAAE4B;EAAQ,iDAERD,SAAS,GACTD,kBAAkB;IACrBrB,YAAY;IACZc,SAAS;IACTJ,YAAY;IACZG,SAAS;IACTX,QAAQ;IACRE,yBAAyB;IACzBO,IAAI;IACJN,SAAS;IACTC,OAAO;IACPC,QAAQ;IACRC,MAAM;IACNC,OAAO;IACPG,WAAW;IACXT,QAAQ;IACRN,IAAI;IACJC,IAAI;IACJC,SAAS;IACTE,UAAU;IACVL,KAAK;IACLoB,eAAe;IACfD,cAAc;IACdE,OAAO;IACPC,SAAS;IACTC;EAAc;IAEhBQ,SAAS,EAAE5C,IAAI,CAACM,MAAM,CAACuC,IAAI,EAAEN,SAAS,CAACK,SAAS,CAAC;IACjDE,uBAAuB,EAAE;EAAI,GAC7B;AAEN,CAAC,CACF;AAEDvC,gBAAgB,CAACE,KAAK,EAAE,OAAO,CAAC;AAChC,eAAeA,KAAK","names":["clsx","React","useImperativeHandle","useRef","getBaseProps","InternalInput","styles","applyDisplayName","useBaseComponent","Input","forwardRef","_a","ref","value","type","step","inputMode","autoComplete","spellcheck","disabled","readOnly","disableBrowserAutocorrect","onKeyDown","onKeyUp","onChange","onBlur","onFocus","ariaRequired","name","placeholder","autoFocus","ariaLabel","ariaLabelledby","ariaDescribedby","invalid","controlId","clearAriaLabel","rest","baseComponentProps","baseProps","inputRef","focus","current","select","className","root","__inheritFormFieldProps"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/input/lib/default/input/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { Ref, useImperativeHandle, useRef } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport InternalInput from './internal';\nimport { InputProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { InputProps };\n\nconst Input = React.forwardRef(\n  (\n    {\n      value,\n      type = 'text',\n      step,\n      inputMode,\n      autoComplete = true,\n      spellcheck,\n      disabled,\n      readOnly,\n      disableBrowserAutocorrect,\n      onKeyDown,\n      onKeyUp,\n      onChange,\n      onBlur,\n      onFocus,\n      ariaRequired,\n      name,\n      placeholder,\n      autoFocus,\n      ariaLabel,\n      ariaLabelledby,\n      ariaDescribedby,\n      invalid,\n      controlId,\n      clearAriaLabel,\n      ...rest\n    }: InputProps,\n    ref: Ref<InputProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Input');\n    const baseProps = getBaseProps(rest);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        focus(...args: Parameters<HTMLElement['focus']>) {\n          inputRef.current?.focus(...args);\n        },\n        select() {\n          inputRef.current?.select();\n        },\n      }),\n      [inputRef]\n    );\n\n    return (\n      <InternalInput\n        ref={inputRef}\n        {...{\n          ...baseProps,\n          ...baseComponentProps,\n          autoComplete,\n          ariaLabel,\n          ariaRequired,\n          autoFocus,\n          disabled,\n          disableBrowserAutocorrect,\n          name,\n          onKeyDown,\n          onKeyUp,\n          onChange,\n          onBlur,\n          onFocus,\n          placeholder,\n          readOnly,\n          type,\n          step,\n          inputMode,\n          spellcheck,\n          value,\n          ariaDescribedby,\n          ariaLabelledby,\n          invalid,\n          controlId,\n          clearAriaLabel,\n        }}\n        className={clsx(styles.root, baseProps.className)}\n        __inheritFormFieldProps={true}\n      />\n    );\n  }\n);\n\napplyDisplayName(Input, 'Input');\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}