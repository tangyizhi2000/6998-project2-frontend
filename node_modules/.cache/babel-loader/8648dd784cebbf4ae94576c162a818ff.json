{"ast":null,"code":"import React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport ItemsList from '../items-list';\nconst CategoryElement = _ref => {\n  let {\n    item,\n    onItemActivate,\n    onGroupToggle,\n    targetItem,\n    isHighlighted,\n    isKeyboardHighlight,\n    isExpanded,\n    highlightItem,\n    disabled,\n    variant\n  } = _ref;\n  // Hide the category title element from screen readers because it will be\n  // provided as an ARIA label.\n  return React.createElement(\"li\", {\n    className: clsx(styles.category, styles[`variant-${variant}`], disabled && styles.disabled),\n    role: \"presentation\",\n    \"aria-disabled\": disabled ? 'true' : undefined\n  }, item.text && React.createElement(\"p\", {\n    className: clsx(styles.header, {\n      [styles.disabled]: disabled\n    }),\n    \"aria-hidden\": \"true\"\n  }, item.text), React.createElement(\"ul\", {\n    className: clsx(styles['items-list-container']),\n    role: \"group\",\n    \"aria-label\": item.text\n  }, item.items && React.createElement(ItemsList, {\n    items: item.items,\n    onItemActivate: onItemActivate,\n    onGroupToggle: onGroupToggle,\n    targetItem: targetItem,\n    isHighlighted: isHighlighted,\n    isKeyboardHighlight: isKeyboardHighlight,\n    isExpanded: isExpanded,\n    highlightItem: highlightItem,\n    categoryDisabled: disabled,\n    hasCategoryHeader: !!item.text,\n    variant: variant\n  })));\n};\nexport default CategoryElement;","map":{"version":3,"mappings":"AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,SAAS,MAAM,eAAe;AAErC,MAAMC,eAAe,GAAG,QAWJ;EAAA,IAXK;IACvBC,IAAI;IACJC,cAAc;IACdC,aAAa;IACbC,UAAU;IACVC,aAAa;IACbC,mBAAmB;IACnBC,UAAU;IACVC,aAAa;IACbC,QAAQ;IACRC;EAAO,CACO;EACd;EACA;EACA,OACEd;IACEe,SAAS,EAAEd,IAAI,CAACC,MAAM,CAACc,QAAQ,EAAEd,MAAM,CAAC,WAAWY,OAAO,EAAE,CAAC,EAAED,QAAQ,IAAIX,MAAM,CAACW,QAAQ,CAAC;IAC3FI,IAAI,EAAC,cAAc;IAAA,iBACJJ,QAAQ,GAAG,MAAM,GAAGK;EAAS,GAE3Cb,IAAI,CAACc,IAAI,IACRnB;IAAGe,SAAS,EAAEd,IAAI,CAACC,MAAM,CAACkB,MAAM,EAAE;MAAE,CAAClB,MAAM,CAACW,QAAQ,GAAGA;IAAQ,CAAE,CAAC;IAAA,eAAc;EAAM,GACnFR,IAAI,CAACc,IAAI,CAEb,EACDnB;IAAIe,SAAS,EAAEd,IAAI,CAACC,MAAM,CAAC,sBAAsB,CAAC,CAAC;IAAEe,IAAI,EAAC,OAAO;IAAA,cAAaZ,IAAI,CAACc;EAAI,GACpFd,IAAI,CAACgB,KAAK,IACTrB,oBAACG,SAAS;IACRkB,KAAK,EAAEhB,IAAI,CAACgB,KAAK;IACjBf,cAAc,EAAEA,cAAc;IAC9BC,aAAa,EAAEA,aAAa;IAC5BC,UAAU,EAAEA,UAAU;IACtBC,aAAa,EAAEA,aAAa;IAC5BC,mBAAmB,EAAEA,mBAAmB;IACxCC,UAAU,EAAEA,UAAU;IACtBC,aAAa,EAAEA,aAAa;IAC5BU,gBAAgB,EAAET,QAAQ;IAC1BU,iBAAiB,EAAE,CAAC,CAAClB,IAAI,CAACc,IAAI;IAC9BL,OAAO,EAAEA;EAAO,EAEnB,CACE,CACF;AAET,CAAC;AAED,eAAeV,eAAe","names":["React","clsx","styles","ItemsList","CategoryElement","item","onItemActivate","onGroupToggle","targetItem","isHighlighted","isKeyboardHighlight","isExpanded","highlightItem","disabled","variant","className","category","role","undefined","text","header","items","categoryDisabled","hasCategoryHeader"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/button-dropdown/category-elements/lib/default/button-dropdown/category-elements/category-element.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CategoryProps } from '../interfaces';\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport ItemsList from '../items-list';\n\nconst CategoryElement = ({\n  item,\n  onItemActivate,\n  onGroupToggle,\n  targetItem,\n  isHighlighted,\n  isKeyboardHighlight,\n  isExpanded,\n  highlightItem,\n  disabled,\n  variant,\n}: CategoryProps) => {\n  // Hide the category title element from screen readers because it will be\n  // provided as an ARIA label.\n  return (\n    <li\n      className={clsx(styles.category, styles[`variant-${variant}`], disabled && styles.disabled)}\n      role=\"presentation\"\n      aria-disabled={disabled ? 'true' : undefined}\n    >\n      {item.text && (\n        <p className={clsx(styles.header, { [styles.disabled]: disabled })} aria-hidden=\"true\">\n          {item.text}\n        </p>\n      )}\n      <ul className={clsx(styles['items-list-container'])} role=\"group\" aria-label={item.text}>\n        {item.items && (\n          <ItemsList\n            items={item.items}\n            onItemActivate={onItemActivate}\n            onGroupToggle={onGroupToggle}\n            targetItem={targetItem}\n            isHighlighted={isHighlighted}\n            isKeyboardHighlight={isKeyboardHighlight}\n            isExpanded={isExpanded}\n            highlightItem={highlightItem}\n            categoryDisabled={disabled}\n            hasCategoryHeader={!!item.text}\n            variant={variant}\n          />\n        )}\n      </ul>\n    </li>\n  );\n};\n\nexport default CategoryElement;\n"]},"metadata":{},"sourceType":"module"}