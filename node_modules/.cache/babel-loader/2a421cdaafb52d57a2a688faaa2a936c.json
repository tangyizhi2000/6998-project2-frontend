{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\nimport { arc } from 'd3-shape';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport { useInternalI18n } from '../i18n/context';\nexport default function Segments(_ref) {\n  let {\n    pieData,\n    highlightedSegment,\n    dimensions,\n    variant,\n    focusedSegmentRef,\n    popoverTrackRef,\n    segmentAriaRoleDescription,\n    onMouseDown,\n    onMouseOver\n  } = _ref;\n  const i18n = useInternalI18n('pie-chart');\n  const {\n    arcFactory,\n    highlightedArcFactory\n  } = useMemo(() => {\n    const radius = dimensions.outerRadius;\n    const innerRadius = variant === 'pie' ? 0 : dimensions.innerRadius;\n    const cornerRadius = dimensions.cornerRadius || 0;\n    const arcFactory = arc().innerRadius(innerRadius).outerRadius(radius).cornerRadius(cornerRadius);\n    const highlightedArcFactory = arc().innerRadius(radius + 4).outerRadius(radius + 6);\n    return {\n      arcFactory,\n      highlightedArcFactory\n    };\n  }, [dimensions, variant]);\n  const centroid = useMemo(() => {\n    for (const datum of pieData) {\n      if (datum.data.datum === highlightedSegment) {\n        const [centroidLeft, centroidTop] = arcFactory.centroid(datum);\n        return {\n          cx: centroidLeft,\n          cy: centroidTop\n        };\n      }\n    }\n    return null;\n  }, [highlightedSegment, pieData, arcFactory]);\n  return React.createElement(\"g\", null, pieData.map(datum => {\n    const isHighlighted = highlightedSegment === datum.data.datum;\n    const isDimmed = highlightedSegment !== null && !isHighlighted;\n    const arcPath = arcFactory(datum) || undefined;\n    const highlightedPath = highlightedArcFactory(datum) || undefined;\n    return React.createElement(\"g\", {\n      key: datum.data.index,\n      onMouseDown: e => {\n        onMouseDown(datum.data);\n        e.preventDefault();\n      },\n      onMouseOver: () => onMouseOver(datum.data),\n      className: clsx(styles.segment, {\n        [styles['segment--highlighted']]: isHighlighted,\n        [styles['segment--dimmed']]: isDimmed\n      }),\n      ref: isHighlighted ? focusedSegmentRef : undefined,\n      \"aria-label\": `${datum.data.datum.title} (${datum.data.datum.value})`,\n      role: \"button\",\n      \"aria-roledescription\": i18n('i18nStrings.segmentAriaRoleDescription', segmentAriaRoleDescription)\n    }, React.createElement(\"path\", {\n      d: arcPath,\n      fill: datum.data.color,\n      className: styles.segment__path,\n      \"aria-hidden\": \"true\"\n    }), React.createElement(\"path\", {\n      d: highlightedPath,\n      fill: datum.data.color,\n      className: clsx(styles.segment__path, styles.segment__highlight),\n      \"aria-hidden\": \"true\"\n    }));\n  }), React.createElement(\"circle\", Object.assign({}, centroid, {\n    ref: popoverTrackRef,\n    r: \"1\",\n    opacity: \"0\",\n    \"aria-hidden\": \"true\"\n  })));\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,GAAG,QAAqB,UAAU;AAK3C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,eAAe,QAAQ,iBAAiB;AAcjD,eAAc,SAAUC,QAAQ,OAUb;EAAA,IAV6C;IAC9DC,OAAO;IACPC,kBAAkB;IAClBC,UAAU;IACVC,OAAO;IACPC,iBAAiB;IACjBC,eAAe;IACfC,0BAA0B;IAC1BC,WAAW;IACXC;EAAW,CACM;EACjB,MAAMC,IAAI,GAAGX,eAAe,CAAC,WAAW,CAAC;EAEzC,MAAM;IAAEY,UAAU;IAAEC;EAAqB,CAAE,GAAGjB,OAAO,CAAC,MAAK;IACzD,MAAMkB,MAAM,GAAGV,UAAU,CAACW,WAAW;IACrC,MAAMC,WAAW,GAAGX,OAAO,KAAK,KAAK,GAAG,CAAC,GAAGD,UAAU,CAACY,WAAW;IAClE,MAAMC,YAAY,GAAGb,UAAU,CAACa,YAAY,IAAI,CAAC;IAEjD,MAAML,UAAU,GAAGf,GAAG,EAAwC,CAC3DmB,WAAW,CAACA,WAAW,CAAC,CACxBD,WAAW,CAACD,MAAM,CAAC,CACnBG,YAAY,CAACA,YAAY,CAAC;IAE7B,MAAMJ,qBAAqB,GAAGhB,GAAG,EAAwC,CACtEmB,WAAW,CAACF,MAAM,GAAG,CAAC,CAAC,CACvBC,WAAW,CAACD,MAAM,GAAG,CAAC,CAAC;IAE1B,OAAO;MACLF,UAAU;MACVC;KACD;EACH,CAAC,EAAE,CAACT,UAAU,EAAEC,OAAO,CAAC,CAAC;EAEzB,MAAMa,QAAQ,GAAGtB,OAAO,CAAC,MAAK;IAC5B,KAAK,MAAMuB,KAAK,IAAIjB,OAAO,EAAE;MAC3B,IAAIiB,KAAK,CAACC,IAAI,CAACD,KAAK,KAAKhB,kBAAkB,EAAE;QAC3C,MAAM,CAACkB,YAAY,EAAEC,WAAW,CAAC,GAAGV,UAAU,CAACM,QAAQ,CAACC,KAAK,CAAC;QAC9D,OAAO;UAAEI,EAAE,EAAEF,YAAY;UAAEG,EAAE,EAAEF;QAAW,CAAE;;;IAGhD,OAAO,IAAI;EACb,CAAC,EAAE,CAACnB,kBAAkB,EAAED,OAAO,EAAEU,UAAU,CAAC,CAAC;EAE7C,OACEjB,+BACGO,OAAO,CAACuB,GAAG,CAACN,KAAK,IAAG;IACnB,MAAMO,aAAa,GAAGvB,kBAAkB,KAAKgB,KAAK,CAACC,IAAI,CAACD,KAAK;IAC7D,MAAMQ,QAAQ,GAAGxB,kBAAkB,KAAK,IAAI,IAAI,CAACuB,aAAa;IAC9D,MAAME,OAAO,GAAGhB,UAAU,CAACO,KAAK,CAAC,IAAIU,SAAS;IAC9C,MAAMC,eAAe,GAAGjB,qBAAqB,CAACM,KAAK,CAAC,IAAIU,SAAS;IACjE,OACElC;MACEoC,GAAG,EAAEZ,KAAK,CAACC,IAAI,CAACY,KAAK;MACrBvB,WAAW,EAAEwB,CAAC,IAAG;QACfxB,WAAW,CAACU,KAAK,CAACC,IAAI,CAAC;QACvBa,CAAC,CAACC,cAAc,EAAE;MACpB,CAAC;MACDxB,WAAW,EAAE,MAAMA,WAAW,CAACS,KAAK,CAACC,IAAI,CAAC;MAC1Ce,SAAS,EAAEpC,IAAI,CAACD,MAAM,CAACsC,OAAO,EAAE;QAC9B,CAACtC,MAAM,CAAC,sBAAsB,CAAC,GAAG4B,aAAa;QAC/C,CAAC5B,MAAM,CAAC,iBAAiB,CAAC,GAAG6B;OAC9B,CAAC;MACFU,GAAG,EAAEX,aAAa,GAAGpB,iBAAiB,GAAGuB,SAAS;MAAA,cACtC,GAAGV,KAAK,CAACC,IAAI,CAACD,KAAK,CAACmB,KAAK,KAAKnB,KAAK,CAACC,IAAI,CAACD,KAAK,CAACoB,KAAK,GAAG;MACnEC,IAAI,EAAC,QAAQ;MAAA,wBACS7B,IAAI,CAAC,wCAAwC,EAAEH,0BAA0B;IAAC,GAEhGb;MAAM8C,CAAC,EAAEb,OAAO;MAAEc,IAAI,EAAEvB,KAAK,CAACC,IAAI,CAACuB,KAAK;MAAER,SAAS,EAAErC,MAAM,CAAC8C,aAAa;MAAA,eAAc;IAAM,EAAG,EAChGjD;MACE8C,CAAC,EAAEX,eAAe;MAClBY,IAAI,EAAEvB,KAAK,CAACC,IAAI,CAACuB,KAAK;MACtBR,SAAS,EAAEpC,IAAI,CAACD,MAAM,CAAC8C,aAAa,EAAE9C,MAAM,CAAC+C,kBAAkB,CAAC;MAAA,eACpD;IAAM,EAClB,CACA;EAER,CAAC,CAAC,EAEFlD,gDAAYuB,QAAQ;IAAEmB,GAAG,EAAE9B,eAAe;IAAEuC,CAAC,EAAC,GAAG;IAACC,OAAO,EAAC,GAAG;IAAA,eAAa;EAAM,GAAG,CACjF;AAER","names":["React","useMemo","arc","styles","clsx","useInternalI18n","Segments","pieData","highlightedSegment","dimensions","variant","focusedSegmentRef","popoverTrackRef","segmentAriaRoleDescription","onMouseDown","onMouseOver","i18n","arcFactory","highlightedArcFactory","radius","outerRadius","innerRadius","cornerRadius","centroid","datum","data","centroidLeft","centroidTop","cx","cy","map","isHighlighted","isDimmed","arcPath","undefined","highlightedPath","key","index","e","preventDefault","className","segment","ref","title","value","role","d","fill","color","segment__path","segment__highlight","r","opacity"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/pie-chart/lib/default/pie-chart/segments.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\nimport { arc, PieArcDatum } from 'd3-shape';\n\nimport { PieChartProps } from './interfaces';\nimport { Dimension } from './utils';\nimport { InternalChartDatum } from './pie-chart';\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport { useInternalI18n } from '../i18n/context';\n\ninterface SegmentsProps<T> {\n  pieData: Array<PieArcDatum<InternalChartDatum<T>>>;\n  highlightedSegment: T | null;\n  dimensions: Dimension;\n  variant: PieChartProps['variant'];\n  focusedSegmentRef: React.RefObject<SVGGElement>;\n  popoverTrackRef: React.RefObject<SVGCircleElement>;\n  segmentAriaRoleDescription?: string;\n  onMouseDown: (datum: InternalChartDatum<T>) => void;\n  onMouseOver: (datum: InternalChartDatum<T>) => void;\n}\n\nexport default function Segments<T extends PieChartProps.Datum>({\n  pieData,\n  highlightedSegment,\n  dimensions,\n  variant,\n  focusedSegmentRef,\n  popoverTrackRef,\n  segmentAriaRoleDescription,\n  onMouseDown,\n  onMouseOver,\n}: SegmentsProps<T>) {\n  const i18n = useInternalI18n('pie-chart');\n\n  const { arcFactory, highlightedArcFactory } = useMemo(() => {\n    const radius = dimensions.outerRadius;\n    const innerRadius = variant === 'pie' ? 0 : dimensions.innerRadius;\n    const cornerRadius = dimensions.cornerRadius || 0;\n\n    const arcFactory = arc<PieArcDatum<InternalChartDatum<any>>>()\n      .innerRadius(innerRadius)\n      .outerRadius(radius)\n      .cornerRadius(cornerRadius);\n\n    const highlightedArcFactory = arc<PieArcDatum<InternalChartDatum<any>>>()\n      .innerRadius(radius + 4)\n      .outerRadius(radius + 6);\n\n    return {\n      arcFactory,\n      highlightedArcFactory,\n    };\n  }, [dimensions, variant]);\n\n  const centroid = useMemo(() => {\n    for (const datum of pieData) {\n      if (datum.data.datum === highlightedSegment) {\n        const [centroidLeft, centroidTop] = arcFactory.centroid(datum);\n        return { cx: centroidLeft, cy: centroidTop };\n      }\n    }\n    return null;\n  }, [highlightedSegment, pieData, arcFactory]);\n\n  return (\n    <g>\n      {pieData.map(datum => {\n        const isHighlighted = highlightedSegment === datum.data.datum;\n        const isDimmed = highlightedSegment !== null && !isHighlighted;\n        const arcPath = arcFactory(datum) || undefined;\n        const highlightedPath = highlightedArcFactory(datum) || undefined;\n        return (\n          <g\n            key={datum.data.index}\n            onMouseDown={e => {\n              onMouseDown(datum.data);\n              e.preventDefault();\n            }}\n            onMouseOver={() => onMouseOver(datum.data)}\n            className={clsx(styles.segment, {\n              [styles['segment--highlighted']]: isHighlighted,\n              [styles['segment--dimmed']]: isDimmed,\n            })}\n            ref={isHighlighted ? focusedSegmentRef : undefined}\n            aria-label={`${datum.data.datum.title} (${datum.data.datum.value})`}\n            role=\"button\"\n            aria-roledescription={i18n('i18nStrings.segmentAriaRoleDescription', segmentAriaRoleDescription)}\n          >\n            <path d={arcPath} fill={datum.data.color} className={styles.segment__path} aria-hidden=\"true\" />\n            <path\n              d={highlightedPath}\n              fill={datum.data.color}\n              className={clsx(styles.segment__path, styles.segment__highlight)}\n              aria-hidden=\"true\"\n            />\n          </g>\n        );\n      })}\n\n      <circle {...centroid} ref={popoverTrackRef} r=\"1\" opacity=\"0\" aria-hidden=\"true\" />\n    </g>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}