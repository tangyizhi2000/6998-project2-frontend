{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useMemo } from \"react\";\n/**\n * useMergeRefs merges multiple refs into a single ref callback.\n *\n * For example:\n *  const mergedRef = useMergeRefs(ref1, ref2, ref3)\n *  <div ref={refs}>...</div>\n */\nexport function useMergeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  return useMemo(() => {\n    if (refs.every(ref => ref === null || ref === undefined)) {\n      return null;\n    }\n    return value => {\n      refs.forEach(ref => {\n        if (typeof ref === \"function\") {\n          ref(value);\n        } else if (ref !== null && ref !== undefined) {\n          ref.current = value;\n        }\n      });\n    };\n    // ESLint expects an array literal which we can not provide here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","map":{"version":3,"names":["useMemo","useMergeRefs","refs","every","ref","undefined","value","forEach","current"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/board-components/internal/utils/use-merge-refs.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useMemo } from \"react\";\n/**\n * useMergeRefs merges multiple refs into a single ref callback.\n *\n * For example:\n *  const mergedRef = useMergeRefs(ref1, ref2, ref3)\n *  <div ref={refs}>...</div>\n */\nexport function useMergeRefs(...refs) {\n    return useMemo(() => {\n        if (refs.every((ref) => ref === null || ref === undefined)) {\n            return null;\n        }\n        return (value) => {\n            refs.forEach((ref) => {\n                if (typeof ref === \"function\") {\n                    ref(value);\n                }\n                else if (ref !== null && ref !== undefined) {\n                    ref.current = value;\n                }\n            });\n        };\n        // ESLint expects an array literal which we can not provide here\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, refs);\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,OAAO,QAAQ,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAY,GAAU;EAAA,kCAANC,IAAI;IAAJA,IAAI;EAAA;EAChC,OAAOF,OAAO,CAAC,MAAM;IACjB,IAAIE,IAAI,CAACC,KAAK,CAAEC,GAAG,IAAKA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKC,SAAS,CAAC,EAAE;MACxD,OAAO,IAAI;IACf;IACA,OAAQC,KAAK,IAAK;MACdJ,IAAI,CAACK,OAAO,CAAEH,GAAG,IAAK;QAClB,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;UAC3BA,GAAG,CAACE,KAAK,CAAC;QACd,CAAC,MACI,IAAIF,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKC,SAAS,EAAE;UACxCD,GAAG,CAACI,OAAO,GAAGF,KAAK;QACvB;MACJ,CAAC,CAAC;IACN,CAAC;IACD;IACA;EACJ,CAAC,EAAEJ,IAAI,CAAC;AACZ"},"metadata":{},"sourceType":"module"}