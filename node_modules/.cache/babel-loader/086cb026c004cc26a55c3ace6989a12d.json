{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport { useDynamicOverlap } from '../internal/hooks/use-dynamic-overlap';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nexport default function InternalContentLayout(_a) {\n  var {\n      children,\n      disableOverlap,\n      header,\n      __internalRootRef\n    } = _a,\n    rest = __rest(_a, [\"children\", \"disableOverlap\", \"header\", \"__internalRootRef\"]);\n  const baseProps = getBaseProps(rest);\n  const rootElement = useRef(null);\n  const mergedRef = useMergeRefs(rootElement, __internalRootRef);\n  const isVisualRefresh = useVisualRefresh();\n  const overlapElement = useDynamicOverlap();\n  const isOverlapDisabled = !children || disableOverlap;\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.layout, {\n      [styles['is-overlap-disabled']]: isOverlapDisabled,\n      [styles['is-visual-refresh']]: isVisualRefresh,\n      [styles['has-header']]: !!header\n    }),\n    ref: mergedRef\n  }), React.createElement(\"div\", {\n    className: clsx(styles.background, {\n      [styles['is-overlap-disabled']]: isOverlapDisabled\n    }, 'awsui-context-content-header'),\n    ref: overlapElement\n  }), header && React.createElement(\"div\", {\n    className: clsx(styles.header, 'awsui-context-content-header')\n  }, header), React.createElement(\"div\", {\n    className: styles.content\n  }, children));\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,YAAY,QAAQ,4BAA4B;AAEzD,SAASC,iBAAiB,QAAQ,uCAAuC;AACzE,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,OAAOC,MAAM,MAAM,iBAAiB;AAIpC,eAAc,SAAUC,qBAAqB,CAACC,EAMjB;MANiB;MAC5CC,QAAQ;MACRC,cAAc;MACdC,MAAM;MACNC;IAAiB,MAEU;IADxBC,IAAI,cALqC,6DAM7C,CADQ;EAEP,MAAMC,SAAS,GAAGZ,YAAY,CAACW,IAAI,CAAC;EACpC,MAAME,WAAW,GAAGf,MAAM,CAAiB,IAAI,CAAC;EAChD,MAAMgB,SAAS,GAAGZ,YAAY,CAACW,WAAW,EAAEH,iBAAiB,CAAC;EAE9D,MAAMK,eAAe,GAAGZ,gBAAgB,EAAE;EAC1C,MAAMa,cAAc,GAAGf,iBAAiB,EAAE;EAE1C,MAAMgB,iBAAiB,GAAG,CAACV,QAAQ,IAAIC,cAAc;EAErD,OACEX,6CACMe,SAAS;IACbM,SAAS,EAAEnB,IAAI,CAACa,SAAS,CAACM,SAAS,EAAEd,MAAM,CAACe,MAAM,EAAE;MAClD,CAACf,MAAM,CAAC,qBAAqB,CAAC,GAAGa,iBAAiB;MAClD,CAACb,MAAM,CAAC,mBAAmB,CAAC,GAAGW,eAAe;MAC9C,CAACX,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAACK;KAC3B,CAAC;IACFW,GAAG,EAAEN;EAAS,IAEdjB;IACEqB,SAAS,EAAEnB,IAAI,CACbK,MAAM,CAACiB,UAAU,EACjB;MAAE,CAACjB,MAAM,CAAC,qBAAqB,CAAC,GAAGa;IAAiB,CAAE,EACtD,8BAA8B,CAC/B;IACDG,GAAG,EAAEJ;EAAc,EACnB,EAEDP,MAAM,IAAIZ;IAAKqB,SAAS,EAAEnB,IAAI,CAACK,MAAM,CAACK,MAAM,EAAE,8BAA8B;EAAC,GAAGA,MAAM,CAAO,EAE9FZ;IAAKqB,SAAS,EAAEd,MAAM,CAACkB;EAAO,GAAGf,QAAQ,CAAO,CAC5C;AAEV","names":["React","useRef","clsx","getBaseProps","useDynamicOverlap","useMergeRefs","useVisualRefresh","styles","InternalContentLayout","_a","children","disableOverlap","header","__internalRootRef","rest","baseProps","rootElement","mergedRef","isVisualRefresh","overlapElement","isOverlapDisabled","className","layout","ref","background","content"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/content-layout/lib/default/content-layout/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { ContentLayoutProps } from './interfaces';\nimport { getBaseProps } from '../internal/base-component';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useDynamicOverlap } from '../internal/hooks/use-dynamic-overlap';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\n\ntype InternalContentLayoutProps = ContentLayoutProps & InternalBaseComponentProps;\n\nexport default function InternalContentLayout({\n  children,\n  disableOverlap,\n  header,\n  __internalRootRef,\n  ...rest\n}: InternalContentLayoutProps) {\n  const baseProps = getBaseProps(rest);\n  const rootElement = useRef<HTMLDivElement>(null);\n  const mergedRef = useMergeRefs(rootElement, __internalRootRef);\n\n  const isVisualRefresh = useVisualRefresh();\n  const overlapElement = useDynamicOverlap();\n\n  const isOverlapDisabled = !children || disableOverlap;\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(baseProps.className, styles.layout, {\n        [styles['is-overlap-disabled']]: isOverlapDisabled,\n        [styles['is-visual-refresh']]: isVisualRefresh,\n        [styles['has-header']]: !!header,\n      })}\n      ref={mergedRef}\n    >\n      <div\n        className={clsx(\n          styles.background,\n          { [styles['is-overlap-disabled']]: isOverlapDisabled },\n          'awsui-context-content-header'\n        )}\n        ref={overlapElement}\n      />\n\n      {header && <div className={clsx(styles.header, 'awsui-context-content-header')}>{header}</div>}\n\n      <div className={styles.content}>{children}</div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}