{"ast":null,"code":"import _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nimport { useCallback, useEffect, useState } from 'react';\nexport default function useAppLayoutOffsets(element) {\n  var _useState = useState({\n      left: 0,\n      right: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    offsets = _useState2[0],\n    setOffsets = _useState2[1];\n  var updatePosition = useCallback(function () {\n    if (!element) {\n      return;\n    }\n    var _element$getBoundingC = element.getBoundingClientRect(),\n      left = _element$getBoundingC.left,\n      right = _element$getBoundingC.right;\n    var bodyWidth = document.body.clientWidth;\n    setOffsets({\n      left: left,\n      right: bodyWidth - right\n    });\n  }, [element]);\n  useEffect(function () {\n    window.addEventListener('resize', updatePosition);\n    return function () {\n      return window.removeEventListener('resize', updatePosition);\n    };\n  }, [updatePosition]);\n  var getElement = useCallback(function () {\n    return element;\n  }, [element]);\n  useResizeObserver(getElement, updatePosition);\n  return offsets;\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,SAASA,iBAAiB,QAAQ,+CAA+C;AACjF,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAExD,eAAc,SAAUC,mBAAmB,CAACC,OAA8B;EACxE,gBAA8BF,QAAQ,CAAC;MAAEG,IAAI,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAC,CAAE,CAAC;IAAA;IAAtDC,OAAO;IAAEC,UAAU;EAE1B,IAAMC,cAAc,GAAGT,WAAW,CAAC,YAAK;IACtC,IAAI,CAACI,OAAO,EAAE;MACZ;;IAEF,4BAAwBA,OAAO,CAACM,qBAAqB,EAAE;MAA/CL,IAAI,yBAAJA,IAAI;MAAEC,KAAK,yBAALA,KAAK;IACnB,IAAMK,SAAS,GAAGC,QAAQ,CAACC,IAAI,CAACC,WAAW;IAE3CN,UAAU,CAAC;MAAEH,IAAI,EAAJA,IAAI;MAAEC,KAAK,EAAEK,SAAS,GAAGL;IAAK,CAAE,CAAC;EAChD,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEbH,SAAS,CAAC,YAAK;IACbc,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEP,cAAc,CAAC;IACjD,OAAO;MAAA,OAAMM,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAER,cAAc,CAAC;IAAA;EACnE,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,IAAMS,UAAU,GAAGlB,WAAW,CAAC;IAAA,OAAMI,OAAO;EAAA,GAAE,CAACA,OAAO,CAAC,CAAC;EACxDL,iBAAiB,CAACmB,UAAU,EAAET,cAAc,CAAC;EAE7C,OAAOF,OAAO;AAChB","names":["useResizeObserver","useCallback","useEffect","useState","useAppLayoutOffsets","element","left","right","offsets","setOffsets","updatePosition","getBoundingClientRect","bodyWidth","document","body","clientWidth","window","addEventListener","removeEventListener","getElement"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/app-layout/utils/lib/default/app-layout/utils/use-content-width.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nimport { useCallback, useEffect, useState } from 'react';\n\nexport default function useAppLayoutOffsets(element: HTMLDivElement | null): { left: number; right: number } {\n  const [offsets, setOffsets] = useState({ left: 0, right: 0 });\n\n  const updatePosition = useCallback(() => {\n    if (!element) {\n      return;\n    }\n    const { left, right } = element.getBoundingClientRect();\n    const bodyWidth = document.body.clientWidth;\n\n    setOffsets({ left, right: bodyWidth - right });\n  }, [element]);\n\n  useEffect(() => {\n    window.addEventListener('resize', updatePosition);\n    return () => window.removeEventListener('resize', updatePosition);\n  }, [updatePosition]);\n\n  const getElement = useCallback(() => element, [element]);\n  useResizeObserver(getElement, updatePosition);\n\n  return offsets;\n}\n"]},"metadata":{},"sourceType":"module"}