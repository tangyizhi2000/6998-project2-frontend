{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { formatDateTime } from '../internal/utils/date-time';\nconst KB = 1000;\nconst MB = Math.pow(1000, 2);\nconst GB = Math.pow(1000, 3);\nconst TB = Math.pow(1000, 4);\nexport function formatFileSize(size) {\n  if (size < MB) {\n    return `${(size / KB).toFixed(2)} KB`;\n  }\n  if (size < GB) {\n    return `${(size / MB).toFixed(2)} MB`;\n  }\n  if (size < TB) {\n    return `${(size / GB).toFixed(2)} GB`;\n  }\n  return `${(size / TB).toFixed(2)} TB`;\n}\nexport function formatFileLastModified(date) {\n  return formatDateTime(date);\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA,SAASA,cAAc,QAAQ,6BAA6B;AAE5D,MAAMC,EAAE,GAAG,IAAI;AACf,MAAMC,EAAE,GAAGC,aAAI,EAAI,CAAC;AACpB,MAAMC,EAAE,GAAGD,aAAI,EAAI,CAAC;AACpB,MAAME,EAAE,GAAGF,aAAI,EAAI,CAAC;AAEpB,OAAM,SAAUG,cAAc,CAACC,IAAY;EACzC,IAAIA,IAAI,GAAGL,EAAE,EAAE;IACb,OAAO,GAAG,CAACK,IAAI,GAAGN,EAAE,EAAEO,OAAO,CAAC,CAAC,CAAC,KAAK;;EAEvC,IAAID,IAAI,GAAGH,EAAE,EAAE;IACb,OAAO,GAAG,CAACG,IAAI,GAAGL,EAAE,EAAEM,OAAO,CAAC,CAAC,CAAC,KAAK;;EAEvC,IAAID,IAAI,GAAGF,EAAE,EAAE;IACb,OAAO,GAAG,CAACE,IAAI,GAAGH,EAAE,EAAEI,OAAO,CAAC,CAAC,CAAC,KAAK;;EAEvC,OAAO,GAAG,CAACD,IAAI,GAAGF,EAAE,EAAEG,OAAO,CAAC,CAAC,CAAC,KAAK;AACvC;AAEA,OAAM,SAAUC,sBAAsB,CAACC,IAAU;EAC/C,OAAOV,cAAc,CAACU,IAAI,CAAC;AAC7B","names":["formatDateTime","KB","MB","Math","GB","TB","formatFileSize","size","toFixed","formatFileLastModified","date"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/file-upload/lib/default/file-upload/default-formatters.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { formatDateTime } from '../internal/utils/date-time';\n\nconst KB = 1000;\nconst MB = 1000 ** 2;\nconst GB = 1000 ** 3;\nconst TB = 1000 ** 4;\n\nexport function formatFileSize(size: number): string {\n  if (size < MB) {\n    return `${(size / KB).toFixed(2)} KB`;\n  }\n  if (size < GB) {\n    return `${(size / MB).toFixed(2)} MB`;\n  }\n  if (size < TB) {\n    return `${(size / GB).toFixed(2)} GB`;\n  }\n  return `${(size / TB).toFixed(2)} TB`;\n}\n\nexport function formatFileLastModified(date: Date): string {\n  return formatDateTime(date);\n}\n"]},"metadata":{},"sourceType":"module"}