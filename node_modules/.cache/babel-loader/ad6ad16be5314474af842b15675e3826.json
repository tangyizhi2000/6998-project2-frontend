{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/regenerator/index.js\";\nimport { __awaiter, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { FunnelStepContext, FunnelSubStepContext, FunnelContext } from '../context/analytics-context';\nimport { useFunnel, useFunnelStep } from '../hooks/use-funnel';\nimport { useUniqueId } from '../../hooks/use-unique-id';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\nimport { PACKAGE_VERSION } from '../../environment';\nimport { FunnelMetrics } from '../index';\nimport { DATA_ATTR_FUNNEL_STEP, getFunnelNameSelector, getNameFromSelector, getSubStepAllSelector, getSubStepNameSelector, getSubStepSelector } from '../selectors';\nimport { useDebounceCallback } from '../../hooks/use-debounce-callback';\nimport { nodeBelongs } from '../../utils/node-belongs';\nexport var FUNNEL_VERSION = '1.4';\nexport var AnalyticsFunnel = function AnalyticsFunnel(props) {\n  var _useFunnel = useFunnel(),\n    isInFunnel = _useFunnel.isInFunnel;\n  /*\n   If the current funnel component is a Form (i.e. single-page funnel), it should\n   defer its funnel-handling to a parent Form element, if present.\n   Wizards (i.e. multi-page funnels) always take highest precedence for handling funnels,\n   and do not defer to any other element.\n  */\n  if (isInFunnel && props.funnelType === 'single-page') {\n    return React.createElement(React.Fragment, null, props.children);\n  }\n  return React.createElement(InnerAnalyticsFunnel, Object.assign({}, props));\n};\nexport var CREATION_EDIT_FLOW_DONE_EVENT_NAME = 'awsui-creation-edit-flow-done';\nvar onFunnelCancelled = function onFunnelCancelled(_ref) {\n  var funnelInteractionId = _ref.funnelInteractionId;\n  FunnelMetrics.funnelCancelled({\n    funnelInteractionId: funnelInteractionId\n  });\n  document.dispatchEvent(new Event(CREATION_EDIT_FLOW_DONE_EVENT_NAME));\n};\nvar onFunnelComplete = function onFunnelComplete(_ref2) {\n  var funnelInteractionId = _ref2.funnelInteractionId;\n  FunnelMetrics.funnelComplete({\n    funnelInteractionId: funnelInteractionId\n  });\n  document.dispatchEvent(new Event(CREATION_EDIT_FLOW_DONE_EVENT_NAME));\n};\nfunction evaluateSelectors(selectors, defaultSelector) {\n  var _iterator = _createForOfIteratorHelper(selectors),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var selector = _step.value;\n      var element = document.querySelector(selector);\n      if (element) {\n        return selector;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return defaultSelector;\n}\nvar InnerAnalyticsFunnel = function InnerAnalyticsFunnel(_a) {\n  var children = _a.children,\n    stepConfiguration = _a.stepConfiguration,\n    props = __rest(_a, [\"children\", \"stepConfiguration\"]);\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    funnelInteractionId = _useState2[0],\n    setFunnelInteractionId = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    submissionAttempt = _useState4[0],\n    setSubmissionAttempt = _useState4[1];\n  var isVisualRefresh = useVisualRefresh();\n  var funnelState = useRef('default');\n  var funnelNameSelector = useRef(getFunnelNameSelector());\n  var errorCount = useRef(0);\n  var loadingButtonCount = useRef(0);\n  var wizardCount = useRef(0);\n  var latestFocusCleanupFunction = useRef(undefined);\n  // This useEffect hook is run once on component mount to initiate the funnel analytics.\n  // It first calls the 'funnelStart' method from FunnelMetrics, providing all necessary details\n  // about the funnel, and receives a unique interaction id.\n  // This unique interaction id is then stored in the state for further use.\n  //\n  // On component unmount, it checks whether the funnel was successfully completed.\n  // Based on this, it either calls 'funnelComplete' or 'funnelCancelled' method from FunnelMetrics.\n  //\n  // The eslint-disable is required as we deliberately want this effect to run only once on mount and unmount,\n  // hence we do not provide any dependencies.\n  useEffect(function () {\n    /*\n      We run this effect with a delay, in order to detect whether this funnel contains a Wizard.\n      If it does contain a Wizard, that Wizard should take precedence for handling the funnel, and\n      this current funnel component should do nothing.\n    */\n    var funnelInteractionId;\n    var handle = setTimeout(function () {\n      var _a;\n      funnelNameSelector.current = evaluateSelectors(props.funnelNameSelectors || [], getFunnelNameSelector());\n      if (props.funnelType === 'single-page' && wizardCount.current > 0) {\n        return;\n      }\n      // Reset the state, in case the component was re-mounted.\n      funnelState.current = 'default';\n      var singleStepFlowStepConfiguration = [{\n        number: 1,\n        isOptional: false,\n        name: (_a = getNameFromSelector(funnelNameSelector.current)) !== null && _a !== void 0 ? _a : ''\n      }];\n      funnelInteractionId = FunnelMetrics.funnelStart({\n        funnelNameSelector: funnelNameSelector.current,\n        optionalStepNumbers: props.optionalStepNumbers,\n        funnelType: props.funnelType,\n        totalFunnelSteps: props.totalFunnelSteps,\n        componentVersion: PACKAGE_VERSION,\n        theme: isVisualRefresh ? 'vr' : 'classic',\n        funnelVersion: FUNNEL_VERSION,\n        stepConfiguration: stepConfiguration !== null && stepConfiguration !== void 0 ? stepConfiguration : singleStepFlowStepConfiguration\n      });\n      setFunnelInteractionId(funnelInteractionId);\n    }, 1);\n    /*\n      A funnel counts as \"successful\" if it is unmounted after being \"complete\".\n    */\n    /* eslint-disable react-hooks/exhaustive-deps */\n    return function () {\n      clearTimeout(handle);\n      if (props.funnelType === 'single-page' && wizardCount.current > 0) {\n        return;\n      }\n      if (funnelState.current === 'validating') {\n        // Finish the validation phase early.\n        onFunnelComplete({\n          funnelInteractionId: funnelInteractionId\n        });\n        funnelState.current = 'complete';\n      }\n      if (funnelState.current === 'complete') {\n        FunnelMetrics.funnelSuccessful({\n          funnelInteractionId: funnelInteractionId\n        });\n      } else {\n        onFunnelCancelled({\n          funnelInteractionId: funnelInteractionId\n        });\n        funnelState.current = 'cancelled';\n      }\n    };\n  }, []);\n  /* eslint-enable react-hooks/exhaustive-deps */\n  var funnelSubmit = function funnelSubmit() {\n    funnelState.current = 'validating';\n    /*\n      When the user attempts to submit the form, we wait for 50 milliseconds before checking\n      if any form validation errors are present. This value was chosen to give enough time\n      for validation and rerendering to occur, but be low enough that the user will not\n      be able to take further action in the meantime.\n    */\n    var VALIDATION_WAIT_DELAY = 50;\n    /*\n     Loading is expected to take longer than validation, so we can keep the pressure on the CPU low.\n     */\n    var LOADING_WAIT_DELAY = 100;\n    var checkForCompleteness = function checkForCompleteness() {\n      if (funnelState.current === 'complete') {\n        return;\n      }\n      if (loadingButtonCount.current > 0) {\n        setTimeout(checkForCompleteness, LOADING_WAIT_DELAY);\n        return;\n      }\n      if (errorCount.current === 0) {\n        /*\n          If no validation errors are rendered, we treat the funnel as complete.\n        */\n        onFunnelComplete({\n          funnelInteractionId: funnelInteractionId\n        });\n        funnelState.current = 'complete';\n      } else {\n        funnelState.current = 'default';\n      }\n    };\n    setTimeout(checkForCompleteness, VALIDATION_WAIT_DELAY);\n  };\n  var funnelNextOrSubmitAttempt = function funnelNextOrSubmitAttempt() {\n    return setSubmissionAttempt(function (i) {\n      return i + 1;\n    });\n  };\n  var funnelCancel = function funnelCancel() {};\n  var funnelContextValue = {\n    funnelInteractionId: funnelInteractionId,\n    setFunnelInteractionId: setFunnelInteractionId,\n    funnelType: props.funnelType,\n    optionalStepNumbers: props.optionalStepNumbers,\n    totalFunnelSteps: props.totalFunnelSteps,\n    funnelNameSelector: funnelNameSelector.current,\n    funnelSubmit: funnelSubmit,\n    funnelCancel: funnelCancel,\n    submissionAttempt: submissionAttempt,\n    funnelNextOrSubmitAttempt: funnelNextOrSubmitAttempt,\n    funnelState: funnelState,\n    errorCount: errorCount,\n    loadingButtonCount: loadingButtonCount,\n    latestFocusCleanupFunction: latestFocusCleanupFunction,\n    isInFunnel: true,\n    wizardCount: wizardCount\n  };\n  return React.createElement(FunnelContext.Provider, {\n    value: funnelContextValue\n  }, children);\n};\nexport var AnalyticsFunnelStep = function AnalyticsFunnelStep(props) {\n  /*\n   This wrapper is used to apply a `key` property to the actual (inner) AnalyticsFunnelStep\n   element. This allows us to keep the state and effects separate per step.\n   */\n  return React.createElement(InnerAnalyticsFunnelStep, Object.assign({}, props, {\n    key: props.stepNumber\n  }));\n};\nfunction getSubStepConfiguration() {\n  var subSteps = Array.from(document.querySelectorAll(getSubStepAllSelector()));\n  var subStepConfiguration = subSteps.map(function (substep, index) {\n    var _a, _b, _c;\n    var name = (_c = (_b = (_a = substep.querySelector(getSubStepNameSelector())) === null || _a === void 0 ? void 0 : _a.innerText) === null || _b === void 0 ? void 0 : _b.trim()) !== null && _c !== void 0 ? _c : '';\n    return {\n      name: name,\n      number: index + 1\n    };\n  });\n  return subStepConfiguration;\n}\nfunction useStepChangeListener(handler) {\n  /*\n   Chosen so that it's hopefully shorter than a user interaction, but gives enough time for the\n   amount of containers to stabilise.\n  */\n  var SUBSTEP_CHANGE_DEBOUNCE = 50;\n  var listenForSubStepChanges = useRef(false);\n  useEffect(function () {\n    // We prevent emitting the event on the first render.\n    var handle = setTimeout(function () {\n      return listenForSubStepChanges.current = true;\n    }, SUBSTEP_CHANGE_DEBOUNCE);\n    return function () {\n      clearTimeout(handle);\n      listenForSubStepChanges.current = false;\n    };\n  }, []);\n  /* We debounce this handler, so that multiple containers can change at once without causing\n  too many events. */\n  var stepChangeCallback = useDebounceCallback(function () {\n    // We don't want to emit the event after the component has been unmounted.\n    if (!listenForSubStepChanges.current) {\n      return;\n    }\n    handler(getSubStepConfiguration());\n  }, SUBSTEP_CHANGE_DEBOUNCE);\n  return stepChangeCallback;\n}\nvar InnerAnalyticsFunnelStep = function InnerAnalyticsFunnelStep(_a) {\n  var children = _a.children,\n    stepNumber = _a.stepNumber,\n    rest = __rest(_a, [\"children\", \"stepNumber\"]);\n  var _useFunnel2 = useFunnel(),\n    funnelInteractionId = _useFunnel2.funnelInteractionId,\n    funnelNameSelector = _useFunnel2.funnelNameSelector,\n    funnelState = _useFunnel2.funnelState,\n    funnelType = _useFunnel2.funnelType;\n  var parentStep = useFunnelStep();\n  var parentStepExists = parentStep.isInStep;\n  var parentStepFunnelInteractionId = parentStep.funnelInteractionId;\n  var funnelStepProps = _defineProperty({}, DATA_ATTR_FUNNEL_STEP, stepNumber);\n  var subStepCount = useRef(0);\n  var stepNameSelector = rest.stepNameSelector || funnelNameSelector;\n  var onStepChange = useStepChangeListener(function (subStepConfiguration) {\n    var _a;\n    if (!funnelInteractionId) {\n      return;\n    }\n    var stepName = (_a = getNameFromSelector(stepNameSelector)) !== null && _a !== void 0 ? _a : '';\n    FunnelMetrics.funnelStepChange({\n      funnelInteractionId: funnelInteractionId,\n      stepNumber: stepNumber,\n      stepName: stepName,\n      stepNameSelector: stepNameSelector,\n      subStepAllSelector: getSubStepAllSelector(),\n      totalSubSteps: subStepCount.current,\n      subStepConfiguration: subStepConfiguration\n    });\n  });\n  // This useEffect hook is used to track the start and completion of interaction with the step.\n  // On mount, if there is a valid funnel interaction id, it calls the 'funnelStepStart' method from FunnelMetrics\n  // to record the beginning of the interaction with the current step.\n  // On unmount, it does a similar thing but this time calling 'funnelStepComplete' to record the completion of the interaction.\n  useEffect(function () {\n    if (!funnelInteractionId) {\n      // This step is not inside an active funnel.\n      return;\n    }\n    if (parentStepExists && parentStepFunnelInteractionId) {\n      /*\n       This step is inside another step, which already reports events as\n       part of an active funnel (i.e. that step is not a parent of a Wizard).\n       Thus, this current step does not need to report any events.\n       */\n      return;\n    }\n    var stepName = getNameFromSelector(stepNameSelector);\n    if (funnelState.current === 'default') {\n      FunnelMetrics.funnelStepStart({\n        funnelInteractionId: funnelInteractionId,\n        stepNumber: stepNumber,\n        stepName: stepName,\n        stepNameSelector: stepNameSelector,\n        subStepAllSelector: getSubStepAllSelector(),\n        totalSubSteps: subStepCount.current,\n        subStepConfiguration: getSubStepConfiguration()\n      });\n    }\n    return function () {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      if (funnelState.current !== 'cancelled') {\n        FunnelMetrics.funnelStepComplete({\n          funnelInteractionId: funnelInteractionId,\n          stepNumber: stepNumber,\n          stepName: stepName,\n          stepNameSelector: stepNameSelector,\n          subStepAllSelector: getSubStepAllSelector(),\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          totalSubSteps: subStepCount.current\n        });\n      }\n    };\n  }, [funnelInteractionId, stepNumber, stepNameSelector, funnelState, parentStepExists, funnelType, parentStepFunnelInteractionId]);\n  var contextValue = {\n    stepNumber: stepNumber,\n    stepNameSelector: stepNameSelector,\n    funnelStepProps: funnelStepProps,\n    subStepCount: subStepCount,\n    isInStep: true,\n    funnelInteractionId: funnelInteractionId,\n    onStepChange: onStepChange\n  };\n  /*\n    If this step is inside another step which already reports events as part of an active\n    funnel (i.e. that step is not a parent of a Wizard), the current step becomes invisible\n    in the hierarchy by passing the context of its parent through.\n  */\n  var effectiveContextValue = parentStepExists && parentStepFunnelInteractionId ? parentStep : contextValue;\n  return React.createElement(FunnelStepContext.Provider, {\n    value: effectiveContextValue\n  }, typeof children === 'function' ? children(effectiveContextValue) : children);\n};\nexport var AnalyticsFunnelSubStep = function AnalyticsFunnelSubStep(_ref3) {\n  var children = _ref3.children;\n  var subStepId = useUniqueId('substep');\n  var subStepSelector = getSubStepSelector(subStepId);\n  var subStepNameSelector = getSubStepNameSelector(subStepId);\n  var subStepRef = useRef(null);\n  var _useFunnelStep = useFunnelStep(),\n    subStepCount = _useFunnelStep.subStepCount,\n    onStepChange = _useFunnelStep.onStepChange;\n  var mousePressed = useRef(false);\n  var isFocusedSubStep = useRef(false);\n  var focusCleanupFunction = useRef(undefined);\n  var _useFunnel3 = useFunnel(),\n    funnelState = _useFunnel3.funnelState,\n    funnelInteractionId = _useFunnel3.funnelInteractionId;\n  var _useFunnelStep2 = useFunnelStep(),\n    stepNumber = _useFunnelStep2.stepNumber,\n    stepNameSelector = _useFunnelStep2.stepNameSelector;\n  var newContext = {\n    subStepSelector: subStepSelector,\n    subStepNameSelector: subStepNameSelector,\n    subStepId: subStepId,\n    subStepRef: subStepRef,\n    mousePressed: mousePressed,\n    isFocusedSubStep: isFocusedSubStep,\n    focusCleanupFunction: focusCleanupFunction,\n    isNestedSubStep: false\n  };\n  var inheritedContext = Object.assign(Object.assign({}, useContext(FunnelSubStepContext)), {\n    isNestedSubStep: true\n  });\n  var isNested = Boolean(inheritedContext.subStepId);\n  useEffect(function () {\n    if (!isNested) {\n      subStepCount.current++;\n      onStepChange();\n      return function () {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        subStepCount.current--;\n        onStepChange();\n      };\n    }\n  }, [isNested, subStepCount, onStepChange]);\n  var context = isNested ? inheritedContext : newContext;\n  useEffect(function () {\n    if (isNested || !subStepRef.current) {\n      return;\n    }\n    var onMouseDown = function onMouseDown() {\n      return mousePressed.current = true;\n    };\n    var onMouseUp = function onMouseUp() {\n      return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _a;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                mousePressed.current = false;\n                if (isFocusedSubStep.current) {\n                  _context.next = 3;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 3:\n                _context.next = 5;\n                return new Promise(function (r) {\n                  return setTimeout(r, 1);\n                });\n              case 5:\n                if (!subStepRef.current || !document.activeElement || !nodeBelongs(subStepRef.current, document.activeElement)) {\n                  isFocusedSubStep.current = false;\n                  /*\n                   Run this substep's own focus cleanup function if another substep\n                   hasn't already done it for us.\n                   */\n                  (_a = focusCleanupFunction.current) === null || _a === void 0 ? void 0 : _a.call(focusCleanupFunction);\n                }\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    };\n    window.addEventListener('mousedown', onMouseDown);\n    window.addEventListener('mouseup', onMouseUp);\n    return function () {\n      window.removeEventListener('mousedown', onMouseDown);\n      window.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [funnelInteractionId, funnelState, stepNameSelector, stepNumber, subStepNameSelector, subStepSelector, focusCleanupFunction, isNested, subStepRef]);\n  return React.createElement(FunnelSubStepContext.Provider, {\n    value: context\n  }, typeof children === 'function' ? children(context) : children);\n};","map":{"version":3,"mappings":"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","names":["React","useContext","useEffect","useRef","useState","FunnelStepContext","FunnelSubStepContext","FunnelContext","useFunnel","useFunnelStep","useUniqueId","useVisualRefresh","PACKAGE_VERSION","FunnelMetrics","DATA_ATTR_FUNNEL_STEP","getFunnelNameSelector","getNameFromSelector","getSubStepAllSelector","getSubStepNameSelector","getSubStepSelector","useDebounceCallback","nodeBelongs","FUNNEL_VERSION","AnalyticsFunnel","props","isInFunnel","funnelType","children","InnerAnalyticsFunnel","CREATION_EDIT_FLOW_DONE_EVENT_NAME","onFunnelCancelled","funnelInteractionId","funnelCancelled","document","dispatchEvent","Event","onFunnelComplete","funnelComplete","evaluateSelectors","selectors","defaultSelector","selector","element","querySelector","_a","stepConfiguration","setFunnelInteractionId","submissionAttempt","setSubmissionAttempt","isVisualRefresh","funnelState","funnelNameSelector","errorCount","loadingButtonCount","wizardCount","latestFocusCleanupFunction","undefined","handle","setTimeout","current","funnelNameSelectors","singleStepFlowStepConfiguration","number","isOptional","name","funnelStart","optionalStepNumbers","totalFunnelSteps","componentVersion","theme","funnelVersion","clearTimeout","funnelSuccessful","funnelSubmit","VALIDATION_WAIT_DELAY","LOADING_WAIT_DELAY","checkForCompleteness","funnelNextOrSubmitAttempt","i","funnelCancel","funnelContextValue","Provider","value","AnalyticsFunnelStep","InnerAnalyticsFunnelStep","key","stepNumber","getSubStepConfiguration","subSteps","Array","from","querySelectorAll","subStepConfiguration","map","substep","index","innerText","trim","useStepChangeListener","handler","SUBSTEP_CHANGE_DEBOUNCE","listenForSubStepChanges","stepChangeCallback","rest","parentStep","parentStepExists","isInStep","parentStepFunnelInteractionId","funnelStepProps","subStepCount","stepNameSelector","onStepChange","stepName","funnelStepChange","subStepAllSelector","totalSubSteps","funnelStepStart","funnelStepComplete","contextValue","effectiveContextValue","AnalyticsFunnelSubStep","subStepId","subStepSelector","subStepNameSelector","subStepRef","mousePressed","isFocusedSubStep","focusCleanupFunction","newContext","isNestedSubStep","inheritedContext","isNested","Boolean","context","onMouseDown","onMouseUp","__awaiter","Promise","r","activeElement","window","addEventListener","removeEventListener"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/analytics/components/lib/default/internal/analytics/components/analytics-funnel.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext, useEffect, useRef, useState } from 'react';\n\nimport {\n  FunnelStepContext,\n  FunnelSubStepContext,\n  FunnelContext,\n  FunnelContextValue,\n  FunnelStepContextValue,\n  FunnelState,\n  FunnelSubStepContextValue,\n} from '../context/analytics-context';\nimport { useFunnel, useFunnelStep } from '../hooks/use-funnel';\nimport { useUniqueId } from '../../hooks/use-unique-id';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\n\nimport { PACKAGE_VERSION } from '../../environment';\n\nimport { FunnelMetrics } from '../index';\nimport { FunnelProps, FunnelStepProps, StepConfiguration, SubStepConfiguration } from '../interfaces';\n\nimport {\n  DATA_ATTR_FUNNEL_STEP,\n  getFunnelNameSelector,\n  getNameFromSelector,\n  getSubStepAllSelector,\n  getSubStepNameSelector,\n  getSubStepSelector,\n} from '../selectors';\nimport { useDebounceCallback } from '../../hooks/use-debounce-callback';\nimport { nodeBelongs } from '../../utils/node-belongs';\n\nexport const FUNNEL_VERSION = '1.4';\n\ninterface AnalyticsFunnelProps {\n  children?: React.ReactNode;\n  stepConfiguration?: StepConfiguration[];\n  funnelNameSelectors?: string[];\n  funnelType: FunnelProps['funnelType'];\n  optionalStepNumbers: FunnelProps['optionalStepNumbers'];\n  totalFunnelSteps: FunnelProps['totalFunnelSteps'];\n}\n\nexport const AnalyticsFunnel = (props: AnalyticsFunnelProps) => {\n  const { isInFunnel } = useFunnel();\n  /*\n   If the current funnel component is a Form (i.e. single-page funnel), it should\n   defer its funnel-handling to a parent Form element, if present.\n   Wizards (i.e. multi-page funnels) always take highest precedence for handling funnels,\n   and do not defer to any other element.\n  */\n  if (isInFunnel && props.funnelType === 'single-page') {\n    return <>{props.children}</>;\n  }\n\n  return <InnerAnalyticsFunnel {...props} />;\n};\nexport const CREATION_EDIT_FLOW_DONE_EVENT_NAME = 'awsui-creation-edit-flow-done';\n\nconst onFunnelCancelled = ({ funnelInteractionId }: { funnelInteractionId: string }) => {\n  FunnelMetrics.funnelCancelled({ funnelInteractionId });\n  document.dispatchEvent(new Event(CREATION_EDIT_FLOW_DONE_EVENT_NAME));\n};\n\nconst onFunnelComplete = ({ funnelInteractionId }: { funnelInteractionId: string }) => {\n  FunnelMetrics.funnelComplete({ funnelInteractionId });\n  document.dispatchEvent(new Event(CREATION_EDIT_FLOW_DONE_EVENT_NAME));\n};\n\nfunction evaluateSelectors(selectors: string[], defaultSelector: string) {\n  for (const selector of selectors) {\n    const element = document.querySelector(selector);\n    if (element) {\n      return selector;\n    }\n  }\n\n  return defaultSelector;\n}\n\nconst InnerAnalyticsFunnel = ({ children, stepConfiguration, ...props }: AnalyticsFunnelProps) => {\n  const [funnelInteractionId, setFunnelInteractionId] = useState<string>('');\n  const [submissionAttempt, setSubmissionAttempt] = useState(0);\n  const isVisualRefresh = useVisualRefresh();\n  const funnelState = useRef<FunnelState>('default');\n  const funnelNameSelector = useRef<string>(getFunnelNameSelector());\n  const errorCount = useRef<number>(0);\n  const loadingButtonCount = useRef<number>(0);\n  const wizardCount = useRef<number>(0);\n  const latestFocusCleanupFunction = useRef<undefined | (() => void)>(undefined);\n\n  // This useEffect hook is run once on component mount to initiate the funnel analytics.\n  // It first calls the 'funnelStart' method from FunnelMetrics, providing all necessary details\n  // about the funnel, and receives a unique interaction id.\n  // This unique interaction id is then stored in the state for further use.\n  //\n  // On component unmount, it checks whether the funnel was successfully completed.\n  // Based on this, it either calls 'funnelComplete' or 'funnelCancelled' method from FunnelMetrics.\n  //\n  // The eslint-disable is required as we deliberately want this effect to run only once on mount and unmount,\n  // hence we do not provide any dependencies.\n  useEffect(() => {\n    /*\n      We run this effect with a delay, in order to detect whether this funnel contains a Wizard.\n      If it does contain a Wizard, that Wizard should take precedence for handling the funnel, and\n      this current funnel component should do nothing.\n    */\n    let funnelInteractionId: string;\n    const handle = setTimeout(() => {\n      funnelNameSelector.current = evaluateSelectors(props.funnelNameSelectors || [], getFunnelNameSelector());\n\n      if (props.funnelType === 'single-page' && wizardCount.current > 0) {\n        return;\n      }\n\n      // Reset the state, in case the component was re-mounted.\n      funnelState.current = 'default';\n\n      const singleStepFlowStepConfiguration = [\n        { number: 1, isOptional: false, name: getNameFromSelector(funnelNameSelector.current) ?? '' },\n      ];\n\n      funnelInteractionId = FunnelMetrics.funnelStart({\n        funnelNameSelector: funnelNameSelector.current,\n        optionalStepNumbers: props.optionalStepNumbers,\n        funnelType: props.funnelType,\n        totalFunnelSteps: props.totalFunnelSteps,\n        componentVersion: PACKAGE_VERSION,\n        theme: isVisualRefresh ? 'vr' : 'classic',\n        funnelVersion: FUNNEL_VERSION,\n        stepConfiguration: stepConfiguration ?? singleStepFlowStepConfiguration,\n      });\n\n      setFunnelInteractionId(funnelInteractionId);\n    }, 1);\n\n    /*\n      A funnel counts as \"successful\" if it is unmounted after being \"complete\".\n    */\n    /* eslint-disable react-hooks/exhaustive-deps */\n    return () => {\n      clearTimeout(handle);\n      if (props.funnelType === 'single-page' && wizardCount.current > 0) {\n        return;\n      }\n\n      if (funnelState.current === 'validating') {\n        // Finish the validation phase early.\n        onFunnelComplete({ funnelInteractionId });\n        funnelState.current = 'complete';\n      }\n\n      if (funnelState.current === 'complete') {\n        FunnelMetrics.funnelSuccessful({ funnelInteractionId });\n      } else {\n        onFunnelCancelled({ funnelInteractionId });\n        funnelState.current = 'cancelled';\n      }\n    };\n  }, []);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  const funnelSubmit = () => {\n    funnelState.current = 'validating';\n\n    /*\n      When the user attempts to submit the form, we wait for 50 milliseconds before checking\n      if any form validation errors are present. This value was chosen to give enough time\n      for validation and rerendering to occur, but be low enough that the user will not\n      be able to take further action in the meantime.\n    */\n    const VALIDATION_WAIT_DELAY = 50;\n    /*\n     Loading is expected to take longer than validation, so we can keep the pressure on the CPU low.\n     */\n    const LOADING_WAIT_DELAY = 100;\n\n    const checkForCompleteness = () => {\n      if (funnelState.current === 'complete') {\n        return;\n      }\n\n      if (loadingButtonCount.current > 0) {\n        setTimeout(checkForCompleteness, LOADING_WAIT_DELAY);\n        return;\n      }\n\n      if (errorCount.current === 0) {\n        /*\n          If no validation errors are rendered, we treat the funnel as complete.\n        */\n        onFunnelComplete({ funnelInteractionId });\n        funnelState.current = 'complete';\n      } else {\n        funnelState.current = 'default';\n      }\n    };\n\n    setTimeout(checkForCompleteness, VALIDATION_WAIT_DELAY);\n  };\n\n  const funnelNextOrSubmitAttempt = () => setSubmissionAttempt(i => i + 1);\n\n  const funnelCancel = () => {};\n\n  const funnelContextValue: FunnelContextValue = {\n    funnelInteractionId,\n    setFunnelInteractionId,\n    funnelType: props.funnelType,\n    optionalStepNumbers: props.optionalStepNumbers,\n    totalFunnelSteps: props.totalFunnelSteps,\n    funnelNameSelector: funnelNameSelector.current,\n    funnelSubmit,\n    funnelCancel,\n    submissionAttempt,\n    funnelNextOrSubmitAttempt,\n    funnelState,\n    errorCount,\n    loadingButtonCount,\n    latestFocusCleanupFunction,\n    isInFunnel: true,\n    wizardCount,\n  };\n\n  return <FunnelContext.Provider value={funnelContextValue}>{children}</FunnelContext.Provider>;\n};\n\ninterface AnalyticsFunnelStepProps {\n  children?: React.ReactNode | ((props: FunnelStepContextValue) => React.ReactNode);\n  stepNameSelector?: FunnelStepProps['stepNameSelector'];\n  stepNumber: FunnelStepProps['stepNumber'];\n}\n\nexport const AnalyticsFunnelStep = (props: AnalyticsFunnelStepProps) => {\n  /*\n   This wrapper is used to apply a `key` property to the actual (inner) AnalyticsFunnelStep\n   element. This allows us to keep the state and effects separate per step.\n   */\n  return <InnerAnalyticsFunnelStep {...props} key={props.stepNumber} />;\n};\n\nfunction getSubStepConfiguration() {\n  const subSteps = Array.from(document.querySelectorAll<HTMLElement>(getSubStepAllSelector()));\n\n  const subStepConfiguration = subSteps.map((substep, index) => {\n    const name = substep.querySelector<HTMLElement>(getSubStepNameSelector())?.innerText?.trim() ?? '';\n    return {\n      name,\n      number: index + 1,\n    };\n  });\n  return subStepConfiguration;\n}\n\nfunction useStepChangeListener(handler: (stepConfiguration: SubStepConfiguration[]) => void) {\n  /*\n   Chosen so that it's hopefully shorter than a user interaction, but gives enough time for the\n   amount of containers to stabilise.\n  */\n  const SUBSTEP_CHANGE_DEBOUNCE = 50;\n\n  const listenForSubStepChanges = useRef(false);\n  useEffect(() => {\n    // We prevent emitting the event on the first render.\n    const handle = setTimeout(() => (listenForSubStepChanges.current = true), SUBSTEP_CHANGE_DEBOUNCE);\n\n    return () => {\n      clearTimeout(handle);\n      listenForSubStepChanges.current = false;\n    };\n  }, []);\n\n  /* We debounce this handler, so that multiple containers can change at once without causing \n  too many events. */\n  const stepChangeCallback = useDebounceCallback(() => {\n    // We don't want to emit the event after the component has been unmounted.\n    if (!listenForSubStepChanges.current) {\n      return;\n    }\n\n    handler(getSubStepConfiguration());\n  }, SUBSTEP_CHANGE_DEBOUNCE);\n\n  return stepChangeCallback;\n}\n\nconst InnerAnalyticsFunnelStep = ({ children, stepNumber, ...rest }: AnalyticsFunnelStepProps) => {\n  const { funnelInteractionId, funnelNameSelector, funnelState, funnelType } = useFunnel();\n  const parentStep = useFunnelStep();\n  const parentStepExists = parentStep.isInStep;\n  const parentStepFunnelInteractionId = parentStep.funnelInteractionId;\n\n  const funnelStepProps = { [DATA_ATTR_FUNNEL_STEP]: stepNumber };\n\n  const subStepCount = useRef<number>(0);\n\n  const stepNameSelector = rest.stepNameSelector || funnelNameSelector;\n  const onStepChange = useStepChangeListener(subStepConfiguration => {\n    if (!funnelInteractionId) {\n      return;\n    }\n    const stepName = getNameFromSelector(stepNameSelector) ?? '';\n\n    FunnelMetrics.funnelStepChange({\n      funnelInteractionId,\n      stepNumber,\n      stepName,\n      stepNameSelector,\n      subStepAllSelector: getSubStepAllSelector(),\n      totalSubSteps: subStepCount.current,\n      subStepConfiguration,\n    });\n  });\n\n  // This useEffect hook is used to track the start and completion of interaction with the step.\n  // On mount, if there is a valid funnel interaction id, it calls the 'funnelStepStart' method from FunnelMetrics\n  // to record the beginning of the interaction with the current step.\n  // On unmount, it does a similar thing but this time calling 'funnelStepComplete' to record the completion of the interaction.\n  useEffect(() => {\n    if (!funnelInteractionId) {\n      // This step is not inside an active funnel.\n      return;\n    }\n    if (parentStepExists && parentStepFunnelInteractionId) {\n      /*\n       This step is inside another step, which already reports events as\n       part of an active funnel (i.e. that step is not a parent of a Wizard).\n       Thus, this current step does not need to report any events.\n       */\n      return;\n    }\n\n    const stepName = getNameFromSelector(stepNameSelector);\n\n    if (funnelState.current === 'default') {\n      FunnelMetrics.funnelStepStart({\n        funnelInteractionId,\n        stepNumber,\n        stepName,\n        stepNameSelector,\n        subStepAllSelector: getSubStepAllSelector(),\n        totalSubSteps: subStepCount.current,\n        subStepConfiguration: getSubStepConfiguration(),\n      });\n    }\n\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      if (funnelState.current !== 'cancelled') {\n        FunnelMetrics.funnelStepComplete({\n          funnelInteractionId,\n          stepNumber,\n          stepName,\n          stepNameSelector,\n          subStepAllSelector: getSubStepAllSelector(),\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          totalSubSteps: subStepCount.current,\n        });\n      }\n    };\n  }, [\n    funnelInteractionId,\n    stepNumber,\n    stepNameSelector,\n    funnelState,\n    parentStepExists,\n    funnelType,\n    parentStepFunnelInteractionId,\n  ]);\n\n  const contextValue: FunnelStepContextValue = {\n    stepNumber,\n    stepNameSelector,\n    funnelStepProps,\n    subStepCount,\n    isInStep: true,\n    funnelInteractionId,\n    onStepChange,\n  };\n\n  /*\n    If this step is inside another step which already reports events as part of an active\n    funnel (i.e. that step is not a parent of a Wizard), the current step becomes invisible\n    in the hierarchy by passing the context of its parent through.\n  */\n  const effectiveContextValue = parentStepExists && parentStepFunnelInteractionId ? parentStep : contextValue;\n\n  return (\n    <FunnelStepContext.Provider value={effectiveContextValue}>\n      {typeof children === 'function' ? children(effectiveContextValue) : children}\n    </FunnelStepContext.Provider>\n  );\n};\ninterface AnalyticsFunnelSubStepProps {\n  children?: React.ReactNode | ((props: FunnelSubStepContextValue) => React.ReactNode);\n}\n\nexport const AnalyticsFunnelSubStep = ({ children }: AnalyticsFunnelSubStepProps) => {\n  const subStepId = useUniqueId('substep');\n  const subStepSelector = getSubStepSelector(subStepId);\n  const subStepNameSelector = getSubStepNameSelector(subStepId);\n  const subStepRef = useRef<HTMLDivElement | null>(null);\n  const { subStepCount, onStepChange } = useFunnelStep();\n  const mousePressed = useRef<boolean>(false);\n  const isFocusedSubStep = useRef<boolean>(false);\n  const focusCleanupFunction = useRef<undefined | (() => void)>(undefined);\n  const { funnelState, funnelInteractionId } = useFunnel();\n  const { stepNumber, stepNameSelector } = useFunnelStep();\n\n  const newContext: FunnelSubStepContextValue = {\n    subStepSelector,\n    subStepNameSelector,\n    subStepId,\n    subStepRef,\n    mousePressed,\n    isFocusedSubStep,\n    focusCleanupFunction,\n    isNestedSubStep: false,\n  };\n\n  const inheritedContext = { ...useContext(FunnelSubStepContext), isNestedSubStep: true };\n\n  const isNested = Boolean(inheritedContext.subStepId);\n\n  useEffect(() => {\n    if (!isNested) {\n      subStepCount.current++;\n      onStepChange();\n\n      return () => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        subStepCount.current--;\n        onStepChange();\n      };\n    }\n  }, [isNested, subStepCount, onStepChange]);\n\n  const context = isNested ? inheritedContext : newContext;\n\n  useEffect(() => {\n    if (isNested || !subStepRef.current) {\n      return;\n    }\n\n    const onMouseDown = () => (mousePressed.current = true);\n\n    const onMouseUp = async () => {\n      mousePressed.current = false;\n\n      if (!isFocusedSubStep.current) {\n        return;\n      }\n\n      /*\n        Some mouse events result in an element being focused. However,\n        this happens only _after_ the onMouseUp event. We yield the\n        event loop here, so that `document.activeElement` has the\n        correct new value.      \n      */\n      await new Promise(r => setTimeout(r, 1));\n\n      if (!subStepRef.current || !document.activeElement || !nodeBelongs(subStepRef.current, document.activeElement)) {\n        isFocusedSubStep.current = false;\n\n        /*\n         Run this substep's own focus cleanup function if another substep\n         hasn't already done it for us.\n         */\n        focusCleanupFunction.current?.();\n      }\n    };\n    window.addEventListener('mousedown', onMouseDown);\n    window.addEventListener('mouseup', onMouseUp);\n    return () => {\n      window.removeEventListener('mousedown', onMouseDown);\n      window.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [\n    funnelInteractionId,\n    funnelState,\n    stepNameSelector,\n    stepNumber,\n    subStepNameSelector,\n    subStepSelector,\n    focusCleanupFunction,\n    isNested,\n    subStepRef,\n  ]);\n\n  return (\n    <FunnelSubStepContext.Provider value={context}>\n      {typeof children === 'function' ? children(context) : children}\n    </FunnelSubStepContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}