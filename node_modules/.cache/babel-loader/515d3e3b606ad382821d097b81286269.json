{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __rest } from \"tslib\";\nimport React from 'react';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalCalendar from './internal';\nexport default function Calendar(_a) {\n  var {\n      locale = '',\n      isDateEnabled = () => true\n    } = _a,\n    props = __rest(_a, [\"locale\", \"isDateEnabled\"]);\n  const baseComponentProps = useBaseComponent('Calendar');\n  return React.createElement(InternalCalendar, Object.assign({}, props, baseComponentProps, {\n    locale: locale,\n    isDateEnabled: isDateEnabled\n  }));\n}\napplyDisplayName(Calendar, 'Calendar');","map":{"version":3,"mappings":"AAAA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AAEvE,OAAOC,gBAAgB,MAAM,YAAY;AAIzC,eAAc,SAAUC,QAAQ,CAACC,EAAoE;MAApE;MAAEC,MAAM,GAAG,EAAE;MAAEC,aAAa,GAAG,MAAM;IAAI,MAA2B;IAAtBC,KAAK,cAAnD,2BAAqD,CAAF;EAClF,MAAMC,kBAAkB,GAAGR,gBAAgB,CAAC,UAAU,CAAC;EACvD,OAAOD,oBAACG,gBAAgB,oBAAKK,KAAK,EAAMC,kBAAkB;IAAEH,MAAM,EAAEA,MAAM;IAAEC,aAAa,EAAEA;EAAa,GAAI;AAC9G;AAEAL,gBAAgB,CAACE,QAAQ,EAAE,UAAU,CAAC","names":["React","useBaseComponent","applyDisplayName","InternalCalendar","Calendar","_a","locale","isDateEnabled","props","baseComponentProps"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/calendar/lib/default/calendar/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { CalendarProps } from './interfaces';\nimport InternalCalendar from './internal';\n\nexport { CalendarProps };\n\nexport default function Calendar({ locale = '', isDateEnabled = () => true, ...props }: CalendarProps) {\n  const baseComponentProps = useBaseComponent('Calendar');\n  return <InternalCalendar {...props} {...baseComponentProps} locale={locale} isDateEnabled={isDateEnabled} />;\n}\n\napplyDisplayName(Calendar, 'Calendar');\n"]},"metadata":{},"sourceType":"module"}