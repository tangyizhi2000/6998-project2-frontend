{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport class PromiseCancelledSignal {}\n/**\n * Wrap and provide a handle for a promise to provide cancellation information inside\n * callbacks. Takes a similar approach to how an AbortController works in modern fetch.\n *\n * @see https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\n */\nexport function makeCancellable(promise) {\n  let cancelled = false;\n  const wrapped = promise.then(value => {\n    if (cancelled) {\n      throw new PromiseCancelledSignal();\n    }\n    return value;\n  }, err => {\n    if (cancelled) {\n      throw new PromiseCancelledSignal();\n    }\n    throw err;\n  });\n  return {\n    promise: wrapped,\n    cancel: () => {\n      cancelled = true;\n    },\n    isCancelled: () => cancelled\n  };\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAM,MAAOA,sBAAsB;AAEnC;;;;;;AAMA,OAAM,SAAUC,eAAe,CAAIC,OAAmB;EAKpD,IAAIC,SAAS,GAAG,KAAK;EACrB,MAAMC,OAAO,GAAGF,OAAO,CAACG,IAAI,CAC1BC,KAAK,IAAG;IACN,IAAIH,SAAS,EAAE;MACb,MAAM,IAAIH,sBAAsB,EAAE;;IAEpC,OAAOM,KAAK;EACd,CAAC,EACDC,GAAG,IAAG;IACJ,IAAIJ,SAAS,EAAE;MACb,MAAM,IAAIH,sBAAsB,EAAE;;IAEpC,MAAMO,GAAG;EACX,CAAC,CACF;EAED,OAAO;IACLL,OAAO,EAAEE,OAAO;IAChBI,MAAM,EAAE,MAAK;MACXL,SAAS,GAAG,IAAI;IAClB,CAAC;IACDM,WAAW,EAAE,MAAMN;GACpB;AACH","names":["PromiseCancelledSignal","makeCancellable","promise","cancelled","wrapped","then","value","err","cancel","isCancelled"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/utils/lib/default/internal/utils/promises.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport class PromiseCancelledSignal {}\n\n/**\n * Wrap and provide a handle for a promise to provide cancellation information inside\n * callbacks. Takes a similar approach to how an AbortController works in modern fetch.\n *\n * @see https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\n */\nexport function makeCancellable<T>(promise: Promise<T>): {\n  promise: Promise<T>;\n  cancel: () => void;\n  isCancelled: () => boolean;\n} {\n  let cancelled = false;\n  const wrapped = promise.then(\n    value => {\n      if (cancelled) {\n        throw new PromiseCancelledSignal();\n      }\n      return value;\n    },\n    err => {\n      if (cancelled) {\n        throw new PromiseCancelledSignal();\n      }\n      throw err;\n    }\n  );\n\n  return {\n    promise: wrapped,\n    cancel: () => {\n      cancelled = true;\n    },\n    isCancelled: () => cancelled,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}