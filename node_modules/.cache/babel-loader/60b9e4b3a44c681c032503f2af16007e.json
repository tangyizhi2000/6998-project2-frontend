{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useContext } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { InfoLinkLabelContext } from '../internal/context/info-link-label-context';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { DATA_ATTR_FUNNEL_KEY, FUNNEL_KEY_SUBSTEP_NAME } from '../internal/analytics/selectors';\nexport default function InternalHeader(_a) {\n  var {\n      variant,\n      headingTagOverride,\n      children,\n      actions,\n      counter,\n      description,\n      info,\n      __internalRootRef = null,\n      __disableActionsWrapping\n    } = _a,\n    restProps = __rest(_a, [\"variant\", \"headingTagOverride\", \"children\", \"actions\", \"counter\", \"description\", \"info\", \"__internalRootRef\", \"__disableActionsWrapping\"]);\n  const isMobile = useMobile();\n  const HeadingTag = headingTagOverride !== null && headingTagOverride !== void 0 ? headingTagOverride : variant === 'awsui-h1-sticky' ? 'h1' : variant;\n  const {\n    isStuck\n  } = useContext(StickyHeaderContext);\n  const baseProps = getBaseProps(restProps);\n  const isRefresh = useVisualRefresh();\n  const assignHeaderId = useContext(CollectionLabelContext).assignId;\n  const headingId = useUniqueId('heading');\n  if (assignHeaderId !== undefined) {\n    assignHeaderId(headingId);\n  }\n  // If is mobile there is no need to have the dynamic variant because it's scrolled out of view\n  const dynamicVariant = !isMobile && isStuck ? 'h2' : 'h1';\n  const variantOverride = variant === 'awsui-h1-sticky' ? isRefresh ? dynamicVariant : 'h2' : variant;\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(styles.root, baseProps.className, styles[`root-variant-${variantOverride}`], isRefresh && styles.refresh, !actions && [styles[`root-no-actions`]], description && [styles[`root-has-description`]]),\n    ref: __internalRootRef\n  }), React.createElement(\"div\", {\n    className: clsx(styles.main, styles[`main-variant-${variantOverride}`], isRefresh && styles.refresh, __disableActionsWrapping && [styles['no-wrap']])\n  }, React.createElement(\"div\", {\n    className: clsx(styles.title, styles[`title-variant-${variantOverride}`], isRefresh && styles.refresh)\n  }, React.createElement(HeadingTag, {\n    className: clsx(styles.heading, styles[`heading-variant-${variantOverride}`])\n  }, React.createElement(\"span\", Object.assign({}, HeadingTag === 'h2' ? {\n    [DATA_ATTR_FUNNEL_KEY]: FUNNEL_KEY_SUBSTEP_NAME\n  } : {}, {\n    className: clsx(styles['heading-text'], styles[`heading-text-variant-${variantOverride}`]),\n    id: headingId\n  }), children), counter !== undefined && React.createElement(\"span\", {\n    className: styles.counter\n  }, \" \", counter)), info && React.createElement(InfoLinkLabelContext.Provider, {\n    value: headingId\n  }, React.createElement(\"span\", {\n    className: styles['virtual-space']\n  }, \" \\u00A0\"), React.createElement(\"span\", {\n    className: styles.info\n  }, info))), actions && React.createElement(\"div\", {\n    className: clsx(styles.actions, styles[`actions-variant-${variantOverride}`], isRefresh && styles.refresh, !__disableActionsWrapping && [styles['actions-centered']])\n  }, actions)), React.createElement(Description, {\n    variantOverride: variantOverride\n  }, description));\n}\nexport function Description(_ref) {\n  let {\n    children,\n    variantOverride\n  } = _ref;\n  const isRefresh = useVisualRefresh();\n  return children && React.createElement(\"p\", {\n    className: clsx(styles.description, styles[`description-variant-${variantOverride}`], isRefresh && styles.refresh)\n  }, children) || null;\n}","map":{"version":3,"mappings":"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","names":["clsx","React","useContext","getBaseProps","StickyHeaderContext","useVisualRefresh","styles","useMobile","InfoLinkLabelContext","CollectionLabelContext","useUniqueId","DATA_ATTR_FUNNEL_KEY","FUNNEL_KEY_SUBSTEP_NAME","InternalHeader","_a","variant","headingTagOverride","children","actions","counter","description","info","__internalRootRef","__disableActionsWrapping","restProps","isMobile","HeadingTag","isStuck","baseProps","isRefresh","assignHeaderId","assignId","headingId","undefined","dynamicVariant","variantOverride","className","root","refresh","ref","main","title","heading","id","Provider","value","Description"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/header/lib/default/header/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useContext } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { HeaderProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { SomeRequired } from '../internal/types';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { InfoLinkLabelContext } from '../internal/context/info-link-label-context';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { DATA_ATTR_FUNNEL_KEY, FUNNEL_KEY_SUBSTEP_NAME } from '../internal/analytics/selectors';\n\ninterface InternalHeaderProps extends SomeRequired<HeaderProps, 'variant'>, InternalBaseComponentProps {\n  __disableActionsWrapping?: boolean;\n}\n\nexport default function InternalHeader({\n  variant,\n  headingTagOverride,\n  children,\n  actions,\n  counter,\n  description,\n  info,\n  __internalRootRef = null,\n  __disableActionsWrapping,\n  ...restProps\n}: InternalHeaderProps) {\n  const isMobile = useMobile();\n  const HeadingTag = headingTagOverride ?? (variant === 'awsui-h1-sticky' ? 'h1' : variant);\n  const { isStuck } = useContext(StickyHeaderContext);\n  const baseProps = getBaseProps(restProps);\n  const isRefresh = useVisualRefresh();\n  const assignHeaderId = useContext(CollectionLabelContext).assignId;\n  const headingId = useUniqueId('heading');\n  if (assignHeaderId !== undefined) {\n    assignHeaderId(headingId);\n  }\n  // If is mobile there is no need to have the dynamic variant because it's scrolled out of view\n  const dynamicVariant = !isMobile && isStuck ? 'h2' : 'h1';\n  const variantOverride = variant === 'awsui-h1-sticky' ? (isRefresh ? dynamicVariant : 'h2') : variant;\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(\n        styles.root,\n        baseProps.className,\n        styles[`root-variant-${variantOverride}`],\n        isRefresh && styles.refresh,\n        !actions && [styles[`root-no-actions`]],\n        description && [styles[`root-has-description`]]\n      )}\n      ref={__internalRootRef}\n    >\n      <div\n        className={clsx(\n          styles.main,\n          styles[`main-variant-${variantOverride}`],\n          isRefresh && styles.refresh,\n          __disableActionsWrapping && [styles['no-wrap']]\n        )}\n      >\n        <div className={clsx(styles.title, styles[`title-variant-${variantOverride}`], isRefresh && styles.refresh)}>\n          <HeadingTag className={clsx(styles.heading, styles[`heading-variant-${variantOverride}`])}>\n            <span\n              {...(HeadingTag === 'h2' ? { [DATA_ATTR_FUNNEL_KEY]: FUNNEL_KEY_SUBSTEP_NAME } : {})}\n              className={clsx(styles['heading-text'], styles[`heading-text-variant-${variantOverride}`])}\n              id={headingId}\n            >\n              {children}\n            </span>\n            {counter !== undefined && <span className={styles.counter}> {counter}</span>}\n          </HeadingTag>\n          {info && (\n            <InfoLinkLabelContext.Provider value={headingId}>\n              {/* Exists to create a space between heading text and info so that a double-click selection on the last word of the heading doesn't also include info */}\n              <span className={styles['virtual-space']}> &nbsp;</span>\n              <span className={styles.info}>{info}</span>\n            </InfoLinkLabelContext.Provider>\n          )}\n        </div>\n        {actions && (\n          <div\n            className={clsx(\n              styles.actions,\n              styles[`actions-variant-${variantOverride}`],\n              isRefresh && styles.refresh,\n              !__disableActionsWrapping && [styles['actions-centered']]\n            )}\n          >\n            {actions}\n          </div>\n        )}\n      </div>\n      <Description variantOverride={variantOverride}>{description}</Description>\n    </div>\n  );\n}\n\nexport function Description({ children, variantOverride }: { children: React.ReactNode; variantOverride: string }) {\n  const isRefresh = useVisualRefresh();\n  return (\n    (children && (\n      <p\n        className={clsx(\n          styles.description,\n          styles[`description-variant-${variantOverride}`],\n          isRefresh && styles.refresh\n        )}\n      >\n        {children}\n      </p>\n    )) ||\n    null\n  );\n}\n"]},"metadata":{},"sourceType":"module"}