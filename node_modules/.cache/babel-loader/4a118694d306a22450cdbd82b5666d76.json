{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport InternalIcon from '../../icon/internal';\nimport ItemsList from '../items-list';\nimport Dropdown from '../../internal/components/dropdown';\nimport useHiddenDescription from '../utils/use-hidden-description';\nimport Tooltip from '../tooltip.js';\nimport { getMenuItemProps } from '../utils/menu-item';\nvar ExpandableCategoryElement = function ExpandableCategoryElement(_ref) {\n  var _clsx, _clsx2;\n  var item = _ref.item,\n    onItemActivate = _ref.onItemActivate,\n    onGroupToggle = _ref.onGroupToggle,\n    targetItem = _ref.targetItem,\n    isHighlighted = _ref.isHighlighted,\n    isKeyboardHighlight = _ref.isKeyboardHighlight,\n    isExpanded = _ref.isExpanded,\n    highlightItem = _ref.highlightItem,\n    disabled = _ref.disabled,\n    expandToViewport = _ref.expandToViewport,\n    variant = _ref.variant;\n  var highlighted = isHighlighted(item);\n  var expanded = isExpanded(item);\n  var isKeyboardHighlighted = isKeyboardHighlight(item);\n  var triggerRef = React.useRef(null);\n  var ref = useRef(null);\n  useEffect(function () {\n    if (triggerRef.current && highlighted && !expanded) {\n      triggerRef.current.focus();\n    }\n  }, [expanded, highlighted]);\n  var onClick = function onClick(event) {\n    var _a;\n    if (!disabled) {\n      event.preventDefault();\n      onGroupToggle(item, event);\n      (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  };\n  var onHover = function onHover() {\n    highlightItem(item);\n  };\n  var isDisabledWithReason = !!item.disabledReason && item.disabled;\n  var _useHiddenDescription = useHiddenDescription(item.disabledReason),\n    targetProps = _useHiddenDescription.targetProps,\n    descriptionEl = _useHiddenDescription.descriptionEl;\n  var trigger = item.text && React.createElement(\"span\", Object.assign({\n    className: clsx(styles.header, styles['expandable-header'], styles[\"variant-\".concat(variant)], (_clsx = {}, _defineProperty(_clsx, styles.disabled, disabled), _defineProperty(_clsx, styles.highlighted, highlighted), _defineProperty(_clsx, styles['is-focused'], isKeyboardHighlighted), _clsx)),\n    // We are using the roving tabindex technique to manage the focus state of the dropdown.\n    // The current element will always have tabindex=0 which means that it can be tabbed to,\n    // while all other items have tabindex=-1 so we can focus them when necessary.\n    tabIndex: highlighted ? 0 : -1,\n    ref: triggerRef\n  }, getMenuItemProps({\n    parent: true,\n    expanded: expanded,\n    disabled: disabled\n  }), isDisabledWithReason ? targetProps : {}), item.text, React.createElement(\"span\", {\n    className: clsx(styles['expand-icon'], styles['expand-icon-right'])\n  }, React.createElement(InternalIcon, {\n    name: \"caret-down-filled\"\n  })));\n  var content;\n  // If the category element is disabled, we do not render a dropdown.\n  // Screenreaders are confused by additional sections\n  if (isDisabledWithReason) {\n    content = React.createElement(Tooltip, {\n      content: item.disabledReason\n    }, trigger, descriptionEl);\n  } else if (disabled) {\n    content = trigger;\n  } else {\n    content = React.createElement(Dropdown, {\n      open: expanded,\n      stretchWidth: false,\n      interior: true,\n      expandToViewport: expandToViewport,\n      trigger: trigger\n    }, item.items && expanded && React.createElement(\"ul\", {\n      role: \"menu\",\n      \"aria-label\": item.text,\n      className: clsx(styles['items-list-container'])\n    }, React.createElement(ItemsList, {\n      items: item.items,\n      onItemActivate: onItemActivate,\n      onGroupToggle: onGroupToggle,\n      targetItem: targetItem,\n      isHighlighted: isHighlighted,\n      isKeyboardHighlight: isKeyboardHighlight,\n      isExpanded: isExpanded,\n      highlightItem: highlightItem,\n      variant: variant\n    })));\n  }\n  return React.createElement(\"li\", {\n    className: clsx(styles.category, styles[\"variant-\".concat(variant)], styles.expandable, (_clsx2 = {}, _defineProperty(_clsx2, styles.expanded, expanded), _defineProperty(_clsx2, styles.disabled, disabled), _defineProperty(_clsx2, styles.highlighted, highlighted), _clsx2)),\n    role: \"presentation\",\n    \"data-testid\": item.id,\n    ref: ref,\n    onClick: onClick,\n    onMouseEnter: onHover,\n    onTouchStart: onHover\n  }, content);\n};\nexport default ExpandableCategoryElement;","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","clsx","styles","InternalIcon","ItemsList","Dropdown","useHiddenDescription","Tooltip","getMenuItemProps","ExpandableCategoryElement","item","onItemActivate","onGroupToggle","targetItem","isHighlighted","isKeyboardHighlight","isExpanded","highlightItem","disabled","expandToViewport","variant","highlighted","expanded","isKeyboardHighlighted","triggerRef","ref","current","focus","onClick","event","preventDefault","onHover","isDisabledWithReason","disabledReason","targetProps","descriptionEl","trigger","text","className","header","tabIndex","parent","name","content","open","stretchWidth","interior","items","role","category","expandable","id","onMouseEnter","onTouchStart"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/button-dropdown/category-elements/lib/default/button-dropdown/category-elements/expandable-category-element.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\n\nimport InternalIcon from '../../icon/internal';\nimport ItemsList from '../items-list';\nimport Dropdown from '../../internal/components/dropdown';\nimport { CategoryProps } from '../interfaces';\nimport useHiddenDescription from '../utils/use-hidden-description';\nimport Tooltip from '../tooltip.js';\nimport { getMenuItemProps } from '../utils/menu-item';\n\nconst ExpandableCategoryElement = ({\n  item,\n  onItemActivate,\n  onGroupToggle,\n  targetItem,\n  isHighlighted,\n  isKeyboardHighlight,\n  isExpanded,\n  highlightItem,\n  disabled,\n  expandToViewport,\n  variant,\n}: CategoryProps) => {\n  const highlighted = isHighlighted(item);\n  const expanded = isExpanded(item);\n  const isKeyboardHighlighted = isKeyboardHighlight(item);\n  const triggerRef = React.useRef<HTMLSpanElement>(null);\n  const ref = useRef<HTMLLIElement>(null);\n\n  useEffect(() => {\n    if (triggerRef.current && highlighted && !expanded) {\n      triggerRef.current.focus();\n    }\n  }, [expanded, highlighted]);\n\n  const onClick: React.MouseEventHandler = event => {\n    if (!disabled) {\n      event.preventDefault();\n      onGroupToggle(item, event);\n      triggerRef.current?.focus();\n    }\n  };\n\n  const onHover = () => {\n    highlightItem(item);\n  };\n\n  const isDisabledWithReason = !!item.disabledReason && item.disabled;\n  const { targetProps, descriptionEl } = useHiddenDescription(item.disabledReason);\n  const trigger = item.text && (\n    <span\n      className={clsx(styles.header, styles['expandable-header'], styles[`variant-${variant}`], {\n        [styles.disabled]: disabled,\n        [styles.highlighted]: highlighted,\n        [styles['is-focused']]: isKeyboardHighlighted,\n      })}\n      // We are using the roving tabindex technique to manage the focus state of the dropdown.\n      // The current element will always have tabindex=0 which means that it can be tabbed to,\n      // while all other items have tabindex=-1 so we can focus them when necessary.\n      tabIndex={highlighted ? 0 : -1}\n      ref={triggerRef}\n      {...getMenuItemProps({ parent: true, expanded, disabled })}\n      {...(isDisabledWithReason ? targetProps : {})}\n    >\n      {item.text}\n      <span className={clsx(styles['expand-icon'], styles['expand-icon-right'])}>\n        <InternalIcon name=\"caret-down-filled\" />\n      </span>\n    </span>\n  );\n\n  let content: React.ReactNode;\n  // If the category element is disabled, we do not render a dropdown.\n  // Screenreaders are confused by additional sections\n  if (isDisabledWithReason) {\n    content = (\n      <Tooltip content={item.disabledReason}>\n        {trigger}\n        {descriptionEl}\n      </Tooltip>\n    );\n  } else if (disabled) {\n    content = trigger;\n  } else {\n    content = (\n      <Dropdown\n        open={expanded}\n        stretchWidth={false}\n        interior={true}\n        expandToViewport={expandToViewport}\n        trigger={trigger}\n      >\n        {item.items && expanded && (\n          <ul role=\"menu\" aria-label={item.text} className={clsx(styles['items-list-container'])}>\n            <ItemsList\n              items={item.items}\n              onItemActivate={onItemActivate}\n              onGroupToggle={onGroupToggle}\n              targetItem={targetItem}\n              isHighlighted={isHighlighted}\n              isKeyboardHighlight={isKeyboardHighlight}\n              isExpanded={isExpanded}\n              highlightItem={highlightItem}\n              variant={variant}\n            />\n          </ul>\n        )}\n      </Dropdown>\n    );\n  }\n\n  return (\n    <li\n      className={clsx(styles.category, styles[`variant-${variant}`], styles.expandable, {\n        [styles.expanded]: expanded,\n        [styles.disabled]: disabled,\n        [styles.highlighted]: highlighted,\n      })}\n      role=\"presentation\"\n      data-testid={item.id}\n      ref={ref}\n      onClick={onClick}\n      onMouseEnter={onHover}\n      onTouchStart={onHover}\n    >\n      {content}\n    </li>\n  );\n};\n\nexport default ExpandableCategoryElement;\n"]},"metadata":{},"sourceType":"module"}