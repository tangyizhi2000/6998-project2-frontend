{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nexport function getSortedOptions(_ref) {\n  var options = _ref.options,\n    contentDisplay = _ref.contentDisplay;\n  var optionsById = options.reduce(function (currentValue, option) {\n    return Object.assign(Object.assign({}, currentValue), _defineProperty({}, option.id, option));\n  }, {});\n  return contentDisplay.map(function (_ref2) {\n    var id = _ref2.id,\n      visible = _ref2.visible;\n    return Object.assign(Object.assign({}, optionsById[id]), {\n      visible: visible\n    });\n  }).filter(Boolean);\n}","map":{"version":3,"mappings":";AAQA,OAAM,SAAUA,gBAAgB,OAM/B;EAAA,IALCC,OAAO,QAAPA,OAAO;IACPC,cAAc,QAAdA,cAAc;EAKd,IAAMC,WAAW,GAAoEF,OAAO,CAACG,MAAM,CACjG,UAACC,YAAY,EAAEC,MAAM;IAAA,OAAKC,gCAAMF,YAAY,uBAAGC,MAAM,CAACE,EAAE,EAAGF,MAAM;EAAA,CAAG,EACpE,EAAE,CACH;EACD,OAAOJ,cAAc,CAClBO,GAAG,CAAC;IAAA,IAAGD,EAAE,SAAFA,EAAE;MAAEE,OAAO,SAAPA,OAAO;IAAA,OAAsDH,gCACpEJ,WAAW,CAACK,EAAE,CAAC;MAClBE,OAAO,EAAPA;IAAO;EAAA,CACP,CAAC,CACFC,MAAM,CAACC,OAAO,CAAC;AACpB","names":["getSortedOptions","options","contentDisplay","optionsById","reduce","currentValue","option","Object","id","map","visible","filter","Boolean"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/collection-preferences/content-display/lib/default/collection-preferences/content-display/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CollectionPreferencesProps } from '../interfaces';\n\nexport interface OptionWithVisibility extends CollectionPreferencesProps.ContentDisplayOption {\n  visible?: boolean;\n}\n\nexport function getSortedOptions({\n  options,\n  contentDisplay,\n}: {\n  options: ReadonlyArray<CollectionPreferencesProps.ContentDisplayOption>;\n  contentDisplay: ReadonlyArray<CollectionPreferencesProps.ContentDisplayItem>;\n}): ReadonlyArray<OptionWithVisibility> {\n  const optionsById: Record<string, CollectionPreferencesProps.ContentDisplayOption> = options.reduce(\n    (currentValue, option) => ({ ...currentValue, [option.id]: option }),\n    {}\n  );\n  return contentDisplay\n    .map(({ id, visible }: CollectionPreferencesProps.ContentDisplayItem) => ({\n      ...optionsById[id],\n      visible,\n    }))\n    .filter(Boolean);\n}\n"]},"metadata":{},"sourceType":"module"}