{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport React from 'react';\nimport InternalIcon from '../../../icon/internal';\nimport HighlightMatch from './highlight-match';\nexport const Label = _ref => {\n  let {\n    label,\n    prefix,\n    highlightText,\n    triggerVariant\n  } = _ref;\n  return React.createElement(\"span\", {\n    className: clsx(styles.label, triggerVariant && styles['trigger-variant'])\n  }, prefix && React.createElement(\"span\", {\n    className: clsx(styles['label-prefix'], triggerVariant && styles['trigger-variant'])\n  }, prefix, \" \"), React.createElement(HighlightMatch, {\n    str: label,\n    highlightText: highlightText\n  }));\n};\nexport const LabelTag = _ref2 => {\n  let {\n    labelTag,\n    highlightText,\n    triggerVariant\n  } = _ref2;\n  return labelTag ? React.createElement(\"span\", {\n    className: clsx(styles['label-tag'], triggerVariant && styles['trigger-variant'])\n  }, React.createElement(HighlightMatch, {\n    str: labelTag,\n    highlightText: highlightText\n  })) : null;\n};\nexport const Description = _ref3 => {\n  let {\n    description,\n    highlightedOption,\n    highlightText,\n    selectedOption,\n    triggerVariant\n  } = _ref3;\n  return description ? React.createElement(\"span\", {\n    className: clsx(styles.description, {\n      [styles['trigger-variant']]: triggerVariant,\n      [styles.highlighted]: highlightedOption,\n      [styles.selected]: selectedOption\n    })\n  }, React.createElement(HighlightMatch, {\n    str: description,\n    highlightText: highlightText\n  })) : null;\n};\nexport const Tags = _ref4 => {\n  let {\n    tags,\n    highlightedOption,\n    highlightText,\n    selectedOption,\n    triggerVariant\n  } = _ref4;\n  return tags ? React.createElement(\"span\", {\n    className: clsx(styles.tags, {\n      [styles.highlighted]: highlightedOption,\n      [styles.selected]: selectedOption\n    })\n  }, tags.map((tag, idx) => React.createElement(\"span\", {\n    key: idx,\n    className: clsx(styles.tag, triggerVariant && styles['trigger-variant'])\n  }, React.createElement(HighlightMatch, {\n    str: tag,\n    highlightText: highlightText\n  })))) : null;\n};\nexport const FilteringTags = _ref5 => {\n  let {\n    filteringTags,\n    highlightedOption,\n    highlightText,\n    selectedOption,\n    triggerVariant\n  } = _ref5;\n  if (!highlightText || !filteringTags) {\n    return null;\n  }\n  const searchElement = highlightText.toLowerCase();\n  return React.createElement(\"span\", {\n    className: clsx(styles.tags, {\n      [styles.highlighted]: highlightedOption,\n      [styles.selected]: selectedOption\n    })\n  }, filteringTags.map((filteringTag, key) => {\n    const match = filteringTag.toLowerCase().indexOf(searchElement) !== -1;\n    if (match) {\n      return React.createElement(\"span\", {\n        className: clsx(styles.tag, triggerVariant && styles['trigger-variant']),\n        key: key,\n        \"aria-disabled\": true\n      }, React.createElement(HighlightMatch, {\n        str: filteringTag,\n        highlightText: highlightText\n      }));\n    }\n    return null;\n  }));\n};\nexport const OptionIcon = props => {\n  if (!props.name && !props.url && !props.svg) {\n    return null;\n  }\n  return React.createElement(\"span\", {\n    className: clsx(styles.icon, props.size === 'big' && [styles[`icon-size-big`]])\n  }, React.createElement(InternalIcon, Object.assign({}, props)));\n};","map":{"version":3,"mappings":"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","names":["styles","clsx","React","InternalIcon","HighlightMatch","Label","label","prefix","highlightText","triggerVariant","className","str","LabelTag","labelTag","Description","description","highlightedOption","selectedOption","highlighted","selected","Tags","tags","map","tag","idx","key","FilteringTags","filteringTags","searchElement","toLowerCase","filteringTag","match","indexOf","OptionIcon","props","name","url","svg","icon","size"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/components/option/lib/default/internal/components/option/option-parts.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { IconProps } from '../../../icon/interfaces';\nimport InternalIcon from '../../../icon/internal';\nimport HighlightMatch from './highlight-match';\n\ninterface LabelProps {\n  label?: string;\n  prefix?: string;\n  highlightText?: string;\n  triggerVariant: boolean;\n}\nexport const Label = ({ label, prefix, highlightText, triggerVariant }: LabelProps) => (\n  <span className={clsx(styles.label, triggerVariant && styles['trigger-variant'])}>\n    {prefix && (\n      <span className={clsx(styles['label-prefix'], triggerVariant && styles['trigger-variant'])}>{prefix} </span>\n    )}\n    <HighlightMatch str={label} highlightText={highlightText} />\n  </span>\n);\n\ninterface LabelTagProps {\n  labelTag?: string;\n  highlightText?: string;\n  triggerVariant: boolean;\n}\nexport const LabelTag = ({ labelTag, highlightText, triggerVariant }: LabelTagProps) =>\n  labelTag ? (\n    <span className={clsx(styles['label-tag'], triggerVariant && styles['trigger-variant'])}>\n      <HighlightMatch str={labelTag} highlightText={highlightText} />\n    </span>\n  ) : null;\n\ninterface DescriptionProps {\n  description?: string;\n  highlightedOption: boolean;\n  highlightText?: string;\n  selectedOption: boolean;\n  triggerVariant: boolean;\n}\nexport const Description = ({\n  description,\n  highlightedOption,\n  highlightText,\n  selectedOption,\n  triggerVariant,\n}: DescriptionProps) =>\n  description ? (\n    <span\n      className={clsx(styles.description, {\n        [styles['trigger-variant']]: triggerVariant,\n        [styles.highlighted]: highlightedOption,\n        [styles.selected]: selectedOption,\n      })}\n    >\n      <HighlightMatch str={description} highlightText={highlightText} />\n    </span>\n  ) : null;\n\ninterface TagsProps {\n  tags?: ReadonlyArray<string>;\n  highlightedOption: boolean;\n  highlightText?: string;\n  selectedOption: boolean;\n  triggerVariant: boolean;\n}\nexport const Tags = ({ tags, highlightedOption, highlightText, selectedOption, triggerVariant }: TagsProps) =>\n  tags ? (\n    <span\n      className={clsx(styles.tags, {\n        [styles.highlighted]: highlightedOption,\n        [styles.selected]: selectedOption,\n      })}\n    >\n      {tags.map((tag, idx) => (\n        <span key={idx} className={clsx(styles.tag, triggerVariant && styles['trigger-variant'])}>\n          <HighlightMatch str={tag} highlightText={highlightText} />\n        </span>\n      ))}\n    </span>\n  ) : null;\n\ninterface FilteringTagProps {\n  filteringTags?: ReadonlyArray<string>;\n  highlightedOption: boolean;\n  highlightText?: string;\n  selectedOption: boolean;\n  triggerVariant: boolean;\n}\nexport const FilteringTags = ({\n  filteringTags,\n  highlightedOption,\n  highlightText,\n  selectedOption,\n  triggerVariant,\n}: FilteringTagProps) => {\n  if (!highlightText || !filteringTags) {\n    return null;\n  }\n\n  const searchElement = highlightText.toLowerCase();\n\n  return (\n    <span\n      className={clsx(styles.tags, {\n        [styles.highlighted]: highlightedOption,\n        [styles.selected]: selectedOption,\n      })}\n    >\n      {filteringTags.map((filteringTag, key) => {\n        const match = filteringTag.toLowerCase().indexOf(searchElement) !== -1;\n        if (match) {\n          return (\n            <span\n              className={clsx(styles.tag, triggerVariant && styles['trigger-variant'])}\n              key={key}\n              aria-disabled={true}\n            >\n              <HighlightMatch str={filteringTag} highlightText={highlightText} />\n            </span>\n          );\n        }\n        return null;\n      })}\n    </span>\n  );\n};\n\nexport const OptionIcon = (props: IconProps) => {\n  if (!props.name && !props.url && !props.svg) {\n    return null;\n  }\n\n  return (\n    <span className={clsx(styles.icon, props.size === 'big' && [styles[`icon-size-big`]])}>\n      <InternalIcon {...props} />\n    </span>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}