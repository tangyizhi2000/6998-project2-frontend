{"ast":null,"code":"import AsyncStore from '../async-store';\nconst initialState = Object.freeze({\n  highlightedX: null,\n  highlightedPoint: null,\n  highlightedSeries: null,\n  legendSeries: null,\n  isPopoverPinned: false\n});\nexport default class InteractionsStore extends AsyncStore {\n  constructor(series, plot) {\n    super(initialState);\n    this.series = series;\n    this.plot = plot;\n  }\n  highlightPoint(point) {\n    this.set(state => Object.assign(Object.assign({}, state), {\n      highlightedX: this.plot.xy[point.index.x],\n      highlightedPoint: point,\n      highlightedSeries: this.series[point.index.s],\n      legendSeries: this.series[point.index.s]\n    }));\n  }\n  highlightX(points) {\n    this.set(state => Object.assign(Object.assign({}, state), {\n      highlightedX: points,\n      highlightedPoint: null,\n      highlightedSeries: null,\n      legendSeries: null\n    }));\n  }\n  highlightFirstPoint() {\n    this.set(state => {\n      const series = state.legendSeries || state.highlightedSeries;\n      const firstSeriesPoint = series && this._getFirstSeriesPoint(series);\n      const point = state.highlightedPoint || firstSeriesPoint || this.plot.sx[0][0];\n      return Object.assign(Object.assign({}, state), {\n        highlightedX: this.plot.xy[point.index.x],\n        highlightedPoint: point,\n        highlightedSeries: this.series[point.index.s],\n        legendSeries: this.series[point.index.s]\n      });\n    });\n  }\n  highlightSeries(s) {\n    this.set(state => Object.assign(Object.assign({}, state), {\n      highlightedSeries: s,\n      legendSeries: s\n    }));\n  }\n  clearHighlight() {\n    this.set(state => Object.assign(Object.assign({}, state), {\n      highlightedX: null,\n      highlightedPoint: null,\n      highlightedSeries: null\n    }));\n  }\n  clearHighlightedLegend() {\n    this.set(state => Object.assign(Object.assign({}, state), {\n      legendSeries: null\n    }));\n  }\n  clearState() {\n    this.set(() => initialState);\n  }\n  pinPopover() {\n    this.set(state => Object.assign(Object.assign({}, state), {\n      isPopoverPinned: true\n    }));\n  }\n  unpinPopover() {\n    this.set(state => Object.assign(Object.assign({}, state), {\n      isPopoverPinned: false\n    }));\n  }\n  togglePopoverPin() {\n    this.set(state => Object.assign(Object.assign({}, state), {\n      isPopoverPinned: !state.isPopoverPinned\n    }));\n  }\n  _getFirstSeriesPoint(s) {\n    const seriesIndex = this.series.indexOf(s);\n    const [firstSeriesPoint] = this.plot.sx[seriesIndex] || [];\n    return firstSeriesPoint || null;\n  }\n}","map":{"version":3,"mappings":"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","names":["AsyncStore","initialState","Object","freeze","highlightedX","highlightedPoint","highlightedSeries","legendSeries","isPopoverPinned","InteractionsStore","constructor","series","plot","highlightPoint","point","set","state","xy","index","x","s","highlightX","points","highlightFirstPoint","firstSeriesPoint","_getFirstSeriesPoint","sx","highlightSeries","clearHighlight","clearHighlightedLegend","clearState","pinPopover","unpinPopover","togglePopoverPin","seriesIndex","indexOf"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/area-chart/model/lib/default/area-chart/model/interactions-store.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ChartModel } from './index';\nimport { AreaChartProps } from '../interfaces';\nimport AsyncStore from '../async-store';\n\nconst initialState = Object.freeze({\n  highlightedX: null,\n  highlightedPoint: null,\n  highlightedSeries: null,\n  legendSeries: null,\n  isPopoverPinned: false,\n});\n\nexport default class InteractionsStore<T extends AreaChartProps.DataTypes> extends AsyncStore<\n  ChartModel.InteractionsState<T>\n> {\n  series: readonly AreaChartProps.Series<T>[];\n  plot: ChartModel.ComputedProps<T>['plot'];\n\n  constructor(series: readonly AreaChartProps.Series<T>[], plot: ChartModel.ComputedProps<T>['plot']) {\n    super(initialState);\n\n    this.series = series;\n    this.plot = plot;\n  }\n\n  highlightPoint(point: ChartModel.PlotPoint<T>) {\n    this.set(state => ({\n      ...state,\n      highlightedX: this.plot.xy[point.index.x],\n      highlightedPoint: point,\n      highlightedSeries: this.series[point.index.s],\n      legendSeries: this.series[point.index.s],\n    }));\n  }\n\n  highlightX(points: readonly ChartModel.PlotPoint<T>[]) {\n    this.set(state => ({\n      ...state,\n      highlightedX: points,\n      highlightedPoint: null,\n      highlightedSeries: null,\n      legendSeries: null,\n    }));\n  }\n\n  highlightFirstPoint() {\n    this.set(state => {\n      const series = state.legendSeries || state.highlightedSeries;\n      const firstSeriesPoint = series && this._getFirstSeriesPoint(series);\n      const point = state.highlightedPoint || firstSeriesPoint || this.plot.sx[0][0];\n      return {\n        ...state,\n        highlightedX: this.plot.xy[point.index.x],\n        highlightedPoint: point,\n        highlightedSeries: this.series[point.index.s],\n        legendSeries: this.series[point.index.s],\n      };\n    });\n  }\n\n  highlightSeries(s: null | AreaChartProps.Series<T>) {\n    this.set(state => ({\n      ...state,\n      highlightedSeries: s,\n      legendSeries: s,\n    }));\n  }\n\n  clearHighlight() {\n    this.set(state => ({\n      ...state,\n      highlightedX: null,\n      highlightedPoint: null,\n      highlightedSeries: null,\n    }));\n  }\n  clearHighlightedLegend() {\n    this.set(state => ({\n      ...state,\n      legendSeries: null,\n    }));\n  }\n\n  clearState() {\n    this.set(() => initialState);\n  }\n\n  pinPopover() {\n    this.set(state => ({ ...state, isPopoverPinned: true }));\n  }\n\n  unpinPopover() {\n    this.set(state => ({ ...state, isPopoverPinned: false }));\n  }\n\n  togglePopoverPin() {\n    this.set(state => ({ ...state, isPopoverPinned: !state.isPopoverPinned }));\n  }\n\n  _getFirstSeriesPoint(s: AreaChartProps.Series<T>): null | ChartModel.PlotPoint<T> {\n    const seriesIndex = this.series.indexOf(s);\n    const [firstSeriesPoint] = this.plot.sx[seriesIndex] || [];\n    return firstSeriesPoint || null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}