{"ast":null,"code":"import _defineProperty from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { getBaseProps } from '../../base-component';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\nimport styles from './styles.css.js';\n// Can't use css variables for svg attributes\nexport var dimensionsByTheme = {\n  default: {\n    viewBox: '0 0 14 14',\n    indeterminate: '2.5,7 11.5,7',\n    checked: '2.5,7 6,10 11,3',\n    xy: 0.5,\n    r: 1.5,\n    size: 13\n  },\n  refresh: {\n    viewBox: '0 0 16 16',\n    indeterminate: '3.5,8 12.5,8',\n    checked: '3.5,8 7,11 12,4',\n    xy: 1,\n    r: 2,\n    size: 14\n  }\n};\nvar CheckboxIcon = function CheckboxIcon(_a) {\n  var _clsx;\n  var checked = _a.checked,\n    indeterminate = _a.indeterminate,\n    _a$disabled = _a.disabled,\n    disabled = _a$disabled === void 0 ? false : _a$disabled,\n    restProps = __rest(_a, [\"checked\", \"indeterminate\", \"disabled\"]);\n  var baseProps = getBaseProps(restProps);\n  var theme = useVisualRefresh() ? 'refresh' : 'default';\n  var dimensions = dimensionsByTheme[theme];\n  return React.createElement(\"svg\", Object.assign({\n    className: styles.root,\n    viewBox: dimensions.viewBox,\n    \"aria-hidden\": \"true\",\n    focusable: \"false\"\n  }, baseProps), React.createElement(\"rect\", {\n    className: clsx(styles['styled-box'], (_clsx = {}, _defineProperty(_clsx, styles['styled-box-checked'], checked), _defineProperty(_clsx, styles['styled-box-indeterminate'], indeterminate), _defineProperty(_clsx, styles['styled-box-disabled'], disabled), _clsx)),\n    x: dimensions.xy,\n    y: dimensions.xy,\n    rx: dimensions.r,\n    ry: dimensions.r,\n    width: dimensions.size,\n    height: dimensions.size\n  }), checked || indeterminate ? React.createElement(\"polyline\", {\n    className: clsx(styles['styled-line'], _defineProperty({}, styles['styled-line-disabled'], disabled)),\n    points: indeterminate ? dimensions.indeterminate : dimensions.checked\n  }) : null);\n};\nexport default CheckboxIcon;","map":{"version":3,"mappings":";;AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAA6BC,YAAY,QAAQ,sBAAsB;AACvE,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,OAAOC,MAAM,MAAM,iBAAiB;AAgBpC;AACA,OAAO,IAAMC,iBAAiB,GAA0D;EACtFC,OAAO,EAAE;IACPC,OAAO,EAAE,WAAW;IACpBC,aAAa,EAAE,cAAc;IAC7BC,OAAO,EAAE,iBAAiB;IAC1BC,EAAE,EAAE,GAAG;IACPC,CAAC,EAAE,GAAG;IACNC,IAAI,EAAE;GACP;EACDC,OAAO,EAAE;IACPN,OAAO,EAAE,WAAW;IACpBC,aAAa,EAAE,cAAc;IAC7BC,OAAO,EAAE,iBAAiB;IAC1BC,EAAE,EAAE,CAAC;IACLC,CAAC,EAAE,CAAC;IACJC,IAAI,EAAE;;CAET;AAED,IAAME,YAAY,GAAG,SAAfA,YAAY,CAAIC,EAA6E,EAAI;EAAA;MAA/EN,OAAO,GAAiCM,EAAmC,CAA3EN,OAAO;IAAED,aAAa,GAAkBO,EAAmC,CAAlEP,aAAa;IAAA,cAAkBO,EAAmC,CAAnDC,QAAQ;IAARA,QAAQ,4BAAG,KAAK;IAAKC,SAAS,cAAxD,wCAA0D,CAAF;EAC5E,IAAMC,SAAS,GAAGhB,YAAY,CAACe,SAAS,CAAC;EACzC,IAAME,KAAK,GAAGhB,gBAAgB,EAAE,GAAG,SAAS,GAAG,SAAS;EACxD,IAAMiB,UAAU,GAAGf,iBAAiB,CAACc,KAAK,CAAC;EAC3C,OACElB;IAAKoB,SAAS,EAAEjB,MAAM,CAACkB,IAAI;IAAEf,OAAO,EAAEa,UAAU,CAACb,OAAO;IAAA,eAAc,MAAM;IAACgB,SAAS,EAAC;EAAO,GAAKL,SAAS,GAC1GjB;IACEoB,SAAS,EAAErB,IAAI,CAACI,MAAM,CAAC,YAAY,CAAC,sCACjCA,MAAM,CAAC,oBAAoB,CAAC,EAAGK,OAAO,0BACtCL,MAAM,CAAC,0BAA0B,CAAC,EAAGI,aAAa,0BAClDJ,MAAM,CAAC,qBAAqB,CAAC,EAAGY,QAAQ,UACzC;IACFQ,CAAC,EAAEJ,UAAU,CAACV,EAAE;IAChBe,CAAC,EAAEL,UAAU,CAACV,EAAE;IAChBgB,EAAE,EAAEN,UAAU,CAACT,CAAC;IAChBgB,EAAE,EAAEP,UAAU,CAACT,CAAC;IAChBiB,KAAK,EAAER,UAAU,CAACR,IAAI;IACtBiB,MAAM,EAAET,UAAU,CAACR;EAAI,EACvB,EACDH,OAAO,IAAID,aAAa,GACvBP;IACEoB,SAAS,EAAErB,IAAI,CAACI,MAAM,CAAC,aAAa,CAAC,sBAAKA,MAAM,CAAC,sBAAsB,CAAC,EAAGY,QAAQ,EAAG;IACtFc,MAAM,EAAEtB,aAAa,GAAGY,UAAU,CAACZ,aAAa,GAAGY,UAAU,CAACX;EAAO,EACrE,GACA,IAAI,CACJ;AAEV,CAAC;AAED,eAAeK,YAAY","names":["clsx","React","getBaseProps","useVisualRefresh","styles","dimensionsByTheme","default","viewBox","indeterminate","checked","xy","r","size","refresh","CheckboxIcon","_a","disabled","restProps","baseProps","theme","dimensions","className","root","focusable","x","y","rx","ry","width","height","points"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/internal/components/checkbox-icon/lib/default/internal/components/checkbox-icon/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { BaseComponentProps, getBaseProps } from '../../base-component';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\nimport styles from './styles.css.js';\n\nexport interface CheckboxIconProps extends BaseComponentProps {\n  checked?: boolean;\n  indeterminate?: boolean;\n  disabled?: boolean;\n}\nexport interface Dimension {\n  viewBox: string;\n  indeterminate: string;\n  checked: string;\n  xy: number;\n  r: number;\n  size: number;\n}\n\n// Can't use css variables for svg attributes\nexport const dimensionsByTheme: Record<NonNullable<'default' | 'refresh'>, Dimension> = {\n  default: {\n    viewBox: '0 0 14 14',\n    indeterminate: '2.5,7 11.5,7',\n    checked: '2.5,7 6,10 11,3',\n    xy: 0.5,\n    r: 1.5,\n    size: 13,\n  },\n  refresh: {\n    viewBox: '0 0 16 16',\n    indeterminate: '3.5,8 12.5,8',\n    checked: '3.5,8 7,11 12,4',\n    xy: 1,\n    r: 2,\n    size: 14,\n  },\n};\n\nconst CheckboxIcon = ({ checked, indeterminate, disabled = false, ...restProps }: CheckboxIconProps) => {\n  const baseProps = getBaseProps(restProps);\n  const theme = useVisualRefresh() ? 'refresh' : 'default';\n  const dimensions = dimensionsByTheme[theme];\n  return (\n    <svg className={styles.root} viewBox={dimensions.viewBox} aria-hidden=\"true\" focusable=\"false\" {...baseProps}>\n      <rect\n        className={clsx(styles['styled-box'], {\n          [styles['styled-box-checked']]: checked,\n          [styles['styled-box-indeterminate']]: indeterminate,\n          [styles['styled-box-disabled']]: disabled,\n        })}\n        x={dimensions.xy}\n        y={dimensions.xy}\n        rx={dimensions.r}\n        ry={dimensions.r}\n        width={dimensions.size}\n        height={dimensions.size}\n      />\n      {checked || indeterminate ? (\n        <polyline\n          className={clsx(styles['styled-line'], { [styles['styled-line-disabled']]: disabled })}\n          points={indeterminate ? dimensions.indeterminate : dimensions.checked}\n        />\n      ) : null}\n    </svg>\n  );\n};\n\nexport default CheckboxIcon;\n"]},"metadata":{},"sourceType":"module"}