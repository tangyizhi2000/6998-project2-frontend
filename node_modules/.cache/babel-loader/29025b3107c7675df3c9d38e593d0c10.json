{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useCallback, memo } from 'react';\nimport InternalFormField from '../../../form-field/internal';\nimport InternalMultiselect from '../../../multiselect/internal';\nimport { getBaseProps } from '../../base-component';\nimport SeriesMarker from '../chart-series-marker';\nimport { useInternalI18n } from '../../../i18n/context';\nimport styles from './styles.css.js';\nexport default memo(ChartFilter);\nfunction ChartFilter(_a) {\n  var {\n      series,\n      i18nStrings,\n      selectedSeries,\n      onChange\n    } = _a,\n    restProps = __rest(_a, [\"series\", \"i18nStrings\", \"selectedSeries\", \"onChange\"]);\n  const baseProps = getBaseProps(restProps);\n  const className = clsx(baseProps.className, styles.root);\n  const i18n = useInternalI18n('[charts]');\n  const defaultOptions = series.map((d, i) => ({\n    label: d.label,\n    value: '' + i,\n    datum: d.datum,\n    __customIcon: React.createElement(\"span\", {\n      className: styles['custom-icon-wrapper']\n    }, React.createElement(SeriesMarker, {\n      color: d.color,\n      type: d.type\n    }))\n  }));\n  const selectedOptions = defaultOptions.filter(option => (selectedSeries === null || selectedSeries === void 0 ? void 0 : selectedSeries.indexOf(option.datum)) !== -1);\n  const updateSelection = useCallback(_ref => {\n    let {\n      detail: {\n        selectedOptions\n      }\n    } = _ref;\n    const selectedSeries = defaultOptions.filter(option => selectedOptions.indexOf(option) !== -1).map(option => option.datum);\n    onChange(selectedSeries);\n  }, [onChange, defaultOptions]);\n  return React.createElement(InternalFormField, Object.assign({}, baseProps, {\n    label: i18n('i18nStrings.filterLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filterLabel),\n    className: className\n  }), React.createElement(InternalMultiselect, {\n    placeholder: i18n('i18nStrings.filterPlaceholder', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filterPlaceholder),\n    options: defaultOptions,\n    selectedOptions: selectedOptions,\n    onChange: updateSelection,\n    className: styles['chart-filter'],\n    selectedAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filterSelectedAriaLabel,\n    hideTokens: true\n  }));\n}","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,IAAIC,WAAW,EAAEC,IAAI,QAAQ,OAAO;AAGhD,OAAOC,iBAAiB,MAAM,8BAA8B;AAC5D,OAAOC,mBAAmB,MAAM,+BAA+B;AAC/D,SAA6BC,YAAY,QAAQ,sBAAsB;AAEvE,OAAOC,YAAuC,MAAM,wBAAwB;AAC5E,SAASC,eAAe,QAAQ,uBAAuB;AAEvD,OAAOC,MAAM,MAAM,iBAAiB;AAsBpC,eAAeN,IAAI,CAACO,WAAW,CAAuB;AAEtD,SAASA,WAAW,CAAIC,EAAoF;MAApF;MAAEC,MAAM;MAAEC,WAAW;MAAEC,cAAc;MAAEC;IAAQ,MAAqC;IAAhCC,SAAS,cAA7D,uDAA+D,CAAF;EACnF,MAAMC,SAAS,GAAGX,YAAY,CAACU,SAAS,CAAC;EACzC,MAAME,SAAS,GAAGlB,IAAI,CAACiB,SAAS,CAACC,SAAS,EAAET,MAAM,CAACU,IAAI,CAAC;EACxD,MAAMC,IAAI,GAAGZ,eAAe,CAAC,UAAU,CAAC;EAExC,MAAMa,cAAc,GAAGT,MAAM,CAACU,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM;IAC3CC,KAAK,EAAEF,CAAC,CAACE,KAAK;IACdC,KAAK,EAAE,EAAE,GAAGF,CAAC;IACbG,KAAK,EAAEJ,CAAC,CAACI,KAAK;IACdC,YAAY,EACV3B;MAAMiB,SAAS,EAAET,MAAM,CAAC,qBAAqB;IAAC,GAC5CR,oBAACM,YAAY;MAACsB,KAAK,EAAEN,CAAC,CAACM,KAAK;MAAEC,IAAI,EAAEP,CAAC,CAACO;IAAI,EAAI;GAGnD,CAAC,CAAC;EAEH,MAAMC,eAAe,GAAGV,cAAc,CAACW,MAAM,CAACC,MAAM,IAAI,eAAc,aAAdnB,cAAc,uBAAdA,cAAc,CAAEoB,OAAO,CAACD,MAAM,CAACN,KAAK,CAAC,MAAK,CAAC,CAAC,CAAC;EAErG,MAAMQ,eAAe,GAAGjC,WAAW,CACjC,QAAoC;IAAA,IAAnC;MAAEkC,MAAM,EAAE;QAAEL;MAAe;IAAE,CAAE;IAC9B,MAAMjB,cAAc,GAAGO,cAAc,CAClCW,MAAM,CAACC,MAAM,IAAIF,eAAe,CAACG,OAAO,CAACD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CACxDX,GAAG,CAACW,MAAM,IAAIA,MAAM,CAACN,KAAK,CAAC;IAC9BZ,QAAQ,CAACD,cAAc,CAAC;EAC1B,CAAC,EACD,CAACC,QAAQ,EAAEM,cAAc,CAAC,CAC3B;EAED,OACEpB,oBAACG,iBAAiB,oBACZa,SAAS;IACbQ,KAAK,EAAEL,IAAI,CAAC,yBAAyB,EAAEP,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEwB,WAAW,CAAC;IAChEnB,SAAS,EAAEA;EAAS,IAEpBjB,oBAACI,mBAAmB;IAClBiC,WAAW,EAAElB,IAAI,CAAC,+BAA+B,EAAEP,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE0B,iBAAiB,CAAC;IAClFC,OAAO,EAAEnB,cAAc;IACvBU,eAAe,EAAEA,eAAe;IAChChB,QAAQ,EAAEoB,eAAe;IACzBjB,SAAS,EAAET,MAAM,CAAC,cAAc,CAAC;IACjCgC,iBAAiB,EAAE5B,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE6B,uBAAuB;IACvDC,UAAU,EAAE;EAAI,EAChB,CACgB;AAExB","names":["clsx","React","useCallback","memo","InternalFormField","InternalMultiselect","getBaseProps","SeriesMarker","useInternalI18n","styles","ChartFilter","_a","series","i18nStrings","selectedSeries","onChange","restProps","baseProps","className","root","i18n","defaultOptions","map","d","i","label","value","datum","__customIcon","color","type","selectedOptions","filter","option","indexOf","updateSelection","detail","filterLabel","placeholder","filterPlaceholder","options","selectedAriaLabel","filterSelectedAriaLabel","hideTokens"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/internal/components/chart-filter/lib/default/internal/components/chart-filter/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useCallback, memo } from 'react';\n\nimport { NonCancelableEventHandler } from '../../events';\nimport InternalFormField from '../../../form-field/internal';\nimport InternalMultiselect from '../../../multiselect/internal';\nimport { BaseComponentProps, getBaseProps } from '../../base-component';\nimport { MultiselectProps } from '../../../multiselect/interfaces';\nimport SeriesMarker, { ChartSeriesMarkerType } from '../chart-series-marker';\nimport { useInternalI18n } from '../../../i18n/context';\n\nimport styles from './styles.css.js';\n\ninterface I18nStrings {\n  filterLabel?: string;\n  filterPlaceholder?: string;\n  filterSelectedAriaLabel?: string;\n}\n\nexport interface ChartFilterItem<T> {\n  label: string;\n  color: string;\n  type: ChartSeriesMarkerType;\n  datum: T;\n}\n\nexport interface ChartFilterProps<T> extends BaseComponentProps {\n  series: ReadonlyArray<ChartFilterItem<T>>;\n  selectedSeries?: ReadonlyArray<T>;\n  onChange: (selectedSeries: ReadonlyArray<T>) => void;\n  i18nStrings?: I18nStrings;\n}\n\nexport default memo(ChartFilter) as typeof ChartFilter;\n\nfunction ChartFilter<T>({ series, i18nStrings, selectedSeries, onChange, ...restProps }: ChartFilterProps<T>) {\n  const baseProps = getBaseProps(restProps);\n  const className = clsx(baseProps.className, styles.root);\n  const i18n = useInternalI18n('[charts]');\n\n  const defaultOptions = series.map((d, i) => ({\n    label: d.label,\n    value: '' + i,\n    datum: d.datum,\n    __customIcon: (\n      <span className={styles['custom-icon-wrapper']}>\n        <SeriesMarker color={d.color} type={d.type} />\n      </span>\n    ),\n  }));\n\n  const selectedOptions = defaultOptions.filter(option => selectedSeries?.indexOf(option.datum) !== -1);\n\n  const updateSelection = useCallback<NonCancelableEventHandler<MultiselectProps.MultiselectChangeDetail>>(\n    ({ detail: { selectedOptions } }) => {\n      const selectedSeries = defaultOptions\n        .filter(option => selectedOptions.indexOf(option) !== -1)\n        .map(option => option.datum);\n      onChange(selectedSeries);\n    },\n    [onChange, defaultOptions]\n  );\n\n  return (\n    <InternalFormField\n      {...baseProps}\n      label={i18n('i18nStrings.filterLabel', i18nStrings?.filterLabel)}\n      className={className}\n    >\n      <InternalMultiselect\n        placeholder={i18n('i18nStrings.filterPlaceholder', i18nStrings?.filterPlaceholder)}\n        options={defaultOptions}\n        selectedOptions={selectedOptions}\n        onChange={updateSelection}\n        className={styles['chart-filter']}\n        selectedAriaLabel={i18nStrings?.filterSelectedAriaLabel}\n        hideTokens={true}\n      />\n    </InternalFormField>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}