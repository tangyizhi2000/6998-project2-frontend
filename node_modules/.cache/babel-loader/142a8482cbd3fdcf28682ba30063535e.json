{"ast":null,"code":"import _toArray from \"/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@babel/runtime/helpers/esm/toArray.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getColumnAriaLabel, compareDates } from './table-utils';\nimport { formatSize, formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { joinObjectPath } from '../utils';\nimport { useInternalI18n } from '../../i18n/context';\nexport function VersionsTable(_ref) {\n  var forwardFocusRef = _ref.forwardFocusRef,\n    pathSegments = _ref.pathSegments,\n    i18nStrings = _ref.i18nStrings,\n    isVisualRefresh = _ref.isVisualRefresh,\n    isItemDisabled = _ref.isItemDisabled,\n    _fetchData = _ref.fetchData,\n    visibleColumns = _ref.visibleColumns,\n    _onSelect = _ref.onSelect;\n  var _a, _b, _c, _d;\n  var i18n = useInternalI18n('s3-resource-selector');\n  return React.createElement(BasicS3Table, {\n    forwardFocusRef: forwardFocusRef,\n    trackBy: \"VersionId\",\n    fetchData: function fetchData() {\n      var _pathSegments = _toArray(pathSegments),\n        bucketName = _pathSegments[0],\n        rest = _pathSegments.slice(1);\n      return _fetchData(bucketName, joinObjectPath(rest));\n    },\n    i18nStrings: Object.assign(Object.assign({}, getSharedI18Strings(i18n, i18nStrings)), {\n      header: i18n('i18nStrings.selectionVersions', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersions),\n      loadingText: i18n('i18nStrings.selectionVersionsLoading', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersionsLoading),\n      filteringAriaLabel: (_a = i18n('i18nStrings.labelFiltering', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering, function (format) {\n        return function (itemsType) {\n          return format({\n            itemsType: itemsType\n          });\n        };\n      })) === null || _a === void 0 ? void 0 : _a((_b = i18n('i18nStrings.selectionVersions', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersions)) !== null && _b !== void 0 ? _b : ''),\n      filteringPlaceholder: i18n('i18nStrings.selectionVersionsSearchPlaceholder', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersionsSearchPlaceholder),\n      emptyText: i18n('i18nStrings.selectionVersionsNoItems', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersionsNoItems),\n      selectionLabels: Object.assign(Object.assign({}, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsVersionsSelection), {\n        selectionGroupLabel: i18n('i18nStrings.labelsVersionsSelection.selectionGroupLabel', (_c = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsVersionsSelection) === null || _c === void 0 ? void 0 : _c.selectionGroupLabel),\n        itemSelectionLabel: i18n('i18nStrings.labelsVersionsSelection.itemSelectionLabel', (_d = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsVersionsSelection) === null || _d === void 0 ? void 0 : _d.itemSelectionLabel, function (format) {\n          return function (data, item) {\n            var _a;\n            return format({\n              item__VersionId: (_a = item.VersionId) !== null && _a !== void 0 ? _a : ''\n            });\n          };\n        })\n      })\n    }),\n    isVisualRefresh: isVisualRefresh,\n    visibleColumns: visibleColumns,\n    isItemDisabled: isItemDisabled,\n    columnDefinitions: [{\n      id: 'ID',\n      header: i18n('i18nStrings.columnVersionID', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionID),\n      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n('i18nStrings.columnVersionID', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionID)),\n      sortingField: 'VersionId',\n      cell: function cell(item) {\n        return item.VersionId;\n      },\n      minWidth: '250px'\n    }, {\n      id: 'LastModified',\n      header: i18n('i18nStrings.columnVersionLastModified', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionLastModified),\n      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n('i18nStrings.columnVersionLastModified', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionLastModified)),\n      sortingComparator: function sortingComparator(a, b) {\n        return compareDates(a.LastModified, b.LastModified);\n      },\n      cell: function cell(item) {\n        return formatDefault(item.LastModified);\n      }\n    }, {\n      id: 'Size',\n      header: i18n('i18nStrings.columnVersionSize', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionSize),\n      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n('i18nStrings.columnVersionSize', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionSize)),\n      sortingField: 'Size',\n      cell: function cell(item) {\n        return formatSize(item.Size);\n      }\n    }],\n    onSelect: function onSelect(item) {\n      var _a;\n      return _onSelect((_a = item === null || item === void 0 ? void 0 : item.VersionId) !== null && _a !== void 0 ? _a : '');\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["React","getColumnAriaLabel","compareDates","formatSize","formatDefault","BasicS3Table","getSharedI18Strings","joinObjectPath","useInternalI18n","VersionsTable","forwardFocusRef","pathSegments","i18nStrings","isVisualRefresh","isItemDisabled","fetchData","visibleColumns","onSelect","i18n","trackBy","bucketName","rest","header","selectionVersions","loadingText","selectionVersionsLoading","filteringAriaLabel","labelFiltering","format","itemsType","filteringPlaceholder","selectionVersionsSearchPlaceholder","emptyText","selectionVersionsNoItems","selectionLabels","labelsVersionsSelection","selectionGroupLabel","itemSelectionLabel","data","item","item__VersionId","VersionId","columnDefinitions","id","columnVersionID","ariaLabel","sortingField","cell","minWidth","columnVersionLastModified","sortingComparator","a","b","LastModified","columnVersionSize","Size"],"sources":["/Users/tangyizhi/Desktop/Assignment2/frontend/node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/lib/default/s3-resource-selector/s3-modal/versions-table.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { getColumnAriaLabel, compareDates } from './table-utils';\nimport { TableProps } from '../../table/interfaces';\nimport { ForwardFocusRef } from '../../internal/hooks/forward-focus';\nimport { formatSize, formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { joinObjectPath } from '../utils';\nimport { useInternalI18n } from '../../i18n/context';\n\ninterface VersionsTableProps {\n  forwardFocusRef: React.Ref<ForwardFocusRef>;\n  pathSegments: ReadonlyArray<string>;\n  visibleColumns: ReadonlyArray<string>;\n  isItemDisabled: TableProps.IsItemDisabled<S3ResourceSelectorProps.Version> | undefined;\n  fetchData: S3ResourceSelectorProps['fetchVersions'];\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  isVisualRefresh?: boolean;\n  onSelect: (versionId: string) => void;\n}\n\nexport function VersionsTable({\n  forwardFocusRef,\n  pathSegments,\n  i18nStrings,\n  isVisualRefresh,\n  isItemDisabled,\n  fetchData,\n  visibleColumns,\n  onSelect,\n}: VersionsTableProps) {\n  const i18n = useInternalI18n('s3-resource-selector');\n\n  return (\n    <BasicS3Table<S3ResourceSelectorProps.Version>\n      forwardFocusRef={forwardFocusRef}\n      trackBy=\"VersionId\"\n      fetchData={() => {\n        const [bucketName, ...rest] = pathSegments;\n        return fetchData(bucketName, joinObjectPath(rest));\n      }}\n      i18nStrings={{\n        ...getSharedI18Strings(i18n, i18nStrings),\n        header: i18n('i18nStrings.selectionVersions', i18nStrings?.selectionVersions),\n        loadingText: i18n('i18nStrings.selectionVersionsLoading', i18nStrings?.selectionVersionsLoading),\n        filteringAriaLabel: i18n(\n          'i18nStrings.labelFiltering',\n          i18nStrings?.labelFiltering,\n          format => itemsType => format({ itemsType })\n        )?.(i18n('i18nStrings.selectionVersions', i18nStrings?.selectionVersions) ?? ''),\n        filteringPlaceholder: i18n(\n          'i18nStrings.selectionVersionsSearchPlaceholder',\n          i18nStrings?.selectionVersionsSearchPlaceholder\n        ),\n        emptyText: i18n('i18nStrings.selectionVersionsNoItems', i18nStrings?.selectionVersionsNoItems),\n        selectionLabels: {\n          ...i18nStrings?.labelsVersionsSelection,\n          selectionGroupLabel: i18n(\n            'i18nStrings.labelsVersionsSelection.selectionGroupLabel',\n            i18nStrings?.labelsVersionsSelection?.selectionGroupLabel\n          ),\n          itemSelectionLabel: i18n(\n            'i18nStrings.labelsVersionsSelection.itemSelectionLabel',\n            i18nStrings?.labelsVersionsSelection?.itemSelectionLabel,\n            format => (data, item) => format({ item__VersionId: item.VersionId ?? '' })\n          ),\n        },\n      }}\n      isVisualRefresh={isVisualRefresh}\n      visibleColumns={visibleColumns}\n      isItemDisabled={isItemDisabled}\n      columnDefinitions={[\n        {\n          id: 'ID',\n          header: i18n('i18nStrings.columnVersionID', i18nStrings?.columnVersionID),\n          ariaLabel: getColumnAriaLabel(\n            i18n,\n            i18nStrings,\n            i18n('i18nStrings.columnVersionID', i18nStrings?.columnVersionID)\n          ),\n          sortingField: 'VersionId',\n          cell: item => item.VersionId,\n          minWidth: '250px',\n        },\n        {\n          id: 'LastModified',\n          header: i18n('i18nStrings.columnVersionLastModified', i18nStrings?.columnVersionLastModified),\n          ariaLabel: getColumnAriaLabel(\n            i18n,\n            i18nStrings,\n            i18n('i18nStrings.columnVersionLastModified', i18nStrings?.columnVersionLastModified)\n          ),\n          sortingComparator: (a, b) => compareDates(a.LastModified, b.LastModified),\n          cell: item => formatDefault(item.LastModified),\n        },\n        {\n          id: 'Size',\n          header: i18n('i18nStrings.columnVersionSize', i18nStrings?.columnVersionSize),\n          ariaLabel: getColumnAriaLabel(\n            i18n,\n            i18nStrings,\n            i18n('i18nStrings.columnVersionSize', i18nStrings?.columnVersionSize)\n          ),\n          sortingField: 'Size',\n          cell: item => formatSize(item.Size),\n        },\n      ]}\n      onSelect={item => onSelect(item?.VersionId ?? '')}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}