{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nexport default React.forwardRef(function RadioButton(_ref, ref) {\n  let {\n    name,\n    label,\n    value,\n    checked,\n    description,\n    disabled,\n    controlId,\n    onChange\n  } = _ref;\n  const isVisualRefresh = useVisualRefresh();\n  const radioButtonRef = useRef(null);\n  const mergedRefs = useMergeRefs(radioButtonRef, ref);\n  return React.createElement(AbstractSwitch, {\n    className: clsx(styles.radio, description && styles['radio--has-description']),\n    controlClassName: styles['radio-control'],\n    outlineClassName: styles.outline,\n    label: label,\n    description: description,\n    disabled: disabled,\n    controlId: controlId,\n    nativeControl: nativeControlProps => React.createElement(\"input\", Object.assign({}, nativeControlProps, {\n      type: \"radio\",\n      ref: mergedRefs,\n      name: name,\n      value: value,\n      checked: checked,\n      // empty handler to suppress React controllability warning\n      onChange: () => {}\n    })),\n    onClick: () => {\n      var _a;\n      (_a = radioButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      if (checked) {\n        return;\n      }\n      fireNonCancelableEvent(onChange, {\n        value\n      });\n    },\n    styledControl: React.createElement(\"svg\", {\n      viewBox: \"0 0 100 100\",\n      focusable: \"false\",\n      \"aria-hidden\": \"true\"\n    }, React.createElement(\"circle\", {\n      className: clsx(styles['styled-circle-border'], {\n        [styles['styled-circle-disabled']]: disabled\n      }),\n      strokeWidth: isVisualRefresh ? 12 : 8,\n      cx: 50,\n      cy: 50,\n      r: isVisualRefresh ? 44 : 46\n    }), React.createElement(\"circle\", {\n      className: clsx(styles['styled-circle-fill'], {\n        [styles['styled-circle-disabled']]: disabled,\n        [styles['styled-circle-checked']]: checked\n      }),\n      strokeWidth: 30,\n      cx: 50,\n      cy: 50,\n      r: 35\n    }))\n  });\n});","map":{"version":3,"mappings":"AAAA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,cAAc,MAAM,wCAAwC;AACnE,SAASC,sBAAsB,QAAmC,oBAAoB;AACtF,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,gBAAgB,QAAQ,mCAAmC;AAEpE,OAAOC,MAAM,MAAM,iBAAiB;AAQpC,eAAeN,KAAK,CAACO,UAAU,CAAC,SAASC,WAAW,OAElDC,GAAgC;EAAA,IADhC;IAAEC,IAAI;IAAEC,KAAK;IAAEC,KAAK;IAAEC,OAAO;IAAEC,WAAW;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAQ,CAAoB;EAG7F,MAAMC,eAAe,GAAGb,gBAAgB,EAAE;EAC1C,MAAMc,cAAc,GAAGlB,MAAM,CAAmB,IAAI,CAAC;EACrD,MAAMmB,UAAU,GAAGhB,YAAY,CAACe,cAAc,EAAEV,GAAG,CAAC;EAEpD,OACET,oBAACE,cAAc;IACbmB,SAAS,EAAEtB,IAAI,CAACO,MAAM,CAACgB,KAAK,EAAER,WAAW,IAAIR,MAAM,CAAC,wBAAwB,CAAC,CAAC;IAC9EiB,gBAAgB,EAAEjB,MAAM,CAAC,eAAe,CAAC;IACzCkB,gBAAgB,EAAElB,MAAM,CAACmB,OAAO;IAChCd,KAAK,EAAEA,KAAK;IACZG,WAAW,EAAEA,WAAW;IACxBC,QAAQ,EAAEA,QAAQ;IAClBC,SAAS,EAAEA,SAAS;IACpBU,aAAa,EAAEC,kBAAkB,IAC/B3B,+CACM2B,kBAAkB;MACtBC,IAAI,EAAC,OAAO;MACZnB,GAAG,EAAEW,UAAU;MACfV,IAAI,EAAEA,IAAI;MACVE,KAAK,EAAEA,KAAK;MACZC,OAAO,EAAEA,OAAO;MAChB;MACAI,QAAQ,EAAE,MAAK,CAAE;IAAC,GAErB;IACDY,OAAO,EAAE,MAAK;;MACZ,oBAAc,CAACC,OAAO,0CAAEC,KAAK,EAAE;MAC/B,IAAIlB,OAAO,EAAE;QACX;;MAEFV,sBAAsB,CAACc,QAAQ,EAAE;QAAEL;MAAK,CAAE,CAAC;IAC7C,CAAC;IACDoB,aAAa,EACXhC;MAAKiC,OAAO,EAAC,aAAa;MAACC,SAAS,EAAC,OAAO;MAAA,eAAa;IAAM,GAC7DlC;MACEqB,SAAS,EAAEtB,IAAI,CAACO,MAAM,CAAC,sBAAsB,CAAC,EAAE;QAAE,CAACA,MAAM,CAAC,wBAAwB,CAAC,GAAGS;MAAQ,CAAE,CAAC;MACjGoB,WAAW,EAAEjB,eAAe,GAAG,EAAE,GAAG,CAAC;MACrCkB,EAAE,EAAE,EAAE;MACNC,EAAE,EAAE,EAAE;MACNC,CAAC,EAAEpB,eAAe,GAAG,EAAE,GAAG;IAAE,EAC5B,EACFlB;MACEqB,SAAS,EAAEtB,IAAI,CAACO,MAAM,CAAC,oBAAoB,CAAC,EAAE;QAC5C,CAACA,MAAM,CAAC,wBAAwB,CAAC,GAAGS,QAAQ;QAC5C,CAACT,MAAM,CAAC,uBAAuB,CAAC,GAAGO;OACpC,CAAC;MACFsB,WAAW,EAAE,EAAE;MACfC,EAAE,EAAE,EAAE;MACNC,EAAE,EAAE,EAAE;MACNC,CAAC,EAAE;IAAE,EACL;EACE,EAER;AAEN,CAAC,CAAC","names":["clsx","React","useRef","AbstractSwitch","fireNonCancelableEvent","useMergeRefs","useVisualRefresh","styles","forwardRef","RadioButton","ref","name","label","value","checked","description","disabled","controlId","onChange","isVisualRefresh","radioButtonRef","mergedRefs","className","radio","controlClassName","outlineClassName","outline","nativeControl","nativeControlProps","type","onClick","current","focus","styledControl","viewBox","focusable","strokeWidth","cx","cy","r"],"sources":["/Users/tangyizhi/Desktop/Assignment 2/frontend/node_modules/@cloudscape-design/components/radio-group/lib/default/radio-group/radio-button.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useRef } from 'react';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { RadioGroupProps } from './interfaces';\nimport styles from './styles.css.js';\n\ninterface RadioButtonProps extends RadioGroupProps.RadioButtonDefinition {\n  name: string;\n  checked: boolean;\n  onChange?: NonCancelableEventHandler<RadioGroupProps.ChangeDetail>;\n}\n\nexport default React.forwardRef(function RadioButton(\n  { name, label, value, checked, description, disabled, controlId, onChange }: RadioButtonProps,\n  ref: React.Ref<HTMLInputElement>\n) {\n  const isVisualRefresh = useVisualRefresh();\n  const radioButtonRef = useRef<HTMLInputElement>(null);\n  const mergedRefs = useMergeRefs(radioButtonRef, ref);\n\n  return (\n    <AbstractSwitch\n      className={clsx(styles.radio, description && styles['radio--has-description'])}\n      controlClassName={styles['radio-control']}\n      outlineClassName={styles.outline}\n      label={label}\n      description={description}\n      disabled={disabled}\n      controlId={controlId}\n      nativeControl={nativeControlProps => (\n        <input\n          {...nativeControlProps}\n          type=\"radio\"\n          ref={mergedRefs}\n          name={name}\n          value={value}\n          checked={checked}\n          // empty handler to suppress React controllability warning\n          onChange={() => {}}\n        />\n      )}\n      onClick={() => {\n        radioButtonRef.current?.focus();\n        if (checked) {\n          return;\n        }\n        fireNonCancelableEvent(onChange, { value });\n      }}\n      styledControl={\n        <svg viewBox=\"0 0 100 100\" focusable=\"false\" aria-hidden=\"true\">\n          <circle\n            className={clsx(styles['styled-circle-border'], { [styles['styled-circle-disabled']]: disabled })}\n            strokeWidth={isVisualRefresh ? 12 : 8}\n            cx={50}\n            cy={50}\n            r={isVisualRefresh ? 44 : 46}\n          />\n          <circle\n            className={clsx(styles['styled-circle-fill'], {\n              [styles['styled-circle-disabled']]: disabled,\n              [styles['styled-circle-checked']]: checked,\n            })}\n            strokeWidth={30}\n            cx={50}\n            cy={50}\n            r={35}\n          />\n        </svg>\n      }\n    />\n  );\n});\n"]},"metadata":{},"sourceType":"module"}