{"version":3,"file":"node-data-cell.js","sourceRoot":"lib/default/","sources":["table/node-data-cell.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACnD,OAAO,uBAAuB,MAAM,8BAA8B,CAAC;AACnE,OAAO,EAAE,sBAAsB,EAAE,MAAM,uBAAuB,CAAC;AAC/D,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,UAAU,MAAM,oCAAoC,CAAC;AAc5D,MAAM,UAAU,UAAU,CAAC,EACzB,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,SAAS,EACT,OAAO,EACP,WAAW,EACX,KAAK,EACL,QAAQ,GACQ;IAChB,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC;IAEnE,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,QAAQ,CAAC,OAAO,EAAE;YACpB,MAAM,gBAAgB,GAAG,UAAU,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACzF,MAAM,iBAAiB,GAAG,UAAU,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAC3F,gBAAgB,CAAC,gBAAgB,GAAG,iBAAiB,CAAC,CAAC;SACxD;IACH,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;IAExB,cAAc,GAAG,cAAc,GAAG,aAAa,CAAC;IAEhD,OAAO,CACL,4BAAI,OAAO,EAAE,iBAAiB,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,SAAS,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC;QACvG,6BACE,SAAS,EAAE,MAAM,CAAC,qBAAqB,CAAC,EACxC,KAAK,EAAE;gBACL,KAAK,EAAE,CAAC,sBAAsB,EAAE,IAAI,cAAc,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,IAAI,SAAS;aAC/F,IAEA,OAAO,CAAC,CAAC,CAAC,CACT,oBAAC,uBAAuB,IAAC,IAAI,EAAC,SAAS,EAAC,SAAS,EAAE,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI;YAC/E,oBAAC,UAAU,IAAC,OAAO,EAAE,IAAI,IAAG,WAAW,CAAc,CAC7B,CAC3B,CAAC,CAAC,CAAC,CACF,6BAAK,SAAS,EAAE,MAAM,CAAC,KAAK,IAAG,KAAK,CAAO,CAC5C,CACG,CACH,CACN,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useEffect, useState } from 'react';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { supportsStickyPosition } from '../internal/utils/dom';\nimport styles from './styles.css.js';\nimport LiveRegion from '../internal/components/live-region';\nimport { TableProps } from './interfaces';\n\ninterface NoDataCellProps {\n  variant: TableProps.Variant;\n  containerWidth: number;\n  totalColumnsCount: number;\n  hasFooter: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  empty?: React.ReactNode;\n  tableRef: React.RefObject<HTMLTableElement>;\n}\n\nexport function NoDataCell({\n  variant,\n  containerWidth,\n  totalColumnsCount,\n  hasFooter,\n  loading,\n  loadingText,\n  empty,\n  tableRef,\n}: NoDataCellProps) {\n  const [tablePaddings, setTablePaddings] = useState(containerWidth);\n\n  useEffect(() => {\n    if (tableRef.current) {\n      const tablePaddingLeft = parseFloat(getComputedStyle(tableRef.current).paddingLeft) || 0;\n      const tablePaddingRight = parseFloat(getComputedStyle(tableRef.current).paddingRight) || 0;\n      setTablePaddings(tablePaddingLeft + tablePaddingRight);\n    }\n  }, [variant, tableRef]);\n\n  containerWidth = containerWidth + tablePaddings;\n\n  return (\n    <td colSpan={totalColumnsCount} className={clsx(styles['cell-merged'], hasFooter && styles['has-footer'])}>\n      <div\n        className={styles['cell-merged-content']}\n        style={{\n          width: (supportsStickyPosition() && containerWidth && Math.floor(containerWidth)) || undefined,\n        }}\n      >\n        {loading ? (\n          <InternalStatusIndicator type=\"loading\" className={styles.loading} wrapText={true}>\n            <LiveRegion visible={true}>{loadingText}</LiveRegion>\n          </InternalStatusIndicator>\n        ) : (\n          <div className={styles.empty}>{empty}</div>\n        )}\n      </div>\n    </td>\n  );\n}\n"]}